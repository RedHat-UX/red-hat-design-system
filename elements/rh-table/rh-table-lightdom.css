:is(rh-table) table {
  margin: 0 auto;
  table-layout: fixed;
  border: 0;
  border-collapse: collapse;
}

:is(rh-table) tr {
  border-bottom: 1px solid #d2d2d2;
}

:is(rh-table) tr:hover {
  background: rgba(210, 210, 210, 0.2);
}

:is(rh-table) tr > * {
  border: none;
  white-space: nowrap;
}

:is(rh-table) :is(tr, col){
  transition: background .3s ease-out;
}

:is(rh-table) a {
  color: var(--rh-color-interactive-blue-darkest, #004080);
  text-decoration: none;
}

:is(rh-table) a:hover  {
  text-decoration: underline;
}

/* Caption */
:is(rh-table) caption {
  font-family: var(--rh-font-family-body-text, RedHatText, "Red Hat Text", "Noto Sans Arabic", "Noto Sans Hebrew", "Noto Sans JP", "Noto Sans KR", "Noto Sans Malayalam", "Noto Sans SC", "Noto Sans TC", "Noto Sans Thai", Helvetica, Arial, sans-serif);
  font-size: var(--rh-font-size-body-text-lg, 1.125rem);

  /* font-weight: 500; */
  font-weight: var(--rh-font-weight-heading-bold, 700);
  line-height: var(--rh-line-height-body-text, 1.5);

  /* margin-bottom: 36px; */
  margin-bottom: var(--rh-space-2xl, 32px);
  text-align: center;
}

/* Sortable columns */
:is(rh-table) th[sortable] {
  padding: 0;
}

:is(rh-table) th[sortable] .visually-hidden {
  position: fixed;
  top: 0;
  left: 0;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border: 0;
}

:is(rh-table) :not(th[sort-direction]) .sort-indicator {
  color: var(--rh-color-gray-30, #a3a3a3);
}

:is(rh-table) th[sort-direction] .sort-indicator {
  color: inherit;
  transform: rotate(180deg);
}

:is(rh-table) :not(th[sort-direction]) .visually-hidden {
  display: none;
}

:is(rh-table) th[sort-direction] .visually-hidden {
  display: unset;
}

:is(rh-table) th[sortable] .sort-button {
  cursor: pointer;
  font-family: inherit;
  font-weight: inherit;
  font-size: inherit;
  display: flex;
  align-items: center;
  justify-content: center;
  gap: var(--rh-space-sm, 6px);
  background-color: transparent;
  border: 0;
  width: 100%;
  padding: var(--rh-space-lg, 16px);
}


/* Desktop */
:is(rh-table) :is(th, td)  {
  padding: var(--rh-space-xl, 24px) var(--rh-space-lg, 16px);
}

:is(rh-table) thead :is(th, td) {
  font-weight: var(--rh-font-weight-heading-bold, 700);
  padding-top: var(--rh-space-lg, 16px);
  padding-bottom: var(--rh-space-lg, 16px);
}

:is(rh-table) :is(col.active) {
  background: rgba(0, 102, 204, 0.1);
}

/* Tablet */
@media (min-width: 768px) and (max-width: 1200px) {
  :is(rh-table[active-focus]) tbody tr:hover {
    background: #f5f5f5;
  }
}

@media (max-width: 1200px) {
  :is(rh-table[active-focus]) tbody td:hover {
    background: rgba(0, 102, 204, 0.1);
    outline: unset;
    outline-offset: unset;
  }
}

/* Mobile: */
@media (max-width: 768px) {
  :is(rh-table) table:has(thead) {
    display: grid;
  }

  :is(rh-table) table:has(thead) thead {
    display: none;
  }

  :is(rh-table) table:has(thead) tbody tr {
    display: grid;
    grid-template-columns: 1fr;
  }

  :is(rh-table[active-focus]) table:has(thead) tbody tr:hover {
    background: rgba(0, 102, 204, 0.1);
  }

  :is(rh-table) table:has(thead) tbody tr > * {
    padding: var(--rh-space-lg, 16px);
  }

  /* todo: need styling for row header */
  :is(rh-table) table:has(thead) tbody tr th {
    text-align: center;
  }

  :is(rh-table) table:has(thead) tbody tr td {
    display: grid;
    grid-column-gap: var(--rh-space-lg, 16px);
    grid-template-columns: 1fr minmax(0, 1.5fr);
    align-items: start;
  }

  :is(rh-table) table:has(thead) tbody tr td:before {
    font-weight: var(--rh-font-weight-heading-bold, 700);
    text-align: left;
    content: attr(data-label);
  }
}