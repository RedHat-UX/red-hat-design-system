:host {
  display: inline-flex;
  outline: none;
  vertical-align: top;
  cursor: pointer;

  --_switch-width: 40px;
  --_switch-height: 24px;
  --_switch-handle-size: 14px;
}

#container {
  display: inline-flex;
  align-items: center;
  gap: var(--rh-space-lg, 16px);
}

:host(:disabled) {
  pointer-events: none;
  cursor: not-allowed;

  --_switch-track-background-color: var(--rh-color-gray-30, #c7c7c7);
}

[hidden] {
  display: none !important;
}

#switch {
  align-items: center;
  display: inline-flex;
  flex-shrink: 0;
  position: relative;
  width: var(--_switch-width);
  height: var(--_switch-height);
  border-radius: var(--rh-border-radius-pill, 64px);
}

:host(:is(:focus, :focus-within)) #switch {
  outline:
    var(--rh-border-width-md, 2px)
    solid
    var(--_switch-focus-outline-color, var(--rh-color-border-interactive-on-light, #0066cc));
  outline-offset: var(--rh-space-sm, 6px);
}

#track {
  display: flex;
  position: absolute;
  width: 100%;
  height: 100%;
  border-radius: inherit;
  justify-content: center;
  align-items: center;
  background-color: var(--_switch-track-background-color, var(--rh-color-gray-60, #4d4d4d));
}

#handle-container {
  display: flex;
  place-content: center;
  place-items: center;
  position: relative;
  transition: margin 0.25s ease 0s;
  margin-inline-end: calc(var(--_switch-width) - var(--_switch-height));
}

#handle {
  height: var(--_switch-handle-size);
  width: var(--_switch-handle-size);
  border-radius: var(--rh-border-radius-pill, 64px);
  transform-origin: center;
  transition-property: height, width;
  z-index: 0;
  background-color: var(--_switch-handle-color, var(--rh-color-surface-lightest, #ffffff));
}

:host([checked]:not(:disabled)) {
  --_switch-track-background-color:
    var(
        --_switch-checked,
        var(--rh-color-accent-base-on-light, #0066cc)
      );
}

:host([checked]) #handle-container {
  margin-inline-start: calc(var(--_switch-width) - var(--_switch-height));
  margin-inline-end: 0;
}

svg {
  fill: currentcolor;
  margin-inline: var(--rh-space-sm, 6px);
  font-size: var(--rh-font-size-body-text-xs, 0.75rem);
  color: var(--_switch-handle-color, var(--rh-color-icon-secondary-on-dark, #ffffff));
  position: relative;
  z-index: 1;
}

:host(:not([checked])) ::slotted(*) {
  color: var(--rh-color-text-secondary-on-light, #4d4d4d);
}

:host(:disabled) ::slotted(*) {
  color: var(--rh-color-gray-50, #707070);
}

.dark {
  --_switch-track-background-color: var(--rh-color-gray-40, #a3a3a3); /* no disabled token yet */
  --_switch-handle-color: var(--rh-color-surface-dark-alt, #292929);
}

.dark #handle {
  box-shadow: var(--rh-box-shadow-sm, 0 2px 4px 0 rgba(21, 21, 21, 0.2));
}

:host(:disabled) .dark {
  --_switch-track-background-color: var(--rh-color-gray-70, #383838);
}

:host(:not([checked])) .dark ::slotted(*) {
  color: var(--rh-color-text-secondary-on-dark, #c7c7c7);
}

:host(:is(:focus, :focus-within)) .dark {
  --_switch-focus-outline-color: var(--rh-color-border-interactive-on-dark, #92c5f9);
}

:host([checked]:not(:disabled)) .dark {
  --_switch-track-background-color:
    var(
        --_switch-checked,
        var(--rh-color-accent-base-on-dark, #92c5f9)
      );
}
