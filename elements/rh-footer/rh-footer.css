:host {
  /* apply sensible defaults based on redhat standards. */
  color: var(--rh-color-white, #ffffff);
  font-family: var(--rh-font-family-body-text, RedHatText, 'Red Hat Text', Helvetica, Arial, sans-serif);
  line-height: var(--rh-line-height-body-text, 1.5);
  font-weight: var(--_font-weight);
  font-size: initial;
  display: flex;
  flex-direction: column;
}

footer,
.global-base {
  --_icon-color: var(--rh-footer-icon-color, var(--rh-color-gray-40, #a3a3a3));
  --_icon-color-hover: var(--rh-footer-icon-color-hover, var(--rh-color-gray-30, #c7c7c7));
  --_border-color: var(--rh-footer-border-color, var(--rh-color-border-subtle-on-dark, #707070));
  --_accent-color: var(--rh-footer-accent-color, var(--rh-color-accent-brand-on-light, #ee0000));
  --_section-side-gap: var(--rh-footer-section-side-gap, var(--rh-space-lg, 16px));
  --_accordion-background: var(--rh-color-white, #ffffff);
  --_logo-width: var(--rh-size-icon-04, 40px);
  --_font-weight: var(--rh-font-weight-body-text-regular, 400);
}

* {
  box-sizing: border-box;
}

::slotted(:is(h1,h2,h3,h4,h5,h6)) {
  font-family: var(--rh-font-family-heading, RedHatDisplay, 'Red Hat Display', Helvetica, Arial, sans-serif) !important;
  line-height: var(--rh-line-height-heading, 1.3) !important;
}

/**
 * Debugging
 */
:host([debug]) *:not(.spacer, .base, a, svg) {
  /* make sure we have some */
  min-height: var(--rh-length-xl, 24px);
  position: relative;
  outline: var(--rh-length-3xs, 2px) dotted red;
}

:host([debug]) *:not(.spacer, .base, a, svg):after {
  content: attr(part);
  display: block;
  position: absolute;
  color: white;
  background-color: darkslategray;
  padding: var(--rh-space-xs, 4px);
  top: 0;
  right: 0;
  font-family: var(--rh-font-family-code, RedHatMono, 'Red Hat Mono', 'Courier New', Courier, monospace);
  font-size: var(--rh-font-size-code-xs, 0.75rem);
}

/**
 * Regions
 */
.section {
  padding: var(--rh-space-2xl, 32px) var(--_section-side-gap);
}

.header {
  background-color: var(--rh-color-surface-darker, #1f1f1f);

  /* children should flex wrap on mobile */
  display: flex;
  flex-wrap: wrap;
  gap: var(--rh-space-2xl, 32px);
  align-items: center;
  position: relative;
}

.header:after {
  display: none;
  content: '';
  background-color: var(--_border-color);
  height: var(--rh-length-4xs, 1px);
  position: absolute;
  bottom: 0;
  width: calc(100% - var(--_section-side-gap) * 2);
  left: var(--_section-side-gap);
}

.header-primary {
  flex: 1 1 auto;
}

.header-secondary {
  /* secondary should be push to the end */

  /* of the line on mobile */
  flex: 0 1 auto;
}

.main {
  background-color: var(--rh-color-surface-darker, #1f1f1f);
  display: grid;
  gap: var(--rh-space-2xl, 32px);

  /* force the mobile links menu to go flush against the header */
  padding-top: 0;
}

.main-secondary {
  display: grid;
  gap: var(--pf-global--spacer--xl, 32px);
  place-items: baseline;
  place-content: start;
}

.global-base {
  --rh-footer-link-font-size: var(--rh-font-size-body-text-xs, 0.75rem);

  /* reduce the line-height for global links */
  line-height: 100%;
  background-color: var(--rh-color-surface-darkest, #151515);
  display: grid;
  grid-template-columns: 1fr;
  grid-template-areas:
    'logo'
    'primary'
    'spacer'
    'secondary'
    'tertiary';
  gap: var(--rh-space-2xl, 32px) var(--rh-space-xl, 24px);
}

.global-logo {
  grid-area: logo;
  width: var(--_logo-width);
}

.global-logo-image {
  fill: var(--_icon-color);
}

.global-logo-image:is(:hover, :focus-within) {
  fill: var(--_icon-color-hover);
}

.global-primary {
  grid-area: primary;
}

.global-secondary {
  grid-area: secondary;
  color: var(--rh-color-text-secondary-on-dark, #c7c7c7);
  display: flex;
  flex-direction: column;
  gap: var(--rh-space-lg, 16px);
  justify-content: space-between;
}

.global-tertiary {
  grid-area: tertiary;
  display: grid;
  justify-content: start;
  align-items: start;
}

.global-links-primary {
  display: flex;
  flex-direction: column;
  gap: var(--rh-space-md, 8px) var(--rh-space-xl, 24px);
}

.global-links-secondary {
  display: flex;
  flex-direction: column;
  gap: var(--rh-space-md, 8px) var(--rh-space-xl, 24px);
}

/* reduce the font size of the content in these regions */
:is(.global-primary, .global-secondary, .global-tertiary) ::slotted(*) {
  font-size: var(--rh-font-size-body-text-xs, 0.75rem) !important;
}

.logo {
  /* fix wierd problem where there is extra space below logo */
  line-height: 0px;
}

.social-links {
  display: flex;
  margin-inline-start: 0;
  padding-inline-start: 0;
}

.social-links rh-footer-links,
.social-links slot::slotted(rh-footer-links) {
  display: flex;
  flex-direction: row;
  gap: var(--rh-space-xl, 24px);
}

:is(.links, .global-links-primary, .global-links-secondary) ::slotted(ul) {
  padding: 0;
  margin: 0;
  display: contents;
}

.isMobile .links {
  --rh-footer-link-header-font-size: var(--rh-font-size-body-text-lg, 1.125rem);
}

.isMobile .links ::slotted(ul) {
  --rh-footer-link-font-size: 1em;

  display: grid;
  grid-template-columns: 1fr;
  gap: calc(var(--rh-space-2xl, 32px) / 2);
}

#heading,
#global-heading {
  position: absolute;
  left: -9999999px;
  width: 0;
  height: 0;
  overflow: hidden;
  display: flex;
}

[part='base']:not(.isMobile) .links {
  display: grid;
  grid-template-columns: repeat(1fr, 25%);
  grid-template-rows: repeat(1, min-content auto);
  grid-auto-columns: minmax(0, 1fr);
  gap: var(--rh-space-lg, 16px) var(--rh-space-2xl, 32px);
  grid-auto-flow: column;
}

[part='base']:not(.isMobile) .links ::slotted(:is(h2, h3, h4, h5, h6):nth-of-type(1)) {
  grid-column: 1/2;
  grid-row: 1/2;
}

[part='base']:not(.isMobile) .links ::slotted(:is(h2, h3, h4, h5, h6):nth-of-type(2)) {
  grid-column: 2/3;
  grid-row: 1/2;
}

[part='base']:not(.isMobile) .links ::slotted(:is(h2, h3, h4, h5, h6):nth-of-type(3)) {
  grid-column: 3/4;
  grid-row: 1/2;
}

[part='base']:not(.isMobile) .links ::slotted(:is(h2, h3, h4, h5, h6):nth-of-type(4)) {
  grid-column: 4/5;
  grid-row: 1/2;
}

[part='base']:not(.isMobile) .links ::slotted(:is(h2, h3, h4, h5, h6):nth-of-type(5)) {
  grid-column: 1/2;
  grid-row: 3/4;
}

[part='base']:not(.isMobile) .links ::slotted(:is(h2, h3, h4, h5, h6):nth-of-type(6)) {
  grid-column: 2/3;
  grid-row: 3/4;
}

[part='base']:not(.isMobile) .links ::slotted(:is(h2, h3, h4, h5, h6):nth-of-type(7)) {
  grid-column: 3/4;
  grid-row: 3/4;
}

[part='base']:not(.isMobile) .links ::slotted(:is(h2, h3, h4, h5, h6):nth-of-type(8)) {
  grid-column: 4/5;
  grid-row: 3/4;
}

[part='base']:not(.isMobile) .links ::slotted(:is(ul:nth-of-type(1))) {
  grid-column: 1/2;
  grid-row: 2/3;
}

[part='base']:not(.isMobile) .links ::slotted(:is(ul:nth-of-type(2))) {
  grid-column: 2/3;
  grid-row: 2/3;
}

[part='base']:not(.isMobile) .links ::slotted(:is(ul:nth-of-type(3))) {
  grid-column: 3/4;
  grid-row: 2/3;
}

[part='base']:not(.isMobile) .links ::slotted(:is(ul:nth-of-type(4))) {
  grid-column: 4/5;
  grid-row: 2/3;
}

[part='base']:not(.isMobile) .links ::slotted(:is(ul:nth-of-type(5))) {
  grid-column: 1/2;
  grid-row: 4/5;
}

[part='base']:not(.isMobile) .links ::slotted(:is(ul:nth-of-type(6))) {
  grid-column: 2/3;
  grid-row: 4/5;
}

[part='base']:not(.isMobile) .links ::slotted(:is(ul:nth-of-type(7))) {
  grid-column: 3/4;
  grid-row: 4/5;
}

[part='base']:not(.isMobile) .links ::slotted(:is(ul:nth-of-type(8))) {
  grid-column: 4/5;
  grid-row: 4/5;
}

[part='base']:not(.isMobile) .links ::slotted(ul) {
  gap: var(--rh-footer-links-gap, var(--rh-space-lg, 16px));
  display: flex;
  flex-direction: column;
}

#footer-logo {
  width: var(--_logo-width);
}

:is(.links, .global-links-primary, .global-links-secondary) ::slotted(:is(h1, h2, h3, h4, h5)) {
  font-weight: var(--rh-font-weight-heading-medium, 500) !important;
  margin-block: 0 !important;
  margin-block-start: var(--_link-header-margin, 0) !important;
  font-size:
    var(--rh-footer-link-header-font-size,
      var(--rh-font-size-body-text-sm, 0.875rem)) !important;
  color: var(--rh-color-text-primary-on-dark, #ffffff) !important;
}

/* @todo We should consider rolling this into the rh-accordion design spec */
rh-accordion-header[expanded] {
  --_border-inline-end-color: var(--_border-color);
}

rh-accordion-header:not([expanded])::part(container) {
  --_background-color: var(--rh-color-surface-darker, #1f1f1f);
  --_active-background-color: var(--rh-color-surface-darker, #1f1f1f);
}

rh-accordion-header:hover {
  --_after-background-color: var(--_accent-color);
}

::slotted(rh-footer-copyright) {
  grid-column: -1/1;
}

@media screen and /* --rh-media-sm */ (min-width: 768px) {
  .global-base {
    grid-template-columns: 4fr 4fr 4fr;
    grid-template-areas:
      'logo      logo      logo'
      'primary   primary   primary'
      'spacer    spacer    spacer'
      'secondary secondary secondary';
  }

  .global-base:is(.hasTertiary) {
    grid-template-columns: 4fr 4fr 4fr;
    grid-template-areas:
      'logo      logo      logo'
      'primary   primary   primary'
      'spacer    spacer    spacer'
      'secondary secondary tertiary';
  }
}

@media screen and /* --rh-media-md */ (min-width: 992px) {
  /* :not(.nothing) is a hack to match CSS specificity with :is(.hasTertiary) */
  .global-base:not(.nothing) {
    grid-template-columns: auto 10fr 2fr;
    grid-template-rows: max-content max-content;
    grid-template-areas:
      'logo primary  tertiary'
      'logo secondary tertiary';
    gap: 24px 32px;
  }

  .global-primary {
    display: flex;
  }
}

.spacer {
  grid-area: spacer;
  border-bottom: 1px solid var(--_border-color);
}

@media screen and /* --rh-media-md */ (min-width: 992px) {
  .spacer {
    display: none;
  }
}

@media screen and /* --rh-media-md */ (min-width: 992px) {
  .global-tertiary {
    display: grid;
    justify-content: flex-end;
    align-items: center;
  }
}

@media screen and /* WARNING: not a recognized @rhds/token media query */ (min-width: 320px) {
  .global-links-primary {
    display: grid;
    grid-template-columns: 1fr 1fr;
  }

  .global-links-secondary {
    display: grid;
    grid-template-columns: 1fr 1fr;
  }
}

@media screen and /* --rh-media-sm */ (min-width: 768px) {
  .global-links-primary {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr;
  }

  .global-links-secondary {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr;
  }

  .hasTertiary .global-links-secondary {
    display: grid;
    grid-template-columns: 1fr 1fr;
  }
}

@media screen and /* --rh-media-md */ (min-width: 992px) {
  .global-links-primary {
    display: flex;
    flex-flow: row wrap;
    align-items: center;
  }
}

@media screen and /* --rh-media-md */ (min-width: 992px) {
  :not(.hasTertiary) .global-links-secondary {
    display: flex;
    flex-flow: row wrap;
    gap: 8px 24px;
  }
}

@media screen and /* --rh-media-md */ (max-width: 992px) {
  .global-logo {
    grid-area: logo;
  }

  .global-primary {
    grid-area: primary;
  }
}

@media screen and /* --rh-media-md */ (min-width: 992px) {
  /* only show the header border on >mobile */
  .header:after {
    display: block;
  }

  .main {
    padding-top: var(--rh-space-2xl, 32px);
    padding-bottom: var(--rh-space-4xl, 64px);
  }
}

@media screen and /* --rh-media-md */ (min-width: 992px)
  and /* WARNING: not an @rhds/tokens media query */ (max-width: 1368px) {
  .header,
  .main {
    /* switch header to use grid instead */
    display: grid;
    grid-template-columns: 8fr 4fr;
  }
}

@media screen and /* WARNING: not an @rhds/tokens media query */ (min-width: 1368px) {
  .header,
  .main {
    /* switch header to use grid instead */
    display: grid;
    grid-template-columns: 8fr 4fr;
  }
}

@media screen and /* --rh-media-sm */ (min-width: 768px) {
  .isMobile .links ::slotted(ul) {
    grid-template-columns: 1fr 1fr;
  }
}
