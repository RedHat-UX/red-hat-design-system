*,
*:after,
*:before {
  box-sizing: border-box;
}

:host {
  display: block;
  block-size: 100%;
  justify-items: center;
  align-content: center;
}

:host([hide-at]) {
  display: none;
}

@container (min-width: 320px) {
  :host([hide-at='xs']) {
    display: block;
  }
}

@container (min-width: 567px) {
  :host([hide-at='sm']) {
    display: block;
  }
}

@container (min-width: 768px) {
  :host([hide-at='md']) {
    display: block;
  }
}

@container (min-width: 992px) {
  :host([hide-at='lg']) {
    display: block;
  }
}

@container (min-width: 1200px) {
  :host([hide-at='xl']) {
    display: block;
  }
}

:host(:is(:focus, :focus-visible)) {
  outline: none;
  outline-style: none;
}

#container {
  --_background-color:
    light-dark(var(--rh-color-surface-lighter, #f2f2f2),
      var(--rh-color-surface-darker, #1f1f1f));
  --_box-shadow-color: light-dark(rgba(21, 21, 21, 0.2), rgba(0, 0, 0, 0.6));

  display: block;
  block-size: 100%;
  inline-size: 100%;
  justify-items: center;
  align-content: center;

  & details {
    inline-size: 100%;
    block-size: 100%;
    justify-items: center;
    align-content: center;

    & summary {
      --rh-icon-size: 18px /* non standard value */;
      --rh-avatar-size: var(--rh-size-icon-02, 24px);

      display: flex;
      list-style: none;
      gap: var(--rh-space-md, 8px);

      &::marker,
      &::-webkit-details-marker {
        display: none;
      }

      & ::slotted(rh-icon) {
        /* need 24px total icons 18px + 3px margin * 2, avatar is 24px */
        margin-block: calc(var(--rh-space-sm, 6px) / 2);
      }

      & rh-icon {
        aspect-ratio: unset;

        &[icon='caret-down'] {
          /* non standard, this wont take effect though as microns hard stops at 12px */
          --rh-icon-size: 10px;

          color: light-dark(var(--rh-color-gray-40, #a3a3a3), var(--rh-color-icon-subtle));
          transition: rotate 0.2s;
        }
      }
    }

    & #details-content {
      inline-size: 100%;
    }

    &[open] {
      &::details-content {
        display: contents;

        & > * {
          box-sizing: border-box;
        }
      }

      @container (min-width: 1200px) {
        border-block-start-color: var(--rh-color-accent-brand);
      }

      & summary {
        & rh-icon[icon='caret-down'] {
          rotate: 180deg;
        }
      }
    }

    &:not([open]) {
      & #details-content {
        /* ensures the content is not visible to cmd+f unless the details are open */
        visibility: hidden;
      }
    }
  }

  /* Variant States */
  &.hamburger {
    &:not(.compact) {
      @container (min-width: 1200px) {
        border-block-end: 4px solid transparent; /* Non standard border width */

        &:hover {
          border-block-end-color: var(--rh-color-border-subtle);
        }

        &:is(:active, :focus-within, :has(details[open])) {
          border-image: linear-gradient(to right, var(--_linear-gradient)) 1;
        }
      }
    }
  }

  &.dropdown {
    &.hamburger {
      & details {
        & summary {
          list-style: none;
          color: var(--rh-color-text-primary) !important;
          text-decoration: none !important;
          text-align: center;
          text-wrap: nowrap;
          place-items: center;
          inline-size: 100%;
          block-size: 100%;
          padding: var(--rh-space-lg, 16px) var(--rh-space-xl, 24px);
          cursor: pointer;

          &:focus-visible,
          &:hover:focus-visible {
            outline-offset: -2px;
            outline:
              var(--rh-border-width-md, 2px)
              solid
              var(--rh-color-interactive-primary-default);
            border-radius: var(--rh-border-radius-default, 3px);
          }
        }

        &[open] {
          border-inline-start: var(--rh-border-width-lg, 3px) solid var(--rh-color-accent-brand);
          border-inline-end: var(--rh-border-width-sm, 1px) solid var(--rh-color-border-subtle);

          & summary {
            & rh-icon[icon='caret-down'] {
              rotate: 180deg;
            }
          }
        }
      }

      &:not(.compact) {
        & details {
          @container (min-width: 1200px) {
            border-inline: unset;
          }

          & summary {
            @container (min-width: 1200px) {
              block-size: calc(100% + 4px);
              padding: 0 var(--rh-space-lg, 16px);
            }
          }

          & #details-content {
            @container (min-width: 1200px) {
              position: absolute;
              z-index: -1;
              background-color: var(--rh-color-surface);
              box-shadow: 0 2px 4px 0 var(--_box-shadow-color);
              inset-block-start: 100%;
              inset-inline-start: 0;
              inline-size: 100%;
            }
          }
        }
      }
    }

    &.standalone {
      & details {
        /* stylelint-disable-next-line no-descending-specificity */
        & summary {
          position: relative;
          z-index: 1;
          block-size: max-content;
          inline-size: max-content;
          align-items: center;
          padding: var(--rh-space-md, 8px) var(--rh-space-lg, 16px);
          border: var(--rh-border-width-sm, 1px) solid var(--rh-color-border-subtle);
          border-radius: var(--rh-border-radius-pill, 64px);
          font-size: var(--rh-font-size-body-text-sm, 0.875rem);
          cursor: pointer;

          &:before {
            content: '';
            position: absolute;
            inset: -1px;
            z-index: -1;
            background: transparent;
            border-radius: inherit;
          }

          &:is(:hover, :focus-visible) {
            background-color:
              light-dark(var(--rh-color-surface-lighter, #f2f2f2),
                var(--rh-color-surface-darker, #1f1f1f));

            &:before {
              border: var(--rh-border-width-sm, 1px) solid transparent;
            }
          }

          &:is(:active, :active:hover) {
            &:before {
              border: var(--rh-border-width-md, 2px) solid transparent;
            }
          }

          &:is(:active, :active:hover, :hover, :focus-visible) {
            &:before {
              background:
                linear-gradient(light-dark(var(--rh-color-surface-lighter, #f2f2f2),
                  var(--rh-color-surface-darker, #1f1f1f)) 0 0) padding-box,
                conic-gradient(from var(--_gradient-direction), var(--_conic-gradient)) border-box;
            }
          }

          &:is(:focus-visible, :hover:focus-visible) {
            outline:
              var(--rh-border-width-md, 2px)
              solid
              var(--rh-color-interactive-primary-default);
            outline-offset: 3px;
          }

          & #summary-text {
            clip-path: inset(50%);
            overflow: hidden;
            position: absolute;

            @container (min-width: 1680px) {
              clip-path: none;
              overflow: none;
              position: static;
            }
          }
        }

        /* stylelint-disable-next-line no-descending-specificity */
        & #details-content {
          position: absolute;
          z-index: -1;
          background-color: var(--rh-color-surface);
          box-shadow: 0 2px 4px 0 var(--_box-shadow-color);
          inset-block-start: 100%;
          inset-inline-end: 0;
          inline-size: 100%;
          max-block-size: calc(100dvh - var(--_navbar-height));
          overflow-y: auto;

          @container (min-width: 1200px) {
            inline-size: fit-content;
            border-end-end-radius: calc(var(--rh-border-radius-default, 3px) * 2);
            border-end-start-radius: calc(var(--rh-border-radius-default, 3px) * 2);
          }
        }

        &[open] {
          & summary {
            /* stylelint-disable-next-line no-descending-specificity */
            &:before {
              border: var(--rh-border-width-md, 2px) solid transparent;
              background:
                linear-gradient(light-dark(var(--rh-color-surface-lighter, #f2f2f2),
                  var(--rh-color-surface-darker, #1f1f1f)) 0 0) padding-box,
                conic-gradient(from var(--_gradient-direction), var(--_conic-gradient)) border-box;
            }

            & rh-icon[icon='caret-down'] {
              rotate: 180deg;
            }
          }
        }
      }
    }
  }

  &.link {
    display: inline-block;
    block-size: fit-content;
    border-block-start: none;

    & ::slotted(a) {
      color: var(--rh-color-text-primary) !important;
    }

    & ::slotted(:is(a:hover, a:focus-visible, :active)) {
      text-underline-offset: 4px !important;
      text-decoration-color:
        light-dark(var(--rh-color-gray-50, #707070),
          var(--rh-color-gray-40, #a3a3a3)) !important;
      text-decoration-line: underline !important;
      text-decoration-style: dashed !important;
      text-decoration-skip-ink: auto !important;
      color: var(--rh-color-interactive-primary-hover) !important;
    }

    &.hamburger {
      block-size: 100%;

      &:is(:hover, :focus-visible, :hover:focus-visible, :active) {
        border-block-end-color: transparent;
      }

      & ::slotted(a) {
        display: flex;
        align-items: center;
        block-size: calc(100% + 4px);
        font-size: var(--rh-font-size-body-text-md, 1rem);
        padding: var(--rh-space-lg, 16px) var(--rh-space-xl, 24px);
      }

      & ::slotted(a:is(:focus-visible, :hover:focus-visible, :active)) {
        outline-offset: 0;
        outline: var(--rh-border-width-md, 2px) solid var(--rh-color-interactive-primary-default);
        border-radius: var(--rh-border-radius-default, 3px);
      }

      @container (min-width: 1200px) {
        & ::slotted(a) {
          padding: 0 var(--rh-space-lg, 16px);
        }

        &:is(:active, :focus-within, :has(details[open])) {
          border-image: unset;
          border-block-end-color: transparent;
        }
      }
    }

    &.standalone {
      padding-inline:
        var(--_padding-inline-start, var(--rh-space-md, 8px))
        var(--_padding-inline-end, var(--rh-space-md, 8px));

      & ::slotted(a) {
        font-size: var(--rh-font-size-body-text-sm, 0.875rem) !important;
        display: inline-flex;
        block-size: auto;
        align-items: center;
        padding: var(--rh-space-md, 8px) !important;
      }

      & ::slotted(a:is(:focus-visible, :hover:focus-visible, :active)) {
        outline-offset: -2px;
        outline:
          var(--rh-border-width-md, 2px)
          solid
          var(--rh-color-interactive-primary-default);
        border-radius: var(--rh-border-radius-default, 3px);
      }
    }
  }
}
