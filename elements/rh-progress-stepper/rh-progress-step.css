/* Progress Step Component Styles */

/* Description slot styling */
slot[name='description'] {
  display: inline-block;
  margin: 0;
  grid-column: var(--_step-description-grid-column, 1);
  font-weight: var(--rh-font-weight-body-text-regular, 400);
}

/* Link styling */
a { display: inline; }

/* Common styling for strong elements, links, and description slots */
strong,
a,
slot[name='description'] {
  /* Visually Showing */
  block-size: auto;
  border: none;
  clip: auto;
  inline-size: auto;
  margin: 0;
  overflow: auto;
  padding: 0;
  position: relative;
  white-space: normal;

  /* End Visually Showing */
}

/* Compact view - hide text content */
:host-context([compact]) {
  & strong,
  & a,
  & slot[name='description'] {
    /* Visually Hiding */
    block-size: 1px;
    border: 0;
    clip: rect(0, 0, 0, 0);
    inline-size: 1px;
    margin: -1px;
    overflow: hidden;
    padding: 0;
    position: absolute;
    white-space: nowrap;

    /* End Visual Hiding */
  }
}

/* Main step container styling */
:host {
  grid-row: var(--_step-grid-row);
  width: 100%;
  height: 100%;
  padding-bottom: var(--_step-compact-vertical-padding, var(--rh-length-2xl, 32px));
  padding-right: var(--_step-compact-horizontal-padding, var(--rh-length-5xl, 80px));
  display: grid;
  background:
    var(--_step-line-style,
      linear-gradient(var(--_step-line-angle),
      transparent 13px,
      var(--_step-line-color) 13px,
      var(--_step-line-color) 15px,
      transparent 15px));
  place-items: start baseline;
  color: var(--rh-color-text-secondary);
  grid-template-columns: var(--_step-template-columns, 24px auto);
  grid-template-rows: var(--_step-template-rows, 24px auto);
  justify-self: var(--_step-justify-self, start);

  /* Body text/md */
  font-family: var(--rh-font-family-body-text, RedHatText, 'Red Hat Text', Helvetica, Arial, sans-serif);
  font-size: var(--rh-font-size-body-text-md, 1rem);
  font-style: normal;
  font-weight: var(--rh-font-weight-body-text-regular, 400);
  line-height: 1.5; /* 150% */
  gap: var(--_step-row-gap, 16px) var(--_step-column-gap, 16px);

  /* Focus indicator */
  &:has(> :focus-visible) {
    border: 1px solid blue;
  }

  /* Checkbox positioning */
  & input[type='checkbox'] {
    grid-column: 1;
    grid-row: 1;
  }

  /* Icon styling */
  & rh-icon {
    color: var(--_step-color);
    background-color: var(--rh-color-surface);
    grid-column: 1;
    grid-row: 1;
    height: var(--rh-size-icon-02, 24px);
    width: var(--rh-size-icon-02, 24px);
    border: var(--rh-border-width-md) solid var(--rh-color-border-subtle);
    border-radius: 50%;
    justify-self: var(--_step-icon-justify-self);
  }

  /* Text alignment */
  & strong,
  & a {
    align-self: center;
  }

  & slot[name='description'] { font-size: var(--rh-font-size-body-text-xs, 0.75rem); }

  /* Step line color for inactive adjacent steps */
  &:has(+ [state='inactive']) {
    --_step-line-color: var(--rh-color-border-subtle) !important;
  }
}

/* Inactive state styling */
:host([state='inactive']) {
  & strong,
  & a,
  & slot[name='description'] {
    color: var(--_color-text-disabled, #6a6e73);
    font-weight: var(--rh-font-weight-body-text-regular, 400);
  }
}

/* Active state styling */
:host([state='active']) {
  --_step-color: var(--rh-color-status-note);
}

/* Complete state styling */
:host([state='complete']) {
  --_step-color: var(--rh-color-status-success);

  & strong,
  & a {
    font-weight: var(--rh-font-weight-body-text-regular, 400);
  }
}

/* Warning state styling */
:host([state='warn']) {
  --_step-color: light-dark(var(--rh-color-yellow-50), var(--rh-color-yellow-30));

  & strong,
  & a {
    color: var(--_step-color);
  }
}

/* Fail state styling */
:host([state='fail']) {
  --_step-color: var(--rh-color-status-danger);

  & strong,
  & a {
    color: var(--_step-color);
  }
}

/* Non-inactive state styling */
:host(:not([state='inactive'])) {
  & :has(+ [state='inactive']) {
    --_step-line-color: var(--rh-color-border-subtle);
  }

  --_step-line-color: var(--rh-color-text-primary);

  & rh-icon { border-color: var(--rh-color-text-primary); }

  /* Text styling for non-inactive states */
  & strong,
  & a {
    /* Body text/md - Medium weight */
    font-weight: var(--rh-font-weight-body-text-medium, 500);
    text-decoration:
      underline
      dotted
      var(--rh-color-text-secondary)
      1px;
    text-decoration-skip-ink: none; /* 9.375% */
    text-underline-offset: 5px; /* 4.8px */
  }

  /* Nested div styling */
  & div {
    & rh-icon { border-color: var(--rh-color-text-primary); }

    & span {
      color: var(--rh-color-text-secondary);

      /* Body text/md - Medium weight */
      font-weight: var(--rh-font-weight-body-text-medium, 500);
      text-decoration:
        underline
        dotted
        var(--rh-color-text-secondary)
        1px;
      text-decoration-skip-ink: none; /* 9.375% */
      text-underline-offset: 5px; /* 4.8px */
    }
  }
}

/* Horizontal orientation text padding */
:host-context([orientation='horizontal']) {
  & strong,
  & a {
    padding-top: 4px;
  }
}
