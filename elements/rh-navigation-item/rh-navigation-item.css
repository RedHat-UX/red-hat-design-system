*,
*:after,
*:before {
  box-sizing: border-box;
}

:host {
  --_gradient:
    linear-gradient(to right,
      var(--rh-color-brand-red-light),
      var(--rh-color-purple-40),
      var(--rh-color-purple-60));

  /* stylelint-disable-next-line rhds/no-unknown-token-name */
  --_active-item-color: var(--rh-navigation-active-item-color, var(--_gradient));

  display: block;
  height: 100%;
  justify-items: center;
  align-content: center;
}

:host([hide]) {
  display: none;
}

@container (min-width: 320px) {
  :host([hide='xs']) {
    display: block;
  }
}

@container (min-width: 567px) {
  :host([hide='sm']) {
    display: block;
  }
}

@container (min-width: 768px) {
  :host([hide='md']) {
    display: block;
  }
}

@container (min-width: 992px) {
  :host([hide='lg']) {
    display: block;
  }
}

@container (min-width: 1200px) {
  :host([hide='xl']) {
    display: block;
  }
}

:host(:is(:focus, :focus-visible)) {
  outline: none;
  outline-style: none;
}

#container {
  --_box-shadow-color: rgba(21, 21, 21, 0.2);

  display: block;
  height: 100%;
  width: 100%;
  justify-items: center;
  align-content: center;

  /**
   * color-scheme change
   * --_background-color:
   *   light-dark(var(--rh-color-surface-lighter), var(--rh-color-surface-darker));
   * change box-shadow-color, but size values wont be able to change based on scheme.
   * --_box-shadow-color: light-dark(rgba(21, 21, 21, 0.2), rgba(0, 0, 0, 0.6));
  */

  &.light {
    --_background-color: var(--rh-color-surface-lighter);
  }

  &.dark {
    --_background-color: var(--rh-color-surface-darker);
    --_box-shadow-color: rgba(0, 0, 0, 0.6); /* non standard dropshadow color */
  }

  details {
    width: 100%;
    height: 100%;
    justify-items: center;
    align-content: center;

    &[open] {
      color: var(--rh-color-text-primary);

      /* stylelint-disable-next-line selector-pseudo-element-no-unknown */
      &::details-content {
        display: contents;

        & > * {
          box-sizing: border-box;
        }
      }

      @container (min-width: 1200px) {
        border-block-start-color: var(--rh-color-accent-brand);
      }

      & summary {
        &:focus-visible {
          outline-color: var(--rh-color-interactive-primary-default);
        }

        & rh-icon[icon='caret-down'] {
          rotate: 180deg;
        }
      }
    }
  }

  /* stylelint-disable-next-line no-descending-specificity */
  summary {
    --rh-icon-size: 18px /* non standard value */;
    --rh-avatar-size: var(--rh-size-icon-02);

    list-style: none;
    display: flex;
    gap: var(--rh-space-md);
    color: var(--rh-color-text-primary) !important;
    text-decoration: none !important;
    text-align: center;
    text-wrap: nowrap;
    place-items: center;
    width: fill-available;
    width: -webkit-fill-available;
    width: -moz-available;
    height: 100%;
    padding-inline: calc(var(--rh-space-sm) + var(--rh-space-xs));
    cursor: pointer;

    /* stylelint-disable-next-line no-descending-specificity */
    &:is(:focus-visible, :hover:focus-visible) {
      outline-offset: -2px;
      outline:
        var(--rh-border-width-md)
        solid
        var(--rh-color-interactive-primary-default);
      border-radius: var(--rh-border-radius-default);
    }

    &::marker,
    &::-webkit-details-marker {
      display: none;
    }

    & rh-icon {
      aspect-ratio: unset;

      /* stylelint-disable-next-line no-descending-specificity */
      &[icon='caret-down'] {
        color: var(--rh-color-icon-subtle);
        transition: rotate 0.2s;
      }
    }

    ::slotted(rh-icon) {
      margin-block: var(--rh-space-xs);
    }
  }

  #details-content {
    width: fill-available;
    width: -webkit-fill-available;
    width: -moz-available;

    @container (min-width: 1200px) {
      position: absolute;
      inset-block-start: 100%;
      inset-inline-start: 0;
      z-index: -1;
      width: 100%;
      background-color: var(--_background-color);
      box-shadow: 0 2px 4px 0 var(--_box-shadow-color);
      border-end-end-radius: calc(var(--rh-border-radius-default) * 2);
      border-end-start-radius: calc(var(--rh-border-radius-default) * 2);
    }
  }

  &.standalone {
    details {
      display: contents;

      & > * {
        box-sizing: border-box;
      }

      & summary {
        position: relative;
        gap: var(--rh-space-md);
        height: max-content;
        width: max-content;
        align-items: center;
        padding: var(--rh-space-md) var(--rh-space-lg);
        border: var(--rh-border-width-sm) solid var(--rh-color-border-subtle);
        border-radius: var(--rh-border-radius-pill);

        &:before {
          --_mask: conic-gradient(transparent 0 0);

          content: '';
          position: absolute;
          inset: -1px;
          border-radius: inherit;
          padding: var(--rh-border-width-md);
          background: var(--_active-item-color);
          mask: var(--_mask) content-box exclude, var(--_mask);
          z-index: 1;
        }

        &:is(:hover, :focus-visible) {
          background-color: var(--_background-color);

          &:before {
            padding: var(--rh-border-width-sm);

            --_mask: conic-gradient(#000000 0 0);
          }
        }

        &:is(:active) {
          background-color: unset;

          &:before {
            padding: var(--rh-border-width-md);
          }
        }

        &:is(:focus-visible, :hover:focus-visible) {
          outline-offset: 3px;
          border-radius: var(--rh-border-radius-pill);
        }

        & slot[name='summary'] {
          display: none;
        }

        @container (min-width: 1680px) {
          & slot[name='summary'] {
            display: contents;
          }
        }
      }

      &[open] {
        & summary {
          background-color: var(--_background-color);

          &:before {
            padding: var(--rh-border-width-md);

            --_mask: conic-gradient(#000000 0 0);
          }
        }

        #details-content {
          position: absolute;
          inset-block-start: 100%;
          inset-inline-start: 0;
          z-index: -1;
          width: 100%;
          background-color: var(--_background-color);
          border-end-end-radius: calc(var(--rh-border-radius-default) * 2);
          border-end-start-radius: calc(var(--rh-border-radius-default) * 2);
        }

        @container (min-width: 1200px) {
          & #details-content {
            width: fit-content;
            inset-inline-start: unset;
            inset-inline-end: 0;
          }
        }
      }
    }
  }

  &:not(.standalone, .compact) {
    @container (min-width: 1200px) {
      border-block-end: 4px solid transparent; /* Non standard border width */
    }
  }

  &.link {
    display: block;
    height: 100%;
    justify-items: center;
    align-content: center;

    & ::slotted(a) {
      display: flex;
      color: var(--rh-color-text-primary) !important;
      text-decoration: none !important;
      height: 100%;
      align-items: center;
    }

    & ::slotted(a:active) {
      /* background-color: var(--_background-color); */
      color: var(--rh-color-interactive-primary-default) !important;
      text-decoration: none !important;
    }

    & ::slotted(a:is(:focus-visible, :hover:focus-visible, :active)) {
      outline-offset: 2px;
      outline:
        var(--rh-border-width-md)
        solid
        var(--rh-color-interactive-primary-default);
      border-radius: var(--rh-border-radius-default);
    }

    &.standalone {
      display: inline-block;
      height: fit-content;
      border-block-start: none;
      padding: var(--rh-space-md);

      & ::slotted(a) {
        display: inline-flex;
        height: auto;
        align-items: center;
        padding: var(--rh-space-md) !important;
      }

      & ::slotted(:is(a:hover, a:focus-visible)) {
        text-underline-offset: 4px !important;
        text-decoration-color: var(--rh-color-border-subtle) !important;
        text-decoration-line: underline !important;
        text-decoration-style: dotted !important;
        text-decoration-skip-ink: auto !important;
        color: var(--rh-color-interactive-primary-hover) !important;
      }

      &:has(:focus-within) {
        & ::slotted(a) {
          background-color: var(--_background-color);
        }
      }
    }

    &:not(.standalone) {
      /* stylelint-disable-next-line no-descending-specificity */
      & ::slotted(a) {
        font-size: var(--rh-font-size-body-text-md);
        padding-inline: var(--rh-space-lg);
        transform: translateY(4px);
      }

      & ::slotted(:is(a:hover, a:focus-visible)) {
        text-underline-offset: 4px !important;
        text-decoration-color: var(--rh-color-border-subtle) !important;
        text-decoration-line: underline !important;
        text-decoration-style: dotted !important;
        text-decoration-skip-ink: auto !important;
        color: var(--rh-color-interactive-primary-hover) !important;
      }
    }
  }

  &:is(.standalone, .link) {
    font-size: var(--rh-font-size-code-sm);
  }

  &:not(.standalone, .link) {
    details {
      border-inline-start: var(--rh-border-width-lg) solid transparent;
      border-inline-end: var(--rh-border-width-sm) solid transparent;
      justify-items: unset;
      align-content: unset;

      @container (min-width: 1200px) {
        border-inline: none;
      }

      &[open] {
        border-inline-end-color: var(--rh-color-border-subtle);
        border-inline-start-color: var(--rh-color-accent-brand);

        @container (min-width: 1200px) {
          border-block-start-color: var(--rh-color-accent-brand);
          border-inline-start-color: var(--rh-color-border-subtle);

          &.dark {
            border-inline-color: transparent;
          }
        }

        /* stylelint-disable-next-line no-descending-specificity */
        summary {
          border-block-start-color: var(--rh-color-text-brand);
        }
      }

      /* stylelint-disable-next-line no-descending-specificity */
      & summary {
        flex-direction: row;
        justify-content: space-between;
        padding: var(--rh-space-lg) var(--rh-space-xl);

        @container (min-width: 1200px) {
          padding: 0 var(--rh-space-lg);
          width: auto;

          /* adjustment for 4px border, because border-image usage we can't use transparent on opposite side to balance */
          transform: translateY(4px);
        }
      }
    }

    @container (min-width: 1200px) {
      &:hover {
        border-block-end-color: var(--rh-color-border-subtle);
      }

      &:is(:active, :focus-within, :has(details[open])) {
        border-image: var(--_active-item-color) 1;
      }
    }
  }

  &.compact {
    /* JS failed, load mobile styles */
    @container (min-width: 1200px) {
      &:not(.standalone, .link) {
        & details {
          border-block-end: none;
          border-inline-start: var(--rh-border-width-lg) solid transparent;
          border-inline-end: var(--rh-border-width-sm) solid transparent;

          & summary {
            padding: var(--rh-space-lg) var(--rh-space-xl);
          }

          & #details-content {
            position: static;
            box-shadow: none;
          }

          &[open] {
            border-inline-end-color: var(--rh-color-border-subtle);
            border-inline-start-color: var(--rh-color-accent-brand);
          }
        }
      }
    }
  }
}
