:root {
  display: flex;
  flex-direction: column;
}

article {
  position: relative;
  height: 100%;
  display: flex;
  flex-direction: column;
}

[part="header"] {
  display: flex;
  flex-direction: column;
}

[part="header"].thumbnail {
  gap: var(--rh-space-lg, 16px);
}

[part="body"] ::slotted(:not([slot]):first-of-type) {
  margin-block-start: 0;
}

[part="body"] ::slotted(:not([slot]):last-of-type) {
  margin-block-end: 0;
}

[part="footer"] {
  display: flex;
  gap: 0.5em;
  inset-block-end: 0;
}

.empty {
  display: none;
}

::slotted(*) {
  font-family: inherit !important;
  line-height: inherit !important;
}

::slotted(:is(h1, h2, h3, h4, h5, h6)) {
  font-size: inherit !important;
}


#container {
  align-self: stretch;
  display: flex;
  flex-direction: column;
  justify-items: flex-start;
  overflow: hidden;
  border:
    var(
        --_border,
        var(--_border-width, 1px)
        var(--_border-style, solid)
        var(
          --_border-color,
          var(--rh-color-border-subtle-on-light, #c7c7c7)
        )
      );
  background-color: var(--_background-color, var(--rh-color-surface-lightest, #ffffff));
  border-radius: var(--_border-radius, var(--rh-border-width-lg, 3px));
  color: var(--_color, var(--rh-color-text-primary-on-light, #151515));
  font-family: var(--rh-font-family-body-text, RedHatText, "Red Hat Text", "Noto Sans Arabic", "Noto Sans Hebrew", "Noto Sans JP", "Noto Sans KR", "Noto Sans Malayalam", "Noto Sans SC", "Noto Sans TC", "Noto Sans Thai", Helvetica, Arial, sans-serif);
  line-height: var(--rh-line-height-body-text, 1.5);
}

#container.dark {
  --_background-color: var(--rh-color-surface-darkest, #151515);
  --_color: var(--rh-color-text-primary-on-dark, #ffffff);
  --_border-color: var(--rh-color-border-subtle-on-dark, #707070);
}

#header {
  box-sizing: border-box;
  font-size: var(--rh-card-header-font-size, var(--rh-font-size-heading-sm, 1.5rem));
  padding-block: var(--rh-space-lg, 16px);
  padding-inline: var(--rh-space-xl, 24px);
}

slot[name="thumbnail"]::slotted(img) {
  box-sizing: border-box;
  min-width: 100%;
  height: auto;
  overflow: hidden;
}

slot[name="header"]::slotted(:is(h1, h2, h3, h4, h5, h6)) {
  padding-inline: var(--rh-space-xl, 24px);
}

#body {
  padding: var(--rh-space-xl, 24px);
}

#footer {
  padding: var(--rh-space-xl, 24px);
}

@media screen and (min-width: 768px) {
  #body {
    padding: var(--rh-space-2xl, 32px);
  }

  #footer {
    padding: var(--rh-space-2xl, 32px);
  }
}

#header ::slotted(:is(h1, h2, h3, h4, h5, h6)) {
  margin: unset;
  font-weight: var(--rh-font-weight-body-text-medium, 500);
}
