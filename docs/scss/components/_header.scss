@use "sass:map";
@use "sass:math";
@use "../__core/variables" as *;
@use "../__core/mixins" as *;

.header {
  padding-top: 32px;
  padding-bottom: 32px;

  @include breakpoint(tango) {
    padding-top: 80px;
  }

  .page-title {
    margin: 0;


    &:only-child {
      margin-bottom: 0;
    }

    + rh-subnav {
      margin-top: 32px;
    }
  }
}

.l-main__header {
  position: sticky;
  z-index: 1;

  // because the header still uses legacy sass instead of design tokens,
  // we have to fudge this a little bit. The goal is to subtract out the
  // height of the h1 and whitespace which precedes the subnav
  // in the block direction from the top of the main article header
  top: calc(
      72px /* height of logo header*/
      - 32px /* l-main__header top padding*/
      - (35px * 1.3) /* h1 font size x line height*/
      - (35px * 0.67) /* best guess at 0.67em margin-bottom for the h1*/
    );

  @media (min-width: 1400px) {
    top: calc(
        72px /* height of logo header*/
        - 80px /* l-main__header top padding*/
        - (48px * 1.3) /* h1 font size x line height*/
        - (48px * 0.67) /* best guess at 0.67em margin-bottom for the h1*/
      );
  }
}

.l-header__logo {
  margin-left: 0;

  @include breakpoint($nav-break) {
    margin-left: 0;
  }

  &-bar {
    a {
      display: inherit;
    }
  }
}

[id="mobile-menu-toggle"][id],
.l-header__mobile-menu-toggle {
  position: fixed;
  top: 0;
  right: 0;

  @include breakpoint($nav-break) {
    display: none;
  }
}

.l-header__mobile-menu-toggle {
  width: 72px;
  height: map.get($header-height, default);
  color: #ffffff;
  z-index: 200;
}

// Overlay
// [id='mobile-menu-toggle']:checked ~ .l-header__mobile-menu-toggle:before {
//   content: '';
//   position: fixed;
//   top: 0;
//   left: 0;
//   right: 0;
//   bottom: 0;
//   z-index: 2;
//   display: block;
//   background: #0005;
// }

.l-header__burger-icon {
  $animation-duration: 0.3s;
  $animation-timing: cubic-bezier(0.55, 0.085, 0, 0.99);
  $bar-width: 24px;
  $bar-height: 2px;
  $space-between-bars: 6px;
  $scaling: 4;
  $burger-color: #ffffff;

  display: block;
  position: absolute;
  top: 50%;
  left: calc(50% - #{math.div($bar-width, 2)});

  // Scale is to take advantage of anti-aliasing and avoid subpixel rounding bugs
  transform: scale(#{math.div(1, $scaling)});
  transform-origin: left top;

  // Scale variables from here to take scaling into account
  /* stylelint-disable order/order */
  $bar-width: $bar-width * $scaling;
  $bar-height: $bar-height * $scaling;
  $space-between-bars: $space-between-bars * $scaling;
  /* stylelint-enable order/order */


  &:before,
  &:after {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    box-sizing: border-box;
    display: block;
    width: $bar-width;
  }

  &:before {
    $translate: translateY(#{($bar-height + $space-between-bars) * -1});
    $transform-origin: left top;

    height: 0;
    border-top: $bar-height solid $burger-color;
    background: $burger-color;
    transform: $translate;
    transform-origin: $transform-origin;
    transition: transform $animation-duration $animation-timing;

    [id="mobile-menu-toggle"]:checked ~ .l-header__mobile-menu-toggle & {
      transform: $translate rotate(45deg);
      transform-origin: $transform-origin;
    }

  }

  &:after {
    $height: $bar-height * 2 + $space-between-bars;
    $transform-origin: left bottom;

    height: $height;
    border: $bar-height solid $burger-color;
    border-width: $bar-height 0 $bar-height 0;
    transition:
      border $animation-duration  $animation-timing,
      transform $animation-duration  $animation-timing;
    transform-origin: $transform-origin;

    [id="mobile-menu-toggle"]:checked ~ .l-header__mobile-menu-toggle & {
      transform: rotate(-45deg);
      border-top-color: transparent;
      transform-origin: $transform-origin;
    }
  }

}

[id="mobile-menu-toggle"]:checked ~ .menu-toggle__toggleable {
  width: 100%;
  background-color: rgba(21, 21, 21, 0.5);

  @include breakpoint($nav-break) {
    background-color: transparent;
    width: auto;
  }
}
