@use "sass:map";
@use "sass:math";
@use "../__core/variables" as *;
@use "../__core/mixins" as *;

.header {
  padding-block: var(--rh-space-2xl);

  @include breakpoint(tango) {
    padding-block: var(--rh-space-5xl);
  }

  .page-title {
    margin: 0;


    &:only-child {
      margin-block-end: 0;
    }

    + rh-subnav {
      margin-block-start: var(--rh-space-2xl);
    }
  }
}

.l-main__header {
  position: sticky;
  z-index: 1;

  // because the header still uses legacy sass instead of design tokens,
  // we have to fudge this a little bit. The goal is to subtract out the
  // height of the h1 and whitespace which precedes the subnav
  // in the block direction from the top of the main article header
  top: calc(
      72px /* height of logo header*/
      - 32px /* l-main__header top padding*/
      - (35px * 1.3) /* h1 font size x line height*/
      - (35px * 0.67) /* best guess at 0.67em margin-bottom for the h1*/
    );

  @media (min-width: 1400px) {
    top: calc(
        72px /* height of logo header*/
        - 80px /* l-main__header top padding*/
        - (48px * 1.3) /* h1 font size x line height*/
        - (48px * 0.67) /* best guess at 0.67em margin-bottom for the h1*/
      );
  }
}


#main-header {
  & .burger-icon {
    /** Scale is to take advantage of anti-aliasing and avoid subpixel rounding bugs */
    --scale: 4;
    --animation-duration: 0.3s;
    --animation-timing: cubic-bezier(0.55, 0.085, 0, 0.99);
    --burger-color: #ffffff;
    --space-between-bars: calc(var(--rh-space-sm) * var(--scale));
    --bar-width: calc(var(--rh-length-xl) * var(--scale));
    --bar-height: calc(var(--rh-length-xs) / 2 * var(--scale));

    display: block;
    position: absolute;
    top: 50%;
    left: calc(50% - var(--rh-length-xl) / 2);
    scale: calc(1 / var(--scale));
    transform-origin: left top;

    &:before,
    &:after {
      content: "";
      position: absolute;
      top: 0;
      left: 0;
      box-sizing: border-box;
      display: block;
      width: var(--bar-width);
    }

    &:before {
      height: 0;
      border-top: var(--bar-height) solid var(--burger-color);
      background: var(--burger-color);
      translate: 0 calc(-1 * (var(--bar-height) + var(--space-between-bars)));
      transform-origin: left top;
      transition:
        rotate var(--animation-duration) var(--animation-timing),
        translate var(--animation-duration) var(--animation-timing);
    }

    &:after {
      height: calc(var(--bar-height) * 2 + var(--space-between-bars));
      border: var(--bar-height) solid var(--burger-color);
      border-width: var(--bar-height) 0 var(--bar-height) 0;
      transition:
        border var(--animation-duration)  var(--animation-timing),
        rotate var(--animation-duration) var(--animation-timing),
        translate var(--animation-duration) var(--animation-timing);
      transform-origin: left bottom;
    }

  }

  #mobile-menu-toggle:checked ~ .menu-toggle-button .burger-icon {
    &:before {
      rotate: 45deg;
    }

    &:after {
      rotate: -45deg;
      border-top-color: transparent;
    }
  }

  & #mobile-menu-toggle,
  & .mobile-menu-toggle {
    position: fixed;
    top: 0;
    right: 0;

    @include breakpoint($nav-break) {
      display: none;
    }
  }

  & .mobile-menu-toggle {
    width: 72px;
    height: map.get($header-height, default);
    color: #ffffff;
    z-index: 200;
  }

  & #mobile-menu-toggle:checked ~ .menu-toggle-toggleable {
    width: 100%;
    background-color: rgba(21, 21, 21, 0.5);

    @include breakpoint($nav-break) {
      background-color: transparent;
      width: auto;
    }
  }
}

