diff --git a/node_modules/@patternfly/pfe-core/controllers/tabs-aria-controller.js b/node_modules/@patternfly/pfe-core/controllers/tabs-aria-controller.js
index 0993544..f56cab0 100644
--- a/node_modules/@patternfly/pfe-core/controllers/tabs-aria-controller.js
+++ b/node_modules/@patternfly/pfe-core/controllers/tabs-aria-controller.js
@@ -1,3 +1,4 @@
+import { isServer } from 'lit';
 var _TabsAriaController_instances, _TabsAriaController_logger, _TabsAriaController_host, _TabsAriaController_element, _TabsAriaController_tabPanelMap, _TabsAriaController_options, _TabsAriaController_mo, _TabsAriaController_onSlotchange;
 import { __classPrivateFieldGet, __classPrivateFieldSet } from "tslib";
 import { Logger } from '@patternfly/pfe-core/controllers/logger.js';
@@ -29,19 +30,19 @@ export class TabsAriaController {
         _TabsAriaController_mo.set(this, new MutationObserver(__classPrivateFieldGet(this, _TabsAriaController_instances, "m", _TabsAriaController_onSlotchange).bind(this)));
         __classPrivateFieldSet(this, _TabsAriaController_options, options, "f");
         __classPrivateFieldSet(this, _TabsAriaController_logger, new Logger(host), "f");
-        if (host instanceof HTMLElement) {
+        if (host instanceof (globalThis.HTMLElement ?? class {})) {
             __classPrivateFieldSet(this, _TabsAriaController_element, host, "f");
         }
         else {
             const element = options.getHTMLElement?.();
-            if (!element) {
+            if (!element && !isServer) {
                 throw new Error('TabsController must be instantiated with an HTMLElement or a `getHTMLElement()` option');
             }
             __classPrivateFieldSet(this, _TabsAriaController_element, element, "f");
         }
         (__classPrivateFieldSet(this, _TabsAriaController_host, host, "f")).addController(this);
-        __classPrivateFieldGet(this, _TabsAriaController_element, "f").addEventListener('slotchange', __classPrivateFieldGet(this, _TabsAriaController_instances, "m", _TabsAriaController_onSlotchange));
-        if (__classPrivateFieldGet(this, _TabsAriaController_element, "f").isConnected) {
+        __classPrivateFieldGet(this, _TabsAriaController_element, "f")?.addEventListener('slotchange', __classPrivateFieldGet(this, _TabsAriaController_instances, "m", _TabsAriaController_onSlotchange));
+        if (__classPrivateFieldGet(this, _TabsAriaController_element, "f")?.isConnected) {
             this.hostConnected();
         }
     }
diff --git a/node_modules/@patternfly/pfe-core/ssr-shims.js b/node_modules/@patternfly/pfe-core/ssr-shims.js
index d432769..c8fe51d 100644
--- a/node_modules/@patternfly/pfe-core/ssr-shims.js
+++ b/node_modules/@patternfly/pfe-core/ssr-shims.js
@@ -42,6 +42,8 @@ globalThis.IntersectionObserver ?? (globalThis.IntersectionObserver = ObserverSh
 // @ts-expect-error: this runs in node
 globalThis.MutationObserver ?? (globalThis.MutationObserver = ObserverShim);
 // @ts-expect-error: this runs in node
+globalThis.ResizeObserver ?? (globalThis.ResizeObserver = ObserverShim);
+// @ts-expect-error: this runs in node
 globalThis.getComputedStyle ?? (globalThis.getComputedStyle = function () {
     return {
         getPropertyPriority() {
