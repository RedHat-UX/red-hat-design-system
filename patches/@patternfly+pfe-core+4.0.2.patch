diff --git a/node_modules/@patternfly/pfe-core/controllers/tabs-aria-controller.js b/node_modules/@patternfly/pfe-core/controllers/tabs-aria-controller.js
index 0993544..6fcfc87 100644
--- a/node_modules/@patternfly/pfe-core/controllers/tabs-aria-controller.js
+++ b/node_modules/@patternfly/pfe-core/controllers/tabs-aria-controller.js
@@ -1,5 +1,6 @@
 var _TabsAriaController_instances, _TabsAriaController_logger, _TabsAriaController_host, _TabsAriaController_element, _TabsAriaController_tabPanelMap, _TabsAriaController_options, _TabsAriaController_mo, _TabsAriaController_onSlotchange;
 import { __classPrivateFieldGet, __classPrivateFieldSet } from "tslib";
+import { isServer } from 'lit';
 import { Logger } from '@patternfly/pfe-core/controllers/logger.js';
 export class TabsAriaController {
     get tabs() {
@@ -29,6 +30,10 @@ export class TabsAriaController {
         _TabsAriaController_mo.set(this, new MutationObserver(__classPrivateFieldGet(this, _TabsAriaController_instances, "m", _TabsAriaController_onSlotchange).bind(this)));
         __classPrivateFieldSet(this, _TabsAriaController_options, options, "f");
         __classPrivateFieldSet(this, _TabsAriaController_logger, new Logger(host), "f");
+        (__classPrivateFieldSet(this, _TabsAriaController_host, host, "f")).addController(this);
+        if (isServer) {
+            return;
+        }
         if (host instanceof HTMLElement) {
             __classPrivateFieldSet(this, _TabsAriaController_element, host, "f");
         }
@@ -39,7 +44,6 @@ export class TabsAriaController {
             }
             __classPrivateFieldSet(this, _TabsAriaController_element, element, "f");
         }
-        (__classPrivateFieldSet(this, _TabsAriaController_host, host, "f")).addController(this);
         __classPrivateFieldGet(this, _TabsAriaController_element, "f").addEventListener('slotchange', __classPrivateFieldGet(this, _TabsAriaController_instances, "m", _TabsAriaController_onSlotchange));
         if (__classPrivateFieldGet(this, _TabsAriaController_element, "f").isConnected) {
             this.hostConnected();
@@ -73,7 +77,7 @@ _TabsAriaController_logger = new WeakMap(), _TabsAriaController_host = new WeakM
     __classPrivateFieldGet(this, _TabsAriaController_tabPanelMap, "f").clear();
     const tabs = [];
     const panels = [];
-    for (const child of __classPrivateFieldGet(this, _TabsAriaController_element, "f").children) {
+    for (const child of __classPrivateFieldGet(this, _TabsAriaController_element, "f")?.children ?? []) {
         if (__classPrivateFieldGet(this, _TabsAriaController_options, "f").isTab(child)) {
             tabs.push(child);
             child.role ?? (child.role = 'tab');
@@ -94,4 +98,3 @@ _TabsAriaController_logger = new WeakMap(), _TabsAriaController_host = new WeakM
     }
     __classPrivateFieldGet(this, _TabsAriaController_host, "f").requestUpdate();
 };
-//# sourceMappingURL=tabs-aria-controller.js.map
\ No newline at end of file
diff --git a/node_modules/@patternfly/pfe-core/ssr-shims.js b/node_modules/@patternfly/pfe-core/ssr-shims.js
index d432769..c8fe51d 100644
--- a/node_modules/@patternfly/pfe-core/ssr-shims.js
+++ b/node_modules/@patternfly/pfe-core/ssr-shims.js
@@ -42,6 +42,8 @@ globalThis.IntersectionObserver ?? (globalThis.IntersectionObserver = ObserverSh
 // @ts-expect-error: this runs in node
 globalThis.MutationObserver ?? (globalThis.MutationObserver = ObserverShim);
 // @ts-expect-error: this runs in node
+globalThis.ResizeObserver ?? (globalThis.ResizeObserver = ObserverShim);
+// @ts-expect-error: this runs in node
 globalThis.getComputedStyle ?? (globalThis.getComputedStyle = function () {
     return {
         getPropertyPriority() {
