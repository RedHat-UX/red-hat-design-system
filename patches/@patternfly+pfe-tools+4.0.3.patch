diff --git a/node_modules/@patternfly/pfe-tools/dev-server/demo.css b/node_modules/@patternfly/pfe-tools/dev-server/demo.css
index fa90fd5..4b86971 100644
--- a/node_modules/@patternfly/pfe-tools/dev-server/demo.css
+++ b/node_modules/@patternfly/pfe-tools/dev-server/demo.css
@@ -597,3 +597,11 @@ footer ul {
     top: 2rem;
   }
 }
+
+strong.noscript {
+  background-color: var(--pf-global--danger-color--100, #c9190b);
+  color: white;
+  border-radius: 4px;
+  padding: 4px 12px;
+  display: inline-block;
+}
diff --git a/node_modules/@patternfly/pfe-tools/dev-server/plugins/templates/index.html b/node_modules/@patternfly/pfe-tools/dev-server/plugins/templates/index.html
index b910a4a..df77100 100644
--- a/node_modules/@patternfly/pfe-tools/dev-server/plugins/templates/index.html
+++ b/node_modules/@patternfly/pfe-tools/dev-server/plugins/templates/index.html
@@ -1,3 +1,6 @@
+<!DOCTYPE html>
+<html lang="en" dir="ltr" unresolved>
+
 {% set groupeddemos = demos | sort(false, false, 'permalink') | groupby('primaryElementName') %}
 {% if demo.title %}
   {% set title = demo.title + ' | ' + options.site.title %}
@@ -16,8 +19,6 @@
     {% set repoHost = '' %}
   {% endif %}
 {% endif %}
-<!DOCTYPE html>
-<html lang="en" dir="ltr" unresolved>
 
 <head>
   <meta charset="utf-8">
@@ -28,6 +29,7 @@
   <title>{{ title }}</title>
   <link rel="stylesheet" href="/node_modules/@patternfly/pfe-tools/dev-server/fonts.css">
   <link rel="stylesheet" href="/node_modules/@patternfly/pfe-tools/dev-server/demo.css">
+  <noscript><style>html[unresolved] { opacity: 1; }</style></noscript>
   {% for sheet in options.site.stylesheets %}
   <link rel="stylesheet" href="{{ sheet }}">
   {% endfor %}
@@ -43,16 +45,18 @@
 <body class="menu-open">
   <header id="main-header">
     <div class="logo-bar">
-      <pf-button
-        id="hamburger"
-        plain
-        aria-controls="sidebar"
-        label="Expand Main Navigation">
+      <pf-button id="hamburger"
+                 plain
+                 aria-controls="sidebar"
+                 label="Expand Main Navigation">
         <pf-icon icon="bars" size="lg"></pf-icon>
       </pf-button>
       <a href="/" aria-label="{{ title }} Home">
         <img src="{{ options.site.logoUrl }}" alt="{{ title }}">
       </a>
+
+      <noscript><strong class="noscript">JavaScript is disabled</strong></noscript>
+
       <a id="source-control" href="{{
             options.sourceControlURLPrefix.replace('tree/main/', '')
           }}{{
diff --git a/node_modules/@patternfly/pfe-tools/package.json b/node_modules/@patternfly/pfe-tools/package.json
index 93419d8..638714c 100644
--- a/node_modules/@patternfly/pfe-tools/package.json
+++ b/node_modules/@patternfly/pfe-tools/package.json
@@ -70,7 +70,7 @@
     "@custom-elements-manifest/analyzer": "^0.5.7",
     "@jspm/generator": "^2.0.1",
     "@koa/router": "^12.0.1",
-    "@lit-labs/ssr": "^3.2.2",
+    "@lit-labs/ssr": "^3.3.0",
     "@open-wc/testing": "^4.0.0",
     "@playwright/test": "^1.44.0",
     "@rollup/plugin-replace": "^5.0.5",
@@ -100,7 +100,7 @@
     "eslint": "^9.0.0",
     "execa": "^9.3.0",
     "glob": "^10.3.12",
-    "lit": "^3.1.2",
+    "lit": "^3.2.1",
     "markdown-it-anchor": "^8.6.7",
     "nunjucks": "^3.2.4",
     "patch-package": "^8.0.0",
diff --git a/node_modules/@patternfly/pfe-tools/ssr/global.js b/node_modules/@patternfly/pfe-tools/ssr/global.js
index 575b220..6b9e762 100644
--- a/node_modules/@patternfly/pfe-tools/ssr/global.js
+++ b/node_modules/@patternfly/pfe-tools/ssr/global.js
@@ -5,8 +5,9 @@
  * @param importSpecifiers list of web component definition module import specifiers
  */
 export async function renderGlobal(html, importSpecifiers) {
-    // avoid tsconfig problems
-    await import(['@patternfly', 'pfe-core', 'ssr-shims.js'].join('/'));
+    // hack to avoid circular typescript project reference
+    const spec = '@patternfly/pfe-core/ssr-shims.js';
+    await import(spec);
     const { ssr } = await import('./ssr.js');
     await Promise.all(importSpecifiers.map(x => import(x)));
     return ssr(html);
diff --git a/node_modules/@patternfly/pfe-tools/ssr/global.js.map b/node_modules/@patternfly/pfe-tools/ssr/global.js.map
index 84c4544..62547b0 100644
--- a/node_modules/@patternfly/pfe-tools/ssr/global.js.map
+++ b/node_modules/@patternfly/pfe-tools/ssr/global.js.map
@@ -1 +1 @@
-{"version":3,"file":"global.js","sourceRoot":"","sources":["global.ts"],"names":[],"mappings":"AAAA;;;;;GAKG;AACH,MAAM,CAAC,KAAK,UAAU,YAAY,CAChC,IAAY,EACZ,gBAA0B;IAE1B,0BAA0B;IAC1B,MAAM,MAAM,CAAC,CAAC,aAAa,EAAE,UAAU,EAAE,cAAc,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;IACpE,MAAM,EAAE,GAAG,EAAE,GAAG,MAAM,MAAM,CAAC,UAAU,CAAC,CAAC;IACzC,MAAM,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACxD,OAAO,GAAG,CAAC,IAAI,CAAC,CAAC;AACnB,CAAC","sourcesContent":["/**\n * Renders a string of HTML,\n * first importing the provided component defintions into nodejs' global scope.\n * @param html string to render\n * @param importSpecifiers list of web component definition module import specifiers\n */\nexport async function renderGlobal(\n  html: string,\n  importSpecifiers: string[],\n): Promise<string> {\n  // avoid tsconfig problems\n  await import(['@patternfly', 'pfe-core', 'ssr-shims.js'].join('/'));\n  const { ssr } = await import('./ssr.js');\n  await Promise.all(importSpecifiers.map(x => import(x)));\n  return ssr(html);\n}\n\n"]}
\ No newline at end of file
+{"version":3,"file":"global.js","sourceRoot":"","sources":["global.ts"],"names":[],"mappings":"AAAA;;;;;GAKG;AACH,MAAM,CAAC,KAAK,UAAU,YAAY,CAChC,IAAY,EACZ,gBAA0B;IAE1B,sDAAsD;IACtD,MAAM,IAAI,GAAG,mCAAmC,CAAC;IACjD,MAAM,MAAM,CAAC,IAAI,CAAC,CAAC;IACnB,MAAM,EAAE,GAAG,EAAE,GAAG,MAAM,MAAM,CAAC,UAAU,CAAC,CAAC;IACzC,MAAM,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACxD,OAAO,GAAG,CAAC,IAAI,CAAC,CAAC;AACnB,CAAC","sourcesContent":["/**\n * Renders a string of HTML,\n * first importing the provided component defintions into nodejs' global scope.\n * @param html string to render\n * @param importSpecifiers list of web component definition module import specifiers\n */\nexport async function renderGlobal(\n  html: string,\n  importSpecifiers: string[],\n): Promise<string> {\n  // hack to avoid circular typescript project reference\n  const spec = '@patternfly/pfe-core/ssr-shims.js';\n  await import(spec);\n  const { ssr } = await import('./ssr.js');\n  await Promise.all(importSpecifiers.map(x => import(x)));\n  return ssr(html);\n}\n"]}
\ No newline at end of file
diff --git a/node_modules/@patternfly/pfe-tools/ssr/ssr.d.ts b/node_modules/@patternfly/pfe-tools/ssr/ssr.d.ts
index b72548d..f4fa234 100644
--- a/node_modules/@patternfly/pfe-tools/ssr/ssr.d.ts
+++ b/node_modules/@patternfly/pfe-tools/ssr/ssr.d.ts
@@ -1,4 +1,5 @@
 /**
+ * composes the `unsafeHTML`, `html`, `render`, and `collectResult` functions from lit ssr
  * @param input html partial
  */
 export declare function ssr(input: string): Promise<string>;
diff --git a/node_modules/@patternfly/pfe-tools/ssr/ssr.js b/node_modules/@patternfly/pfe-tools/ssr/ssr.js
index 5ddd0d2..112545a 100644
--- a/node_modules/@patternfly/pfe-tools/ssr/ssr.js
+++ b/node_modules/@patternfly/pfe-tools/ssr/ssr.js
@@ -1,8 +1,8 @@
-import { render } from '@lit-labs/ssr';
+import { render, html } from '@lit-labs/ssr';
 import { collectResult } from '@lit-labs/ssr/lib/render-result.js';
-import { html } from 'lit';
 import { unsafeHTML } from 'lit/directives/unsafe-html.js';
 /**
+ * composes the `unsafeHTML`, `html`, `render`, and `collectResult` functions from lit ssr
  * @param input html partial
  */
 export async function ssr(input) {
diff --git a/node_modules/@patternfly/pfe-tools/ssr/ssr.js.map b/node_modules/@patternfly/pfe-tools/ssr/ssr.js.map
index df66b5b..de18fcd 100644
--- a/node_modules/@patternfly/pfe-tools/ssr/ssr.js.map
+++ b/node_modules/@patternfly/pfe-tools/ssr/ssr.js.map
@@ -1 +1 @@
-{"version":3,"file":"ssr.js","sourceRoot":"","sources":["ssr.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,MAAM,EAAE,MAAM,eAAe,CAAC;AACvC,OAAO,EAAE,aAAa,EAAE,MAAM,oCAAoC,CAAC;AACnE,OAAO,EAAE,IAAI,EAAE,MAAM,KAAK,CAAC;AAC3B,OAAO,EAAE,UAAU,EAAE,MAAM,+BAA+B,CAAC;AAE3D;;GAEG;AACH,MAAM,CAAC,KAAK,UAAU,GAAG,CAAC,KAAa;IACrC,OAAO,aAAa,CAAC,MAAM,CAAC,IAAI,CAAA,GAAG,UAAU,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC;AAC3D,CAAC","sourcesContent":["import { render } from '@lit-labs/ssr';\nimport { collectResult } from '@lit-labs/ssr/lib/render-result.js';\nimport { html } from 'lit';\nimport { unsafeHTML } from 'lit/directives/unsafe-html.js';\n\n/**\n * @param input html partial\n */\nexport async function ssr(input: string): Promise<string> {\n  return collectResult(render(html`${unsafeHTML(input)}`));\n}\n"]}
\ No newline at end of file
+{"version":3,"file":"ssr.js","sourceRoot":"","sources":["ssr.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,MAAM,EAAE,IAAI,EAAE,MAAM,eAAe,CAAC;AAC7C,OAAO,EAAE,aAAa,EAAE,MAAM,oCAAoC,CAAC;AACnE,OAAO,EAAE,UAAU,EAAE,MAAM,+BAA+B,CAAC;AAE3D;;;GAGG;AACH,MAAM,CAAC,KAAK,UAAU,GAAG,CAAC,KAAa;IACrC,OAAO,aAAa,CAAC,MAAM,CAAC,IAAI,CAAA,GAAG,UAAU,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC;AAC3D,CAAC","sourcesContent":["import { render, html } from '@lit-labs/ssr';\nimport { collectResult } from '@lit-labs/ssr/lib/render-result.js';\nimport { unsafeHTML } from 'lit/directives/unsafe-html.js';\n\n/**\n * composes the `unsafeHTML`, `html`, `render`, and `collectResult` functions from lit ssr\n * @param input html partial\n */\nexport async function ssr(input: string): Promise<string> {\n  return collectResult(render(html`${unsafeHTML(input)}`));\n}\n"]}
\ No newline at end of file
