/* NOTE this implementation of grid uses a container */

/* possible need for variant of gap */

.grid {
  display: grid;
  grid-template-columns: 1fr;
  gap: var(--rh-space-2xl);

  &.gapless {
    gap: 0;
  }
}

@container container (min-width: 576px) {
  .grid.xs-two-columns {
    grid-template-columns: 1fr 1fr;
  }
}

@container container (min-width: 768px) {
  .grid.sm-two-columns {
    grid-template-columns: 1fr 1fr;
  }

  .grid.sm-three-columns {
    grid-template-columns: 1fr 1fr 1fr;
  }
}

@container container (min-width: 992px) {
  .grid.md-three-columns {
    grid-template-columns: 1fr 1fr 1fr;
  }
}

/* content with image layout */

/* TODO: possibly a separate layout pattern */
.layout-content-image {
  grid-template-rows: auto;
  grid-template-areas: 'image' 'content';
}

.layout-content-image > .content-block {
  grid-area: content;
}

.layout-content-image > .image-block {
  grid-area: image;
}

@container container (min-width: 768px) {
  .layout-content-image {
    grid-template-columns: 2fr 1fr;
    grid-template-areas: 'content image';
  }

  .layout-content-image.reversed {
    grid-template-columns: 1fr 2fr;
    grid-template-areas: 'image content';
  }
}
