name: ðŸ§° Ready for Development
description: Design-to-development handoff checklist
title: '[feat]: <tag> ready for development'

labels:
  - new component
  - ready for development

assignees:
  - paigenotfound404

body:
  - type: markdown
    attributes:
      value: |-
        ## Introduction
        **Working with a developer to build components should never be a guessing game**. Providing them with documentation will ensure your component is developed as you intend.

        ## Who is this checklist for?
        This checklist is **intended for designers to fill out when they are creating component documentation** for developers. It is also **intended for developers who are not sure of what specific documentation to reference** when building your component.

        ## Why do we need this checklist?
        Having a designer provide consistent documentation to a developer will **eliminate guessing games and assumptions** made about how to correctly develop your component.

        ## How to use this checklist
        When your component design is final and approved, **use this checklist to determine the right amount of documentation specs to include for a developer**.

        You may fill out this checklist on your own or you can **work closely with the assigned developer and fill out this checklist together** in order to determine exactly what documentation specs they need. Starting in the Appearance section, check the box next to each spec after you add it to your primary XD source file. **Not every spec is required to include**, some specs only apply to complex components because they require more documentation.

        ## About Required Fields
        Some of the fields in this form are required, e.g. the accessibility requirements. You _won't be able to submit the issue_ until they are checked. You may however draft the descriptive fields using Google Docs and paste the formatted text into the text areas here. Simple formatting like bold, links, etc. should be preserved. Learn more about using [GitHub-flavoured Markdown](https://docs.github.com/en/get-started/writing-on-github/getting-started-with-writing-and-formatting-on-github/about-writing-and-formatting-on-github) on the GitHub docs.

  - type: input
    id: tag
    attributes:
      label: Tag Name
      description: >-
        What tag name with the HTML element have?
      placeholder: >-
        rh-jazz-hands
    validations:
      required: true

  - type: textarea
    id: purpose
    attributes:
      label: Purpose
      description: Explain the purpose of your component or the business need for its creation
      placeholder: >-
        My component needs to be created in order to track the progress of a
        user through the trial signup process (rh-progress-steps).
    validations:
      required: true

  - type: textarea
    id: distinguishing-factors
    attributes:
      label: Distinguishing factors
      description: If your component feels similar to an existing component, describe how it is different
      placeholder: >-
        My Button component feels similar to a Call to action, but a Button is
        visually smaller and performs an action whereas a Call to action is
        visually larger and directs a user to another page
        (`rh-button` and `rh-call-to-action`).
    validations:
      required: false

  - type: textarea
    id: intended-use-context
    attributes:
      label: Where will it be used?
      description: Describe the website, web property, or layout where your component will be used
      placeholder: >-
        My component will be used on pages where a user can browse through
        content listings or search results (`rh-pagination`).
    validations:
      required: true

  - type: textarea
    id: end-user
    attributes:
      label: End user
      description: Describe the end user or audience who will use your component
      placeholder: >-
        An analyst or user who needs to browse through pages of content listings or
        search results on any device (rh-pagination).
    validations:
      required: true

  - type: textarea
    id: intended-use
    attributes:
      label: Intended end use
      description: >-
        Describe how a user should use your component or any intended actions or features
      placeholder: >-
        A user should be able to select a different content listing page or
        type which page they want to navigate to in a text field (`rh-pagination`)
    validations:
      required: true

  - type: textarea
    id: properties
    attributes:
      label: Properties
      description: >-
        Describe any controls, properties, or variants your component may need
      placeholder: >-
        My button component needs sizes: `small` and `large`

  - type: checkboxes
    id: page-builder
    attributes:
      label: Page Builder
      description: >-
        Is your component going to be a part of a page builder experience?
      options:
        - label: My component **will** be part of a page-builder experience
          required: false
        - label: I'm not sure
          required: false

  - type: checkboxes
    id: a11y
    attributes:
      label: Accessibility Features
      description: >-
        Ensure that the following accessibility features have been address in
        design. For more information see
          - [WCAG 2.0](https://www.w3.org/TR/WCAG20/),
          - [WAI-ARIA examples](https://www.w3.org/TR/wai-aria-practices/examples/), and
          - [MDN Intro to Color and A11y](https://developer.mozilla.org/en-US/docs/Web/Accessibility/Understanding_Colors_and_Luminance).

        **ðŸ‘‰ If a requirement is not applicable, mark it as checked. ðŸ‘ˆ**
      options:
        - label: >-
            **Color**:
            Color should not be the primary visual means of communicating information
            ([1.4.1](https://www.w3.org/WAI/WCAG22/Understanding/use-of-color.html))
          required: true
        - label: >-
            **Content or microcopy**
            Text in any language should be clear, meaningful, structured, etc.
          required: true
        - label: >-
            **Text Contrast**:
            Small text should have a contrast ratio of at least 4.5:1
            ([1.4.3](https://www.w3.org/WAI/WCAG22/Understanding/contrast-minimum.html))
          required: true
        - label: >-
            **Text Contrast**:
            Large text should have a contrast ratio of at least 3:1
            ([1.4.3](https://www.w3.org/WAI/WCAG22/Understanding/contrast-minimum.html))
          required: true
        - label: >-
            **Resizable Text**:
            Text should have the ability to be **resized** up to 200% without losing content or functionality (for example, horizontal scrolling)
            ([1.4.4](https://www.w3.org/WAI/WCAG22/Understanding/resize-text.html))
          required: true
        - label: >-
            **Alt Text**:
            Non-text elements should have concise **text descriptions** (a.k.a. **alt text**)
            ([1.1.1](https://www.w3.org/WAI/WCAG22/Understanding/non-text-content.html))
          required: true
        - label: >-
            **Keyboard**:
            Descriptions of how interactive elements behave when a key is pressed should be included
            ([2.1.1](https://www.w3.org/WAI/WCAG22/Understanding/keyboard.html))
            (for example, the Esc key closes a navigation menu)
          required: true
        - label: >-
            **Focus Appearance**:
            Colors between **focused states** should have a contrast ratio of at least 3.1
            ([2.4.11](https://www.w3.org/WAI/WCAG22/Understanding/focus-appearance-minimum.html))
          required: true
        - label: >-
            **Focus Appearance**:
            Borders should have a thickness of at least 2px
            ([2.4.11](https://www.w3.org/WAI/WCAG22/Understanding/focus-appearance-minimum.html))
          required: true
        - label: >-
            **Focus Order**:
            It should be logical how a user moves focus from one element to another
            ([2.4.3](https://www.w3.org/WAI/WCAG22/Understanding/focus-order.html))
          required: true
        - label: >-
            **Motion Animation**:
            Controls should be available to disable an animation triggered by an interaction
            ([2.3.3](https://www.w3.org/WAI/WCAG22/Understanding/animation-from-interactions.html))
          required: true
        - label: >-
            **Mobile**:
            Interactive elements should be reachable for touching, scrolling, or dismissing
          required: true

  - type: checkboxes
    id: mvp
    attributes:
      label: MVP Requirements
      description: >-
        At minimum, these specs should always be included for a component of any size.
        If you have more time to include more specs, please do so.
      options:
        - label: Correct styles and neccessary sizes, orientations, variants, spacers, and themes
          required: true
        - label: Responsive sizes and page layout examples placed on screenshots
          required: true
        - label: Functionality guidance and static animation frames or prototypes with motion
          required: true
        - label: Interaction and Selected states
          required: true
        - label: Alignment options, character counts, and necessary translations
          required: true
        - label: Clear and structured content, acceptable text contrast, and logical keyboard events
          required: true

  - type: checkboxes
    id: appearance
    attributes:
      label: Appearance
      description: >-
        The properties and visual language that define your component, see examples
        [here](https://xd.adobe.com/view/98f8d0b4-12e1-4377-b92b-e3d5d226eda1-cdab/?fullscreen)
      options:
        - label: Foundations are represented as tokens or variables (border, color, font, opacity, spacing, shadow, etc.) [Consult with the assigned developer to ensure you are both working with the correct styles and values]
          required: false
        - label: Foundations are applied to elements (backgrounds, buttons, fields, icons, links, etc.)
          required: false
        - label: Size (Standard, Compact, Mini, etc.)
          required: false
        - label: Orientations (horizontal or vertical)
          required: false
        - label: Position in relation to trigger (top, right, bottom, left, etc.)
          required: false
        - label: Hierarchy and decoration variants (Primary and Secondary CTAs, Earth and Wind variant Tabs, etc.)
          required: false
        - label: Decorations (borders, logos, UI icons, etc.)
          required: false
        - label: Desktop and mobile scale spacers (visit the [Spacing](https://ux.redhat.com/foundations/spacing/) and [Typography](https://ux.redhat.com/foundations/typography/) pages for examples)
          required: false
        - label: Themes (light, dark, high-contrast, custom color, etc.)
          required: false
        - label: Edge cases or limitations (accessibility, brand extensions, horizontal scrolling, missing images, etc.) [It is not required to include all of these specs, but keep them in mind]
          required: false
        - label: Fallback (if a browser does not support the original design) [Consult with the assigned developer first to determine if this is necessary to design]
          required: false

  - type: checkboxes
    id: page-layout
    attributes:
      label: Page Layout
      description: >-
        How your component appears in a layout on any screen size, see examples
        [here](https://xd.adobe.com/view/d3461fa3-17a8-4985-9b70-cdaa1db000a9-8615/?fullscreen)
      options:
        - label: Location on page (navigation, hero, band, card, footer, etc.)
          required: false
        - label: Grid (fixed width inside the grid, full-width or outside of the grid)
          required: false
        - label: Position on page (inline, overlay, toast)
          required: false
        - label: Stacking (space in between each instance if your component is meant to be repeatable)
          required: false
        - label: Responsive screen sizes (desktop, tablet, mobile, etc.)
          required: false
        - label: Content degradation (becomes hidden, reduces in size, truncates due to length, etc.)
          required: false
        - label: Scrolling behavior (fixed, sticky, content scrolls inside; visit [this page](https://www.geeksforgeeks.org/what-is-the-difference-between-positionsticky-and-positionfixed-in-css/) for examples)
          required: false

  - type: checkboxes
    id: behaviour
    attributes:
      label: Behavior
      description: >-
        How your component behaves or how it is used, see examples
        [here](https://xd.adobe.com/view/78ac5a03-9b48-4b46-afc3-dc9d329d3c75-2dff/?fullscreen)
      options:
        - label: Functionality (collapse, expand, navigate, play, submit, etc.)
          required: false
        - label: Animation or motion (hover, jump, slide, stack, toggle, etc.)
          required: false
        - label: Overflow (when content exceeds a defined boundary; visit the [Tabs](https://ux.redhat.com/elements/tabs/) page for examples)
          required: false
        - label: Other effects (blur, cover, shuffle, etc.)
          required: false

  - type: checkboxes
    id: states
    attributes:
      label: States
      description: >-
        Visual formats used to communicate the status of your component, see examples
        [here](https://xd.adobe.com/view/4480e38b-7eba-427e-b6e4-5ed379361d13-11d3/?fullscreen)
      options:
        - label: Interaction (default, focus, hover, active, disabled, dragged, etc.)
          required: false
        - label: Selected (if a user needs to distinguish between active or inactive content)
          required: false
        - label: Steps (if a user needs to move through steps toward the completion of a task)
          required: false
        - label: Error (if a user needs to complete a task or fix an issue before proceeding)
          required: false
        - label: Severity (if a range of status options need to be communicated to a user)
          required: false
        - label: Boolean (if on or off are the only actions available to a user, literally or semantically)
          required: false
        - label: Skeleton loading (if a component might load slower for a user than expected)
          required: false
        - label: Empty (if data cannot be displayed without user input; visit [this page](https://www.patternfly.org/v4/components/empty-state) for examples)
          required: false
        - label: Fallback (if JavaScript is disabled or it fails to load) [Consult with the assigned developer first to determine if this is necessary to design]
          required: false

  - type: checkboxes
    id: content
    attributes:
      label: Content
      options:
        - label: Alignment options (left, center, or both)
          required: false
        - label: Character counts (minimum and maximum)
          required: false
        - label: Links (which links are inline, external, redirects, etc.)
          required: false
        - label: Translations (German, Japanese, Hebrew, etc.)
          required: false
        - label: Edge cases or limitations (overflow, truncate, wrap, etc.) [It is not required to include all of these specs, but keep them in mind]
          required: false
