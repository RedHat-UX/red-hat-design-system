{"version":3,"file":"rh-tag.js","sourceRoot":"","sources":["rh-tag.ts"],"names":[],"mappings":";AAAA,OAAO,EAAE,IAAI,EAAE,MAAM,KAAK,CAAC;AAC3B,OAAO,EAAE,aAAa,EAAE,QAAQ,EAAE,MAAM,mBAAmB,CAAC;AAE5D,OAAO,EAAE,SAAS,EAAE,MAAM,oCAAoC,CAAC;AAE/D,OAAO,sBAAsB,CAAC;OAEvB,MAAM;AAYb;;;;;;;;;;;;;;;GAeG;AAEI,IAAM,KAAK,GAAX,MAAM,KAAM,SAAQ,SAAS;IASlC;;;OAGG;IACO,iBAAiB;QACzB,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAA;0BACP,CAAC,IAAI,CAAC,IAAI,UAAU,IAAI,CAAC,IAAI;KAClD,CAAC;IACJ,CAAC;IAES,YAAY;QACpB,OAAO,IAAI,CAAA,EAAE,CAAC;IAChB,CAAC;;AApBe,YAAM,GAAG,CAAC,MAAM,CAAC,CAAC;AAEtB;IAAX,QAAQ,EAAE;mCAAe;AAEd;IAAX,QAAQ,EAAE;sCAAoB;AAEnB;IAAX,QAAQ,EAAE;oCAAkB;AAPlB,KAAK;IADjB,aAAa,CAAC,QAAQ,CAAC;GACX,KAAK,CAsBjB;SAtBY,KAAK","sourcesContent":["import { html } from 'lit';\nimport { customElement, property } from 'lit/decorators.js';\n\nimport { BaseLabel } from '@patternfly/pfe-label/BaseLabel.js';\n\nimport '@patternfly/pfe-icon';\n\nimport styles from './rh-tag.css';\n\nexport type TagColor = (\n  | 'blue'\n  | 'cyan'\n  | 'green'\n  | 'orange'\n  | 'purple'\n  | 'red'\n  | 'grey'\n)\n\n/**\n * Tooltip\n * @slot icon - Contains the labels's icon, e.g. web-icon-alert-success.\n * @slot -  Must contain the text for the label.\n *\n * @csspart icon - container for the label icon\n *\n * @cssprop {<length>} --rh-tag-padding-block-start   {@default `4px`}\n * @cssprop {<length>} --rh-tag-padding-inline-end    {@default `8px`}\n * @cssprop {<length>} --rh-tag-padding-block-end     {@default `4px`}\n * @cssprop {<length>} --rh-tag-padding-inline-start  {@default `8px`}\n *\n * @cssprop {<length>} --rh-tag-margin-inline-end     {@default `4px`}\n *\n *\n */\n@customElement('rh-tag')\nexport class RhTag extends BaseLabel {\n  static readonly styles = [styles];\n\n  @property() icon?: string;\n\n  @property() variant?: 'filled';\n\n  @property() color?: TagColor;\n\n  /**\n   * RhIcon does not yet exist, so we are using pfe-icon until available\n   * <rh-icon ?hidden=${!this.icon} icon=${this.icon} set=\"${this.set}\" size=\"sm\"></rh-icon>\n   */\n  protected renderDefaultIcon() {\n    return !this.icon ? '' : html`\n      <pfe-icon ?hidden=${!this.icon} icon=\"${this.icon}\"></pfe-icon>\n    `;\n  }\n\n  protected renderSuffix() {\n    return html``;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'rh-tag': RhTag;\n  }\n}\n"]}