{"version":3,"file":"rh-secondary-nav-dropdown.js","sourceRoot":"","sources":["rh-secondary-nav-dropdown.ts"],"names":[],"mappings":"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","sourcesContent":["import { html, LitElement } from 'lit';\nimport { customElement, state, query, property } from 'lit/decorators.js';\nimport { classMap } from 'lit/directives/class-map.js';\n\nimport { ComposedEvent } from '@patternfly/pfe-core';\nimport { Logger } from '@patternfly/pfe-core/controllers/logger.js';\nimport { bound, observed } from '@patternfly/pfe-core/decorators.js';\nimport { SlotController } from '@patternfly/pfe-core/controllers/slot-controller.js';\nimport { getRandomId } from '@patternfly/pfe-core/functions/random.js';\n\nimport { colorContextProvider } from '../../lib/context/color.js';\n\nimport { RhSecondaryNavMenu } from './rh-secondary-nav-menu.js';\n\nexport class SecondaryNavDropdownExpandEvent extends ComposedEvent {\n  constructor(\n    public expanded: boolean,\n    public toggle: RhSecondaryNavDropdown,\n  ) {\n    super('expand-request');\n  }\n}\n\n// There is possibility of abstracting this component to a more 'generic' standalone component\n// in the future. Styles or functionality that are specific to rh-secondary-nav are commented\n// on as such for any future abstraction.\n\nimport styles from './rh-secondary-nav-dropdown.css';\n\n/**\n * @summary A wrapper component to upgrade a top level nav link to include dropdown functionality\n *\n * @slot link   - Link for dropdown, expects `<a>`\n * @slot menu   - Menu for dropdown, expects `<rh-secondary-nav-menu>`\n *\n * @fires { SecondaryNavDropdownExpandEvent } change - Fires when a dropdown is clicked\n**/\n@customElement('rh-secondary-nav-dropdown')\nexport class RhSecondaryNavDropdown extends LitElement {\n  static readonly styles = [styles];\n\n  #slots = new SlotController(this, { slots: ['link', 'menu'] });\n\n  #logger = new Logger(this);\n\n  @query('#container') _container?: HTMLElement;\n\n  @observed\n  @state() expanded = false;\n\n  @colorContextProvider()\n  @property({ reflect: true, attribute: 'color-palette' }) colorPalette = 'lighter';\n\n  connectedCallback(): void {\n    super.connectedCallback();\n\n    this.id ||= getRandomId('rh-secondary-nav-dropdown');\n\n    const [link] = this.#slots.getSlotted<HTMLElement>('link');\n    const [menu] = this.#slots.getSlotted<HTMLElement>('menu');\n    if (link === undefined) {\n      this.#logger.warn('[rh-secondary-nav-dropdown][slot=\"link\"] expects a slotted <a> tag');\n      return;\n    }\n    if (menu === undefined) {\n      this.#logger.warn('[rh-secondary-nav-dropdown][slot=\"menu\"] expects a slotted <rh-secondary-nav-menu> tag');\n      return;\n    }\n\n    link.setAttribute('role', 'button');\n    link.setAttribute('aria-expanded', 'false');\n    link.setAttribute('aria-controls', menu.id);\n    link.addEventListener('click', this._clickHandler);\n  }\n\n  render() {\n    const classes = { 'expanded': this.expanded };\n\n    return html`\n      <div id=\"container\" part=\"container\" class=\"${classMap(classes)}\">\n        <slot name=\"link\"></slot>\n        <slot name=\"menu\"></slot>\n      </div>\n    `;\n  }\n\n  /**\n   * When expanded property changes, check the new value, if true\n   * run the `#open()` method, if false run the `#close()` method.\n   * @param oldVal {string} - Boolean value in string form\n   * @param newVal {string} - Boolean value in string form\n   * @returns {void}\n   */\n  protected _expandedChanged(oldVal?: 'false' | 'true', newVal?: 'false' | 'true'): void {\n    if (newVal === oldVal) {\n      return;\n    }\n    newVal ? this.#open() : this.#close();\n  }\n\n  /**\n   * When a dropdown is clicked set expanded to the opposite of the expanded property\n   * and then dispatch that value in a SecondaryNavDropdownExpandEvent\n   * @param event {MouseEvent}\n   */\n  @bound\n  private _clickHandler(event: MouseEvent) {\n    event.preventDefault();\n    this.expanded = !this.expanded;\n    // trigger change event which evokes the mutation on this.expanded\n    this.dispatchEvent(new SecondaryNavDropdownExpandEvent(this.expanded, this));\n  }\n\n  /**\n   * Sets or removes attributes needed to open a dropdown menu\n   * @returns {void}\n   */\n  #open(): void {\n    const link = this.#slots.getSlotted('link').find(child => child instanceof HTMLAnchorElement);\n    link?.setAttribute('aria-expanded', 'true');\n    // menu as a RhSecondaryNavMenu in the slotted child is specific to rh-secondary-nav.\n    // If this component is abstracted to a standalone component. The RhSecondaryNavMenu\n    // could possibly become a sub component of the abstraction instead.\n    const menu = this.#slots.getSlotted('menu').find(child => child instanceof RhSecondaryNavMenu) as RhSecondaryNavMenu;\n    menu.visible = true;\n  }\n\n  /**\n   * Sets or removes attributes needed to close a dropdown menu\n   * @returns {void}\n   */\n  #close(): void {\n    const link = this.#slots.getSlotted('link').find(child => child instanceof HTMLAnchorElement);\n    link?.setAttribute('aria-expanded', 'false');\n    // Same as comment in #open()\n    // The RhSecondaryNavMenu could possibly become a sub component of the abstraction instead.\n    const menu = this.#slots.getSlotted('menu').find(child => child instanceof RhSecondaryNavMenu) as RhSecondaryNavMenu;\n    menu.visible = false;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'rh-secondary-nav-dropdown': RhSecondaryNavDropdown;\n  }\n}\n"]}