{"version":3,"file":"rh-footer-social-link.js","sourceRoot":"","sources":["rh-footer-social-link.ts"],"names":[],"mappings":";AAAA,OAAO,EAAE,UAAU,EAAE,IAAI,EAAE,MAAM,KAAK,CAAC;AACvC,OAAO,EAAE,aAAa,EAAE,QAAQ,EAAE,MAAM,mBAAmB,CAAC;AAC5D,OAAO,EAAE,MAAM,EAAE,MAAM,4CAA4C,CAAC;OAE7D,KAAK;AAGL,IAAM,kBAAkB,GAAxB,MAAM,kBAAmB,SAAQ,UAAU;IAOhD;QACE,KAAK,EAAE,CAAC;QALF,WAAM,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,CAAC;QAEtB,SAAI,GAAkB,IAAI,CAAC;QAIrC,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC;IACxC,CAAC;IAED,MAAM;QACJ,OAAO,IAAI,CAAA,eAAe,CAAC;IAC7B,CAAC;IAED,OAAO;QACL,IAAI,CAAC,cAAc,EAAE,CAAC;IACxB,CAAC;IAEO,cAAc;QACpB,MAAM,MAAM,GAAG,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;QACvC,IAAI,MAAM,EAAE;YACV,MAAM,MAAM,GAAG,MAAM,CAAC,SAAS,CAAC,IAAI,CAAY,CAAC;YACjD,+BAA+B;YAC/B,MAAM,CAAC,gBAAgB,CAAC,aAAa,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC;YAChE,MAAM,CAAC,SAAS,GAAG,mBAAmB,IAAI,CAAC,IAAI,KAAK,MAAM,CAAC,SAAS,aAAa,CAAC;YAClF,oBAAoB;YACpB,oEAAoE;YACpE,MAAM,CAAC,YAAY,CAAC,YAAY,EAAE,MAAM,CAAC,WAAW,IAAI,EAAE,CAAC,CAAC;YAC5D,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,YAAY,CAAC,EAAE;gBACtC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,8BAA8B,CAAC,CAAC;aAClD;YACD,IAAI,MAAM,CAAC,UAAU,EAAE;gBACrB,MAAM,CAAC,UAAU,CAAC,YAAY,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;aAChD;SACF;IACH,CAAC;;AApCe,yBAAM,GAAG,KAAK,CAAC;AAInB;IAAX,QAAQ,EAAE;gDAA4B;AAL5B,kBAAkB;IAD9B,aAAa,CAAC,uBAAuB,CAAC;GAC1B,kBAAkB,CAsC9B;SAtCY,kBAAkB","sourcesContent":["import { LitElement, html } from 'lit';\nimport { customElement, property } from 'lit/decorators.js';\nimport { Logger } from '@patternfly/pfe-core/controllers/logger.js';\n\nimport style from './rh-footer-social-link.css';\n\n@customElement('rh-footer-social-link')\nexport class RhFooterSocialLink extends LitElement {\n  static readonly styles = style;\n\n  private logger = new Logger(this);\n\n  @property() icon: string | null = null;\n\n  constructor() {\n    super();\n    this.setAttribute('role', 'listitem');\n  }\n\n  render() {\n    return html`<slot></slot>`;\n  }\n\n  updated() {\n    this.updateLightdom();\n  }\n\n  private updateLightdom() {\n    const oldDiv = this.querySelector('a');\n    if (oldDiv) {\n      const newDiv = oldDiv.cloneNode(true) as Element;\n      // remove the _rendered content\n      newDiv.querySelectorAll('[_rendered]').forEach(i => i.remove());\n      newDiv.innerHTML = `<pfe-icon icon=\"${this.icon}\">${newDiv.innerHTML}</pfe-icon>`;\n      // add a11y settings\n      /** @todo add logging that warns the user there is an empty label */\n      newDiv.setAttribute('aria-label', newDiv.textContent || '');\n      if (!newDiv.getAttribute('aria-label')) {\n        this.logger.warn('Must add aria-label to links');\n      }\n      if (oldDiv.parentNode) {\n        oldDiv.parentNode.replaceChild(newDiv, oldDiv);\n      }\n    }\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'rh-footer-social-link': RhFooterSocialLink;\n  }\n}\n"]}