{"version":3,"file":"rh-dialog.js","sourceRoot":"","sources":["rh-dialog.ts"],"names":[],"mappings":";;AAAA,OAAO,EAAE,IAAI,EAAE,MAAM,KAAK,CAAC;AAC3B,OAAO,EAAE,aAAa,EAAE,QAAQ,EAAE,MAAM,mBAAmB,CAAC;AAE5D,OAAO,EAAE,QAAQ,EAAE,MAAM,6BAA6B,CAAC;AACvD,OAAO,EAAE,QAAQ,EAAE,MAAM,6CAA6C,CAAC;AACvE,OAAO,EAAE,QAAQ,EAAE,MAAM,uBAAuB,CAAC;AACjD,OAAO,EAAE,oBAAoB,EAAE,MAAM,mCAAmC,CAAC;OAElE,MAAM;AAEb;;GAEG;AAEH,IAAa,QAAQ,GAArB,MAAa,QAAS,SAAQ,QAAQ;IAAtC;;QAOE,+BAAc,IAAI,oBAAoB,CAAC,IAAI,CAAC,EAAC;QAKD,SAAI,GAAG,KAAK,CAAC;IAsB3D,CAAC;IApBC,MAAM;QACJ,MAAM,EAAE,MAAM,EAAE,GAAG,uBAAA,IAAI,4BAAY,CAAC;QACpC,OAAO,IAAI,CAAA;qCACsB,QAAQ,CAAC,EAAE,MAAM,EAAE,CAAC;UAC/C,KAAK,CAAC,MAAM,EAAE;;KAEnB,CAAC;IACJ,CAAC;IAES,KAAK,CAAC,YAAY,CAAC,QAAkB,EAAE,QAAkB;QACjE,KAAK,CAAC,YAAY,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;QACvC,IAAI,IAAI,CAAC,IAAI,KAAK,OAAO,IAAI,QAAQ,KAAK,IAAI,IAAI,QAAQ,KAAK,KAAK,EAAE;YACpE,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,EAAE,KAAK,EAAE,EAAE,CAAC;YACvC,MAAM,MAAM,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;YAC5C,IAAI,MAAM,EAAE,GAAG,CAAC,KAAK,CAAC,SAAS,CAAC,EAAE;gBAChC,MAAM,EAAE,UAAU,EAAE,GAAG,MAAM,MAAM,CAAC,aAAa,CAAC,CAAC;gBACnD,UAAU,CAAC,MAAM,CAAC,CAAC;aACpB;SACF;IACH,CAAC;CACF,CAAA;;AAjCiB,gBAAO,GAAG,aAAc,CAAA;AAExB,eAAM,GAAG,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,MAAM,CAAE,CAAA;AAErC,4BAAmB,GAAG,IAAK,CAAA;AAIf;IAA5B,QAAQ,CAAC,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;sCAAgB;AAGA;IAD3C,QAAQ;IACR,QAAQ,CAAC,EAAE,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;sCAAc;AAZ9C,QAAQ;IADpB,aAAa,CAAC,WAAW,CAAC;GACd,QAAQ,CAkCpB;SAlCY,QAAQ","sourcesContent":["import { html } from 'lit';\nimport { customElement, property } from 'lit/decorators.js';\n\nimport { classMap } from 'lit/directives/class-map.js';\nimport { observed } from '@patternfly/pfe-core/decorators/observed.js';\nimport { PfeModal } from '@patternfly/pfe-modal';\nimport { ScreenSizeController } from '../../lib/ScreenSizeController.js';\n\nimport styles from './rh-dialog.css';\n\n/**\n * Dialog\n */\n@customElement('rh-dialog')\nexport class RhDialog extends PfeModal {\n  static readonly version = '{{version}}';\n\n  static readonly styles = [...PfeModal.styles, styles];\n\n  protected static closeOnOutsideClick = true;\n\n  #screenSize = new ScreenSizeController(this);\n\n  @property({ reflect: true }) type?: 'video';\n\n  @observed\n  @property({ reflect: true, type: Boolean }) open = false;\n\n  render() {\n    const { mobile } = this.#screenSize;\n    return html`\n      <div id=\"rhds-wrapper\" class=${classMap({ mobile })}>\n        ${super.render()}\n      </div>\n    `;\n  }\n\n  protected async _openChanged(oldValue?: boolean, newValue?: boolean): Promise<void> {\n    super._openChanged(oldValue, newValue);\n    if (this.type === 'video' && oldValue === true && newValue === false) {\n      this.querySelector('video')?.pause?.();\n      const iframe = this.querySelector('iframe');\n      if (iframe?.src.match(/youtube/)) {\n        const { pauseVideo } = await import('./yt-api.js');\n        pauseVideo(iframe);\n      }\n    }\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'rh-dialog': RhDialog;\n  }\n}\n"]}