snippet rhanimationspeed
  var(--rh-animation-speed${1:, 0.3s})$2
snippet rhanimationtiming
  var(--rh-animation-timing${1:, cubic-bezier(0.465, 0.183, 0.153, 0.946)})$2
# 1px border width; Example: Secondary CTA or Button
snippet rhborderwidthsm
  var(--rh-border-width-sm${1:, 1px})$2
# 2px border width: Example: Alert
snippet rhborderwidthmd
  var(--rh-border-width-md${1:, 2px})$2
# 3px border width: Example: Expanded Accordion panel
snippet rhborderwidthlg
  var(--rh-border-width-lg${1:, 3px})$2
# Border radius reset
snippet rhborderradiussharp
  var(--rh-border-radius-sharp${1:, 0.0px})$2
# 3px border radius; Example: Card
snippet rhborderradiusdefault
  var(--rh-border-radius-default${1:, 3px})$2
# Pill border radius; Example: Label
snippet rhborderradiuspill
  var(--rh-border-radius-pill${1:, 64px})$2
# Mobile portrait (max-width)
snippet rhbreakpoint2xsmax
  var(--rh-breakpoint-2xs-max${1:, 575px})$2
# Mobile portrait
snippet rhbreakpointxs
  var(--rh-breakpoint-xs${1:, 576px})$2
# Mobile landscape (max-width)
snippet rhbreakpointxsmax
  var(--rh-breakpoint-xs-max${1:, 767px})$2
# Mobile landscape
snippet rhbreakpointsm
  var(--rh-breakpoint-sm${1:, 768px})$2
# Mobile landscape (max-width)
snippet rhbreakpointsmmax
  var(--rh-breakpoint-sm-max${1:, 991px})$2
# Tablet portrait
snippet rhbreakpointmd
  var(--rh-breakpoint-md${1:, 992px})$2
# Tablet portrait (max-width)
snippet rhbreakpointmdmax
  var(--rh-breakpoint-md-max${1:, 1199px})$2
# Tablet landscape
snippet rhbreakpointlg
  var(--rh-breakpoint-lg${1:, 1200px})$2
# Tablet landscape (max-width)
snippet rhbreakpointlgmax
  var(--rh-breakpoint-lg-max${1:, 1439px})$2
# Desktop small
snippet rhbreakpointxl
  var(--rh-breakpoint-xl${1:, 1440px})$2
# Desktop small (max-width)
snippet rhbreakpointxlmax
  var(--rh-breakpoint-xl-max${1:, 1679px})$2
# Desktop large
snippet rhbreakpoint2xl
  var(--rh-breakpoint-2xl${1:, 1680px})$2
# Responsive `accent-base` color value. Typically read only - use a themable container e.g. `<rh-surface>` Resolves to `--rh-color-accent-base-on-light` on a themable container with a light color palette and `--rh-color-accent-base-on-dark` on a themable container with a dark color palette.
snippet rhcoloraccentbase
  var(--rh-color-accent-base)$2
# Inline link (light theme)
snippet rhcoloraccentbaseonlight
  var(--rh-color-accent-base-on-light${1:, #0066cc})$2
snippet 0066cc
  var(--rh-color-accent-base-on-light${1:, #0066cc})$2
# Inline link (dark theme)
snippet rhcoloraccentbaseondark
  var(--rh-color-accent-base-on-dark${1:, #92c5f9})$2
snippet 92c5f9
  var(--rh-color-accent-base-on-dark${1:, #92c5f9})$2
# Responsive `accent-brand` color value. Typically read only - use a themable container e.g. `<rh-surface>`. Resolves to `--rh-color-accent-brand-on-light` on a themable container with a light color palette and `--rh-color-accent-brand-on-dark` on a themable container with a dark color palette.
snippet rhcoloraccentbrand
  var(--rh-color-accent-brand)$2
# Brand red (light theme)
snippet rhcoloraccentbrandonlight
  var(--rh-color-accent-brand-on-light${1:, #ee0000})$2
snippet ee0000
  var(--rh-color-accent-brand-on-light${1:, #ee0000})$2
# Brand red (dark theme)
snippet rhcoloraccentbrandondark
  var(--rh-color-accent-brand-on-dark${1:, #ee0000})$2
snippet ee0000
  var(--rh-color-accent-brand-on-dark${1:, #ee0000})$2
# Responsive `border-strong` color value. Typically read only - use a themable container e.g. `<rh-surface>` Resolves to `--rh-color-border-strong-on-light` on a themable container with a light color palette and `--rh-color-border-strong-on-dark` on a themable container with a dark color palette
snippet rhcolorborderstrong
  var(--rh-color-border-strong)$2
# Strong border color (light theme)
snippet rhcolorborderstrongonlight
  var(--rh-color-border-strong-on-light${1:, #151515})$2
snippet 151515
  var(--rh-color-border-strong-on-light${1:, #151515})$2
# Strong border color (dark theme)
snippet rhcolorborderstrongondark
  var(--rh-color-border-strong-on-dark${1:, #ffffff})$2
snippet ffffff
  var(--rh-color-border-strong-on-dark${1:, #ffffff})$2
# Responsive `border-subtle` color value. Typically read-only - use a themable container, e.g. `<rh-surface>`. Resolves to `--rh-color-border-subtle-on-light` on a themable container with a light color palette and `--rh-color-border-subtle-on-dark` on a themable container with a dark color palette.
snippet rhcolorbordersubtle
  var(--rh-color-border-subtle)$2
# Subtle border color (light theme)
snippet rhcolorbordersubtleonlight
  var(--rh-color-border-subtle-on-light${1:, #c7c7c7})$2
snippet c7c7c7
  var(--rh-color-border-subtle-on-light${1:, #c7c7c7})$2
# Subtle border color (dark theme)
snippet rhcolorbordersubtleondark
  var(--rh-color-border-subtle-on-dark${1:, #707070})$2
snippet 707070
  var(--rh-color-border-subtle-on-dark${1:, #707070})$2
# Responsive `border-interactive` color value. Typically read-only - use a themable container, e.g. `<rh-surface>`. Resolves to `--rh-color-border-interactive-on-light` on a themable container with a light color palette and `--rh-color-border-interactive-on-dark` on a themable container with a dark color palette.
snippet rhcolorborderinteractive
  var(--rh-color-border-interactive)$2
# Interactive border color (light theme)
snippet rhcolorborderinteractiveonlight
  var(--rh-color-border-interactive-on-light${1:, #0066cc})$2
snippet 0066cc
  var(--rh-color-border-interactive-on-light${1:, #0066cc})$2
# Interactive border color (dark theme)
snippet rhcolorborderinteractiveondark
  var(--rh-color-border-interactive-on-dark${1:, #92c5f9})$2
snippet 92c5f9
  var(--rh-color-border-interactive-on-dark${1:, #92c5f9})$2
# Responsive `border-destructive` color value. Typically read-only - use a themable container, e.g. `<rh-surface>`. Resolves to `--rh-color-border-destructive-on-light` on a themable container with a light color palette and `--rh-color-border-destructive-on-dark` on a themable container with a dark color palette.
snippet rhcolorborderdestructive
  var(--rh-color-border-destructive)$2
# Destructive border color (light theme)
snippet rhcolorborderdestructiveonlight
  var(--rh-color-border-destructive-on-light${1:, #b1380b})$2
snippet b1380b
  var(--rh-color-border-destructive-on-light${1:, #b1380b})$2
# Destructive border color (dark theme)
snippet rhcolorborderdestructiveondark
  var(--rh-color-border-destructive-on-dark${1:, #f0561d})$2
snippet f0561d
  var(--rh-color-border-destructive-on-dark${1:, #f0561d})$2
# Responsive `border-danger` color value. Typically read-only - use a themable container, e.g. `<rh-surface>`. Resolves to `--rh-color-border-danger-on-light` on a themable container with a light color palette and `--rh-color-border-danger-on-dark` on a themable container with a dark color palette.
snippet rhcolorborderstatusdanger
  var(--rh-color-border-status-danger)$2
# Danger border color (light theme)
snippet rhcolorborderstatusdangeronlight
  var(--rh-color-border-status-danger-on-light${1:, #b1380b})$2
snippet b1380b
  var(--rh-color-border-status-danger-on-light${1:, #b1380b})$2
# Danger border color (dark theme)
snippet rhcolorborderstatusdangerondark
  var(--rh-color-border-status-danger-on-dark${1:, #f0561d})$2
snippet f0561d
  var(--rh-color-border-status-danger-on-dark${1:, #f0561d})$2
# Responsive `border-caution` color value. Typically read-only - use a themable container, e.g. `<rh-surface>`. Resolves to `--rh-color-border-caution-on-light` on a themable container with a light color palette and `--rh-color-border-caution-on-dark` on a themable container with a dark color palette.
snippet rhcolorborderstatuscaution
  var(--rh-color-border-status-caution)$2
# Caution border color (light theme)
snippet rhcolorborderstatuscautiononlight
  var(--rh-color-border-status-caution-on-light${1:, #ca6c0f})$2
snippet ca6c0f
  var(--rh-color-border-status-caution-on-light${1:, #ca6c0f})$2
# Caution border color (dark theme)
snippet rhcolorborderstatuscautionondark
  var(--rh-color-border-status-caution-on-dark${1:, #f5921b})$2
snippet f5921b
  var(--rh-color-border-status-caution-on-dark${1:, #f5921b})$2
# Responsive `border-warning` color value. Typically read-only - use a themable container, e.g. `<rh-surface>`. Resolves to `--rh-color-border-warning-on-light` on a themable container with a light color palette and `--rh-color-border-warning-on-dark` on a themable container with a dark color palette.
snippet rhcolorborderstatuswarning
  var(--rh-color-border-status-warning)$2
# Warning border color (light theme)
snippet rhcolorborderstatuswarningonlight
  var(--rh-color-border-status-warning-on-light${1:, #dca614})$2
snippet dca614
  var(--rh-color-border-status-warning-on-light${1:, #dca614})$2
# Warning border color (dark theme)
snippet rhcolorborderstatuswarningondark
  var(--rh-color-border-status-warning-on-dark${1:, #ffcc17})$2
snippet ffcc17
  var(--rh-color-border-status-warning-on-dark${1:, #ffcc17})$2
# Responsive `border-neutral` color value. Typically read-only - use a themable container, e.g. `<rh-surface>`. Resolves to `--rh-color-border-neutral-on-light` on a themable container with a light color palette and `--rh-color-border-neutral-on-dark` on a themable container with a dark color palette.
snippet rhcolorborderstatusneutral
  var(--rh-color-border-status-neutral)$2
# Neutral border color (light theme)
snippet rhcolorborderstatusneutralonlight
  var(--rh-color-border-status-neutral-on-light${1:, #4d4d4d})$2
snippet 4d4d4d
  var(--rh-color-border-status-neutral-on-light${1:, #4d4d4d})$2
# Neutral border color (dark theme)
snippet rhcolorborderstatusneutralondark
  var(--rh-color-border-status-neutral-on-dark${1:, #c7c7c7})$2
snippet c7c7c7
  var(--rh-color-border-status-neutral-on-dark${1:, #c7c7c7})$2
# Responsive `border-info` color value. Typically read-only - use a themable container, e.g. `<rh-surface>`. Resolves to `--rh-color-border-info-on-light` on a themable container with a light color palette and `--rh-color-border-info-on-dark` on a themable container with a dark color palette.
snippet rhcolorborderstatusinfo
  var(--rh-color-border-status-info)$2
# Info border color (light theme)
snippet rhcolorborderstatusinfoonlight
  var(--rh-color-border-status-info-on-light${1:, #5e40be})$2
snippet 5e40be
  var(--rh-color-border-status-info-on-light${1:, #5e40be})$2
# Info border color (dark theme)
snippet rhcolorborderstatusinfoondark
  var(--rh-color-border-status-info-on-dark${1:, #b6a6e9})$2
snippet b6a6e9
  var(--rh-color-border-status-info-on-dark${1:, #b6a6e9})$2
# Responsive `border-success` color value. Typically read-only - use a themable container, e.g. `<rh-surface>`. Resolves to `--rh-color-border-success-on-light` on a themable container with a light color palette and `--rh-color-border-success-on-dark` on a themable container with a dark color palette.
snippet rhcolorborderstatussuccess
  var(--rh-color-border-status-success)$2
# Success border color (light theme)
snippet rhcolorborderstatussuccessonlight
  var(--rh-color-border-status-success-on-light${1:, #3d7317})$2
snippet 3d7317
  var(--rh-color-border-status-success-on-light${1:, #3d7317})$2
# Success border color (dark theme)
snippet rhcolorborderstatussuccessondark
  var(--rh-color-border-status-success-on-dark${1:, #87bb62})$2
snippet 87bb62
  var(--rh-color-border-status-success-on-dark${1:, #87bb62})$2
# Responsive `brand-red` color value. Typically read only - use a themable container e.g. `<rh-surface>` Resolves to `--rh-color-brand-red-on-light` on a themable container with a light color palette and `--rh-color-brand-red-on-dark` on a themable container with a dark color palette.
snippet rhcolorbrandred
  var(--rh-color-brand-red)$2
# Brand red on light background
snippet rhcolorbrandredonlight
  var(--rh-color-brand-red-on-light${1:, #ee0000})$2
snippet ee0000
  var(--rh-color-brand-red-on-light${1:, #ee0000})$2
# Brand red on dark background
snippet rhcolorbrandredondark
  var(--rh-color-brand-red-on-dark${1:, #ee0000})$2
snippet ee0000
  var(--rh-color-brand-red-on-dark${1:, #ee0000})$2
# Lightest brand red
snippet rhcolorbrandredlightest
  var(--rh-color-brand-red-lightest${1:, #fbc5c5})$2
snippet fbc5c5
  var(--rh-color-brand-red-lightest${1:, #fbc5c5})$2
# lighter brand red
snippet rhcolorbrandredlighter
  var(--rh-color-brand-red-lighter${1:, #f9a8a8})$2
snippet f9a8a8
  var(--rh-color-brand-red-lighter${1:, #f9a8a8})$2
# Light brand red
snippet rhcolorbrandredlight
  var(--rh-color-brand-red-light${1:, #f56e6e})$2
snippet f56e6e
  var(--rh-color-brand-red-light${1:, #f56e6e})$2
# Dark brand red/Brand red hover
snippet rhcolorbrandreddark
  var(--rh-color-brand-red-dark${1:, #a60000})$2
snippet a60000
  var(--rh-color-brand-red-dark${1:, #a60000})$2
# Darker brand red
snippet rhcolorbrandreddarker
  var(--rh-color-brand-red-darker${1:, #5f0000})$2
snippet 5f0000
  var(--rh-color-brand-red-darker${1:, #5f0000})$2
# Darkest brand red
snippet rhcolorbrandreddarkest
  var(--rh-color-brand-red-darkest${1:, #5f0000})$2
snippet 5f0000
  var(--rh-color-brand-red-darkest${1:, #5f0000})$2
# Alert - success background
snippet rhcolorgreen10
  var(--rh-color-green-10${1:, #e9f7df})$2
snippet e9f7df
  var(--rh-color-green-10${1:, #e9f7df})$2
# Label - Filled (Green) border color
snippet rhcolorgreen20
  var(--rh-color-green-20${1:, #d1f1bb})$2
snippet d1f1bb
  var(--rh-color-green-20${1:, #d1f1bb})$2
snippet rhcolorgreen30
  var(--rh-color-green-30${1:, #afdc8f})$2
snippet afdc8f
  var(--rh-color-green-30${1:, #afdc8f})$2
snippet rhcolorgreen40
  var(--rh-color-green-40${1:, #87bb62})$2
snippet 87bb62
  var(--rh-color-green-40${1:, #87bb62})$2
snippet rhcolorgreen50
  var(--rh-color-green-50${1:, #63993d})$2
snippet 63993d
  var(--rh-color-green-50${1:, #63993d})$2
# Alert - Success accent
snippet rhcolorgreen60
  var(--rh-color-green-60${1:, #3d7317})$2
snippet 3d7317
  var(--rh-color-green-60${1:, #3d7317})$2
# Alert - Success title text
snippet rhcolorgreen70
  var(--rh-color-green-70${1:, #204d00})$2
snippet 204d00
  var(--rh-color-green-70${1:, #204d00})$2
snippet rhcolorgreen10hsl
  var(--rh-color-green-10-hsl${1:, 95.00000000000003 60.00000000000004% 92.15686274509804%})$2
snippet rhcolorgreen10rgb
  var(--rh-color-green-10-rgb${1:, 233 247 223})$2
snippet rhcolorgreen20hsl
  var(--rh-color-green-20-hsl${1:, 95.55555555555556 65.85365853658536% 83.92156862745097%})$2
snippet rhcolorgreen20rgb
  var(--rh-color-green-20-rgb${1:, 209 241 187})$2
snippet rhcolorgreen30hsl
  var(--rh-color-green-30-hsl${1:, 95.06493506493506 52.380952380952394% 71.17647058823529%})$2
snippet rhcolorgreen30rgb
  var(--rh-color-green-30-rgb${1:, 175 220 143})$2
snippet rhcolorgreen40hsl
  var(--rh-color-green-40-hsl${1:, 95.05617977528091 39.55555555555555% 55.88235294117647%})$2
snippet rhcolorgreen40rgb
  var(--rh-color-green-40-rgb${1:, 135 187 98})$2
snippet rhcolorgreen50hsl
  var(--rh-color-green-50-hsl${1:, 95.21739130434783 42.99065420560747% 41.96078431372549%})$2
snippet rhcolorgreen50rgb
  var(--rh-color-green-50-rgb${1:, 99 153 61})$2
snippet rhcolorgreen60hsl
  var(--rh-color-green-60-hsl${1:, 95.21739130434783 66.66666666666667% 27.058823529411764%})$2
snippet rhcolorgreen60rgb
  var(--rh-color-green-60-rgb${1:, 61 115 23})$2
snippet rhcolorgreen70hsl
  var(--rh-color-green-70-hsl${1:, 95.06493506493506 100% 15.098039215686274%})$2
snippet rhcolorgreen70rgb
  var(--rh-color-green-70-rgb${1:, 32 77 0})$2
# Label - Filled (Orange) background color
snippet rhcolororange10
  var(--rh-color-orange-10${1:, #ffe8cc})$2
snippet ffe8cc
  var(--rh-color-orange-10${1:, #ffe8cc})$2
snippet rhcolororange20
  var(--rh-color-orange-20${1:, #fccb8f})$2
snippet fccb8f
  var(--rh-color-orange-20${1:, #fccb8f})$2
# Label - Filled (Orange) border color
snippet rhcolororange30
  var(--rh-color-orange-30${1:, #f8ae54})$2
snippet f8ae54
  var(--rh-color-orange-30${1:, #f8ae54})$2
# Label - Filled (Orange) accent color
snippet rhcolororange40
  var(--rh-color-orange-40${1:, #f5921b})$2
snippet f5921b
  var(--rh-color-orange-40${1:, #f5921b})$2
# Label - Filled (Orange) accent color
snippet rhcolororange50
  var(--rh-color-orange-50${1:, #ca6c0f})$2
snippet ca6c0f
  var(--rh-color-orange-50${1:, #ca6c0f})$2
snippet rhcolororange60
  var(--rh-color-orange-60${1:, #9e4a06})$2
snippet 9e4a06
  var(--rh-color-orange-60${1:, #9e4a06})$2
# Label - Filled (Orange) text color
snippet rhcolororange70
  var(--rh-color-orange-70${1:, #732e00})$2
snippet 732e00
  var(--rh-color-orange-70${1:, #732e00})$2
snippet rhcolororange10hsl
  var(--rh-color-orange-10-hsl${1:, 32.941176470588225 100% 90%})$2
snippet rhcolororange10rgb
  var(--rh-color-orange-10-rgb${1:, 255 232 204})$2
snippet rhcolororange20hsl
  var(--rh-color-orange-20-hsl${1:, 33.02752293577981 94.78260869565219% 77.45098039215686%})$2
snippet rhcolororange20rgb
  var(--rh-color-orange-20-rgb${1:, 252 203 143})$2
snippet rhcolororange30hsl
  var(--rh-color-orange-30-hsl${1:, 32.926829268292686 92.13483146067415% 65.09803921568627%})$2
snippet rhcolororange30rgb
  var(--rh-color-orange-30-rgb${1:, 248 174 84})$2
snippet rhcolororange40hsl
  var(--rh-color-orange-40-hsl${1:, 32.752293577981646 91.5966386554622% 53.333333333333336%})$2
snippet rhcolororange40rgb
  var(--rh-color-orange-40-rgb${1:, 245 146 27})$2
snippet rhcolororange50hsl
  var(--rh-color-orange-50-hsl${1:, 29.83957219251337 86.17511520737327% 42.549019607843135%})$2
snippet rhcolororange50rgb
  var(--rh-color-orange-50-rgb${1:, 202 108 15})$2
snippet rhcolororange60hsl
  var(--rh-color-orange-60-hsl${1:, 26.842105263157904 92.68292682926828% 32.15686274509804%})$2
snippet rhcolororange60rgb
  var(--rh-color-orange-60-rgb${1:, 158 74 6})$2
snippet rhcolororange70hsl
  var(--rh-color-orange-70-hsl${1:, 24 100% 22.54901960784314%})$2
snippet rhcolororange70rgb
  var(--rh-color-orange-70-rgb${1:, 115 46 0})$2
# Responsive `icon-primary` color value. Typically read-only - use a themable container, e.g. `<rh-surface>`. Resolves to `--rh-color-icon-primary-on-light` on a themable container with a light color palette and `--rh-color-icon-primary-on-dark` on a themable container with a dark color palette.
snippet rhcoloriconprimary
  var(--rh-color-icon-primary)$2
snippet rhcoloriconprimaryonlight
  var(--rh-color-icon-primary-on-light${1:, #ee0000})$2
snippet ee0000
  var(--rh-color-icon-primary-on-light${1:, #ee0000})$2
snippet rhcoloriconprimaryondark
  var(--rh-color-icon-primary-on-dark${1:, #ee0000})$2
snippet ee0000
  var(--rh-color-icon-primary-on-dark${1:, #ee0000})$2
# Responsive `icon-secondary` color value. Typically read-only - use a themable container, e.g. `<rh-surface>`. Resolves to `--rh-color-icon-secondary-on-light` on a themable container with a light color palette and `--rh-color-icon-secondary-on-dark` on a themable container with a dark color palette.
snippet rhcoloriconsecondary
  var(--rh-color-icon-secondary)$2
snippet rhcoloriconsecondaryonlight
  var(--rh-color-icon-secondary-on-light${1:, #151515})$2
snippet 151515
  var(--rh-color-icon-secondary-on-light${1:, #151515})$2
snippet rhcoloriconsecondaryondark
  var(--rh-color-icon-secondary-on-dark${1:, #ffffff})$2
snippet ffffff
  var(--rh-color-icon-secondary-on-dark${1:, #ffffff})$2
snippet rhcoloriconsubtle
  var(--rh-color-icon-subtle${1:, #707070})$2
snippet 707070
  var(--rh-color-icon-subtle${1:, #707070})$2
snippet rhcoloriconsubtlehover
  var(--rh-color-icon-subtle-hover${1:, #a3a3a3})$2
snippet a3a3a3
  var(--rh-color-icon-subtle-hover${1:, #a3a3a3})$2
# Responsive `icon-status-danger` color value. Typically read-only - use a themable container, e.g. `<rh-surface>`. Resolves to `--rh-color-icon-status-danger-on-light` on a themable container with a light color palette and `--rh-color-icon-status-danger-on-dark` on a themable container with a dark color palette.
snippet rhcoloriconstatusdanger
  var(--rh-color-icon-status-danger)$2
# Danger status icon color (light theme)
snippet rhcoloriconstatusdangeronlight
  var(--rh-color-icon-status-danger-on-light${1:, #b1380b})$2
snippet b1380b
  var(--rh-color-icon-status-danger-on-light${1:, #b1380b})$2
# Danger status icon color (dark theme)
snippet rhcoloriconstatusdangerondark
  var(--rh-color-icon-status-danger-on-dark${1:, #f0561d})$2
snippet f0561d
  var(--rh-color-icon-status-danger-on-dark${1:, #f0561d})$2
# Responsive `icon-status-caution` color value. Typically read-only - use a themable container, e.g. `<rh-surface>`. Resolves to `--rh-color-icon-status-caution-on-light` on a themable container with a light color palette and `--rh-color-icon-status-caution-on-dark` on a themable container with a dark color palette.
snippet rhcoloriconstatuscaution
  var(--rh-color-icon-status-caution)$2
# Caution status icon color (light theme)
snippet rhcoloriconstatuscautiononlight
  var(--rh-color-icon-status-caution-on-light${1:, #ca6c0f})$2
snippet ca6c0f
  var(--rh-color-icon-status-caution-on-light${1:, #ca6c0f})$2
# Caution status icon color (dark theme)
snippet rhcoloriconstatuscautionondark
  var(--rh-color-icon-status-caution-on-dark${1:, #f5921b})$2
snippet f5921b
  var(--rh-color-icon-status-caution-on-dark${1:, #f5921b})$2
# Responsive `icon-status-warning` color value. Typically read-only - use a themable container, e.g. `<rh-surface>`. Resolves to `--rh-color-icon-status-warning-on-light` on a themable container with a light color palette and `--rh-color-icon-status-warning-on-dark` on a themable container with a dark color palette.
snippet rhcoloriconstatuswarning
  var(--rh-color-icon-status-warning)$2
# Warning status icon color (light theme)
snippet rhcoloriconstatuswarningonlight
  var(--rh-color-icon-status-warning-on-light${1:, #dca614})$2
snippet dca614
  var(--rh-color-icon-status-warning-on-light${1:, #dca614})$2
# Warning status icon color (dark theme)
snippet rhcoloriconstatuswarningondark
  var(--rh-color-icon-status-warning-on-dark${1:, #ffcc17})$2
snippet ffcc17
  var(--rh-color-icon-status-warning-on-dark${1:, #ffcc17})$2
# Responsive `icon-status-default` color value. Typically read-only - use a themable container, e.g. `<rh-surface>`. Resolves to `--rh-color-icon-status-default-on-light` on a themable container with a light color palette and `--rh-color-icon-status-default-on-dark` on a themable container with a dark color palette.
snippet rhcoloriconstatusdefault
  var(--rh-color-icon-status-default)$2
# Default status icon color (light theme)
snippet rhcoloriconstatusdefaultonlight
  var(--rh-color-icon-status-default-on-light${1:, #4d4d4d})$2
snippet 4d4d4d
  var(--rh-color-icon-status-default-on-light${1:, #4d4d4d})$2
# Default status icon color (dark theme)
snippet rhcoloriconstatusdefaultondark
  var(--rh-color-icon-status-default-on-dark${1:, #4d4d4d})$2
snippet 4d4d4d
  var(--rh-color-icon-status-default-on-dark${1:, #4d4d4d})$2
# Responsive `icon-status-neutral` color value. Typically read-only - use a themable container, e.g. `<rh-surface>`. Resolves to `--rh-color-icon-status-neutral-on-light` on a themable container with a light color palette and `--rh-color-icon-status-neutral-on-dark` on a themable container with a dark color palette.
snippet rhcoloriconstatusneutral
  var(--rh-color-icon-status-neutral)$2
# Neutral status icon color (light theme)
snippet rhcoloriconstatusneutralonlight
  var(--rh-color-icon-status-neutral-on-light${1:, #4d4d4d})$2
snippet 4d4d4d
  var(--rh-color-icon-status-neutral-on-light${1:, #4d4d4d})$2
# Neutral status icon color (dark theme)
snippet rhcoloriconstatusneutralondark
  var(--rh-color-icon-status-neutral-on-dark${1:, #c7c7c7})$2
snippet c7c7c7
  var(--rh-color-icon-status-neutral-on-dark${1:, #c7c7c7})$2
# Responsive `icon-status-info` color value. Typically read-only - use a themable container, e.g. `<rh-surface>`. Resolves to `--rh-color-icon-status-info-on-light` on a themable container with a light color palette and `--rh-color-icon-status-info-on-dark` on a themable container with a dark color palette.
snippet rhcoloriconstatusinfo
  var(--rh-color-icon-status-info)$2
# Info status icon color (light theme)
snippet rhcoloriconstatusinfoonlight
  var(--rh-color-icon-status-info-on-light${1:, #5e40be})$2
snippet 5e40be
  var(--rh-color-icon-status-info-on-light${1:, #5e40be})$2
# Info status icon color (dark theme)
snippet rhcoloriconstatusinfoondark
  var(--rh-color-icon-status-info-on-dark${1:, #b6a6e9})$2
snippet b6a6e9
  var(--rh-color-icon-status-info-on-dark${1:, #b6a6e9})$2
# Responsive `icon-status-success` color value. Typically read-only - use a themable container, e.g. `<rh-surface>`. Resolves to `--rh-color-icon-status-success-on-light` on a themable container with a light color palette and `--rh-color-icon-status-success-on-dark` on a themable container with a dark color palette.
snippet rhcoloriconstatussuccess
  var(--rh-color-icon-status-success)$2
# Success status icon color (light theme)
snippet rhcoloriconstatussuccessonlight
  var(--rh-color-icon-status-success-on-light${1:, #3d7317})$2
snippet 3d7317
  var(--rh-color-icon-status-success-on-light${1:, #3d7317})$2
# Success status icon color (dark theme)
snippet rhcoloriconstatussuccessondark
  var(--rh-color-icon-status-success-on-dark${1:, #87bb62})$2
snippet 87bb62
  var(--rh-color-icon-status-success-on-dark${1:, #87bb62})$2
# Primary canvas (light theme)
snippet rhcolorcanvaswhite
  var(--rh-color-canvas-white${1:, #ffffff})$2
snippet ffffff
  var(--rh-color-canvas-white${1:, #ffffff})$2
# Primary canvas (dark theme)
snippet rhcolorcanvasblack
  var(--rh-color-canvas-black${1:, #151515})$2
snippet 151515
  var(--rh-color-canvas-black${1:, #151515})$2
snippet rhcolorcanvaswhitehsl
  var(--rh-color-canvas-white-hsl${1:, 0 0% 100%})$2
snippet rhcolorcanvaswhitergb
  var(--rh-color-canvas-white-rgb${1:, 255 255 255})$2
snippet rhcolorcanvasblackhsl
  var(--rh-color-canvas-black-hsl${1:, 0 0% 0%})$2
snippet rhcolorcanvasblackrgb
  var(--rh-color-canvas-black-rgb${1:, 0 0 0})$2
# Alert - Info background
snippet rhcolorblue10
  var(--rh-color-blue-10${1:, #e0f0ff})$2
snippet e0f0ff
  var(--rh-color-blue-10${1:, #e0f0ff})$2
# Label - Filled (Blue) border color
snippet rhcolorblue20
  var(--rh-color-blue-20${1:, #b9dafc})$2
snippet b9dafc
  var(--rh-color-blue-20${1:, #b9dafc})$2
# Inline link (dark theme)
snippet rhcolorblue30
  var(--rh-color-blue-30${1:, #92c5f9})$2
snippet 92c5f9
  var(--rh-color-blue-30${1:, #92c5f9})$2
# Alert - Info accent
snippet rhcolorblue40
  var(--rh-color-blue-40${1:, #4394e5})$2
snippet 4394e5
  var(--rh-color-blue-40${1:, #4394e5})$2
# Label - Filled (Blue) accent color
snippet rhcolorblue50
  var(--rh-color-blue-50${1:, #0066cc})$2
snippet 0066cc
  var(--rh-color-blue-50${1:, #0066cc})$2
# Inline link hover (light theme)
snippet rhcolorblue60
  var(--rh-color-blue-60${1:, #004d99})$2
snippet 004d99
  var(--rh-color-blue-60${1:, #004d99})$2
# Alert - Info title text
snippet rhcolorblue70
  var(--rh-color-blue-70${1:, #003366})$2
snippet 003366
  var(--rh-color-blue-70${1:, #003366})$2
snippet rhcolorblue10hsl
  var(--rh-color-blue-10-hsl${1:, 209.03225806451616 100% 93.92156862745098%})$2
snippet rhcolorblue10rgb
  var(--rh-color-blue-10-rgb${1:, 224 240 255})$2
snippet rhcolorblue20hsl
  var(--rh-color-blue-20-hsl${1:, 210.44776119402988 91.78082191780825% 85.68627450980392%})$2
snippet rhcolorblue20rgb
  var(--rh-color-blue-20-rgb${1:, 185 218 252})$2
snippet rhcolorblue30hsl
  var(--rh-color-blue-30-hsl${1:, 210.29126213592232 89.56521739130436% 77.45098039215685%})$2
snippet rhcolorblue30rgb
  var(--rh-color-blue-30-rgb${1:, 146 197 249})$2
snippet rhcolorblue40hsl
  var(--rh-color-blue-40-hsl${1:, 210 75.70093457943923% 58.03921568627452%})$2
snippet rhcolorblue40rgb
  var(--rh-color-blue-40-rgb${1:, 67 148 229})$2
snippet rhcolorblue50hsl
  var(--rh-color-blue-50-hsl${1:, 210 100% 40%})$2
snippet rhcolorblue50rgb
  var(--rh-color-blue-50-rgb${1:, 0 102 204})$2
snippet rhcolorblue60hsl
  var(--rh-color-blue-60-hsl${1:, 209.80392156862746 100% 30%})$2
snippet rhcolorblue60rgb
  var(--rh-color-blue-60-rgb${1:, 0 77 153})$2
snippet rhcolorblue70hsl
  var(--rh-color-blue-70-hsl${1:, 210 100% 20%})$2
snippet rhcolorblue70rgb
  var(--rh-color-blue-70-rgb${1:, 0 51 102})$2
# Lightest surface (light theme) or primary text (dark theme)
snippet rhcolorwhite
  var(--rh-color-white${1:, #ffffff})$2
snippet ffffff
  var(--rh-color-white${1:, #ffffff})$2
# Tertiary surface (light theme)
snippet rhcolorgray10
  var(--rh-color-gray-10${1:, #f2f2f2})$2
snippet f2f2f2
  var(--rh-color-gray-10${1:, #f2f2f2})$2
# Secondary surface (light theme)
snippet rhcolorgray20
  var(--rh-color-gray-20${1:, #e0e0e0})$2
snippet e0e0e0
  var(--rh-color-gray-20${1:, #e0e0e0})$2
# Subtle borders (light theme)
snippet rhcolorgray30
  var(--rh-color-gray-30${1:, #c7c7c7})$2
snippet c7c7c7
  var(--rh-color-gray-30${1:, #c7c7c7})$2
# Subtle icon (hover state)
snippet rhcolorgray40
  var(--rh-color-gray-40${1:, #a3a3a3})$2
snippet a3a3a3
  var(--rh-color-gray-40${1:, #a3a3a3})$2
# Subtle icon
snippet rhcolorgray50
  var(--rh-color-gray-50${1:, #707070})$2
snippet 707070
  var(--rh-color-gray-50${1:, #707070})$2
# Secondary text (light theme)
snippet rhcolorgray60
  var(--rh-color-gray-60${1:, #4d4d4d})$2
snippet 4d4d4d
  var(--rh-color-gray-60${1:, #4d4d4d})$2
# Tertiary surface (dark theme)
snippet rhcolorgray70
  var(--rh-color-gray-70${1:, #383838})$2
snippet 383838
  var(--rh-color-gray-70${1:, #383838})$2
# Alternative tertiary surface (not available for use with context provider)
snippet rhcolorgray80
  var(--rh-color-gray-80${1:, #292929})$2
snippet 292929
  var(--rh-color-gray-80${1:, #292929})$2
# Secondary surface (dark theme)
snippet rhcolorgray90
  var(--rh-color-gray-90${1:, #1f1f1f})$2
snippet 1f1f1f
  var(--rh-color-gray-90${1:, #1f1f1f})$2
# Primary surface (dark theme) or primary text (light theme)
snippet rhcolorgray95
  var(--rh-color-gray-95${1:, #151515})$2
snippet 151515
  var(--rh-color-gray-95${1:, #151515})$2
snippet rhcolorgray10hsl
  var(--rh-color-gray-10-hsl${1:, 0 0% 94.90196078431372%})$2
snippet rhcolorgray10rgb
  var(--rh-color-gray-10-rgb${1:, 242 242 242})$2
snippet rhcolorgray20hsl
  var(--rh-color-gray-20-hsl${1:, 0 0% 87.84313725490196%})$2
snippet rhcolorgray20rgb
  var(--rh-color-gray-20-rgb${1:, 224 224 224})$2
snippet rhcolorgray30hsl
  var(--rh-color-gray-30-hsl${1:, 0 0% 78.03921568627452%})$2
snippet rhcolorgray30rgb
  var(--rh-color-gray-30-rgb${1:, 199 199 199})$2
snippet rhcolorgray40hsl
  var(--rh-color-gray-40-hsl${1:, 0 0% 63.921568627450974%})$2
snippet rhcolorgray40rgb
  var(--rh-color-gray-40-rgb${1:, 163 163 163})$2
snippet rhcolorgray50hsl
  var(--rh-color-gray-50-hsl${1:, 0 0% 43.92156862745098%})$2
snippet rhcolorgray50rgb
  var(--rh-color-gray-50-rgb${1:, 112 112 112})$2
snippet rhcolorgray60hsl
  var(--rh-color-gray-60-hsl${1:, 0 0% 30.19607843137255%})$2
snippet rhcolorgray60rgb
  var(--rh-color-gray-60-rgb${1:, 77 77 77})$2
snippet rhcolorgray70hsl
  var(--rh-color-gray-70-hsl${1:, 0 0% 21.96078431372549%})$2
snippet rhcolorgray70rgb
  var(--rh-color-gray-70-rgb${1:, 56 56 56})$2
snippet rhcolorgray80hsl
  var(--rh-color-gray-80-hsl${1:, 0 0% 16.07843137254902%})$2
snippet rhcolorgray80rgb
  var(--rh-color-gray-80-rgb${1:, 41 41 41})$2
snippet rhcolorgray90hsl
  var(--rh-color-gray-90-hsl${1:, 0 0% 12.156862745098039%})$2
snippet rhcolorgray90rgb
  var(--rh-color-gray-90-rgb${1:, 31 31 31})$2
snippet rhcolorgray95hsl
  var(--rh-color-gray-95-hsl${1:, 0 0% 8.235294117647058%})$2
snippet rhcolorgray95rgb
  var(--rh-color-gray-95-rgb${1:, 21 21 21})$2
# Brand black (avoid using)
snippet rhcolorblack
  var(--rh-color-black${1:, #000000})$2
snippet 000000
  var(--rh-color-black${1:, #000000})$2
# Label - Filled (Purple) background color
snippet rhcolorpurple10
  var(--rh-color-purple-10${1:, #ece6ff})$2
snippet ece6ff
  var(--rh-color-purple-10${1:, #ece6ff})$2
# Inline link visited hover (dark theme)
snippet rhcolorpurple20
  var(--rh-color-purple-20${1:, #d0c5f4})$2
snippet d0c5f4
  var(--rh-color-purple-20${1:, #d0c5f4})$2
snippet rhcolorpurple30
  var(--rh-color-purple-30${1:, #b6a6e9})$2
snippet b6a6e9
  var(--rh-color-purple-30${1:, #b6a6e9})$2
# Inline link visited (dark theme)
snippet rhcolorpurple40
  var(--rh-color-purple-40${1:, #876fd4})$2
snippet 876fd4
  var(--rh-color-purple-40${1:, #876fd4})$2
snippet rhcolorpurple50
  var(--rh-color-purple-50${1:, #5e40be})$2
snippet 5e40be
  var(--rh-color-purple-50${1:, #5e40be})$2
# Inline link visited (light theme)
snippet rhcolorpurple60
  var(--rh-color-purple-60${1:, #3d2785})$2
snippet 3d2785
  var(--rh-color-purple-60${1:, #3d2785})$2
# Inline link visited hover (light theme)
snippet rhcolorpurple70
  var(--rh-color-purple-70${1:, #21134d})$2
snippet 21134d
  var(--rh-color-purple-70${1:, #21134d})$2
snippet rhcolorpurple10hsl
  var(--rh-color-purple-10-hsl${1:, 254.4 100% 95.09803921568627%})$2
snippet rhcolorpurple10rgb
  var(--rh-color-purple-10-rgb${1:, 236 230 255})$2
snippet rhcolorpurple20hsl
  var(--rh-color-purple-20-hsl${1:, 254.0425531914893 68.11594202898556% 86.47058823529412%})$2
snippet rhcolorpurple20rgb
  var(--rh-color-purple-20-rgb${1:, 208 197 244})$2
snippet rhcolorpurple30hsl
  var(--rh-color-purple-30-hsl${1:, 254.32835820895522 60.36036036036033% 78.23529411764706%})$2
snippet rhcolorpurple30rgb
  var(--rh-color-purple-30-rgb${1:, 182 166 233})$2
snippet rhcolorpurple40hsl
  var(--rh-color-purple-40-hsl${1:, 254.25742574257427 54.010695187165794% 63.33333333333333%})$2
snippet rhcolorpurple40rgb
  var(--rh-color-purple-40-rgb${1:, 135 111 212})$2
snippet rhcolorpurple50hsl
  var(--rh-color-purple-50-hsl${1:, 254.2857142857143 49.60629921259843% 49.80392156862745%})$2
snippet rhcolorpurple50rgb
  var(--rh-color-purple-50-rgb${1:, 94 64 190})$2
snippet rhcolorpurple60hsl
  var(--rh-color-purple-60-hsl${1:, 254.0425531914894 54.65116279069767% 33.72549019607843%})$2
snippet rhcolorpurple60rgb
  var(--rh-color-purple-60-rgb${1:, 61 39 133})$2
snippet rhcolorpurple70hsl
  var(--rh-color-purple-70-hsl${1:, 254.48275862068965 60.416666666666664% 18.823529411764707%})$2
snippet rhcolorpurple70rgb
  var(--rh-color-purple-70-rgb${1:, 33 19 77})$2
snippet rhcolorredorange10
  var(--rh-color-red-orange-10${1:, #ffe3d9})$2
snippet ffe3d9
  var(--rh-color-red-orange-10${1:, #ffe3d9})$2
snippet rhcolorredorange20
  var(--rh-color-red-orange-20${1:, #fbbea8})$2
snippet fbbea8
  var(--rh-color-red-orange-20${1:, #fbbea8})$2
snippet rhcolorredorange30
  var(--rh-color-red-orange-30${1:, #f89b78})$2
snippet f89b78
  var(--rh-color-red-orange-30${1:, #f89b78})$2
snippet rhcolorredorange40
  var(--rh-color-red-orange-40${1:, #f4784a})$2
snippet f4784a
  var(--rh-color-red-orange-40${1:, #f4784a})$2
snippet rhcolorredorange50
  var(--rh-color-red-orange-50${1:, #f0561d})$2
snippet f0561d
  var(--rh-color-red-orange-50${1:, #f0561d})$2
snippet rhcolorredorange60
  var(--rh-color-red-orange-60${1:, #b1380b})$2
snippet b1380b
  var(--rh-color-red-orange-60${1:, #b1380b})$2
snippet rhcolorredorange70
  var(--rh-color-red-orange-70${1:, #731f00})$2
snippet 731f00
  var(--rh-color-red-orange-70${1:, #731f00})$2
snippet rhcolorredorange10hsl
  var(--rh-color-red-orange-10-hsl${1:, 15.789473684210513 100% 92.54901960784314%})$2
snippet rhcolorredorange10rgb
  var(--rh-color-red-orange-10-rgb${1:, 255 227 217})$2
snippet rhcolorredorange20hsl
  var(--rh-color-red-orange-20-hsl${1:, 15.903614457831333 91.20879120879121% 82.15686274509804%})$2
snippet rhcolorredorange20rgb
  var(--rh-color-red-orange-20-rgb${1:, 251 190 168})$2
snippet rhcolorredorange30hsl
  var(--rh-color-red-orange-30-hsl${1:, 16.406249999999996 90.14084507042254% 72.15686274509804%})$2
snippet rhcolorredorange30rgb
  var(--rh-color-red-orange-30-rgb${1:, 248 155 120})$2
snippet rhcolorredorange40hsl
  var(--rh-color-red-orange-40-hsl${1:, 16.235294117647054 88.54166666666671% 62.35294117647059%})$2
snippet rhcolorredorange40rgb
  var(--rh-color-red-orange-40-rgb${1:, 244 120 74})$2
snippet rhcolorredorange50hsl
  var(--rh-color-red-orange-50-hsl${1:, 16.208530805687207 87.55186721991701% 52.74509803921569%})$2
snippet rhcolorredorange50rgb
  var(--rh-color-red-orange-50-rgb${1:, 240 86 29})$2
snippet rhcolorredorange60hsl
  var(--rh-color-red-orange-60-hsl${1:, 16.265060240963855 88.29787234042554% 36.86274509803921%})$2
snippet rhcolorredorange60rgb
  var(--rh-color-red-orange-60-rgb${1:, 177 56 11})$2
snippet rhcolorredorange70hsl
  var(--rh-color-red-orange-70-hsl${1:, 16.17391304347826 100% 22.54901960784314%})$2
snippet rhcolorredorange70rgb
  var(--rh-color-red-orange-70-rgb${1:, 115 31 0})$2
snippet rhcolorred10
  var(--rh-color-red-10${1:, #fce3e3})$2
snippet fce3e3
  var(--rh-color-red-10${1:, #fce3e3})$2
# Lightest brand red
snippet rhcolorred20
  var(--rh-color-red-20${1:, #fbc5c5})$2
snippet fbc5c5
  var(--rh-color-red-20${1:, #fbc5c5})$2
# Lighter brand red
snippet rhcolorred30
  var(--rh-color-red-30${1:, #f9a8a8})$2
snippet f9a8a8
  var(--rh-color-red-30${1:, #f9a8a8})$2
# Light brand red
snippet rhcolorred40
  var(--rh-color-red-40${1:, #f56e6e})$2
snippet f56e6e
  var(--rh-color-red-40${1:, #f56e6e})$2
# Brand red (light and dark theme)
snippet rhcolorred50
  var(--rh-color-red-50${1:, #ee0000})$2
snippet ee0000
  var(--rh-color-red-50${1:, #ee0000})$2
# Dark brand red
snippet rhcolorred60
  var(--rh-color-red-60${1:, #a60000})$2
snippet a60000
  var(--rh-color-red-60${1:, #a60000})$2
# Darker brand red
snippet rhcolorred70
  var(--rh-color-red-70${1:, #5f0000})$2
snippet 5f0000
  var(--rh-color-red-70${1:, #5f0000})$2
snippet rhcolorred10hsl
  var(--rh-color-red-10-hsl${1:, 0 80.64516129032265% 93.92156862745098%})$2
snippet rhcolorred10rgb
  var(--rh-color-red-10-rgb${1:, 252 227 227})$2
snippet rhcolorred20hsl
  var(--rh-color-red-20-hsl${1:, 0 87.09677419354838% 87.84313725490196%})$2
snippet rhcolorred20rgb
  var(--rh-color-red-20-rgb${1:, 251 197 197})$2
snippet rhcolorred30hsl
  var(--rh-color-red-30-hsl${1:, 0 87.0967741935484% 81.76470588235294%})$2
snippet rhcolorred30rgb
  var(--rh-color-red-30-rgb${1:, 249 168 168})$2
snippet rhcolorred40hsl
  var(--rh-color-red-40-hsl${1:, 0 87.09677419354841% 69.6078431372549%})$2
snippet rhcolorred40rgb
  var(--rh-color-red-40-rgb${1:, 245 110 110})$2
snippet rhcolorred50hsl
  var(--rh-color-red-50-hsl${1:, 0 100% 46.666666666666664%})$2
snippet rhcolorred50rgb
  var(--rh-color-red-50-rgb${1:, 238 0 0})$2
snippet rhcolorred60hsl
  var(--rh-color-red-60-hsl${1:, 0 100% 32.549019607843135%})$2
snippet rhcolorred60rgb
  var(--rh-color-red-60-rgb${1:, 166 0 0})$2
snippet rhcolorred70hsl
  var(--rh-color-red-70-hsl${1:, 0 100% 18.627450980392158%})$2
snippet rhcolorred70rgb
  var(--rh-color-red-70-rgb${1:, 95 0 0})$2
# Alert - Default background
snippet rhcolorteal10
  var(--rh-color-teal-10${1:, #daf2f2})$2
snippet daf2f2
  var(--rh-color-teal-10${1:, #daf2f2})$2
snippet rhcolorteal20
  var(--rh-color-teal-20${1:, #b9e5e5})$2
snippet b9e5e5
  var(--rh-color-teal-20${1:, #b9e5e5})$2
# Label (Cyan) border color
snippet rhcolorteal30
  var(--rh-color-teal-30${1:, #9ad8d8})$2
snippet 9ad8d8
  var(--rh-color-teal-30${1:, #9ad8d8})$2
snippet rhcolorteal40
  var(--rh-color-teal-40${1:, #63bdbd})$2
snippet 63bdbd
  var(--rh-color-teal-40${1:, #63bdbd})$2
# Alert - Default accent
snippet rhcolorteal50
  var(--rh-color-teal-50${1:, #37a3a3})$2
snippet 37a3a3
  var(--rh-color-teal-50${1:, #37a3a3})$2
snippet rhcolorteal60
  var(--rh-color-teal-60${1:, #147878})$2
snippet 147878
  var(--rh-color-teal-60${1:, #147878})$2
# Alert - Default title text
snippet rhcolorteal70
  var(--rh-color-teal-70${1:, #004d4d})$2
snippet 004d4d
  var(--rh-color-teal-70${1:, #004d4d})$2
snippet rhcolorteal10hsl
  var(--rh-color-teal-10-hsl${1:, 180 47.99999999999998% 90.19607843137254%})$2
snippet rhcolorteal10rgb
  var(--rh-color-teal-10-rgb${1:, 218 242 242})$2
snippet rhcolorteal20hsl
  var(--rh-color-teal-20-hsl${1:, 180 45.833333333333336% 81.17647058823529%})$2
snippet rhcolorteal20rgb
  var(--rh-color-teal-20-rgb${1:, 185 229 229})$2
snippet rhcolorteal30hsl
  var(--rh-color-teal-30-hsl${1:, 180 44.28571428571429% 72.54901960784314%})$2
snippet rhcolorteal30rgb
  var(--rh-color-teal-30-rgb${1:, 154 216 216})$2
snippet rhcolorteal40hsl
  var(--rh-color-teal-40-hsl${1:, 180 40.54054054054054% 56.470588235294116%})$2
snippet rhcolorteal40rgb
  var(--rh-color-teal-40-rgb${1:, 99 189 189})$2
snippet rhcolorteal50hsl
  var(--rh-color-teal-50-hsl${1:, 180 49.54128440366972% 42.745098039215684%})$2
snippet rhcolorteal50rgb
  var(--rh-color-teal-50-rgb${1:, 55 163 163})$2
snippet rhcolorteal60hsl
  var(--rh-color-teal-60-hsl${1:, 180 71.42857142857142% 27.450980392156865%})$2
snippet rhcolorteal60rgb
  var(--rh-color-teal-60-rgb${1:, 20 120 120})$2
snippet rhcolorteal70hsl
  var(--rh-color-teal-70-hsl${1:, 180 100% 15.098039215686274%})$2
snippet rhcolorteal70rgb
  var(--rh-color-teal-70-rgb${1:, 0 77 77})$2
# Alert - Warning background
snippet rhcoloryellow10
  var(--rh-color-yellow-10${1:, #fff4cc})$2
snippet fff4cc
  var(--rh-color-yellow-10${1:, #fff4cc})$2
snippet rhcoloryellow20
  var(--rh-color-yellow-20${1:, #ffe072})$2
snippet ffe072
  var(--rh-color-yellow-20${1:, #ffe072})$2
snippet rhcoloryellow30
  var(--rh-color-yellow-30${1:, #ffcc17})$2
snippet ffcc17
  var(--rh-color-yellow-30${1:, #ffcc17})$2
# Alert - Warning accent
snippet rhcoloryellow40
  var(--rh-color-yellow-40${1:, #dca614})$2
snippet dca614
  var(--rh-color-yellow-40${1:, #dca614})$2
snippet rhcoloryellow50
  var(--rh-color-yellow-50${1:, #b98412})$2
snippet b98412
  var(--rh-color-yellow-50${1:, #b98412})$2
snippet rhcoloryellow60
  var(--rh-color-yellow-60${1:, #96640f})$2
snippet 96640f
  var(--rh-color-yellow-60${1:, #96640f})$2
# Alert - Warning title text
snippet rhcoloryellow70
  var(--rh-color-yellow-70${1:, #73480b})$2
snippet 73480b
  var(--rh-color-yellow-70${1:, #73480b})$2
snippet rhcoloryellow10hsl
  var(--rh-color-yellow-10-hsl${1:, 47.058823529411775 100% 90%})$2
snippet rhcoloryellow10rgb
  var(--rh-color-yellow-10-rgb${1:, 255 244 204})$2
snippet rhcoloryellow20hsl
  var(--rh-color-yellow-20-hsl${1:, 46.80851063829787 100% 72.35294117647058%})$2
snippet rhcoloryellow20rgb
  var(--rh-color-yellow-20-rgb${1:, 255 224 114})$2
snippet rhcoloryellow30hsl
  var(--rh-color-yellow-30-hsl${1:, 46.81034482758621 100% 54.509803921568626%})$2
snippet rhcoloryellow30rgb
  var(--rh-color-yellow-30-rgb${1:, 255 204 23})$2
snippet rhcoloryellow40hsl
  var(--rh-color-yellow-40-hsl${1:, 43.79999999999999 83.33333333333334% 47.05882352941176%})$2
snippet rhcoloryellow40rgb
  var(--rh-color-yellow-40-rgb${1:, 220 166 20})$2
snippet rhcoloryellow50hsl
  var(--rh-color-yellow-50-hsl${1:, 40.95808383233534 82.26600985221675% 39.80392156862745%})$2
snippet rhcoloryellow50rgb
  var(--rh-color-yellow-50-rgb${1:, 185 132 18})$2
snippet rhcoloryellow60hsl
  var(--rh-color-yellow-60-hsl${1:, 37.77777777777777 81.81818181818181% 32.35294117647059%})$2
snippet rhcoloryellow60rgb
  var(--rh-color-yellow-60-rgb${1:, 150 100 15})$2
snippet rhcoloryellow70hsl
  var(--rh-color-yellow-70-hsl${1:, 35.192307692307686 82.53968253968253% 24.705882352941178%})$2
snippet rhcoloryellow70rgb
  var(--rh-color-yellow-70-rgb${1:, 115 72 11})$2
# Responsive `interactive-primary` (e.g. link) color value. Typically read only - use a themable container e.g. `<rh-surface>`. Resolves to `--rh-color-interactive-primary-default-on-light` on a themable container with a light color palette and `--rh-color-interactive-primary-default-on-dark` on a themable container with a dark color palette.
snippet rhcolorinteractiveprimarydefault
  var(--rh-color-interactive-primary-default)$2
# Primary interactive - default (Light theme)
snippet rhcolorinteractiveprimarydefaultonlight
  var(--rh-color-interactive-primary-default-on-light${1:, #0066cc})$2
snippet 0066cc
  var(--rh-color-interactive-primary-default-on-light${1:, #0066cc})$2
# Primary interactive - default (Dark theme)
snippet rhcolorinteractiveprimarydefaultondark
  var(--rh-color-interactive-primary-default-on-dark${1:, #92c5f9})$2
snippet 92c5f9
  var(--rh-color-interactive-primary-default-on-dark${1:, #92c5f9})$2
# Responsive `interactive-primary` (e.g. link) color value. Typically read only - use a themable container e.g. `<rh-surface>`. Resolves to `--rh-color-interactive-primary-hover-on-light` on a themable container with a light color palette
     and to `--rh-color-interactive-primary-hover-on-dark` on a themable container with a dark color palette.
snippet rhcolorinteractiveprimaryhover
  var(--rh-color-interactive-primary-hover)$2
# Primary interactive - hover (Light theme)
snippet rhcolorinteractiveprimaryhoveronlight
  var(--rh-color-interactive-primary-hover-on-light${1:, #003366})$2
snippet 003366
  var(--rh-color-interactive-primary-hover-on-light${1:, #003366})$2
# Primary interactive - hover (Dark theme)
snippet rhcolorinteractiveprimaryhoverondark
  var(--rh-color-interactive-primary-hover-on-dark${1:, #b9dafc})$2
snippet b9dafc
  var(--rh-color-interactive-primary-hover-on-dark${1:, #b9dafc})$2
# Responsive `interactive-primary` (e.g. link) color value. Typically read only - use a themable container e.g. `<rh-surface>`. Resolves to `--rh-color-interactive-primary-active-on-light` on a themable container with a light color palette
     and to `--rh-color-interactive-primary-active-on-dark` on a themable container with a dark color palette.
snippet rhcolorinteractiveprimaryactive
  var(--rh-color-interactive-primary-active)$2
# Primary interactive - active (Light theme)
snippet rhcolorinteractiveprimaryactiveonlight
  var(--rh-color-interactive-primary-active-on-light${1:, #003366})$2
snippet 003366
  var(--rh-color-interactive-primary-active-on-light${1:, #003366})$2
# Primary interactive - active (Dark theme)
snippet rhcolorinteractiveprimaryactiveondark
  var(--rh-color-interactive-primary-active-on-dark${1:, #b9dafc})$2
snippet b9dafc
  var(--rh-color-interactive-primary-active-on-dark${1:, #b9dafc})$2
# Responsive `interactive-primary` (e.g. link) color value. Typically read only - use a themable container e.g. `<rh-surface>`. Resolves to `--rh-color-interactive-primary-focus-on-light` on a themable container with a light color palette
     and to `--rh-color-interactive-primary-focus-on-dark` on a themable container with a dark color palette.
snippet rhcolorinteractiveprimaryfocus
  var(--rh-color-interactive-primary-focus)$2
# Primary interactive - focus (Light theme)
snippet rhcolorinteractiveprimaryfocusonlight
  var(--rh-color-interactive-primary-focus-on-light${1:, #003366})$2
snippet 003366
  var(--rh-color-interactive-primary-focus-on-light${1:, #003366})$2
# Primary interactive - focus (Dark theme)
snippet rhcolorinteractiveprimaryfocusondark
  var(--rh-color-interactive-primary-focus-on-dark${1:, #b9dafc})$2
snippet b9dafc
  var(--rh-color-interactive-primary-focus-on-dark${1:, #b9dafc})$2
# Responsive `interactive-primary-visited` (e.g. visited link) color value. Typically read only - use a themable container e.g. `<rh-surface>`. Resolves to `--rh-color-interactive-primary-visited-default-on-light` on a themable container with a light color palette and `--rh-color-interactive-primary-visited-default-on-dark` on a themable container with a dark color palette.
snippet rhcolorinteractiveprimaryvisiteddefault
  var(--rh-color-interactive-primary-visited-default)$2
# Primary interactive visited - default (Light theme)
snippet rhcolorinteractiveprimaryvisiteddefaultonlight
  var(--rh-color-interactive-primary-visited-default-on-light${1:, #5e40be})$2
snippet 5e40be
  var(--rh-color-interactive-primary-visited-default-on-light${1:, #5e40be})$2
# Primary interactive visited - default (Dark theme)
snippet rhcolorinteractiveprimaryvisiteddefaultondark
  var(--rh-color-interactive-primary-visited-default-on-dark${1:, #b6a6e9})$2
snippet b6a6e9
  var(--rh-color-interactive-primary-visited-default-on-dark${1:, #b6a6e9})$2
# Responsive `interactive-primary-visited` (e.g. visited link) color value. Typically read only - use a themable container e.g. `<rh-surface>`. Resolves to `--rh-color-interactive-primary-visited-hover-on-light` on a themable container with a light color palette
     and to `--rh-color-interactive-primary-visited-hover-on-dark` on a themable container with a dark color palette.
snippet rhcolorinteractiveprimaryvisitedhover
  var(--rh-color-interactive-primary-visited-hover)$2
# Primary interactive visited - hover (Light theme)
snippet rhcolorinteractiveprimaryvisitedhoveronlight
  var(--rh-color-interactive-primary-visited-hover-on-light${1:, #21134d})$2
snippet 21134d
  var(--rh-color-interactive-primary-visited-hover-on-light${1:, #21134d})$2
# Primary interactive visited - hover (Dark theme)
snippet rhcolorinteractiveprimaryvisitedhoverondark
  var(--rh-color-interactive-primary-visited-hover-on-dark${1:, #ece6ff})$2
snippet ece6ff
  var(--rh-color-interactive-primary-visited-hover-on-dark${1:, #ece6ff})$2
# Responsive `interactive-primary-visited` (e.g. visited link) color value. Typically read only - use a themable container e.g. `<rh-surface>`. Resolves to `--rh-color-interactive-primary-visited-active-on-light` on a themable container with a light color palette
     and to `--rh-color-interactive-primary-visited-active-on-dark` on a themable container with a dark color palette.
snippet rhcolorinteractiveprimaryvisitedactive
  var(--rh-color-interactive-primary-visited-active)$2
# Primary interactive visited - active (Light theme)
snippet rhcolorinteractiveprimaryvisitedactiveonlight
  var(--rh-color-interactive-primary-visited-active-on-light${1:, #21134d})$2
snippet 21134d
  var(--rh-color-interactive-primary-visited-active-on-light${1:, #21134d})$2
# Primary interactive visited - active (Dark theme)
snippet rhcolorinteractiveprimaryvisitedactiveondark
  var(--rh-color-interactive-primary-visited-active-on-dark${1:, #ece6ff})$2
snippet ece6ff
  var(--rh-color-interactive-primary-visited-active-on-dark${1:, #ece6ff})$2
# Responsive `interactive-primary-visited` (e.g. visited link) color value. Typically read only - use a themable container e.g. `<rh-surface>`. Resolves to `--rh-color-interactive-primary-visited-focus-on-light` on a themable container with a light color palette
     and to `--rh-color-interactive-primary-visited-focus-on-dark` on a themable container with a dark color palette.
snippet rhcolorinteractiveprimaryvisitedfocus
  var(--rh-color-interactive-primary-visited-focus)$2
# Primary interactive visited - focus (Light theme)
snippet rhcolorinteractiveprimaryvisitedfocusonlight
  var(--rh-color-interactive-primary-visited-focus-on-light${1:, #21134d})$2
snippet 21134d
  var(--rh-color-interactive-primary-visited-focus-on-light${1:, #21134d})$2
# Primary interactive visited - focus (Dark theme)
snippet rhcolorinteractiveprimaryvisitedfocusondark
  var(--rh-color-interactive-primary-visited-focus-on-dark${1:, #ece6ff})$2
snippet ece6ff
  var(--rh-color-interactive-primary-visited-focus-on-dark${1:, #ece6ff})$2
# Responsive `interactive-secondary` (e.g. link) color value. Typically read only - use a themable container e.g. `<rh-surface>`. Resolves to `--rh-color-interactive-secondary-default-on-light` on a themable container with a light color palette and `--rh-color-interactive-secondary-default-on-dark` on a themable container with a dark color palette.
snippet rhcolorinteractivesecondarydefault
  var(--rh-color-interactive-secondary-default)$2
# Secondary interactive - default (Light theme)
snippet rhcolorinteractivesecondarydefaultonlight
  var(--rh-color-interactive-secondary-default-on-light${1:, #4d4d4d})$2
snippet 4d4d4d
  var(--rh-color-interactive-secondary-default-on-light${1:, #4d4d4d})$2
# Secondary interactive - default (Dark theme)
snippet rhcolorinteractivesecondarydefaultondark
  var(--rh-color-interactive-secondary-default-on-dark${1:, #c7c7c7})$2
snippet c7c7c7
  var(--rh-color-interactive-secondary-default-on-dark${1:, #c7c7c7})$2
# Responsive `interactive-secondary` (e.g. link) color value. Typically read only - use a themable container e.g. `<rh-surface>`. Resolves to `--rh-color-interactive-secondary-hover-on-light` on a themable container with a light color palette
     and to `--rh-color-interactive-secondary-hover-on-dark` on a themable container with a dark color palette.
snippet rhcolorinteractivesecondaryhover
  var(--rh-color-interactive-secondary-hover)$2
# Secondary interactive - hover (Light theme)
snippet rhcolorinteractivesecondaryhoveronlight
  var(--rh-color-interactive-secondary-hover-on-light${1:, #4d4d4d})$2
snippet 4d4d4d
  var(--rh-color-interactive-secondary-hover-on-light${1:, #4d4d4d})$2
# Secondary interactive - hover (Dark theme)
snippet rhcolorinteractivesecondaryhoverondark
  var(--rh-color-interactive-secondary-hover-on-dark${1:, #c7c7c7})$2
snippet c7c7c7
  var(--rh-color-interactive-secondary-hover-on-dark${1:, #c7c7c7})$2
# Responsive `interactive-secondary` (e.g. link) color value. Typically read only - use a themable container e.g. `<rh-surface>`. Resolves to `--rh-color-interactive-secondary-active-on-light` on a themable container with a light color palette
     and to `--rh-color-interactive-secondary-active-on-dark` on a themable container with a dark color palette.
snippet rhcolorinteractivesecondaryactive
  var(--rh-color-interactive-secondary-active)$2
# Secondary interactive - active (Light theme)
snippet rhcolorinteractivesecondaryactiveonlight
  var(--rh-color-interactive-secondary-active-on-light${1:, #4d4d4d})$2
snippet 4d4d4d
  var(--rh-color-interactive-secondary-active-on-light${1:, #4d4d4d})$2
# Secondary interactive - active (Dark theme)
snippet rhcolorinteractivesecondaryactiveondark
  var(--rh-color-interactive-secondary-active-on-dark${1:, #c7c7c7})$2
snippet c7c7c7
  var(--rh-color-interactive-secondary-active-on-dark${1:, #c7c7c7})$2
# Responsive `interactive-secondary` (e.g. link) color value. Typically read only - use a themable container e.g. `<rh-surface>`. Resolves to `--rh-color-interactive-secondary-focus-on-light` on a themable container with a light color palette
     and to `--rh-color-interactive-secondary-focus-on-dark` on a themable container with a dark color palette.
snippet rhcolorinteractivesecondaryfocus
  var(--rh-color-interactive-secondary-focus)$2
# Secondary interactive - focus (Light theme)
snippet rhcolorinteractivesecondaryfocusonlight
  var(--rh-color-interactive-secondary-focus-on-light${1:, #4d4d4d})$2
snippet 4d4d4d
  var(--rh-color-interactive-secondary-focus-on-light${1:, #4d4d4d})$2
# Secondary interactive - focus (Dark theme)
snippet rhcolorinteractivesecondaryfocusondark
  var(--rh-color-interactive-secondary-focus-on-dark${1:, #c7c7c7})$2
snippet c7c7c7
  var(--rh-color-interactive-secondary-focus-on-dark${1:, #c7c7c7})$2
# Responsive `interactive-secondary-visited` (e.g. visited link) color value. Typically read only - use a themable container e.g. `<rh-surface>`. Resolves to `--rh-color-interactive-secondary-visited-default-on-light` on a themable container with a light color palette and `--rh-color-interactive-secondary-visited-default-on-dark` on a themable container with a dark color palette.
snippet rhcolorinteractivesecondaryvisiteddefault
  var(--rh-color-interactive-secondary-visited-default)$2
# Secondary interactive visited - default (Light theme)
snippet rhcolorinteractivesecondaryvisiteddefaultonlight
  var(--rh-color-interactive-secondary-visited-default-on-light${1:, #4d4d4d})$2
snippet 4d4d4d
  var(--rh-color-interactive-secondary-visited-default-on-light${1:, #4d4d4d})$2
# Secondary interactive visited - default (Dark theme)
snippet rhcolorinteractivesecondaryvisiteddefaultondark
  var(--rh-color-interactive-secondary-visited-default-on-dark${1:, #c7c7c7})$2
snippet c7c7c7
  var(--rh-color-interactive-secondary-visited-default-on-dark${1:, #c7c7c7})$2
# Responsive `interactive-secondary-visited` (e.g. visited link) color value. Typically read only - use a themable container e.g. `<rh-surface>`. Resolves to `--rh-color-interactive-secondary-visited-hover-on-light` on a themable container with a light color palette
     and to `--rh-color-interactive-secondary-visited-hover-on-dark` on a themable container with a dark color palette.
snippet rhcolorinteractivesecondaryvisitedhover
  var(--rh-color-interactive-secondary-visited-hover)$2
# Secondary interactive visited - hover (Light theme)
snippet rhcolorinteractivesecondaryvisitedhoveronlight
  var(--rh-color-interactive-secondary-visited-hover-on-light${1:, #4d4d4d})$2
snippet 4d4d4d
  var(--rh-color-interactive-secondary-visited-hover-on-light${1:, #4d4d4d})$2
# Secondary interactive visited - hover (Dark theme)
snippet rhcolorinteractivesecondaryvisitedhoverondark
  var(--rh-color-interactive-secondary-visited-hover-on-dark${1:, #c7c7c7})$2
snippet c7c7c7
  var(--rh-color-interactive-secondary-visited-hover-on-dark${1:, #c7c7c7})$2
# Responsive `interactive-secondary-visited` (e.g. visited link) color value. Typically read only - use a themable container e.g. `<rh-surface>`. Resolves to `--rh-color-interactive-secondary-visited-active-on-light` on a themable container with a light color palette
     and to `--rh-color-interactive-secondary-visited-active-on-dark` on a themable container with a dark color palette.
snippet rhcolorinteractivesecondaryvisitedactive
  var(--rh-color-interactive-secondary-visited-active)$2
# Secondary interactive visited - active (Light theme)
snippet rhcolorinteractivesecondaryvisitedactiveonlight
  var(--rh-color-interactive-secondary-visited-active-on-light${1:, #4d4d4d})$2
snippet 4d4d4d
  var(--rh-color-interactive-secondary-visited-active-on-light${1:, #4d4d4d})$2
# Secondary interactive visited - active (Dark theme)
snippet rhcolorinteractivesecondaryvisitedactiveondark
  var(--rh-color-interactive-secondary-visited-active-on-dark${1:, #c7c7c7})$2
snippet c7c7c7
  var(--rh-color-interactive-secondary-visited-active-on-dark${1:, #c7c7c7})$2
# Responsive `interactive-secondary-visited` (e.g. visited link) color value. Typically read only - use a themable container e.g. `<rh-surface>`. Resolves to `--rh-color-interactive-secondary-visited-focus-on-light` on a themable container with a light color palette
     and to `--rh-color-interactive-secondary-visited-focus-on-dark` on a themable container with a dark color palette.
snippet rhcolorinteractivesecondaryvisitedfocus
  var(--rh-color-interactive-secondary-visited-focus)$2
# Secondary interactive visited - focus (Light theme)
snippet rhcolorinteractivesecondaryvisitedfocusonlight
  var(--rh-color-interactive-secondary-visited-focus-on-light${1:, #4d4d4d})$2
snippet 4d4d4d
  var(--rh-color-interactive-secondary-visited-focus-on-light${1:, #4d4d4d})$2
# Secondary interactive visited - focus (Dark theme)
snippet rhcolorinteractivesecondaryvisitedfocusondark
  var(--rh-color-interactive-secondary-visited-focus-on-dark${1:, #c7c7c7})$2
snippet c7c7c7
  var(--rh-color-interactive-secondary-visited-focus-on-dark${1:, #c7c7c7})$2
# Inline link hover (dark theme)
snippet rhcolorinteractivebluelightest
  var(--rh-color-interactive-blue-lightest${1:, #b9dafc})$2
snippet b9dafc
  var(--rh-color-interactive-blue-lightest${1:, #b9dafc})$2
# Inline link (dark theme)
snippet rhcolorinteractivebluelighter
  var(--rh-color-interactive-blue-lighter${1:, #92c5f9})$2
snippet 92c5f9
  var(--rh-color-interactive-blue-lighter${1:, #92c5f9})$2
# Inline link (light theme)
snippet rhcolorinteractivebluedarker
  var(--rh-color-interactive-blue-darker${1:, #0066cc})$2
snippet 0066cc
  var(--rh-color-interactive-blue-darker${1:, #0066cc})$2
# Inline link hover (light theme)
snippet rhcolorinteractivebluedarkest
  var(--rh-color-interactive-blue-darkest${1:, #003366})$2
snippet 003366
  var(--rh-color-interactive-blue-darkest${1:, #003366})$2
# Inline link visited hover (dark theme)
snippet rhcolorinteractivepurplelightest
  var(--rh-color-interactive-purple-lightest${1:, #ece6ff})$2
snippet ece6ff
  var(--rh-color-interactive-purple-lightest${1:, #ece6ff})$2
# Inline link visited (dark theme)
snippet rhcolorinteractivepurplelighter
  var(--rh-color-interactive-purple-lighter${1:, #b6a6e9})$2
snippet b6a6e9
  var(--rh-color-interactive-purple-lighter${1:, #b6a6e9})$2
# Inline link visited (light theme)
snippet rhcolorinteractivepurpledarker
  var(--rh-color-interactive-purple-darker${1:, #5e40be})$2
snippet 5e40be
  var(--rh-color-interactive-purple-darker${1:, #5e40be})$2
# Inline link visited hover (light theme)
snippet rhcolorinteractivepurpledarkest
  var(--rh-color-interactive-purple-darkest${1:, #ece6ff})$2
snippet ece6ff
  var(--rh-color-interactive-purple-darkest${1:, #ece6ff})$2
# Responsive `status-danger` color value. Typically read-only – use a themable container, e.g. `<rh-surface>`. Resolves to `--rh-color-status-danger-on-light` on a themable container with a light color palette and `--rh-color-status-danger-on-dark` on a themable container with a dark color palette.
snippet rhcolorstatusdanger
  var(--rh-color-status-danger)$2
# Danger status color (light theme)
snippet rhcolorstatusdangeronlight
  var(--rh-color-status-danger-on-light${1:, #b1380b})$2
snippet b1380b
  var(--rh-color-status-danger-on-light${1:, #b1380b})$2
# Danger status color (dark theme)
snippet rhcolorstatusdangerondark
  var(--rh-color-status-danger-on-dark${1:, #f0561d})$2
snippet f0561d
  var(--rh-color-status-danger-on-dark${1:, #f0561d})$2
# Responsive `status-caution` color value. Typically read-only - use a themable container, e.g. `<rh-surface>`. Resolves to `--rh-color-status-caution-on-light` on a themable container with a light color palette and `--rh-color-status-caution-on-dark` on a themable container with a dark color palette.
snippet rhcolorstatuscaution
  var(--rh-color-status-caution)$2
# Caution status color (light theme)
snippet rhcolorstatuscautiononlight
  var(--rh-color-status-caution-on-light${1:, #ca6c0f})$2
snippet ca6c0f
  var(--rh-color-status-caution-on-light${1:, #ca6c0f})$2
# Caution status color (dark theme)
snippet rhcolorstatuscautionondark
  var(--rh-color-status-caution-on-dark${1:, #f5921b})$2
snippet f5921b
  var(--rh-color-status-caution-on-dark${1:, #f5921b})$2
# Responsive `status-warning` color value. Typically read-only - use a themable container, e.g. `<rh-surface>`. Resolves to `--rh-color-status-warning-on-light` on a themable container with a light color palette and `--rh-color-status-warning-on-dark` on a themable container with a dark color palette.
snippet rhcolorstatuswarning
  var(--rh-color-status-warning)$2
# Warning status color (light theme)
snippet rhcolorstatuswarningonlight
  var(--rh-color-status-warning-on-light${1:, #dca614})$2
snippet dca614
  var(--rh-color-status-warning-on-light${1:, #dca614})$2
# Warning status color (dark theme)
snippet rhcolorstatuswarningondark
  var(--rh-color-status-warning-on-dark${1:, #ffcc17})$2
snippet ffcc17
  var(--rh-color-status-warning-on-dark${1:, #ffcc17})$2
# Responsive `status-neutral` color value. Typically read-only - use a themable container, e.g. `<rh-surface>`. Resolves to `--rh-color-status-neutral-on-light` on a themable container with a light color palette and `--rh-color-status-neutral-on-dark` on a themable container with a dark color palette.
snippet rhcolorstatusneutral
  var(--rh-color-status-neutral)$2
# Neutral accent color (light theme)
snippet rhcolorstatusneutralonlight
  var(--rh-color-status-neutral-on-light${1:, #4d4d4d})$2
snippet 4d4d4d
  var(--rh-color-status-neutral-on-light${1:, #4d4d4d})$2
# Neutral accent color (dark theme)
snippet rhcolorstatusneutralondark
  var(--rh-color-status-neutral-on-dark${1:, #c7c7c7})$2
snippet c7c7c7
  var(--rh-color-status-neutral-on-dark${1:, #c7c7c7})$2
# Responsive `status-note` color value. Typically read-only - use a themable container, e.g. `<rh-surface>`. Resolves to `--rh-color-status-note-on-light` on a themable container with a light color palette and `--rh-color-status-note-on-dark` on a themable container with a dark color palette.
snippet rhcolorstatusnote
  var(--rh-color-status-note)$2
# Note/tip status color (light theme)
snippet rhcolorstatusnoteonlight
  var(--rh-color-status-note-on-light${1:, #5e40be})$2
snippet 5e40be
  var(--rh-color-status-note-on-light${1:, #5e40be})$2
# Note/tip status color (dark theme)
snippet rhcolorstatusnoteondark
  var(--rh-color-status-note-on-dark${1:, #b6a6e9})$2
snippet b6a6e9
  var(--rh-color-status-note-on-dark${1:, #b6a6e9})$2
# Responsive `status-info` color value. Typically read-only - use a themable container, e.g. `<rh-surface>`. Resolves to `--rh-color-status-info-on-light` on a themable container with a light color palette and `--rh-color-status-info-on-dark` on a themable container with a dark color palette.
snippet rhcolorstatusinfo
  var(--rh-color-status-info)$2
# Info status color (light theme)
snippet rhcolorstatusinfoonlight
  var(--rh-color-status-info-on-light${1:, #5e40be})$2
snippet 5e40be
  var(--rh-color-status-info-on-light${1:, #5e40be})$2
# Info status color (dark theme)
snippet rhcolorstatusinfoondark
  var(--rh-color-status-info-on-dark${1:, #b6a6e9})$2
snippet b6a6e9
  var(--rh-color-status-info-on-dark${1:, #b6a6e9})$2
# Responsive `status-success` color value. Typically read-only - use a themable container, e.g. `<rh-surface>`. Resolves to `--rh-color-status-success-on-light` on a themable container with a light color palette and `--rh-color-status-success-on-dark` on a themable container with a dark color palette.
snippet rhcolorstatussuccess
  var(--rh-color-status-success)$2
# Success status color (light theme)
snippet rhcolorstatussuccessonlight
  var(--rh-color-status-success-on-light${1:, #3d7317})$2
snippet 3d7317
  var(--rh-color-status-success-on-light${1:, #3d7317})$2
# Success status color (dark theme)
snippet rhcolorstatussuccessondark
  var(--rh-color-status-success-on-dark${1:, #87bb62})$2
snippet 87bb62
  var(--rh-color-status-success-on-dark${1:, #87bb62})$2
# Responsive `surface` color value. Typically read-only - use a themable container, e.g. `<rh-surface>`. Resolves to the surface color corresponding to the surface' color palette.
snippet rhcolorsurface
  var(--rh-color-surface)$2
# Primary surface (light theme)
snippet rhcolorsurfacelightest
  var(--rh-color-surface-lightest${1:, #ffffff})$2
snippet ffffff
  var(--rh-color-surface-lightest${1:, #ffffff})$2
# Tertiary surface (light theme)
snippet rhcolorsurfacelighter
  var(--rh-color-surface-lighter${1:, #f2f2f2})$2
snippet f2f2f2
  var(--rh-color-surface-lighter${1:, #f2f2f2})$2
# Secondary surface (light theme)
snippet rhcolorsurfacelight
  var(--rh-color-surface-light${1:, #e0e0e0})$2
snippet e0e0e0
  var(--rh-color-surface-light${1:, #e0e0e0})$2
# Tertiary surface (dark theme)
snippet rhcolorsurfacedark
  var(--rh-color-surface-dark${1:, #383838})$2
snippet 383838
  var(--rh-color-surface-dark${1:, #383838})$2
# Alternative tertiary surface (not available for use with context provider)
snippet rhcolorsurfacedarkalt
  var(--rh-color-surface-dark-alt${1:, #292929})$2
snippet 292929
  var(--rh-color-surface-dark-alt${1:, #292929})$2
# Secondary surface (dark theme)
snippet rhcolorsurfacedarker
  var(--rh-color-surface-darker${1:, #1f1f1f})$2
snippet 1f1f1f
  var(--rh-color-surface-darker${1:, #1f1f1f})$2
# Primary surface (dark theme)
snippet rhcolorsurfacedarkest
  var(--rh-color-surface-darkest${1:, #151515})$2
snippet 151515
  var(--rh-color-surface-darkest${1:, #151515})$2
# Responsive `surface-status-danger` color value. Typically read-only - use a themable container, e.g. `<rh-surface>`. Resolves to `--rh-color-surface-status-danger-on-light` on a themable container with a light color palette and `--rh-color-surface-status-danger-on-dark` on a themable container with a dark color palette.
snippet rhcolorsurfacestatusdanger
  var(--rh-color-surface-status-danger)$2
# Danger status surface color (light theme)
snippet rhcolorsurfacestatusdangeronlight
  var(--rh-color-surface-status-danger-on-light${1:, #ffe3d9})$2
snippet ffe3d9
  var(--rh-color-surface-status-danger-on-light${1:, #ffe3d9})$2
# Danger status surface color (dark theme)
snippet rhcolorsurfacestatusdangerondark
  var(--rh-color-surface-status-danger-on-dark${1:, #ffe3d9})$2
snippet ffe3d9
  var(--rh-color-surface-status-danger-on-dark${1:, #ffe3d9})$2
# Responsive `surface-status-caution` color value. Typically read-only - use a themable container, e.g. `<rh-surface>`. Resolves to `--rh-color-surface-status-caution-on-light` on a themable container with a light color palette and `--rh-color-surface-status-caution-on-dark` on a themable container with a dark color palette.
snippet rhcolorsurfacestatuscaution
  var(--rh-color-surface-status-caution)$2
# Caution status surface color (light theme)
snippet rhcolorsurfacestatuscautiononlight
  var(--rh-color-surface-status-caution-on-light${1:, #ffe8cc})$2
snippet ffe8cc
  var(--rh-color-surface-status-caution-on-light${1:, #ffe8cc})$2
# Caution status surface color (dark theme)
snippet rhcolorsurfacestatuscautionondark
  var(--rh-color-surface-status-caution-on-dark${1:, #ffe8cc})$2
snippet ffe8cc
  var(--rh-color-surface-status-caution-on-dark${1:, #ffe8cc})$2
# Responsive `surface-status-warning` color value. Typically read-only - use a themable container, e.g. `<rh-surface>`. Resolves to `--rh-color-surface-status-warning-on-light` on a themable container with a light color palette and `--rh-color-surface-status-warning-on-dark` on a themable container with a dark color palette.
snippet rhcolorsurfacestatuswarning
  var(--rh-color-surface-status-warning)$2
# Warning status surface color (light theme)
snippet rhcolorsurfacestatuswarningonlight
  var(--rh-color-surface-status-warning-on-light${1:, #fff4cc})$2
snippet fff4cc
  var(--rh-color-surface-status-warning-on-light${1:, #fff4cc})$2
# Warning status surface color (dark theme)
snippet rhcolorsurfacestatuswarningondark
  var(--rh-color-surface-status-warning-on-dark${1:, #73480b})$2
snippet 73480b
  var(--rh-color-surface-status-warning-on-dark${1:, #73480b})$2
# Responsive `surface-status-default` color value. Typically read-only - use a themable container, e.g. `<rh-surface>`. Resolves to `--rh-color-surface-status-default-on-light` on a themable container with a light color palette and `--rh-color-surface-status-default-on-dark` on a themable container with a dark color palette.
snippet rhcolorsurfacestatusdefault
  var(--rh-color-surface-status-default)$2
# Default status surface color (light theme)
snippet rhcolorsurfacestatusdefaultonlight
  var(--rh-color-surface-status-default-on-light${1:, #f2f2f2})$2
snippet f2f2f2
  var(--rh-color-surface-status-default-on-light${1:, #f2f2f2})$2
# Default status surface color (dark theme)
snippet rhcolorsurfacestatusdefaultondark
  var(--rh-color-surface-status-default-on-dark${1:, #f2f2f2})$2
snippet f2f2f2
  var(--rh-color-surface-status-default-on-dark${1:, #f2f2f2})$2
# Responsive `surface-status-neutral` color value. Typically read-only - use a themable container, e.g. `<rh-surface>`. Resolves to `--rh-color-surface-status-neutral-on-light` on a themable container with a light color palette and `--rh-color-surface-status-neutral-on-dark` on a themable container with a dark color palette.
snippet rhcolorsurfacestatusneutral
  var(--rh-color-surface-status-neutral)$2
# Neutral status surface color (light theme)
snippet rhcolorsurfacestatusneutralonlight
  var(--rh-color-surface-status-neutral-on-light${1:, #f2f2f2})$2
snippet f2f2f2
  var(--rh-color-surface-status-neutral-on-light${1:, #f2f2f2})$2
# Neutral status surface color (dark theme)
snippet rhcolorsurfacestatusneutralondark
  var(--rh-color-surface-status-neutral-on-dark${1:, #f2f2f2})$2
snippet f2f2f2
  var(--rh-color-surface-status-neutral-on-dark${1:, #f2f2f2})$2
# Responsive `surface-status-info` color value. Typically read-only - use a themable container, e.g. `<rh-surface>`. Resolves to `--rh-color-surface-status-info-on-light` on a themable container with a light color palette and `--rh-color-surface-status-info-on-dark` on a themable container with a dark color palette.
snippet rhcolorsurfacestatusinfo
  var(--rh-color-surface-status-info)$2
# Info status surface color (light theme)
snippet rhcolorsurfacestatusinfoonlight
  var(--rh-color-surface-status-info-on-light${1:, #ece6ff})$2
snippet ece6ff
  var(--rh-color-surface-status-info-on-light${1:, #ece6ff})$2
# Info status surface color (dark theme)
snippet rhcolorsurfacestatusinfoondark
  var(--rh-color-surface-status-info-on-dark${1:, #ece6ff})$2
snippet ece6ff
  var(--rh-color-surface-status-info-on-dark${1:, #ece6ff})$2
# Responsive `surface-status-success` color value. Typically read-only - use a themable container, e.g. `<rh-surface>`. Resolves to `--rh-color-surface-status-success-on-light` on a themable container with a light color palette and `--rh-color-surface-status-success-on-dark` on a themable container with a dark color palette.
snippet rhcolorsurfacestatussuccess
  var(--rh-color-surface-status-success)$2
# Success status surface color (light theme)
snippet rhcolorsurfacestatussuccessonlight
  var(--rh-color-surface-status-success-on-light${1:, #e9f7df})$2
snippet e9f7df
  var(--rh-color-surface-status-success-on-light${1:, #e9f7df})$2
# Success status surface color (dark theme)
snippet rhcolorsurfacestatussuccessondark
  var(--rh-color-surface-status-success-on-dark${1:, #e9f7df})$2
snippet e9f7df
  var(--rh-color-surface-status-success-on-dark${1:, #e9f7df})$2
# Responsive `text-primary` color value. Typically read only - use a themable container e.g. `<rh-surface>` Resolves to `--rh-color-text-primary-on-light` on a themable container with a light color palette and `--rh-color-text-primary-on-dark` on a themable container with a dark color palette.
snippet rhcolortextprimary
  var(--rh-color-text-primary)$2
# Primary text color for light theme
snippet rhcolortextprimaryonlight
  var(--rh-color-text-primary-on-light${1:, #151515})$2
snippet 151515
  var(--rh-color-text-primary-on-light${1:, #151515})$2
# Primary text color for dark theme
snippet rhcolortextprimaryondark
  var(--rh-color-text-primary-on-dark${1:, #ffffff})$2
snippet ffffff
  var(--rh-color-text-primary-on-dark${1:, #ffffff})$2
# Responsive `text-secondary` color value. Typically read only - use a themable container e.g. `<rh-surface>` Resolves to `--rh-color-text-secondary-on-light` on a themable container with a light color palette and `--rh-color-text-secondary-on-dark` on a themable container with a dark color palette.
snippet rhcolortextsecondary
  var(--rh-color-text-secondary)$2
# Secondary text color for light theme
snippet rhcolortextsecondaryonlight
  var(--rh-color-text-secondary-on-light${1:, #4d4d4d})$2
snippet 4d4d4d
  var(--rh-color-text-secondary-on-light${1:, #4d4d4d})$2
# Secondary text color for dark theme
snippet rhcolortextsecondaryondark
  var(--rh-color-text-secondary-on-dark${1:, #c7c7c7})$2
snippet c7c7c7
  var(--rh-color-text-secondary-on-dark${1:, #c7c7c7})$2
# Responsive `text-brand` color value. Typically read only - use a themable container e.g. `<rh-surface>` Resolves to `--rh-color-text-brand-on-light` on a themable container with a light color palette and `--rh-color-text-brand-on-dark` on a themable container with a dark color palette.
snippet rhcolortextbrand
  var(--rh-color-text-brand)$2
# Brand text color for light theme
snippet rhcolortextbrandonlight
  var(--rh-color-text-brand-on-light${1:, #ee0000})$2
snippet ee0000
  var(--rh-color-text-brand-on-light${1:, #ee0000})$2
# Brand text color for dark theme
snippet rhcolortextbrandondark
  var(--rh-color-text-brand-on-dark${1:, #ee0000})$2
snippet ee0000
  var(--rh-color-text-brand-on-dark${1:, #ee0000})$2
snippet rhcolorwhitehsl
  var(--rh-color-white-hsl${1:, 0 0% 100%})$2
snippet rhcolorwhitergb
  var(--rh-color-white-rgb${1:, 255 255 255})$2
snippet rhcolorblackhsl
  var(--rh-color-black-hsl${1:, 0 0% 0%})$2
snippet rhcolorblackrgb
  var(--rh-color-black-rgb${1:, 0 0 0})$2
# Heading font family
snippet rhfontfamilyheading
  var(--rh-font-family-heading${1:, RedHatDisplay, 'Red Hat Display', 'Noto Sans Arabic', 'Noto Sans Hebrew', 'Noto Sans JP', 'Noto Sans KR', 'Noto Sans Malayalam', 'Noto Sans SC', 'Noto Sans TC', 'Noto Sans Thai', Helvetica, Arial, sans-serif})$2
# Body text font family
snippet rhfontfamilybodytext
  var(--rh-font-family-body-text${1:, RedHatText, 'Red Hat Text', 'Noto Sans Arabic', 'Noto Sans Hebrew', 'Noto Sans JP', 'Noto Sans KR', 'Noto Sans Malayalam', 'Noto Sans SC', 'Noto Sans TC', 'Noto Sans Thai', Helvetica, Arial, sans-serif})$2
# Code font family
snippet rhfontfamilycode
  var(--rh-font-family-code${1:, RedHatMono, 'Red Hat Mono', 'Courier New', Courier, monospace})$2
# 12px font size
snippet rhfontsizebodytextxs
  var(--rh-font-size-body-text-xs${1:, 0.75rem})$2
# 14px font size
snippet rhfontsizebodytextsm
  var(--rh-font-size-body-text-sm${1:, 0.875rem})$2
# 16px font size
snippet rhfontsizebodytextmd
  var(--rh-font-size-body-text-md${1:, 1rem})$2
# 18px font size
snippet rhfontsizebodytextlg
  var(--rh-font-size-body-text-lg${1:, 1.125rem})$2
# 20px font size
snippet rhfontsizebodytextxl
  var(--rh-font-size-body-text-xl${1:, 1.25rem})$2
# 24px font size
snippet rhfontsizebodytext2xl
  var(--rh-font-size-body-text-2xl${1:, 1.5rem})$2
# 12px font size
snippet rhfontsizecodexs
  var(--rh-font-size-code-xs${1:, 0.75rem})$2
# 14px font size
snippet rhfontsizecodesm
  var(--rh-font-size-code-sm${1:, 0.875rem})$2
# 16px font size
snippet rhfontsizecodemd
  var(--rh-font-size-code-md${1:, 1rem})$2
# 18px font size
snippet rhfontsizecodelg
  var(--rh-font-size-code-lg${1:, 1.125rem})$2
# 20px font size
snippet rhfontsizecodexl
  var(--rh-font-size-code-xl${1:, 1.25rem})$2
# 24px font size
snippet rhfontsizecode2xl
  var(--rh-font-size-code-2xl${1:, 1.5rem})$2
# h6 heading font size
snippet rhfontsizeheadingxs
  var(--rh-font-size-heading-xs${1:, 1.25rem})$2
# h5 heading font size
snippet rhfontsizeheadingsm
  var(--rh-font-size-heading-sm${1:, 1.5rem})$2
# h4 heading font size
snippet rhfontsizeheadingmd
  var(--rh-font-size-heading-md${1:, 1.75rem})$2
# h3 heading font size
snippet rhfontsizeheadinglg
  var(--rh-font-size-heading-lg${1:, 2.25rem})$2
# h2 heading font size
snippet rhfontsizeheadingxl
  var(--rh-font-size-heading-xl${1:, 2.5rem})$2
# h1 heading font size
snippet rhfontsizeheading2xl
  var(--rh-font-size-heading-2xl${1:, 3rem})$2
# Regular font weight
snippet rhfontweightbodytextregular
  var(--rh-font-weight-body-text-regular${1:, 400})$2
# Medium font weight
snippet rhfontweightbodytextmedium
  var(--rh-font-weight-body-text-medium${1:, 500})$2
# Regular font weight
snippet rhfontweightcoderegular
  var(--rh-font-weight-code-regular${1:, 400})$2
# Medium font weight
snippet rhfontweightcodemedium
  var(--rh-font-weight-code-medium${1:, 500})$2
# Regular font weight for headings
snippet rhfontweightheadingregular
  var(--rh-font-weight-heading-regular${1:, 300})$2
# Medium font weight for headings
snippet rhfontweightheadingmedium
  var(--rh-font-weight-heading-medium${1:, 500})$2
# Bold font weight for headings
snippet rhfontweightheadingbold
  var(--rh-font-weight-heading-bold${1:, 700})$2
# Extra letter spacing for small body text sizes
snippet rhletterspacingbodytext
  var(--rh-letter-spacing-body-text${1:, 0.0125rem})$2
# Line height for headings
snippet rhlineheightheading
  var(--rh-line-height-heading${1:, 1.3})$2
# Line height for body text
snippet rhlineheightbodytext
  var(--rh-line-height-body-text${1:, 1.5})$2
# Line height for code
snippet rhlineheightcode
  var(--rh-line-height-code${1:, 1.5})$2
# 16px icon box
snippet rhsizeicon01
  var(--rh-size-icon-01${1:, 16px})$2
# 24px icon box
snippet rhsizeicon02
  var(--rh-size-icon-02${1:, 24px})$2
# 32px icon box
snippet rhsizeicon03
  var(--rh-size-icon-03${1:, 32px})$2
# 40px icon box
snippet rhsizeicon04
  var(--rh-size-icon-04${1:, 40px})$2
# 48px icon box
snippet rhsizeicon05
  var(--rh-size-icon-05${1:, 48px})$2
# 64px icon box
snippet rhsizeicon06
  var(--rh-size-icon-06${1:, 64px})$2
# 80px icon box
snippet rhsizeicon07
  var(--rh-size-icon-07${1:, 80px})$2
# 96px icon box
snippet rhsizeicon08
  var(--rh-size-icon-08${1:, 96px})$2
# 128px icon box
snippet rhsizeicon09
  var(--rh-size-icon-09${1:, 128px})$2
# Mobile portrait
snippet rhmediaxs
  var(--rh-media-xs${1:, (min-width: 576px)})$2
# Mobile landscape
snippet rhmediasm
  var(--rh-media-sm${1:, (min-width: 768px)})$2
# Tablet portrait
snippet rhmediamd
  var(--rh-media-md${1:, (min-width: 992px)})$2
# Tablet landscape
snippet rhmedialg
  var(--rh-media-lg${1:, (min-width: 1200px)})$2
# Desktop small
snippet rhmediaxl
  var(--rh-media-xl${1:, (min-width: 1440px)})$2
# Desktop Large
snippet rhmedia2xl
  var(--rh-media-2xl${1:, (min-width: 1680px)})$2
# 0% opacity
snippet rhopacity0
  var(--rh-opacity-0${1:, 0%})$2
# 10% opacity
snippet rhopacity10
  var(--rh-opacity-10${1:, 10%})$2
# 20% opacity
snippet rhopacity20
  var(--rh-opacity-20${1:, 20%})$2
# 30% opacity
snippet rhopacity30
  var(--rh-opacity-30${1:, 30%})$2
# 40% opacity
snippet rhopacity40
  var(--rh-opacity-40${1:, 40%})$2
# 50% opacity
snippet rhopacity50
  var(--rh-opacity-50${1:, 50%})$2
# 60% opacity
snippet rhopacity60
  var(--rh-opacity-60${1:, 60%})$2
# 70% opacity
snippet rhopacity70
  var(--rh-opacity-70${1:, 70%})$2
# 80% opacity
snippet rhopacity80
  var(--rh-opacity-80${1:, 80%})$2
# 90% opacity
snippet rhopacity90
  var(--rh-opacity-90${1:, 90%})$2
# 100% opacity
snippet rhopacity100
  var(--rh-opacity-100${1:, 100%})$2
# Small box shadow
snippet rhboxshadowsm
  var(--rh-box-shadow-sm${1:, 0 2px 4px 0 rgba(21, 21, 21, 0.2)})$2
# Medium box shadow
snippet rhboxshadowmd
  var(--rh-box-shadow-md${1:, 0 4px 6px 1px rgba(21, 21, 21, 0.25)})$2
# Large box shadow
snippet rhboxshadowlg
  var(--rh-box-shadow-lg${1:, 0 6px 8px 2px rgba(21, 21, 21, 0.3)})$2
# Extra large box shadow
snippet rhboxshadowxl
  var(--rh-box-shadow-xl${1:, 0 8px 24px 3px rgba(21, 21, 21, 0.35)})$2
# 1px length token
snippet rhlength4xs
  var(--rh-length-4xs${1:, 1px})$2
# 2px length token
snippet rhlength3xs
  var(--rh-length-3xs${1:, 2px})$2
# 3px length token
snippet rhlength2xs
  var(--rh-length-2xs${1:, 3px})$2
# 4px length token
snippet rhlengthxs
  var(--rh-length-xs${1:, 4px})$2
# 6px length token
snippet rhlengthsm
  var(--rh-length-sm${1:, 6px})$2
# 8px length token
snippet rhlengthmd
  var(--rh-length-md${1:, 8px})$2
# 16px length token
snippet rhlengthlg
  var(--rh-length-lg${1:, 16px})$2
# 24px length token
snippet rhlengthxl
  var(--rh-length-xl${1:, 24px})$2
# 32px length token
snippet rhlength2xl
  var(--rh-length-2xl${1:, 32px})$2
# 48px length token
snippet rhlength3xl
  var(--rh-length-3xl${1:, 48px})$2
# 64px length token
snippet rhlength4xl
  var(--rh-length-4xl${1:, 64px})$2
# 80px length token
snippet rhlength5xl
  var(--rh-length-5xl${1:, 80px})$2
# 96px length token
snippet rhlength6xl
  var(--rh-length-6xl${1:, 96px})$2
# 128px length token
snippet rhlength7xl
  var(--rh-length-7xl${1:, 128px})$2
# 4px spacer
snippet rhspacexs
  var(--rh-space-xs${1:, 4px})$2
# 6px spacer
snippet rhspacesm
  var(--rh-space-sm${1:, 6px})$2
# 8px spacer
snippet rhspacemd
  var(--rh-space-md${1:, 8px})$2
# 16px spacer
snippet rhspacelg
  var(--rh-space-lg${1:, 16px})$2
# 24px spacer
snippet rhspacexl
  var(--rh-space-xl${1:, 24px})$2
# 32px spacer
snippet rhspace2xl
  var(--rh-space-2xl${1:, 32px})$2
# 48px spacer
snippet rhspace3xl
  var(--rh-space-3xl${1:, 48px})$2
# 64px spacer
snippet rhspace4xl
  var(--rh-space-4xl${1:, 64px})$2
# 80px spacer
snippet rhspace5xl
  var(--rh-space-5xl${1:, 80px})$2
# 96px spacer
snippet rhspace6xl
  var(--rh-space-6xl${1:, 96px})$2
# 128px spacer
snippet rhspace7xl
  var(--rh-space-7xl${1:, 128px})$2