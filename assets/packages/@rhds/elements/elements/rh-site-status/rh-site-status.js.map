{"version":3,"file":"rh-site-status.js","sourceRoot":"","sources":["rh-site-status.ts"],"names":[],"mappings":"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","sourcesContent":["import { LitElement, html } from 'lit';\nimport { customElement } from 'lit/decorators/custom-element.js';\nimport { classMap } from 'lit/directives/class-map.js';\n\nimport { Logger } from '@patternfly/pfe-core/controllers/logger.js';\n\nimport { colorContextConsumer, type ColorTheme } from '../../lib/context/color/consumer.js';\n\nimport '@rhds/elements/rh-icon/rh-icon.js';\nimport '@rhds/elements/rh-spinner/rh-spinner.js';\n\n// eagerly load these to avoid icon FOUC\nimport '@rhds/icons/ui/check-circle.js';\nimport '@rhds/icons/ui/check-circle-fill.js';\nimport '@rhds/icons/ui/warning-fill.js';\nimport '@rhds/icons/ui/warning.js';\nimport '@rhds/icons/ui/error.js';\nimport '@rhds/icons/ui/error-fill.js';\n\nimport styles from './rh-site-status.css';\n\ntype Impact = 'none' | 'minor' | 'major' | 'critical';\ntype StatusKey = 'operational' | 'degraded_performance' | 'partial_outage' | 'major_outage';\n\ninterface Page {\n  id?: string;\n  name?: string;\n  updated_at?: string;\n  url: string;\n}\n\n/** @see https://metastatuspage.com/api#status */\ninterface Status {\n  description: string;\n  indicator: Impact;\n}\n\n/** @see https://metastatuspage.com/api#components */\ninterface Component {\n  status: StatusKey;\n  name: string;\n  /** ISO-8601 Date time format string */\n  created_at: string;\n  /** ISO-8601 Date time format string */\n  updated_at: string;\n  position: number;\n  description: string | null;\n  showcase: boolean;\n  /** ISO-8601 Date time format string */\n  start_date: string | null;\n  id: string;\n  page_id: string;\n  group_id: string | null;\n  components: string[];\n}\n\ninterface Incident {\n  created_at: string;\n  id: string;\n  impact: Impact;\n  name: string;\n  page_id: string;\n  status: 'investigating' | 'identified' | 'monitoring' | 'resolved' | 'postmortem';\n  resolved_at: string | null;\n  updated_at: string | null;\n  shortlink: string;\n  monitoring_at: string | null;\n  incident_updates: unknown[];\n}\n\n/** @internal */\nexport interface SummaryResponse {\n  page: Page;\n  status: Status;\n  components: Component[];\n  incidents: Incident[];\n}\n\n// map statuspage.io's text to our text; at least one of their status\n// strings is too long for the space we have\nconst TEXT_MAP = Object.freeze({\n  'Partially Degraded Service': 'Partial service',\n});\n\nconst getSummaryOrThrow = async (response: Response) => {\n  if (!response.ok) {\n    throw new Error(`${response.statusText}`);\n  } else {\n    const json = await response.json();\n    if (!isStatusPageResponse(json)) {\n      throw new Error('invalid status data');\n    } else {\n      return json;\n    }\n  }\n};\n\nconst byISO8601Property =\n  <T extends object>(key: keyof T) =>\n    (a: T, b: T) =>\n      a[key] > b[key] ? 1\n    : a[key] < b[key] ? -1\n    : 0;\n\nconst isStatusPageResponse = (data: unknown): data is SummaryResponse => {\n  return (\n    typeof data === 'object'\n    && data !== null\n    && 'page' in data\n    && 'status' in data\n    && 'components' in data\n    && 'incidents' in data\n    && typeof data.status === 'object'\n    && data.status !== null\n    && 'description' in data.status\n    && 'indicator' in data.status\n    && Array.isArray(data.components)\n  );\n};\n\n/**\n * Website status communicates the operational status of a website or domain using a status icon and\n * link. It is usually located in the Footer component.\n * @summary Communicates operational status of a website or domain\n * @slot - loading-text - Text to display while loading the status defaults to \"Loading\"\n */\n@customElement('rh-site-status')\nexport class RhSiteStatus extends LitElement {\n  static readonly styles = [styles];\n\n  private static dataURI = 'https://status.redhat.com/index.json' as const;\n\n  private static fetchOptions: RequestInit = {\n    mode: 'cors',\n    cache: 'no-cache',\n    headers: {\n      Accept: 'application/json',\n    },\n  };\n\n  /**\n   * Sets color theme based on parent context\n   */\n  @colorContextConsumer() private on?: ColorTheme;\n\n  #status: Status | null = null;\n\n  #component: Component | null = null;\n\n  #loading = true;\n\n  #logger = new Logger(this);\n\n  #domain = location.hostname;\n\n  get #icon() {\n    const status = this.#component?.status ?? this.#status?.indicator;\n    switch (status) {\n      case 'none':\n      case 'operational':\n        return { icon: 'check-circle-fill', status: 'success' };\n      case 'degraded_performance':\n      case 'partial_outage':\n      case 'major_outage':\n      case 'major':\n      case 'minor':\n        return { icon: 'warning-fill', status: 'warning' };\n      default:\n        return { icon: 'error-fill', status: 'danger' };\n    }\n  }\n\n  get #text() {\n    if (this.#component) {\n      return this.#component.description ?? this.#component.status;\n    } else if (this.#status) {\n      const statusText = this.#status.description;\n      return TEXT_MAP[statusText as keyof typeof TEXT_MAP] ?? statusText;\n    } else {\n      return 'Error loading status';\n    }\n  };\n\n  override connectedCallback() {\n    super.connectedCallback();\n    this.#fetch();\n  }\n\n  protected override render() {\n    const { on = 'light' } = this;\n    const loading = this.#loading;\n    const { icon, status } = this.#icon;\n    return html`\n      <div id=\"container\" class=\"${classMap({ on: true, [on]: true, loading })}\">\n        <a href=\"https://status.redhat.com/\"\n           aria-busy=\"${String(this.#loading) as 'true' | 'false'}\"\n           aria-live=\"polite\">${this.#loading ? html`\n          <rh-spinner size=\"sm\"></rh-spinner>\n          <span><slot name=\"loading-text\">Loading</slot></span>` : html`\n          <div id=\"icon\">\n            <rh-icon loading=\"eager\" set=\"ui\" icon=\"${icon.replace(`-fill`, '')}\"></rh-icon>\n            <rh-icon loading=\"eager\" set=\"ui\" icon=\"${icon}\" class=\"${status}\"></rh-icon>\n          </div>\n          <span>${this.#text}</span>`}\n        </a>\n      </div>\n    `;\n  }\n\n  async #fetch() {\n    try {\n      const { dataURI, fetchOptions } = RhSiteStatus;\n      const data = await fetch(dataURI, fetchOptions)\n          .then(getSummaryOrThrow);\n      const [component] = data.components\n          .filter(x => x.name === this.#domain)\n          .sort(byISO8601Property('updated_at'));\n      this.#component = component ?? null;\n      this.#status = data.status;\n    } catch (error) {\n      this.#logger.warn('Error loading site status:', error);\n    } finally {\n      this.#loading = false;\n      this.requestUpdate();\n    }\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'rh-site-status': RhSiteStatus;\n  }\n}\n"]}