{"version":3,"file":"rh-sort-button.js","sourceRoot":"","sources":["rh-sort-button.ts"],"names":[],"mappings":";AAAA,OAAO,EAAE,UAAU,EAAE,IAAI,EAAE,GAAG,EAAE,MAAM,KAAK,CAAC;AAG5C,OAAO,EAAE,QAAQ,EAAE,MAAM,6BAA6B,CAAC;AAEvD,OAAO,EAAE,aAAa,EAAE,MAAM,sBAAsB,CAAC;AAErD,OAAO,EAAE,oBAAoB,EAAmB,MAAM,qCAAqC,CAAC;;;AAI5F,MAAM,oBAAoB,GAAG,EAAE,GAAG,EAAE,MAAM,EAAE,IAAI,EAAE,KAAK,EAAW,CAAC;AAEnE,MAAM,OAAO,gBAAiB,SAAQ,aAAa;IACjD,YAAmB,SAAyB;QAC1C,KAAK,CAAC,cAAc,EAAE;YACpB,UAAU,EAAE,IAAI;SACjB,CAAC,CAAC;QAHc,cAAS,GAAT,SAAS,CAAgB;IAI5C,CAAC;CACF;AAED,MAAM,KAAK,GAAG,IAAI,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC;IACnC,8CAA8C;IAC9C,GAAG,EAAE,sGAAsG;IAC3G,8CAA8C;IAC9C,IAAI,EAAE,qGAAqG;IAC3G,8CAA8C;IAC9C,IAAI,EAAE,wMAAwM;CAC/M,CAAC,CAAC,CAAC;AAEJ;;;;;;;GAOG;AAEH,MAAM,OAAO,YAAa,SAAQ,UAAU;IAc1C,MAAM;QACJ,MAAM,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,IAAI,CAAC;QACzB,OAAO,IAAI,CAAA;4DAC6C,IAAI,CAAC,IAAI,8BAA8B,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC;wCACnF,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,OAAO,IAAI,CAAC,MAAM,EAAE,OAAO,IAAI,CAAC,aAAa,KAAK,KAAK,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,YAAY,SAAS;;;;;;;;;cAS9K,GAAG,CAAA,YAAY,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,aAAa,IAAI,MAAM,CAAC,WAAW;;;;KAI1E,CAAC;IACJ,CAAC;IAED;;OAEG;IACH,IAAI;QACF,MAAM,IAAI,GAAG,oBAAoB,CAAC,IAAI,CAAC,aAAa,IAAI,KAAK,CAAC,CAAC;QAC/D,IAAI,CAAC,aAAa,CAAC,IAAI,gBAAgB,CAAC,IAAI,CAAC,CAAC,CAAC;IACjD,CAAC;;;mBAlCS;QACR,OAAO,EAAE,IAAI;QACb,SAAS,EAAE,gBAAgB;KAC5B;;;AARe,mBAAM,GAAG,CAAC,MAAM,CAAC,AAAX,CAAY;AAEF;IAA/B,oBAAoB,EAAE;wCAAyB","sourcesContent":["import { LitElement, html, svg } from 'lit';\nimport { customElement } from 'lit/decorators/custom-element.js';\nimport { property } from 'lit/decorators/property.js';\nimport { classMap } from 'lit/directives/class-map.js';\n\nimport { ComposedEvent } from '@patternfly/pfe-core';\n\nimport { colorContextConsumer, type ColorTheme } from '../../lib/context/color/consumer.js';\n\nimport styles from './rh-sort-button.css';\n\nconst DIRECTIONS_OPPOSITES = { asc: 'desc', desc: 'asc' } as const;\n\nexport class RequestSortEvent extends ComposedEvent {\n  constructor(public direction: 'asc' | 'desc') {\n    super('request-sort', {\n      cancelable: true,\n    });\n  }\n}\n\nconst paths = new Map(Object.entries({\n  // eslint-disable-next-line @stylistic/max-len\n  asc: 'M279 224H41c-21.4 0-32.1-25.9-17-41L143 64c9.4-9.4 24.6-9.4 33.9 0l119 119c15.2 15.1 4.5 41-16.9 41z',\n  // eslint-disable-next-line @stylistic/max-len\n  desc: 'M41 288h238c21.4 0 32.1 25.9 17 41L177 448c-9.4 9.4-24.6 9.4-33.9 0L24 329c-15.1-15.1-4.4-41 17-41z',\n  // eslint-disable-next-line @stylistic/max-len\n  sort: 'M41 288h238c21.4 0 32.1 25.9 17 41L177 448c-9.4 9.4-24.6 9.4-33.9 0L24 329c-15.1-15.1-4.4-41 17-41zm255-105L177 64c-9.4-9.4-24.6-9.4-33.9 0L24 183c-15.1 15.1-4.4 41 17 41h238c21.4 0 32.1-25.9 17-41z',\n}));\n\n/**\n * Table sort button\n *\n * @csspart sort-button    - button element\n * @csspart sort-indicator - icon wrapper element\n *\n * @fires {RequestSortEvent} request-sort - when the button is clicked\n */\n@customElement('rh-sort-button')\nexport class RhSortButton extends LitElement {\n  static readonly styles = [styles];\n\n  @colorContextConsumer() private on?: ColorTheme;\n\n  /** The button's sorting order */\n  @property({\n    reflect: true,\n    attribute: 'sort-direction',\n  }) sortDirection?: 'asc' | 'desc';\n\n  /** The column name associated with this button (for screen readers) */\n  @property() column?: string;\n\n  render() {\n    const { on = '' } = this;\n    return html`\n      <button id=\"sort-button\" part=\"sort-button\" @click=\"${this.sort}\" aria-label=\"Sort\" class=\"${classMap({ [on]: !!on })}\">\n        <span class=\"visually-hidden\">${!this.sortDirection ? '' : `(sort${!this.column ? '' : ` by ${this.column}`} in ${this.sortDirection === 'asc' ? 'ascending' : 'descending'} order)`}</span>\n        <span id=\"sort-indicator\" part=\"sort-indicator\">\n          <svg fill=\"currentColor\" \n               height=\"1em\"\n               width=\"1em\"\n               viewBox=\"0 0 320 512\"\n               aria-hidden=\"true\"\n               role=\"img\"\n               style=\"vertical-align: -0.125em;\">\n            ${svg`<path d=\"${paths.get(this.sortDirection ?? 'sort')}\"></path>`}\n          </svg>\n        </span>\n      </button>\n    `;\n  }\n\n  /**\n   * Dispatch a request-sort event in ascending (asc) or descending (desc) order\n   */\n  sort() {\n    const next = DIRECTIONS_OPPOSITES[this.sortDirection ?? 'asc'];\n    this.dispatchEvent(new RequestSortEvent(next));\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'rh-sort-button': RhSortButton;\n  }\n}\n"]}