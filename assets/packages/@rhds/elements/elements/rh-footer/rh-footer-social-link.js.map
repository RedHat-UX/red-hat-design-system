{"version":3,"file":"rh-footer-social-link.js","sourceRoot":"","sources":["rh-footer-social-link.ts"],"names":[],"mappings":";AAEA,OAAO,EAAE,UAAU,EAAE,IAAI,EAAE,QAAQ,EAAE,MAAM,KAAK,CAAC;AACjD,OAAO,EAAE,aAAa,EAAE,MAAM,kCAAkC,CAAC;AACjE,OAAO,EAAE,QAAQ,EAAE,MAAM,4BAA4B,CAAC;AACtD,OAAO,EAAE,SAAS,EAAE,MAAM,mCAAmC,CAAC;;;AAK9D;;GAEG;AAEI,IAAM,kBAAkB,GAAxB,MAAM,kBAAmB,SAAQ,UAAU;IAYhD,iBAAiB;QACf,KAAK,CAAC,iBAAiB,EAAE,CAAC;QAC1B,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC;IACxC,CAAC;IAED,MAAM;QACJ,OAAO,IAAI,CAAA;iBACE,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,iBAAiB,SAAS,CAAC,IAAI,CAAC,eAAe,CAAC;;gBAErE,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAA,+BAA+B,IAAI,CAAC,IAAI,cAAc,CAAC,CAAC,CAAC,EAAE;;KAEtF,CAAC;IACJ,CAAC;IAED,OAAO;QACL,IAAI,MAAM,CAAC;QACX,IAAI,CAAC,QAAQ,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC;YACpD,MAAM,MAAM,GAAG,MAAM,CAAC,SAAS,CAAC,IAAI,CAAY,CAAC;YACjD,+BAA+B;YAC/B,MAAM,CAAC,gBAAgB,CAAC,aAAa,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC;YAChE,+EAA+E;YAC/E,uDAAuD;YACvD,MAAM,CAAC,SAAS;gBACd,kBAAkB,IAAI,CAAC,IAAI,IAAI,EAAE,kCAAkC,MAAM,CAAC,SAAS,YAAY,CAAC;YAClG,oBAAoB;YACpB,MAAM,CAAC,YAAY,CAAC,YAAY,EAAE,MAAM,CAAC,WAAW,IAAI,EAAE,CAAC,CAAC;YAC5D,MAAM,CAAC,UAAU,EAAE,YAAY,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;QAClD,CAAC;IACH,CAAC;;AAvCe,yBAAM,GAAG,KAAK,AAAR,CAAS;AAGnB;IAAX,QAAQ,EAAE;gDAA8B;AAG7B;IAAX,QAAQ,EAAE;gDAAe;AAGmB;IAA5C,QAAQ,CAAC,EAAE,SAAS,EAAE,kBAAkB,EAAE,CAAC;2DAA0B;AAV3D,kBAAkB;IAD9B,aAAa,CAAC,uBAAuB,CAAC;GAC1B,kBAAkB,CAyC9B","sourcesContent":["import type { IconNameFor } from '@rhds/icons';\n\nimport { LitElement, html, isServer } from 'lit';\nimport { customElement } from 'lit/decorators/custom-element.js';\nimport { property } from 'lit/decorators/property.js';\nimport { ifDefined } from 'lit-html/directives/if-defined.js';\n\nimport style from './rh-footer-social-link.css';\n\n\n/**\n * Social media links for Red Hat Footer\n */\n@customElement('rh-footer-social-link')\nexport class RhFooterSocialLink extends LitElement {\n  static readonly styles = style;\n\n  /** Icon for this social link e.g. `'facebook'` */\n  @property() icon?: IconNameFor<'social'>;\n\n  /** Social link address */\n  @property() href?: string;\n\n  /** Textual label for the social link e.g. \"Instagram\" */\n  @property({ attribute: 'accessible-label' }) accessibleLabel?: string;\n\n  connectedCallback() {\n    super.connectedCallback();\n    this.setAttribute('role', 'listitem');\n  }\n\n  render() {\n    return html`\n      <a href=\"${ifDefined(this.href)}\" aria-label=\"${ifDefined(this.accessibleLabel)}\">\n        <!-- Optional icon for social link. Use only when suitable icon is unavailable with \\`<rh-icon>\\` -->\n        <slot>${this.icon ? html`<rh-icon set=\"social\" icon=\"${this.icon}\"></rh-icon>` : ''}</slot>\n      </a>\n    `;\n  }\n\n  updated() {\n    let oldDiv;\n    if (!isServer && (oldDiv = this.querySelector('a'))) {\n      const newDiv = oldDiv.cloneNode(true) as Element;\n      // remove the _rendered content\n      newDiv.querySelectorAll('[_rendered]').forEach(i => i.remove());\n      // NB: icons are restricted to social set, so as not to require a minor release\n      // rh-icon is slated to deal with this problem in-house\n      newDiv.innerHTML =\n        `<rh-icon icon=\"${this.icon ?? ''}\" set=\"social\" loading=\"eager\">${newDiv.innerHTML}</rh-icon>`;\n      // add a11y settings\n      newDiv.setAttribute('aria-label', newDiv.textContent || '');\n      oldDiv.parentNode?.replaceChild(newDiv, oldDiv);\n    }\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'rh-footer-social-link': RhFooterSocialLink;\n  }\n}\n"]}