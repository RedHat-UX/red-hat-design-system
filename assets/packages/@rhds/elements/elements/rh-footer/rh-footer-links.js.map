{"version":3,"file":"rh-footer-links.js","sourceRoot":"","sources":["rh-footer-links.ts"],"names":[],"mappings":";;AAAA,OAAO,EAAE,UAAU,EAAE,IAAI,EAAE,MAAM,KAAK,CAAC;AACvC,OAAO,EAAE,aAAa,EAAE,MAAM,kCAAkC,CAAC;AACjE,OAAO,EAAE,QAAQ,EAAE,MAAM,4BAA4B,CAAC;AACtD,OAAO,EAAE,cAAc,EAAE,MAAM,qDAAqD,CAAC;AACrF,OAAO,EAAE,MAAM,EAAE,MAAM,4CAA4C,CAAC;AACpE,OAAO,EAAE,WAAW,EAAE,MAAM,0CAA0C,CAAC;;;AAKhE,IAAM,aAAa,GAAnB,MAAM,aAAc,SAAQ,UAAU;IAAtC;;QAGL;;;WAGG;QAKA,iBAAY,GAAG,KAAK,CAAC;QAExB,gCAAU,IAAI,MAAM,CAAC,IAAI,CAAC,EAAC;QAE3B,4BAAM,IAAI,gBAAgB,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,mBAAmB,EAAE,CAAC,EAAC;QAEnD,UAAK,GAAG,IAAI,cAAc,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;IAgCvD,CAAC;IA9BC,iBAAiB;QACf,KAAK,CAAC,iBAAiB,EAAE,CAAC;QAC1B,IAAI,CAAC,mBAAmB,EAAE,CAAC;QAC3B,uBAAA,IAAI,yBAAI,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,CAAC;IAC9C,CAAC;IAED,mBAAmB;QACjB,0CAA0C;QAC1C,MAAM,MAAM,GAAG,IAAI,CAAC,aAAa,CAAC,iBAAiB,CAAC,CAAC;QACrD,MAAM,EAAE,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;QACpC,IAAI,MAAM,IAAI,EAAE,EAAE,CAAC;YACjB,2CAA2C;YAC3C,MAAM,CAAC,EAAE,KAAT,MAAM,CAAC,EAAE,GAAK,WAAW,CAAC,iBAAiB,CAAC,EAAC;YAC7C,EAAE,CAAC,YAAY,CAAC,iBAAiB,EAAE,MAAM,CAAC,EAAE,CAAC,CAAC;QAChD,CAAC;aAAM,CAAC;YACN,uBAAA,IAAI,6BAAQ,CAAC,IAAI,CAAC,iEAAiE,CAAC,CAAC;QACvF,CAAC;IACH,CAAC;IAED,MAAM;QACJ,OAAO,IAAI,CAAA;;;;;;;;KAQV,CAAC;IACJ,CAAC;;;;AA/Ce,oBAAM,GAAG,KAAK,AAAR,CAAS;AAU5B;IAJF,QAAQ,CAAC;QACR,IAAI,EAAE,OAAO;QACb,SAAS,EAAE,eAAe;QAC1B,OAAO,EAAE,IAAI;KACd,CAAC;mDAAsB;AAXb,aAAa;IADzB,aAAa,CAAC,iBAAiB,CAAC;GACpB,aAAa,CAiDzB","sourcesContent":["import { LitElement, html } from 'lit';\nimport { customElement } from 'lit/decorators/custom-element.js';\nimport { property } from 'lit/decorators/property.js';\nimport { SlotController } from '@patternfly/pfe-core/controllers/slot-controller.js';\nimport { Logger } from '@patternfly/pfe-core/controllers/logger.js';\nimport { getRandomId } from '@patternfly/pfe-core/functions/random.js';\n\nimport style from './rh-footer-links.css';\n\n@customElement('rh-footer-links')\nexport class RhFooterLinks extends LitElement {\n  static readonly styles = style;\n\n  /**\n   * Cause the header slot to be visually hidden.\n   * Setting this to true will not affect `aria-labelledby`.\n   */\n  @property({\n    type: Boolean,\n    attribute: 'header-hidden',\n    reflect: true,\n  }) headerHidden = false;\n\n  #logger = new Logger(this);\n\n  #mo = new MutationObserver(() => this.updateAccessibility());\n\n  protected slots = new SlotController(this, 'header');\n\n  connectedCallback() {\n    super.connectedCallback();\n    this.updateAccessibility();\n    this.#mo.observe(this, { childList: true });\n  }\n\n  updateAccessibility() {\n    // ensure we've rendered to our shadowroot\n    const header = this.querySelector('[slot=\"header\"]');\n    const ul = this.querySelector('ul');\n    if (header && ul) {\n      // ensure there is an id on the header slot\n      header.id ||= getRandomId('rh-footer-links');\n      ul.setAttribute('aria-labelledby', header.id);\n    } else {\n      this.#logger.warn('This links set doesn\\'t have a valid header associated with it.');\n    }\n  }\n\n  render() {\n    return html`\n      <div part=\"header\" class=\"header\">\n        <slot name=\"header\"></slot>\n      </div>\n      <div part=\"default\" class=\"default\">\n        <slot name=\"panel\"></slot>\n        <slot></slot>\n      </div>\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'rh-footer-links': RhFooterLinks;\n  }\n}\n"]}