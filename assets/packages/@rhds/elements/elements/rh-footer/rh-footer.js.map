{"version":3,"file":"rh-footer.js","sourceRoot":"","sources":["rh-footer.ts"],"names":[],"mappings":";;AAAA,OAAO,EAAE,UAAU,EAAE,IAAI,EAAE,MAAM,KAAK,CAAC;AAGvC,OAAO,EAAE,QAAQ,EAAE,MAAM,6BAA6B,CAAC;AAEvD,OAAO,EAAE,WAAW,EAAE,MAAM,0CAA0C,CAAC;AACvE,OAAO,EAAE,MAAM,EAAE,MAAM,4CAA4C,CAAC;AACpE,OAAO,mCAAmC,CAAC;AAC3C,OAAO,6CAA6C,CAAC;AAErD,OAAO,EAAE,iBAAiB,EAAE,MAAM,0BAA0B,CAAC;AAC7D,OAAO,4BAA4B,CAAC;AACpC,OAAO,sBAAsB,CAAC;AAC9B,OAAO,sBAAsB,CAAC;;;AAG9B,OAAO,EAAE,oBAAoB,EAAqB,MAAM,qCAAqC,CAAC;AAC9F,OAAO,EAAE,oBAAoB,EAAE,MAAM,mCAAmC,CAAC;AAEzE,SAAS,eAAe,CAAC,OAAe;IACtC,OAAO,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;AACtC,CAAC;AAED;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAmCG;AAEH,MAAM,OAAO,QAAS,SAAQ,UAAU;;;;QAiBtC,2BAAU,IAAI,MAAM,CAAC,IAAI,CAAC,EAAC;QAE3B,4BAAW,KAAK,EAAC;QAKjB;;;WAGG;QACO,eAAU,GAAG,IAAI,oBAAoB,CAAC,IAAI,EAAE,IAAI,EAAE;YAC1D,QAAQ,EAAE,OAAO,CAAC,EAAE;gBAClB,uBAAA,IAAI,qBAAY,CAAC,OAAO,MAAA,CAAC;YAC3B,CAAC;SACF,CAAC,CAAC;QAXH,oBACsF,QAAQ,CAAC;;IAjB/F;;;OAGG;IACH,MAAM,CAAC,YAAY,CAAC,gBAA8B;QAChD,MAAM,GAAG,GAAG,IAAI,GAAG,CAAC,gBAAgB,EAAE,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACvD,IAAI,GAAG,CAAC,QAAQ,KAAK,OAAO,EAAE,CAAC;YAC7B,OAAO,IAAI,GAAG,CAAC,gBAAgB,EAAE,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;QACzD,CAAC;QACD,OAAO,GAAG,CAAC;IACb,CAAC;IAmBQ,iBAAiB;QACxB,KAAK,CAAC,iBAAiB,EAAE,CAAC;QAC1B,uBAAA,IAAI,qBAAY,CAAC,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,MAAA,CAAC;QACnD,yDAAyD;QACzD,IAAI,CAAC,mBAAmB,EAAE,CAAC;IAC7B,CAAC;IAEQ,MAAM;QACb,OAAO,IAAI,CAAA;4BACa,QAAQ,CAAC,EAAE,QAAQ,EAAE,uBAAA,IAAI,yBAAS,EAAE,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;sBAmC3C,uBAAA,IAAI,0DAAqB,MAAzB,IAAI,EAAsB,uBAAA,IAAI,yBAAS,CAAC;;;;;;;;;;;;KAYzD,CAAC;IACJ,CAAC;IAmCD;;;OAGG;IACI,mBAAmB;QACxB,KAAK,MAAM,IAAI,IAAI,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,cAAc,CAAC,EAAE,CAAC;YAClE,0DAA0D;YAC1D,gCAAgC;YAChC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,iBAAiB,CAAC,EAAE,CAAC;gBAC1C,mEAAmE;gBACnE,MAAM,MAAM,GACV,eAAe,CAAC,IAAI,CAAC,sBAAsB,EAAE,OAAO,IAAI,EAAE,CAAC,CAAC,CAAC;oBAC3D,IAAI,CAAC,sBAAsB;oBAC3B,CAAC,CAAC,IAAI,CAAC;gBACX,IAAI,CAAC,MAAM,EAAE,CAAC;oBACZ,OAAO,uBAAA,IAAI,wBAAQ,CAAC,IAAI,CACtB,iEAAiE,CAClE,CAAC;gBACJ,CAAC;qBAAM,CAAC;oBACN,wCAAwC;oBACxC,MAAM,CAAC,EAAE,KAAT,MAAM,CAAC,EAAE,GAAK,WAAW,CAAC,WAAW,CAAC,EAAC;oBACvC,sDAAsD;oBACtD,IAAI,CAAC,YAAY,CAAC,iBAAiB,EAAE,MAAM,CAAC,EAAE,CAAC,CAAC;gBAClD,CAAC;YACH,CAAC;QACH,CAAC;IACH,CAAC;;iLA3DoB,QAAQ,GAAG,KAAK;IACnC,qEAAqE;IACrE,wDAAwD;IACxD,MAAM,QAAQ,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,wBAAwB,CAAC,CAAC,CAAC;IAE7E,6CAA6C;IAC7C,QAAQ,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC,KAAK,CAAC,YAAY,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;IAE9F,OAAO,CAAC,CAAC,QAAQ,IAAI,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,CAAA;;OAElC,CAAC,CAAC,CAAC,IAAI,CAAA;;wDAE0C,QAAQ,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,CAAC,EAAE,EAAE;QACxE,MAAM,IAAI,GAAG,eAAe,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,OAAO,CAAC;QACjE,iEAAiE;QACjE,QAAQ,IAAI,EAAE,CAAC;YACb,KAAK,QAAQ,CAAC,CAAC,OAAO,IAAI,CAAA;;oCAEF,CAAC;qCACA,CAAC;YAC1B,KAAK,OAAO,CAAC,CAAC,OAAO,IAAI,CAAA;;oCAED,CAAC;oCACD,CAAC;QAC3B,CAAC;IACH,CAAC,CAAC;;KAEL,CAAC;AACJ,CAAC;;kBAnGS,EAAE,OAAO,EAAE,IAAI,EAAE,SAAS,EAAE,eAAe,EAAE;;AArBvC,gBAAO,GAAG,aAAa,AAAhB,CAAiB;AAExB,eAAM,GAAG,CAAC,KAAK,CAAC,AAAV,CAAW;AAwHlB,uBAAc,GAC3B,qFAAqF,AAD1D,CAC2D","sourcesContent":["import { LitElement, html } from 'lit';\nimport { property } from 'lit/decorators/property.js';\nimport { customElement } from 'lit/decorators/custom-element.js';\nimport { classMap } from 'lit/directives/class-map.js';\n\nimport { getRandomId } from '@patternfly/pfe-core/functions/random.js';\nimport { Logger } from '@patternfly/pfe-core/controllers/logger.js';\nimport '@rhds/elements/rh-icon/rh-icon.js';\nimport '@rhds/elements/rh-accordion/rh-accordion.js';\n\nexport { RhFooterUniversal } from './rh-footer-universal.js';\nimport './rh-footer-social-link.js';\nimport './rh-footer-links.js';\nimport './rh-footer-block.js';\n\nimport style from './rh-footer.css';\nimport { colorContextProvider, type ColorPalette } from '../../lib/context/color/provider.js';\nimport { ScreenSizeController } from '../../lib/ScreenSizeController.js';\n\nfunction isHeaderTagName(tagName: string) {\n  return !!tagName.match(/^H[1-6]$/i);\n}\n\n/**\n * A footer displays secondary content and legal information to users who reach the bottom of a page.\n * @summary Displays secondary information at the bottom of a page\n * @csspart base - main footer element, containing all footer content\n * @slot    base - Overrides everything. Do not use.\n * @slot    header - Overrides `header-*`, `logo`, `social-links`\n * @csspart header - footer header, typically containing main logo and social links\n * @slot    header-primary - primary footer header content, e.g. main logo. Overrides `logo`\n * @csspart header-primary - primary footer header content, e.g. main logo\n * @slot    header-secondary - secondary footer header content, e.g. social links. Overrides `social-links`\n * @csspart header-secondary - secondary footer header content, e.g. social links\n * @slot    heading - text that describes the footer section to assistive tecchnology. Contains default text \"Red Hat footer\".\n * @slot    logo - main page or product logo. Defaults to Red Hat corporate logo\n * @csspart logo - main page or product logo container\n * @slot    social-links - social media links (icons). Contains a default set of links\n * @csspart social-links - social links container `<rh-footer-links>`\n * @slot    main - main footer content. Overrides `main-*`\n * @csspart main - main content container.\n * @slot    main-primary - main footer region. typically a columnar grid\n * @csspart main-primary - container for main footer links\n * @slot    links - main footer links\n * @csspart links - container for main footer links\n * @csspart links-accordion-header - mobile links accordion header element\n * @csspart links-accordion-panel - mobile links panel container element\n * @slot    main-secondary - typically contains prose or promotional content\n * @csspart main-secondary - container fro prose or promotional content\n * @slot    universal - must contain `<rh-footer-universal>`\n * @cssprop [--rh-footer-icon-color=#8a8d90]\n * @cssprop [--rh-footer-icon-color-hover=#b8bbbe]\n * @cssprop [--rh-footer-border-color=#6a6e73]\n * @cssprop [--rh-footer-accent-color=#e00]\n * @cssprop [--rh-footer-section-side-gap=16px]\n * @cssprop [--rh-footer-links-gap=8px]\n * @cssprop [--rh-footer-link-header-font-size=0.875em]\n * @cssprop [--rh-footer-nojs-min-height=750px]\n */\n@customElement('rh-footer')\nexport class RhFooter extends LitElement {\n  static readonly version = '{{version}}';\n\n  static readonly styles = [style];\n\n  /**\n   * Isomorphic import.meta.url function\n   * Requires a node.js dom shim that sets window.location\n   */\n  static getImportURL(relativeLocation: string | URL): string | URL {\n    const url = new URL(relativeLocation, import.meta.url);\n    if (url.protocol === 'file:') {\n      return new URL(relativeLocation, window.location.href);\n    }\n    return url;\n  }\n\n  #logger = new Logger(this);\n\n  #compact = false;\n\n  @colorContextProvider()\n  @property({ reflect: true, attribute: 'color-palette' }) colorPalette: ColorPalette = 'darker';\n\n  /**\n   * ScreenSizeController effects callback to set #compact is true when viewport\n   * `(min-width: ${tabletLandscapeBreakpoint})`.\n   */\n  protected screenSize = new ScreenSizeController(this, 'md', {\n    onChange: matches => {\n      this.#compact = !matches;\n    },\n  });\n\n  override connectedCallback() {\n    super.connectedCallback();\n    this.#compact = !this.screenSize.matches.has('md');\n    // wire up accessibility aria-labels with unordered lists\n    this.updateAccessibility();\n  }\n\n  override render() {\n    return html`\n      <footer class=\"base ${classMap({ isMobile: this.#compact })}\" part=\"base\">\n        <h2 id=\"heading\"><slot name=\"heading\">Red Hat footer</slot></h2>\n        <slot name=\"base\">\n          <div class=\"section header\" part=\"section header\">\n            <slot name=\"header\">\n              <div class=\"header-primary\" part=\"header-primary\">\n                <slot name=\"header-primary\">\n                  <div class=\"logo\" part=\"logo\">\n                    <slot name=\"logo\">\n                      <a href=\"/\">\n                        <img alt=\"Red Hat\" src=\"https://static.redhat.com/libs/redhat/brand-assets/2/corp/logo--on-dark.svg\"/>\n                      </a>\n                    </slot>\n                  </div>\n                </slot>\n              </div>\n              <div class=\"header-secondary\" part=\"header-secondary\">\n                <slot name=\"header-secondary\">\n                  <div class=\"social-links\">\n                    <rh-footer-links class=\"social-links-item\"\n                      part=\"social-links\"\n                      aria-label=\"Red Hat social media links\"\n                      role=\"list\">\n                      <slot name=\"social-links\"></slot>\n                    </rh-footer-links>\n                  </div>\n                </slot>\n              </div>\n            </slot>\n          </div>\n          <div class=\"section main\" part=\"section main\">\n            <slot name=\"main\">\n              <div class=\"main-primary\" part=\"main-primary\">\n                <slot name=\"main-primary\">\n                  <div class=\"links\" part=\"links\">\n                    ${this.#renderLinksTemplate(this.#compact)}\n                  </div>\n                </slot>\n              </div>\n              <div class=\"main-secondary\" part=\"main-secondary\">\n                <slot name=\"main-secondary\"></slot>\n              </div>\n            </slot>\n          </div>\n          <slot name=\"universal\"></slot>\n        </slot>\n      </footer>\n    `;\n  }\n\n  #renderLinksTemplate(isMobile = false) {\n    // gather all of the links that need to be wrapped into the accordion\n    // give them a designation of either 'header' or 'panel'\n    const children = Array.from(this.querySelectorAll(':scope > [slot^=links]'));\n\n    // Update the dynamic slot names if on mobile\n    children.forEach((child, i) => child.setAttribute('slot', isMobile ? `links-${i}` : 'links'));\n\n    return !(isMobile && children) ? html`\n      <slot name=\"links\"></slot>\n      ` : html`\n\n      <rh-accordion on=\"dark\" color-palette=\"darkest\">${children.map((child, i) => {\n          const type = isHeaderTagName(child.tagName) ? 'header' : 'panel';\n          // SEE https://github.com/asyncLiz/minify-html-literals/issues/37\n          switch (type) {\n            case 'header': return html`\n              <rh-accordion-header part=\"links-accordion-header\">\n                <slot name=\"links-${i}\"></slot>\n              </rh-accordion-header>`;\n            case 'panel': return html`\n              <rh-accordion-panel part=\"links-accordion-panel\">\n                <slot name=\"links-${i}\"></slot>\n              </rh-accordion-panel>`;\n          }\n        })}\n      </rh-accordion>\n    `;\n  }\n\n  private static LISTS_SELECTOR =\n    ':is([slot^=links],[slot=footer-links-primary],[slot=footer-links-secondary]):is(ul)';\n\n  /**\n   * Get any `<ul>`s that are in the designated link slots\n   * and synchronously update each list and header if we need to.\n   */\n  public updateAccessibility(): void {\n    for (const list of this.querySelectorAll(RhFooter.LISTS_SELECTOR)) {\n      // if we already have a label then we assume that the user\n      // has wired this up themselves.\n      if (!list.hasAttribute('aria-labelledby')) {\n        // get the corresponding header that should be the previous sibling\n        const header =\n          isHeaderTagName(list.previousElementSibling?.tagName ?? '') ?\n            list.previousElementSibling\n            : null;\n        if (!header) {\n          return this.#logger.warn(\n            'This links set doesn\\'t have a valid header associated with it.'\n          );\n        } else {\n          // add an ID to the header if we need it\n          header.id ||= getRandomId('rh-footer');\n          // add that header id to the aria-labelledby attribute\n          list.setAttribute('aria-labelledby', header.id);\n        }\n      }\n    }\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'rh-footer': RhFooter;\n  }\n}\n"]}