{"version":3,"file":"rh-accordion-header.js","sourceRoot":"","sources":["rh-accordion-header.ts"],"names":[],"mappings":";;AAEA,OAAO,EAAE,IAAI,EAAE,MAAM,KAAK,CAAC;AAC3B,OAAO,EAAE,QAAQ,EAAE,MAAM,6BAA6B,CAAC;AACvD,OAAO,EAAE,aAAa,EAAE,MAAM,kCAAkC,CAAC;AACjE,OAAO,EAAE,QAAQ,EAAE,MAAM,4BAA4B,CAAC;AAEtD,OAAO,EAAE,aAAa,EAAE,MAAM,4BAA4B,CAAC;AAE3D,OAAO,EAAE,oBAAoB,EAAmB,MAAM,qCAAqC,CAAC;AAE5F,OAAO,EAAE,mBAAmB,EAAE,MAAM,0DAA0D,CAAC;;;AAK/F;;;;;;;;;;;;;;;GAeG;AAEI,IAAM,iBAAiB,GAAvB,MAAM,iBAAkB,SAAQ,mBAAmB;IAAnD;;QAKwB,SAAI,GAAG,YAAY,CAAC;QAEL,aAAQ,GAAG,KAAK,CAAC;QAE7D,iCAAO,IAAI,aAAa,CAAC,IAAI,CAAC,EAAC;IAqBjC,CAAC;IAjBU,MAAM;QACb,MAAM,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,IAAI,CAAC;QACzB,MAAM,GAAG,GAAG,uBAAA,IAAI,8BAAK,CAAC,GAAG,KAAK,KAAK,CAAC;QACpC,OAAO,IAAI,CAAA;mCACoB,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,GAAG,EAAE,CAAC,sBAAsB,KAAK,CAAC,MAAM,EAAE;KAC/F,CAAC;IACJ,CAAC;IAED,iBAAiB;QACf,+BAA+B;QAC/B,oCAAoC;QACpC,OAAO,IAAI,CAAA;;;;KAIV,CAAC;IACJ,CAAC;;;AA5Be,yBAAO,GAAG,aAAa,CAAC;AAExB,wBAAM,GAAG,CAAC,GAAG,mBAAmB,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;AAEpC;IAA5B,QAAQ,CAAC,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;+CAAqB;AAEL;IAA3C,QAAQ,CAAC,EAAE,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;mDAAkB;AAIrC;IAAvB,oBAAoB,EAAE;6CAAyB;AAXrC,iBAAiB;IAD7B,aAAa,CAAC,qBAAqB,CAAC;GACxB,iBAAiB,CA8B7B;SA9BY,iBAAiB","sourcesContent":["import type { TemplateResult } from 'lit';\n\nimport { html } from 'lit';\nimport { classMap } from 'lit/directives/class-map.js';\nimport { customElement } from 'lit/decorators/custom-element.js';\nimport { property } from 'lit/decorators/property.js';\n\nimport { DirController } from '../../lib/DirController.js';\n\nimport { colorContextConsumer, type ColorTheme } from '../../lib/context/color/consumer.js';\n\nimport { BaseAccordionHeader } from '@patternfly/elements/pf-accordion/BaseAccordionHeader.js';\n\nimport styles from './rh-accordion-header.css';\n\n\n/**\n * Accordion Header\n *\n * @csspart text - inline element containing the heading text or slotted heading content\n * @csspart accents - container for accents within the header\n * @csspart icon - caret icon\n *\n * @slot\n *       We expect the light DOM of the rh-accordion-header to be a heading level tag (h1, h2, h3, h4, h5, h6)\n * @slot accents\n *       These elements will appear inline with the accordion header, between the header and the chevron\n *       (or after the chevron and header in disclosure mode).\n *\n * @fires {AccordionHeaderChangeEvent} change - when the open panels change\n *\n */\n@customElement('rh-accordion-header')\nexport class RhAccordionHeader extends BaseAccordionHeader {\n  static readonly version = '{{version}}';\n\n  static readonly styles = [...BaseAccordionHeader.styles, styles];\n\n  @property({ reflect: true }) icon = 'angle-down';\n\n  @property({ reflect: true, type: Boolean }) expanded = false;\n\n  #dir = new DirController(this);\n\n  @colorContextConsumer() private on?: ColorTheme;\n\n  override render(): TemplateResult {\n    const { on = '' } = this;\n    const rtl = this.#dir.dir === 'rtl';\n    return html`\n      <div id=\"container\" class=\"${classMap({ [on]: !!on, rtl })}\" part=\"container\">${super.render()}</div>\n    `;\n  }\n\n  renderAfterButton() {\n    // Font-Awesome free angle-down\n    // TODO: use rh-icon when it's ready\n    return html`\n      <svg id=\"icon\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 448 512\">\n        <path d=\"M201.4 374.6c12.5 12.5 32.8 12.5 45.3 0l160-160c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0L224 306.7 86.6 169.4c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3l160 160z\"/>\n      </svg>\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'rh-accordion-header': RhAccordionHeader;\n  }\n}\n"]}