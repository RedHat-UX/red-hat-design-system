{"version":3,"file":"rh-accordion-header.js","sourceRoot":"","sources":["rh-accordion-header.ts"],"names":[],"mappings":"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","sourcesContent":["import type { RhAccordion } from './rh-accordion.js';\nimport type { RhAccordionContext } from './context.js';\n\nimport { html, LitElement } from 'lit';\nimport { classMap } from 'lit/directives/class-map.js';\nimport { customElement } from 'lit/decorators/custom-element.js';\nimport { property } from 'lit/decorators/property.js';\n\nimport { getRandomId } from '@patternfly/pfe-core/functions/random.js';\nimport { observes } from '@patternfly/pfe-core/decorators/observes.js';\n\nimport { InternalsController } from '@patternfly/pfe-core/controllers/internals-controller.js';\nimport { DirController } from '../../lib/DirController.js';\nimport { colorContextConsumer, type ColorTheme } from '../../lib/context/color/consumer.js';\n\nimport { consume } from '@lit/context';\n\nimport { context } from './context.js';\n\nimport styles from './rh-accordion-header.css';\nimport { HeadingLevelController } from '@rhds/elements/lib/context/headings/controller.js';\n\nexport class AccordionHeaderChangeEvent extends Event {\n  declare target: RhAccordionHeader;\n  constructor(\n    public expanded: boolean,\n    public toggle: RhAccordionHeader,\n    public accordion: RhAccordion,\n  ) {\n    super('change', { bubbles: true, cancelable: true });\n  }\n}\n\nconst isAccordion = (x: EventTarget): x is RhAccordion =>\n  x instanceof HTMLElement && x.localName === 'rh-accordion';\n\n/**\n * Accordion Header\n * We expect the light DOM of the rh-accordion-header to be a heading level tag (h1, h2, h3, h4, h5, h6)\n * @csspart text - inline element containing the heading text or slotted heading content\n * @csspart accents - container for accents within the header\n * @slot - accordion toggle content\n * @slot accents\n *       These elements will appear inline by default with the header title, between the header and the chevron\n *       (or after the chevron and header in disclosure mode). There is an option to set the accents placement to bottom\n * @fires {AccordionHeaderChangeEvent} change - when the open panels change\n */\n@customElement('rh-accordion-header')\nexport class RhAccordionHeader extends LitElement {\n  static readonly version = '{{version}}';\n\n  static readonly styles = [styles];\n\n  @property({ type: Boolean, reflect: true }) expanded = false;\n\n  @consume({ context, subscribe: true })\n  @property({ attribute: false })\n  private ctx?: RhAccordionContext;\n\n  @colorContextConsumer()\n  private on?: ColorTheme;\n\n  #dir = new DirController(this);\n\n  #internals = InternalsController.of(this, {\n    role: 'heading',\n    ariaLevel: '2',\n  });\n\n  #heading = new HeadingLevelController(this);\n\n  override connectedCallback() {\n    super.connectedCallback();\n    this.id ||= getRandomId(this.localName);\n    const accordion = this.closest('rh-accordion');\n    const heading = this.closest('h1,h2,h3,h4,h5,h6');\n    if (heading && accordion?.contains(heading)) {\n      this.#internals.ariaLevel = heading.localName.replace('h', '');\n      heading.replaceWith(this);\n    } else {\n      this.#internals.ariaLevel = Math.max(2, this.#heading.level).toString();\n    }\n  }\n\n  render() {\n    const { expanded, on = '' } = this;\n    const { accents, large = false } = this.ctx ?? {};\n    const rtl = this.#dir.dir === 'rtl';\n    return html`\n      <div id=\"container\" class=\"${classMap({ [on]: !!on, rtl, large, expanded })}\">\n        <button id=\"button\"\n                class=\"toggle\"\n                @click=\"${this.#onClick}\">\n          <span id=\"header-container\" class=\"${classMap({ [accents ?? '']: !!accents })}\">\n            <span part=\"text\"><slot></slot></span>\n            <span part=\"accents\"><slot name=\"accents\"></slot></span>\n          </span>\n          <svg id=\"icon\"\n               role=\"presentation\"\n               xmlns=\"http://www.w3.org/2000/svg\"\n               viewBox=\"0 0 448 512\">\n            <path d=\"M201.4 374.6c12.5 12.5 32.8 12.5 45.3 0l160-160c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0L224 306.7 86.6 169.4c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3l160 160z\"/>\n          </svg>\n        </button>\n      </div>\n    `;\n  }\n\n  #onClick(event: MouseEvent) {\n    const accordion = event.composedPath().find(isAccordion);\n    if (accordion) {\n      this.dispatchEvent(new AccordionHeaderChangeEvent(!this.expanded, this, accordion));\n    }\n  }\n\n  @observes('expanded')\n  private expandedChanged() {\n    this.#internals.ariaExpanded = String(!!this.expanded) as 'true' | 'false';\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'rh-accordion-header': RhAccordionHeader;\n  }\n}\n"]}