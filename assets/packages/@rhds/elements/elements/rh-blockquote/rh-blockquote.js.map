{"version":3,"file":"rh-blockquote.js","sourceRoot":"","sources":["rh-blockquote.ts"],"names":[],"mappings":";AAAA,OAAO,EAAE,UAAU,EAAE,IAAI,EAAE,MAAM,KAAK,CAAC;AACvC,OAAO,EAAE,aAAa,EAAE,MAAM,kCAAkC,CAAC;AACjE,OAAO,EAAE,QAAQ,EAAE,MAAM,4BAA4B,CAAC;AACtD,OAAO,EAAE,QAAQ,EAAE,MAAM,6BAA6B,CAAC;AAEvD,OAAO,EAAE,oBAAoB,EAAmB,MAAM,qCAAqC,CAAC;AAC5F,OAAO,EAAE,oBAAoB,EAAqB,MAAM,qCAAqC,CAAC;AAE9F,OAAO,mCAAmC,CAAC;;;AAI3C;;;;;;;;;GASG;AAEI,IAAM,YAAY,GAAlB,MAAM,YAAa,SAAQ,UAAU;IAArC;;QAGuB,UAAK,GAAG,YAAY,CAAC;QAYjD;;;;WAIG;QAC0B,UAAK,GAA8B,cAAc,CAAC;QAE/E,gGAAgG;QACpD,cAAS,GAAG,KAAK,CAAC;QAE9D;;;;WAIG;QAC0B,SAAI,GAAwB,SAAS,CAAC;IAiBrE,CAAC;IAfC,MAAM;QACJ,MAAM,EAAE,SAAS,EAAE,EAAE,GAAG,OAAO,EAAE,GAAG,IAAI,CAAC;QACzC,OAAO,IAAI,CAAA;sCACuB,QAAQ,CAAC,EAAE,SAAS,EAAE,EAAE,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC;;;;;;;;;;KAU9E,CAAC;IACJ,CAAC;;AA7Ce,mBAAM,GAAG,MAAM,AAAT,CAAU;AAEJ;IAA3B,QAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;2CAAsB;AAQQ;IADxD,oBAAoB,EAAE;IACtB,QAAQ,CAAC,EAAE,OAAO,EAAE,IAAI,EAAE,SAAS,EAAE,eAAe,EAAE,CAAC;kDAA6B;AAErD;IAA/B,oBAAoB,EAAE;wCAAyB;AAOnB;IAA5B,QAAQ,CAAC,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;2CAAmD;AAGnC;IAA3C,QAAQ,CAAC,EAAE,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;+CAAmB;AAOjC;IAA5B,QAAQ,CAAC,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;0CAAuC;AA9BxD,YAAY;IADxB,aAAa,CAAC,eAAe,CAAC;GAClB,YAAY,CA+CxB","sourcesContent":["import { LitElement, html } from 'lit';\nimport { customElement } from 'lit/decorators/custom-element.js';\nimport { property } from 'lit/decorators/property.js';\nimport { classMap } from 'lit/directives/class-map.js';\n\nimport { colorContextConsumer, type ColorTheme } from '../../lib/context/color/consumer.js';\nimport { colorContextProvider, type ColorPalette } from '../../lib/context/color/provider.js';\n\nimport '@rhds/elements/rh-icon/rh-icon.js';\n\nimport styles from './rh-blockquote.css';\n\n/**\n * A blockquote is a styled quotation and citation offset from other text styles on the page.\n *\n * @summary  Highlights quotations and citations with text styles\n *\n * @slot         - Provide a quote for the blockquote\n * @slot author  - Provide an author for the blockquote\n * @slot title   - Provide an author title for the blockquote\n *\n */\n@customElement('rh-blockquote')\nexport class RhBlockquote extends LitElement {\n  static readonly styles = styles;\n\n  @property({ type: String }) title = 'Blockquote';\n\n  /**\n   * Set the colorPalette of the blockquote. Possible values are:\n   * - `lightest` (default)\n   * - `darkest`\n   */\n  @colorContextProvider()\n  @property({ reflect: true, attribute: 'color-palette' }) colorPalette?: ColorPalette;\n\n  @colorContextConsumer() private on?: ColorTheme;\n\n  /**\n   * Set the alignment of the blockquote. Possible values are:\n   * - `left` (default)\n   * - `center`\n   */\n  @property({ reflect: true }) align: 'center' | 'inline-start' = 'inline-start';\n\n  /** Optional highlight attribute that, when present, shows a highlight on side of blockquote. */\n  @property({ reflect: true, type: Boolean }) highlight = false;\n\n  /**\n   * Set the text size of the blockquote. Possible values are:\n   * - `default`\n   * - `large`\n   */\n  @property({ reflect: true }) size: 'default' | 'large' = 'default';\n\n  render() {\n    const { highlight, on = 'light' } = this;\n    return html`\n      <figure id=\"container\" class=\"${classMap({ highlight, on: true, [on]: true })}\">\n        <rh-icon set=\"standard\" icon=\"quotemark-open\"></rh-icon>\n        <blockquote id=\"quote\">\n          <slot></slot>\n        </blockquote>\n        <figcaption>\n          <p id=\"author\"><slot name=\"author\"></slot></p>\n          <p id=\"title\"><slot name=\"title\"></slot></p>\n        </figcaption>\n      </figure>\n    `;\n  }\n}\n"]}