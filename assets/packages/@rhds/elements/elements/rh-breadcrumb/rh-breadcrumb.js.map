{"version":3,"file":"rh-breadcrumb.js","sourceRoot":"","sources":["rh-breadcrumb.ts"],"names":[],"mappings":";AAAA,OAAO,EAAE,UAAU,EAAE,IAAI,EAAE,MAAM,KAAK,CAAC;AAGvC,OAAO,EAAE,QAAQ,EAAE,MAAM,6BAA6B,CAAC;AAEvD,OAAO,EAAE,oBAAoB,EAAmB,MAAM,qCAAqC,CAAC;;;AAI5F;;;;;;;;;;;;;;;;;;;;;;;;;;;GA2BG;AAGH,MAAM,OAAO,YAAa,SAAQ,UAAU;IAmB1C,MAAM;QACJ,MAAM,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,IAAI,CAAC;QACzB,MAAM,KAAK,GAAG,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,YAAY,CAAC;QACzE,OAAO,IAAI,CAAA;yBACU,KAAK,4CAA4C,QAAQ,CAAC,EAAE,EAAE,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC;;;KAGvG,CAAC;IACJ,CAAC;;;qBAtBS,EAAE,SAAS,EAAE,kBAAkB,EAAE;aAKjC,EAAE,OAAO,EAAE,IAAI,EAAE;;AAOX,mBAAM,GAAG,CAAC,MAAM,CAAC,AAAX,CAAY;AAFF;IAA/B,oBAAoB,EAAE;wCAAyB","sourcesContent":["import { LitElement, html } from 'lit';\nimport { customElement } from 'lit/decorators/custom-element.js';\nimport { property } from 'lit/decorators/property.js';\nimport { classMap } from 'lit/directives/class-map.js';\n\nimport { colorContextConsumer, type ColorTheme } from '../../lib/context/color/consumer.js';\n\nimport styles from './rh-breadcrumb.css';\n\n/**\n * A breadcrumb navigation is a secondary navigation element consisting of a list\n * of links to the parent pages of the current page in hierarchical order. It\n * helps users find their place within a website or web application.\n * @summary Links displaying a hierarchical location\n * @slot - Place an ordered list (`<ol>`) of your breadcrumbs into the slot\n * @csspart container - container element for slotted breadcrumb\n * @cssprop [--rh-breadcrumb-link-color=var(--rh-color-interactive-blue-darker, #0066cc)]\n *         The link color for each anchor in the list\n * @cssprop [--rh-breadcrumb-link-color-current-page=var(--rh-color-text-primary-on-light, #151515)]\n *         The current page's color\n * @cssprop [--rh-breadcrumb-link-color-current-page-subtle=var(--rh-color-text-secondary-on-light, #4d4d4d)]\n *         The current page's color for the `subtle` variant\n * @cssprop [--rh-breadcrumb-link-color-hover=var(--rh-color-interactive-blue-darkest, #003366)]\n *         The link color on hover/focus/active for each anchor in the list\n * @cssprop [--rh-breadcrumb-link-color-visited=var(--rh-color-interactive-purple-darker, #5e40be)]\n *         The visited color for each breadcrumb link\n * @cssprop [--rh-breadcrumb-link-color-visited-hover=var(--rh-color-interactive-purple-darkest, #21134d)]\n *         The visited color on hover for each breadcrumb link\n * @cssprop [--rh-breadcrumb-link-focus-outline-color=var(--rh-color-border-interactive-on-light, #0066cc)]\n *         The link focus outline color\n * @cssprop [--rh-breadcrumb-li-padding-inline-end=var(--rh-breadcrumb-li-padding-inline-end, 42px)]\n *          Sets the spacing between each breadcrumb item.\n * @cssprop --rh-breadcrumb-caret-image\n *          The default background image separating each breadcrumb item\n * @cssprop --rh-breadcrumb-caret-image-subtle\n *          The `subtle` variant background image separating each breadcrumb item\n */\n\n@customElement('rh-breadcrumb')\nexport class RhBreadcrumb extends LitElement {\n  /**\n   * Customize the default `aria-label` on the `<nav>` container.\n   * Defaults to \"Breadcrumb\" if no attribute/property is set.\n   */\n  @property({ attribute: 'accessible-label' }) accessibleLabel?: string;\n\n  /**\n   * Sets variants to breadcrumbs\n   */\n  @property({ reflect: true }) variant?: 'subtle';\n\n  /**\n   * Sets color theme based on parent context\n   */\n  @colorContextConsumer() private on?: ColorTheme;\n\n  static readonly styles = [styles];\n\n  render() {\n    const { on = '' } = this;\n    const label = this.accessibleLabel ? this.accessibleLabel : 'Breadcrumb';\n    return html`\n      <nav aria-label=\"${label}\" part=\"container\" id=\"container\" class=\"${classMap({ on: true, [on]: !!on })}\">\n        <slot></slot>\n      </nav>\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'rh-breadcrumb': RhBreadcrumb;\n  }\n}\n"]}