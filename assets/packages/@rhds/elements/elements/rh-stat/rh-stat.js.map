{"version":3,"file":"rh-stat.js","sourceRoot":"","sources":["rh-stat.ts"],"names":[],"mappings":"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","sourcesContent":["import { LitElement, html } from 'lit';\nimport { customElement } from 'lit/decorators/custom-element.js';\nimport { property } from 'lit/decorators/property.js';\nimport { classMap } from 'lit/directives/class-map.js';\n\nimport { colorContextConsumer, type ColorTheme } from '../../lib/context/color/consumer.js';\n\nimport { SlotController } from '@patternfly/pfe-core/controllers/slot-controller.js';\nimport { Logger } from '@patternfly/pfe-core/controllers/logger.js';\nimport { ScreenSizeController } from '../../lib/ScreenSizeController.js';\n\nimport type { IconNameFor, IconSetName } from '@rhds/icons';\n\nimport '@rhds/elements/rh-icon/rh-icon.js';\n\nimport styles from './rh-stat.css';\n\n/**\n * A statistic showcases a data point or quick fact visually.\n *\n * @summary Displays a statistic with an optional icon, title, statistic, and call to action.\n *\n * @summary Showcases a data point or quick fact visually\n *\n * @slot icon - Optional icon\n * @slot title - Statistic title\n * @slot statistic - Statistic data\n * @slot cta - Call to action\n * @slot - Description of the stat\n *\n */\n@customElement('rh-stat')\nexport class RhStat extends LitElement {\n  static readonly version = '{{version}}';\n\n  static readonly styles = [styles];\n\n  @colorContextConsumer() private on?: ColorTheme;\n\n  /**\n   * The icon to display in the statistic\n   */\n  @property({ reflect: true }) icon?: IconNameFor<IconSetName>;\n\n  /**\n   * Icon set to display in the statistic\n   */\n  @property({ attribute: 'icon-set' }) iconSet: IconSetName = 'standard';\n\n  /** Whether the title or statistic should be displayed on top in the statistic */\n  @property({ reflect: true, type: String }) top: 'default' | 'statistic' = 'default';\n\n  /** The size of the statistic */\n  @property({ reflect: true, type: String }) size: 'default' | 'large' = 'default';\n\n  /** Whether the statistic is in a mobile view or not for styling */\n  @property({ type: Boolean, reflect: true, attribute: 'is-mobile' }) isMobile = false;\n\n  #screenSize = new ScreenSizeController(this);\n\n  #slots = new SlotController(this, null, 'icon', 'title', 'statistic', 'cta');\n\n  #mo = new MutationObserver(() => this.#onMutation());\n\n  #logger = new Logger(this);\n\n  connectedCallback() {\n    super.connectedCallback();\n    this.#mo.observe(this, { childList: true });\n    this.#onMutation();\n  }\n\n  render() {\n    const hasIcon = this.#slots.hasSlotted('icon') || !!this.icon;\n    const hasTitle = this.#slots.hasSlotted('title');\n    const hasStatistic = this.#slots.hasSlotted('statistic');\n    const hasCta = this.#slots.hasSlotted('cta');\n    const isMobile = !this.#screenSize.matches.has('sm');\n    const iconSize = this.size === 'default' ? 'md' : 'lg';\n    const { on = '' } = this;\n    return html`\n      <div class=\"${classMap({ isMobile, hasIcon, hasTitle, hasStatistic, hasCta, [on]: !!on })}\">\n        <span id=\"icon\" class=\"${classMap({ [iconSize]: !!iconSize })}\">\n          <slot name=\"icon\">\n            ${!this.icon ? '' : html`\n              <rh-icon icon=\"${this.icon}\" set=\"${this.iconSet}\"></rh-icon>\n            `}\n          </slot>\n        </span>\n        <span id=\"title\"><slot name=\"title\"></slot></span>\n        <span id=\"statistic\"><slot name=\"statistic\"></slot></span>\n        <span id=\"content\"><slot></slot></span>\n        <span id=\"cta\"><slot name=\"cta\"></slot></span>\n      </div>\n    `;\n  }\n\n  #onMutation() {\n    if (!this.#slots.hasSlotted('stat')) {\n      this.#logger.warn('Must contain stat content');\n    }\n    if (!this.querySelectorAll(':not([slot])').length) {\n      this.#logger.warn('Must contain description content');\n    }\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'rh-stat': RhStat;\n  }\n}\n"]}