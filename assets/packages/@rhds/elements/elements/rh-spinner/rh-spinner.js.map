{"version":3,"file":"rh-spinner.js","sourceRoot":"","sources":["rh-spinner.ts"],"names":[],"mappings":";AAAA,OAAO,EAAE,IAAI,EAAE,MAAM,KAAK,CAAC;AAC3B,OAAO,EAAE,aAAa,EAAE,MAAM,kCAAkC,CAAC;AACjE,OAAO,EAAE,QAAQ,EAAE,MAAM,4BAA4B,CAAC;AACtD,OAAO,EAAE,QAAQ,EAAE,MAAM,6BAA6B,CAAC;AAEvD,OAAO,EAAE,oBAAoB,EAAmB,MAAM,qCAAqC,CAAC;AAC5F,OAAO,EAAE,oBAAoB,EAAqB,MAAM,qCAAqC,CAAC;AAE9F,OAAO,EAAE,WAAW,EAAE,MAAM,gDAAgD,CAAC;;;AAU7E;;;;;GAKG;AAEI,IAAM,SAAS,GAAf,MAAM,SAAU,SAAQ,WAAW;IAAnC;;QAiBL;;WAEG;QAC0B,SAAI,GAAgB,IAAI,CAAC;IAYxD,CAAC;IAVC,MAAM;QACJ,MAAM,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,IAAI,CAAC;QACzB,OAAO,IAAI,CAAA;;+BAEgB,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC;8BACzB,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC;;;KAGjD,CAAC;IACJ,CAAC;;AA9Be,gBAAM,GAAG,CAAC,MAAM,CAAC,CAAC;AASuB;IADxD,oBAAoB,EAAE;IACtB,QAAQ,CAAC,EAAE,OAAO,EAAE,IAAI,EAAE,SAAS,EAAE,eAAe,EAAE,CAAC;+CAA6B;AAK7D;IAAvB,oBAAoB,EAAE;qCAAyB;AAKnB;IAA5B,QAAQ,CAAC,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;uCAA0B;AApB3C,SAAS;IADrB,aAAa,CAAC,YAAY,CAAC;GACf,SAAS,CAgCrB;SAhCY,SAAS","sourcesContent":["import { html } from 'lit';\nimport { customElement } from 'lit/decorators/custom-element.js';\nimport { property } from 'lit/decorators/property.js';\nimport { classMap } from 'lit/directives/class-map.js';\n\nimport { colorContextConsumer, type ColorTheme } from '../../lib/context/color/consumer.js';\nimport { colorContextProvider, type ColorPalette } from '../../lib/context/color/provider.js';\n\nimport { BaseSpinner } from '@patternfly/elements/pf-spinner/BaseSpinner.js';\n\nimport styles from './rh-spinner.css';\n\nexport type SpinnerSize = (\n  | 'sm'\n  | 'md'\n  | 'lg'\n);\n\n/**\n * Spinner consists of an animated circle and sometimes a text label, and it indicates that a section is loading.\n *\n * @slot - Optional text label below the animated circle.\n *\n */\n@customElement('rh-spinner')\nexport class RhSpinner extends BaseSpinner {\n  static readonly styles = [styles];\n\n  /**\n   * Sets color palette, which affects the element's styles as well as descendants' color theme.\n   * Overrides parent color context.\n   * Your theme will influence these colors so check there first if you are seeing inconsistencies.\n   * See [CSS Custom Properties](#css-custom-properties) for default values\n   */\n  @colorContextProvider()\n  @property({ reflect: true, attribute: 'color-palette' }) colorPalette?: ColorPalette;\n\n  /**\n   * Sets color theme based on parent context\n   */\n  @colorContextConsumer() private on?: ColorTheme;\n\n  /**\n   * Preset sizes for the spinner\n   */\n  @property({ reflect: true }) size: SpinnerSize = 'lg';\n\n  render() {\n    const { on = '' } = this;\n    return html`\n      <svg role=\"status\" viewBox=\"0 0 100 100\" aria-live=\"polite\">\n        <circle class=\"track ${classMap({ [on]: !!on })}\" cx=\"50\" cy=\"50\" r=\"40\" fill=\"none\" vector-effect=\"non-scaling-stroke\" />\n        <circle class=\"dash ${classMap({ [on]: !!on })}\" cx=\"50\" cy=\"50\" r=\"40\" fill=\"none\" vector-effect=\"non-scaling-stroke\" />\n      </svg>\n      <slot></slot>\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'rh-spinner': RhSpinner;\n  }\n}\n"]}