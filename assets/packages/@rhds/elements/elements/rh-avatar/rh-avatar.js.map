{"version":3,"file":"rh-avatar.js","sourceRoot":"","sources":["rh-avatar.ts"],"names":[],"mappings":"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","sourcesContent":["import type { RandomPatternController } from './random-pattern-controller.js';\n\nimport { customElement } from 'lit/decorators/custom-element.js';\nimport { property } from 'lit/decorators/property.js';\nimport { LitElement, html, type PropertyValues } from 'lit';\nimport { classMap } from 'lit/directives/class-map.js';\n\nimport { ScreenSizeController } from '../../lib/ScreenSizeController.js';\nimport { colorContextConsumer, type ColorTheme } from '../../lib/context/color/consumer.js';\n\nimport styles from './rh-avatar.css';\n\nconst DEFAULT_AVATARS = {\n  light: html`<svg xmlns=\"http://www.w3.org/2000/svg\" style=\"enable-background:new 0 0 36 36\" viewBox=\"0 0 36 36\" role=\"presentation\" part=\"img\">\n      <style>.st1{fill-rule:evenodd;clip-rule:evenodd;fill:#f0f0f0}.st2{fill:#b8bbbe}.st3{fill-rule:evenodd;clip-rule:evenodd;fill:#d2d2d2}.st4{fill:#d2d2d2}</style><path d=\"M0 0h36v36H0z\" class=\"st1\"/><path d=\"M17.7 20.1c-3.5 0-6.4-2.9-6.4-6.4s2.9-6.4 6.4-6.4 6.4 2.9 6.4 6.4-2.8 6.4-6.4 6.4z\" class=\"st3\"/><path d=\"M13.3 36v-6.7c-2 .4-2.9 1.4-3.1 3.5l-.1 3.2h3.2z\" class=\"st2\"/><path d=\"m10.1 36 .1-3.2c.2-2.1 1.1-3.1 3.1-3.5V36h9.4v-6.7c2 .4 2.9 1.4 3.1 3.5l.1 3.2h4.7c-.4-3.9-1.3-9-2.9-11-1.1-1.4-2.3-2.2-3.5-2.6s-1.8-.6-6.3-.6-6.1.7-6.1.7c-1.2.4-2.4 1.2-3.4 2.6-1.7 1.9-2.6 7.1-3 10.9h4.7z\" class=\"st4\"/><path d=\"m25.9 36-.1-3.2c-.2-2.1-1.1-3.1-3.1-3.5V36h3.2z\" class=\"st2\"/>\n    </svg>`,\n  dark: html`<svg xmlns=\"http://www.w3.org/2000/svg\" style=\"enable-background:new 0 0 36 36\" viewBox=\"0 0 36 36\" role=\"presentation\" part=\"img\">\n    <style>.st1{fill-rule:evenodd;clip-rule:evenodd;fill:#212427}.st2{fill:#4F5255}.st3{fill-rule:evenodd;clip-rule:evenodd;fill:#6A6E73}.st4{fill:#6A6E73}</style><path d=\"M0 0h36v36H0z\" class=\"st1\"/><path d=\"M17.7 20.1c-3.5 0-6.4-2.9-6.4-6.4s2.9-6.4 6.4-6.4 6.4 2.9 6.4 6.4-2.8 6.4-6.4 6.4z\" class=\"st3\"/><path d=\"M13.3 36v-6.7c-2 .4-2.9 1.4-3.1 3.5l-.1 3.2h3.2z\" class=\"st2\"/><path d=\"m10.1 36 .1-3.2c.2-2.1 1.1-3.1 3.1-3.5V36h9.4v-6.7c2 .4 2.9 1.4 3.1 3.5l.1 3.2h4.7c-.4-3.9-1.3-9-2.9-11-1.1-1.4-2.3-2.2-3.5-2.6s-1.8-.6-6.3-.6-6.1.7-6.1.7c-1.2.4-2.4 1.2-3.4 2.6-1.7 1.9-2.6 7.1-3 10.9h4.7z\" class=\"st4\"/><path d=\"m25.9 36-.1-3.2c-.2-2.1-1.1-3.1-3.1-3.5V36h3.2z\" class=\"st2\"/>\n  </svg>`,\n  saturated: html``\n};\n\nDEFAULT_AVATARS.saturated = DEFAULT_AVATARS.dark;\n\n/**\n * An avatar is a small thumbnail representation of a user.\n *\n * @summary Visually represents a user in a masthead or navigation\n *\n * @slot                                                  - The subject's name\n * @slot subtitle                                         - auxiliary information about the subject, e.g. job title\n * @cssprop {<color>+} --rh-avatar-colors                 - List of colors to use when generating avatars\n * @cssprop {<length>} --rh-avatar-size                   - Size of the avatar, {@default 64px}\n */\n@customElement('rh-avatar')\nexport class RhAvatar extends LitElement {\n  static readonly styles = [styles];\n\n  /**\n   * The URL to the user's custom avatar image.\n   *\n   * It will be displayed instead of a random pattern.\n   */\n  @property({ reflect: true }) src?: string;\n\n  /**\n   * The user's name, either given name and family name, or username.\n   *\n   * When displaying a pattern, the name will be used to seed the pattern generator.\n   */\n  @property({ reflect: true }) name?: string;\n\n  /** The auxiliary information about the user, e.g. job title */\n  @property({ reflect: true }) subtitle?: string;\n\n  /** The type of pattern to display. */\n  @property({ reflect: true }) layout?: 'inline' | 'block';\n\n  /** The type of pattern to display. */\n  @property({ reflect: true }) pattern?: 'squares' | 'triangles';\n\n  /** When true, hides the title and subtitle */\n  @property({ reflect: true, type: Boolean }) plain = false;\n\n  @colorContextConsumer() @property() private on?: ColorTheme;\n\n  #style?: CSSStyleDeclaration;\n\n  #pattern?: RandomPatternController;\n\n  #screen = new ScreenSizeController(this);\n\n  connectedCallback() {\n    super.connectedCallback();\n    this.#normalize();\n  }\n\n  /**\n   * Page authors may include whitespace in the element while also using `name`\n   * or `subtitle` attributes to inject default content. In those cases, any\n   * slotted text nodes, even if consisting solely of white-space, will override\n   * the default content (i.e. attribute values)\n   */\n  #normalize() {\n    for (const node of this.childNodes) {\n      if (node instanceof Text && !node.data.trim()) {\n        node.data = node.data.trim();\n      }\n    }\n    this.normalize();\n  }\n\n  render() {\n    const { on } = this;\n    const { mobile } = this.#screen;\n    return html`\n      <div id=\"container\" class=\"${classMap({ mobile, [on ?? 'light']: !!on })}\">${this.pattern ? html`\n        <canvas part=\"canvas\"></canvas>` : this.src ? html`\n        <img src=\"${this.src}\" role=\"presentation\" part=\"img\">` : html`${DEFAULT_AVATARS[on ?? 'light']}`}\n        <slot id=\"title\">${this.name}</slot>\n        <slot id=\"subtitle\" name=\"subtitle\">${this.subtitle}</slot>\n      </div>\n    `;\n  }\n\n  async updated(changed: PropertyValues<this>) {\n    if ((changed.has('pattern') && this.pattern) ||\n        (this.#pattern && changed.has('name') || changed.has('on' as keyof RhAvatar))) {\n      this.updatePattern();\n    }\n  }\n\n  async #initPattern() {\n    const { RandomPatternController } = await import('./random-pattern-controller.js');\n    const canvas = this.shadowRoot?.querySelector('canvas');\n    if (canvas) {\n      this.#style ??= getComputedStyle(canvas);\n      return new RandomPatternController(this, canvas);\n    }\n  }\n\n  async updatePattern() {\n    this.#pattern ??= await this.#initPattern();\n    if (this.#pattern) {\n      const size = parseInt(this.#style?.getPropertyValue('width') ?? '0');\n      const colors = this.#style?.getPropertyValue('--_colors')?.split(/\\s+/) ?? [];\n      const { name, pattern } = this;\n      this.#pattern.render({ size, colors, name, pattern });\n    }\n  }\n}\n\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'rh-avatar': RhAvatar;\n  }\n}\n"]}