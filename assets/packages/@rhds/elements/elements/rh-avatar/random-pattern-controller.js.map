{"version":3,"file":"random-pattern-controller.js","sourceRoot":"","sources":["random-pattern-controller.ts"],"names":[],"mappings":"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","sourcesContent":["import type { ReactiveController, ReactiveElement } from 'lit';\n\nimport { Logger } from '@patternfly/pfe-core/controllers/logger.js';\n\nexport interface Options {\n  name?: string;\n  pattern?: 'squares'|'triangles';\n  size?: number;\n  colors?: string[];\n}\n\nexport interface Initializer extends Options {\n  canvas: HTMLCanvasElement;\n  colors: string[];\n}\n\ntype Vector2D = [x: number, y: number];\ntype RGBTriple = [R: number, G: number, B: number];\ntype HSLTriple = [H: number, S: number, L: number];\n\n/**\n * djb2 string hashing function.\n *\n * @see http://www.cse.yorku.ca/~oz/hash.html\n * @param  str the string to hash.\n * @return  a positive integer\n */\n\nfunction hash(str: string): number {\n  let hash = 5381;\n  let i = str.length;\n\n  while (i) {\n    hash = (hash * 33) ^ str.charCodeAt(--i);\n  }\n\n  return hash >>> 0;\n}\n\nfunction h2rgb(v1: number, v2: number, vH: number): number {\n  if (vH < 0) {\n    vH += 1;\n  }\n  if (vH > 1) {\n    vH -= 1;\n  }\n  if (6 * vH < 1) {\n    return v1 + (v2 - v1) * 6 * vH;\n  }\n  if (2 * vH < 1) {\n    return v2;\n  }\n  if (3 * vH < 2) {\n    return v1 + (v2 - v1) * (2 / 3 - vH) * 6;\n  }\n  return v1;\n}\n\n/**\n * Convert an HSL color to RGB.\n *\n * @param h the hue component\n * @param s the saturation component\n * @param l the luminance component\n *\n * @see https://www.easyrgb.com/en/math.php\n */\nfunction hsl2rgb(h: number, s: number, l: number): RGBTriple {\n  let R; let G; let B;\n\n  const H = Math.max(0, Math.min(1, h));\n  const S = Math.max(0, Math.min(1, s));\n  const L = Math.max(0, Math.min(1, l));\n\n  if (S === 0) {\n    R = L * 255;\n    G = L * 255;\n    B = L * 255;\n  } else {\n    const b = (L < 0.5) ? L * (1 + S) : L + S - S * L;\n    const a = 2 * L - b;\n    R = Math.floor(255 * h2rgb(a, b, H + 1 / 3));\n    G = Math.floor(255 * h2rgb(a, b, H));\n    B = Math.floor(255 * h2rgb(a, b, H - 1 / 3));\n  }\n\n  return [R, G, B];\n}\n\n/**\n * Convert an RGBcolor to HSL.\n *\n * @param _R the red component\n * @param _G the green component\n * @param _B the blue component\n *\n * @see https://www.easyrgb.com/en/math.php\n */\nfunction rgb2hsl(_R: number, _G: number, _B: number): HSLTriple {\n  let H; let S;\n\n  const R = Math.max(0, Math.min(255, _R));\n  const G = Math.max(0, Math.min(255, _G));\n  const B = Math.max(0, Math.min(255, _B));\n\n  const r = R / 255;\n  const g = G / 255;\n  const b = B / 255;\n\n  const varMin = Math.min(Math.min(r, g), b);\n  const varMax = Math.max(Math.max(r, g), b);\n  const delMax = varMax - varMin;\n\n  const L = (varMax + varMin) / 2;\n\n  if (delMax === 0) {\n    H = 0;\n    S = 0;\n  } else {\n    if (L < 0.5) {\n      S = delMax / (varMax + varMin);\n    } else {\n      S = delMax / (2 - varMax - varMin);\n    }\n\n\n    const delR = ((varMax - r) / 6 + delMax / 2) / delMax;\n    const delG = ((varMax - g) / 6 + delMax / 2) / delMax;\n    const delB = ((varMax - b) / 6 + delMax / 2) / delMax;\n\n    if (r === varMax) {\n      H = delB - delG;\n    } else if (g === varMax) {\n      H = 1 / 3 + delR - delB;\n    } else if (b === varMax) {\n      H = 2 / 3 + delG - delR;\n    }\n\n    H ??= 0;\n\n    if (H < 0) {\n      H += 1;\n    } else if (H > 1) {\n      H -= 1;\n    }\n  }\n\n  return [H, S, L];\n}\n\nconst HEX_PARSERS = {\n  // ex: \"#0fc\"\n  [4 as number]: {\n    regexp: /^#([A-f0-9])([A-f0-9])([A-f0-9])$/,\n    parser: (c: string) => parseInt(`${c}${c}`, 16),\n  },\n  // ex: \"#00ffcc\"\n  [7 as number]: {\n    regexp: /^#([A-f0-9]{2})([A-f0-9]{2})([A-f0-9]{2})$/,\n    parser: (c: string) => parseInt(c, 16),\n  },\n};\n\nfunction adjustColor(color: RGBTriple): RGBTriple {\n  const dark = 0.1;\n  const lAdj = 0.1; // luminance adjustment\n  const hsl = rgb2hsl(...color);\n\n  // if luminance is too dark already, then lighten the alternate color\n  // instead of darkening it.\n  hsl[2] += hsl[2] > dark ? -lAdj : lAdj;\n\n  return hsl2rgb(...hsl);\n}\n\nexport class RandomPatternController implements ReactiveController {\n  #colorTuples: [string, string][] = [];\n\n  #colors: string[] = [];\n\n  #name?: string;\n\n  #pattern: 'squares'|'triangles' = 'squares';\n\n  #squareSize = 0;\n\n  #triangleSize = 0;\n\n  #color1 = '';\n\n  #color2 = '';\n\n  #canvas: HTMLCanvasElement;\n\n  #ctx: CanvasRenderingContext2D;\n\n  #logger: Logger;\n\n  constructor(host: ReactiveElement, canvas: HTMLCanvasElement) {\n    this.#logger = new Logger(host);\n    this.#canvas = canvas;\n    this.#ctx = this.#canvas.getContext('2d') as CanvasRenderingContext2D;\n    this.render();\n  }\n\n  hostConnected?(): void\n\n  render(options?: Options) {\n    this.#name = options?.name ?? this.#name;\n    this.#colors = options?.colors ?? this.#colors;\n    this.#pattern = options?.pattern ?? this.#pattern;\n    this.#canvas.width = options?.size ?? 0;\n    this.#canvas.height = options?.size ?? 0;\n    if (options?.colors) { this.#colorTuples = this.#initColorTuples(); }\n    const bitPattern = hash(this.#name ?? '').toString(2);\n    const arrPattern = bitPattern.split('').map(n => Number(n)) as Vector2D;\n    const index = Math.floor((this.#colorTuples.length * parseInt(bitPattern, 2)) / (2 ** 32));\n    [this.#color1, this.#color2] = this.#colorTuples[index] ?? [];\n    this.#squareSize = this.#canvas.width / 8;\n    this.#triangleSize = this.#canvas.width / 4;\n    this.#clear();\n    this.#drawBackground();\n    if (this.#pattern === 'squares') {\n      this.#drawSquarePattern(arrPattern);\n    } else if (this.#pattern === 'triangles') {\n      this.#drawTrianglePattern(arrPattern);\n    }\n  }\n\n  #initColorTuples() {\n    const tuples: [string, string][] = [];\n    this.#colors.forEach(colorCode => {\n      const { regexp, parser } = HEX_PARSERS[colorCode.length] ?? {};\n      if (regexp && parser) {\n        const [, ...pattern] = regexp.exec(colorCode) ?? [];\n        if (pattern.length) {\n          const color = pattern.map(parser) as RGBTriple;\n          tuples.push([\n            `rgb(${color.join(',')})`,\n            `rgb(${adjustColor(color).join(',')})`,\n          ]);\n        } else {\n          this.#logger.warn(`invalid color ${colorCode}`);\n        }\n      }\n    });\n    return tuples;\n  }\n\n  #clear() {\n    if (this.#ctx && this.#canvas) {\n      this.#ctx.clearRect(0, 0, this.#canvas.width, this.#canvas.height);\n    }\n  }\n\n  #drawBackground() {\n    if (this.#ctx && this.#canvas) {\n      this.#ctx.fillStyle = this.#color1;\n      this.#ctx.fillRect(0, 0, this.#canvas.width, this.#canvas.height);\n    }\n  }\n\n  #drawSquarePattern(pattern: Vector2D) {\n    if (this.#ctx) {\n      this.#ctx.fillStyle = this.#color2;\n      let i = pattern.length;\n      while (i--) {\n        if (pattern[i]) {\n          this.#drawMirroredSquare(i % 4, Math.floor(i / 4));\n        }\n      }\n    }\n  }\n\n  /**\n   * Draw a square at the given position, mirrored onto both the left and right half of the canvas.\n   */\n  #drawMirroredSquare(x: number, y: number) {\n    if (this.#ctx) {\n      this.#drawSquare(x, y);\n      this.#drawSquare(7 - x, y);\n    }\n  }\n\n  #drawSquare(x: number, y: number) {\n    if (this.#ctx) {\n      this.#ctx.fillRect(\n        this.#squareSize * x,\n        this.#squareSize * y,\n        this.#squareSize,\n        this.#squareSize\n      );\n    }\n  }\n\n  #drawTrianglePattern(pattern: number[]) {\n    if (this.#ctx) {\n      this.#ctx.fillStyle = this.#color2 ?? '';\n      let i = pattern.length;\n      while (i--) {\n        if (pattern[i]) {\n          const x = Math.floor(i / 2) % 2;\n          const y = Math.floor(i / 4);\n          const alt = i % 4;\n\n          const p1: Vector2D = [x, y];\n          const p2: Vector2D = [x, y];\n          const p3: Vector2D = [x, y];\n\n          switch (alt) {\n            case 0:\n              p2[1]++;\n              p3[0]++;\n              p3[1]++;\n              break;\n            case 1:\n              p2[0]++;\n              p3[0]++;\n              p3[1]++;\n              break;\n            case 2:\n              p2[0]++;\n              p3[1]++;\n              break;\n            case 3:\n              p1[0]++;\n              p2[0]++;\n              p2[1]++;\n              p3[1]++;\n              break;\n          }\n\n          this.#drawMirroredTriangle(p1, p2, p3);\n        }\n      }\n    }\n  }\n\n  /**\n   * Draw a square at the given position in the top-left quadrant of the\n   * canvas, and mirrored to the other three quadrants.\n   */\n  #drawMirroredTriangle(p1: Vector2D, p2: Vector2D, p3: Vector2D) {\n    if (this.#ctx) {\n      this.#drawTriangle(p1, p2, p3);\n      this.#drawTriangle([4 - p1[0], p1[1]], [4 - p2[0], p2[1]], [4 - p3[0], p3[1]]);\n    }\n  }\n\n  #drawTriangle(p1: Vector2D, p2: Vector2D, p3: Vector2D) {\n    const mult = (c: number) => c * this.#triangleSize;\n    if (this.#ctx) {\n      this.#ctx.beginPath();\n      this.#ctx.moveTo(...p1.map(mult) as Vector2D);\n      this.#ctx.lineTo(...p2.map(mult) as Vector2D);\n      this.#ctx.lineTo(...p3.map(mult) as Vector2D);\n      this.#ctx.closePath();\n      this.#ctx.fill();\n      this.#ctx.fill();\n    }\n  }\n}\n"]}