{"version":3,"file":"rh-card.js","sourceRoot":"","sources":["rh-card.ts"],"names":[],"mappings":"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","sourcesContent":["import { SlotController } from '@patternfly/pfe-core/controllers/slot-controller.js';\nimport { customElement } from 'lit/decorators/custom-element.js';\nimport { property } from 'lit/decorators/property.js';\nimport { classMap } from 'lit/directives/class-map.js';\nimport { html, LitElement } from 'lit';\nimport { colorContextConsumer, type ColorTheme } from '../../lib/context/color/consumer.js';\nimport { colorContextProvider } from '../../lib/context/color/provider.js';\n\nimport styles from './rh-card.css';\n/**\n * Cards are flexible surfaces used to group information in a small layout. They give small previews of information or provide secondary content in relation to the content it's near. Several cards can be used together to group related information.\n * @summary     Arranges content and interactive elements in a layout\n * @slot        header\n *              If this slot is used, we expect a heading level tag (h1, h2, h3, h4, h5, h6).\n *              An icon, svg, or use of the icon component are also valid in this region.\n * @slot        image\n *              Use this slot for the promo variant of the card. Images & CTA's are most often slotted here.\n * @slot        Any content that is not designated for the header or footer slot, will go to this slot.\n * @slot        footer\n *              Use this slot for anything that you want to be stuck to the base of the card.\n * @csspart     container\n *              The container for the card. Contains the image, header, body, and footer.\n * @csspart     header\n *              The header for the card. Contains the header slot.\n * @csspart     image\n *              The image for the promo variant for the card. Contains the image slot.\n * @csspart     body\n *              The body for the card. Contains the default slot.\n * @csspart     footer\n *              The footer for the card. Contains the footer slot.\n * @cssprop     [--rh-card-heading-font-family=--rh-font-family-heading]\n *              The font family for headings in the header and body\n * @cssprop     [--rh-card-heading-font-size=--rh-font-size-heading-sm]\n *              The font size for headings in the header and body\n * @cssprop     [--rh-card-heading-font-weight=--rh-font-weight-body-text-medium]\n *              The font weight for headings in the header and body\n */\n@customElement('rh-card')\nexport class RhCard extends LitElement {\n  static readonly version = '{{version}}';\n\n  static styles = [styles];\n\n  private static slots = ['header', 'image', null, 'footer'] as const;\n\n  /**\n   * Sets color theme based on parent context\n   */\n  @colorContextConsumer() private on?: ColorTheme;\n\n  /**\n   * Sets color palette, which affects the element's styles as well as descendants' color theme.\n   * Overrides parent color context.\n   * Your theme will influence these colors so check there first if you are seeing inconsistencies.\n   * See [CSS Custom Properties](#css-custom-properties) for default values\n   *\n   * Card always resets its context to `base`, unless explicitly provided with a `color-palette`.\n   */\n  @colorContextProvider()\n  @property(\n    {\n      reflect: true,\n      attribute: 'color-palette',\n    }\n  ) colorPalette?: 'darkest' | 'lightest' | 'lighter';\n\n  /**\n   * Change the style of the card to be a \"Promo\"\n   */\n  @property({ reflect: true }) variant?: 'promo';\n\n  /**\n   * Change a promo with an image + body + footer to use the `full-width` style\n   */\n  @property({ reflect: true, attribute: 'full-width', type: Boolean }) fullWidth? = false;\n\n  #slots = new SlotController(this, ...RhCard.slots);\n\n  override render() {\n    const { on = '', colorPalette = '', variant = '' } = this;\n    const slots =\n      Object.fromEntries(RhCard.slots.map(slot =>\n        [slot ?? 'body', this.#slots.hasSlotted(slot)])) as Record<\n          | 'header'\n          | 'image'\n          | 'body'\n          | 'footer', boolean>;\n    const promo = this.variant === 'promo';\n    const standard = promo && slots.body && !slots.image && !slots.header;\n    const computedPalette =\n        !standard ? colorPalette\n      : (colorPalette || 'lightest').replace('est', 'er');\n    const header = html`\n      <div id=\"header\"\n           part=\"header\"\n           class=\"${classMap({ empty: !slots.header })}\">\n        <slot name=\"header\"></slot>\n      </div>`;\n    const footer = html`\n      <div id=\"footer\"\n           part=\"footer\"\n           class=\"${classMap({ empty: !slots.footer })}\">\n        <slot name=\"footer\"></slot>\n      </div>`;\n    return html`\n     <div id=\"container\"\n          part=\"container\"\n          class=\"${classMap({\n            [on]: !!on,\n            [computedPalette]: !!computedPalette,\n            [variant]: !!variant,\n            standard,\n            ...Object.fromEntries(Object.entries(slots).map(([k, v]) => [`has-${k}`, v])),\n          })}\">${promo ? '' : header}\n        <div id=\"image\"\n             part=\"image\"\n             class=\"${classMap({ empty: !slots.image })}\">\n          <slot name=\"image\"></slot>\n        </div>\n        <div id=\"body\"\n             part=\"body\"\n             class=\"${classMap({ empty: !slots.body })}\">\n          ${!promo ? '' : header}\n          <slot></slot>\n          ${!promo ? '' : footer}\n        </div>\n        ${promo ? '' : footer}\n      </div>\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'rh-card': RhCard;\n  }\n}\n"]}