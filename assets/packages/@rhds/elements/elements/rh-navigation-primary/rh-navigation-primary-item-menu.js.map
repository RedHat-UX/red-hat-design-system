{"version":3,"file":"rh-navigation-primary-item-menu.js","sourceRoot":"","sources":["rh-navigation-primary-item-menu.ts"],"names":[],"mappings":";;AAAA,OAAO,EAAE,UAAU,EAAE,IAAI,EAAE,QAAQ,EAAE,MAAM,KAAK,CAAC;AACjD,OAAO,EAAE,aAAa,EAAE,MAAM,kCAAkC,CAAC;AACjE,OAAO,EAAE,KAAK,EAAE,MAAM,yBAAyB,CAAC;AAChD,OAAO,EAAE,QAAQ,EAAE,MAAM,6BAA6B,CAAC;AAEvD,OAAO,EAAE,OAAO,EAAE,MAAM,cAAc,CAAC;AACvC,OAAO,EAAE,OAAO,EAAE,MAAM,cAAc,CAAC;;;AAIvC;;GAEG;AAEI,IAAM,2BAA2B,GAAjC,MAAM,2BAA4B,SAAQ,UAAU;IAApD;;QAGL,gDAAY,KAAK,EAAC;IAmCpB,CAAC;IA7BW,KAAK,CAAC,YAAY;QAC1B,iDAAiD;QACjD,MAAM,WAAW,GAAG,QAAQ,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC;QACjD,IAAI,CAAC,WAAW,EAAE,CAAC;YACjB,uBAAA,IAAI,yCAAa,IAAI,MAAA,CAAC;YACtB,MAAM,IAAI,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;YAChC,IAAI,IAAI,KAAK,QAAQ,IAAI,CAAC,CAAC,IAAI,YAAY,UAAU,CAAC,EAAE,CAAC;gBACvD,OAAO;YACT,CAAC;YACD,MAAM,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,uBAAuB,CAAC,CAAC;YACvD,MAAM,GAAG,EAAE,cAAc,CAAC;YAC1B,IAAI,CAAC,GAAG,EAAE,CAAC;gBACT,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,CAAC,0CAA0C;YACjE,CAAC;iBAAM,CAAC;gBACN,IAAI,CAAC,OAAO,GAAG,GAAG,CAAC,WAAW,GAAG,IAAI,CAAC;YACxC,CAAC;YACD,IAAI,CAAC,aAAa,EAAE,CAAC;QACvB,CAAC;IACH,CAAC;IAED,MAAM;QACJ,MAAM,OAAO,GAAG,CAAC,uBAAA,IAAI,6CAAU,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC;QAC9D,OAAO,IAAI,CAAA;mCACoB,QAAQ,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC,uBAAA,IAAI,6CAAU,EAAE,CAAC;;;;KAIzF,CAAC;IACJ,CAAC;;;AApCe,kCAAM,GAAG,CAAC,MAAM,CAAC,AAAX,CAAY;AAM1B;IAFP,OAAO,CAAC,EAAE,OAAO,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;IACrC,KAAK,EAAE;4DACkB;AAPf,2BAA2B;IADvC,aAAa,CAAC,iCAAiC,CAAC;GACpC,2BAA2B,CAsCvC","sourcesContent":["import { LitElement, html, isServer } from 'lit';\nimport { customElement } from 'lit/decorators/custom-element.js';\nimport { state } from 'lit/decorators/state.js';\nimport { classMap } from 'lit/directives/class-map.js';\n\nimport { consume } from '@lit/context';\nimport { context } from './context.js';\n\nimport styles from './rh-navigation-primary-item-menu.css';\n\n/**\n * Navigation Menu\n */\n@customElement('rh-navigation-primary-item-menu')\nexport class RhNavigationPrimaryItemMenu extends LitElement {\n  static readonly styles = [styles];\n\n  #hydrated = false;\n\n  @consume({ context, subscribe: true })\n  @state()\n  private compact?: boolean;\n\n  protected async firstUpdated(): Promise<void> {\n    // ensure we update initially on client hydration\n    const _isHydrated = isServer && !this.hasUpdated;\n    if (!_isHydrated) {\n      this.#hydrated = true;\n      const root = this.getRootNode();\n      if (root === document || !(root instanceof ShadowRoot)) {\n        return;\n      }\n      const nav = root.host.closest('rh-navigation-primary');\n      await nav?.updateComplete;\n      if (!nav) {\n        this.compact = true; /* default to true if nav returns false */\n      } else {\n        this.compact = nav.offsetWidth < 1200;\n      }\n      this.requestUpdate();\n    }\n  }\n\n  render() {\n    const compact = !this.#hydrated ? true : this.compact ?? true;\n    return html`\n      <div id=\"container\" class=\"${classMap({ compact: compact, dehydrated: !this.#hydrated })}\">\n        <!-- Place element content here -->\n        <slot></slot>\n      </div>\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'rh-navigation-primary-item-menu': RhNavigationPrimaryItemMenu;\n  }\n}\n"]}