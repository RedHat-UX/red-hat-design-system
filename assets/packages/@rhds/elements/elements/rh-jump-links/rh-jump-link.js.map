{"version":3,"file":"rh-jump-link.js","sourceRoot":"","sources":["rh-jump-link.ts"],"names":[],"mappings":";;AAAA,OAAO,EAAE,IAAI,EAAE,UAAU,EAAuB,MAAM,KAAK,CAAC;AAC5D,OAAO,EAAE,aAAa,EAAE,MAAM,kCAAkC,CAAC;AACjE,OAAO,EAAE,QAAQ,EAAE,MAAM,4BAA4B,CAAC;AACtD,OAAO,EAAE,KAAK,EAAE,MAAM,yBAAyB,CAAC;AAChD,OAAO,EAAE,OAAO,EAAE,MAAM,cAAc,CAAC;AACvC,OAAO,EAAE,SAAS,EAAE,MAAM,8BAA8B,CAAC;AACzD,OAAO,EAAE,QAAQ,EAAE,MAAM,kCAAkC,CAAC;AAE5D,OAAO,EAAE,QAAQ,EAAE,MAAM,6CAA6C,CAAC;AACvE,OAAO,EAAE,mBAAmB,EAAE,MAAM,0DAA0D,CAAC;AAE/F,OAAO,EAAE,QAAQ,EAAE,MAAM,gCAAgC,CAAC;;;AAI1D,OAAO,EAAE,6BAA6B,EAAE,MAAM,cAAc,CAAC;AAE7D;;;GAGG;AAGI,IAAM,UAAU,GAAhB,MAAM,UAAW,SAAQ,UAAU;IAAnC;;;QAYL,mCAAmC;QACS,WAAM,GAAG,KAAK,CAAC;QAK3D,gCAAa,mBAAmB,CAAC,EAAE,CAAC,IAAI,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,CAAC,EAAC;IA2BlE,CAAC;IAzBU,iBAAiB;QACxB,KAAK,CAAC,iBAAiB,EAAE,CAAC;QAC1B,IAAI,CAAC,IAAI,GAAG,UAAU,CAAC;IACzB,CAAC;IAED,MAAM;QACJ,MAAM,EAAE,MAAM,EAAE,WAAW,GAAG,UAAU,EAAE,GAAG,IAAI,CAAC;QAClD,OAAO,IAAI,CAAA;kBACG,QAAQ,CAAC,EAAE,MAAM,EAAE,CAAC,WAAW,CAAC,EAAE,IAAI,EAAE,CAAC;yBAClC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,SAAS,CAAC;iBACvD,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC;mBAClB,uBAAA,IAAI,kDAAS;;;KAG3B,CAAC;IACJ,CAAC;IAGS,aAAa;QACrB,uBAAA,IAAI,6BAAW,CAAC,WAAW,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC;IAChE,CAAC;;;;;IAGC,IAAI,CAAC,aAAa,CAAC,IAAI,KAAK,CAAC,QAAQ,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;AAC7D,CAAC;AA3Ce,iBAAM,GAAoB,CAAC,KAAK,CAAC,AAA3B,CAA4B;AAEzB,4BAAiB,GAAmB;IAC3D,GAAG,UAAU,CAAC,iBAAiB;IAC/B,cAAc,EAAE,IAAI;CACrB,AAHyC,CAGxC;AAIe;IADhB,OAAO,CAAC,EAAE,OAAO,EAAE,6BAA6B,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;IACpE,KAAK,EAAE;+CAAiD;AAGb;IAA3C,QAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;0CAAgB;AAG9B;IAA5B,QAAQ,CAAC,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;wCAAe;AAsBjC;IADT,QAAQ,CAAC,QAAQ,CAAC;+CAGlB;AAxCU,UAAU;IAFtB,aAAa,CAAC,cAAc,CAAC;IAC7B,QAAQ;GACI,UAAU,CA6CtB","sourcesContent":["import { html, LitElement, type TemplateResult } from 'lit';\nimport { customElement } from 'lit/decorators/custom-element.js';\nimport { property } from 'lit/decorators/property.js';\nimport { state } from 'lit/decorators/state.js';\nimport { consume } from '@lit/context';\nimport { ifDefined } from 'lit/directives/if-defined.js';\nimport { classMap } from 'lit-html/directives/class-map.js';\n\nimport { observes } from '@patternfly/pfe-core/decorators/observes.js';\nimport { InternalsController } from '@patternfly/pfe-core/controllers/internals-controller.js';\n\nimport { themable } from '@rhds/elements/lib/themable.js';\n\nimport style from './rh-jump-link.css';\n\nimport { rhJumpLinksOrientationContext } from './context.js';\n\n/**\n * @cssprop  {<length>} [--rh-jump-link-max-width=320px]\n *           max-width for each vertical jump link\n */\n@customElement('rh-jump-link')\n@themable\nexport class RhJumpLink extends LitElement {\n  static readonly styles: CSSStyleSheet[] = [style];\n\n  static override readonly shadowRootOptions: ShadowRootInit = {\n    ...LitElement.shadowRootOptions,\n    delegatesFocus: true,\n  };\n\n  /** Whether the layout of children is vertical or horizontal. */\n  @consume({ context: rhJumpLinksOrientationContext, subscribe: true })\n  @state() private orientation?: 'horizontal' | 'vertical';\n\n  /** Whether this item is active. */\n  @property({ type: Boolean, reflect: true }) active = false;\n\n  /** hypertext reference for this link */\n  @property({ reflect: true }) href?: string;\n\n  #internals = InternalsController.of(this, { role: 'listitem' });\n\n  override connectedCallback(): void {\n    super.connectedCallback();\n    this.role = 'listitem';\n  }\n\n  render(): TemplateResult<1> {\n    const { active, orientation = 'vertical' } = this;\n    return html`\n      <a class=\"${classMap({ active, [orientation]: true })}\"\n         aria-current=\"${ifDefined(this.active ? 'location' : undefined)}\"\n         href=\"${ifDefined(this.href)}\"\n         @click=\"${this.#onClick}\">\n        <slot></slot>\n      </a>\n    `;\n  }\n\n  @observes('active')\n  protected activeChanged(): void {\n    this.#internals.ariaCurrent = this.active ? 'location' : null;\n  }\n\n  #onClick() {\n    this.dispatchEvent(new Event('select', { bubbles: true }));\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'rh-jump-link': RhJumpLink;\n  }\n}\n"]}