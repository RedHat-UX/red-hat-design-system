{"version":3,"file":"rh-navigation-secondary.js","sourceRoot":"","sources":["rh-navigation-secondary.ts"],"names":[],"mappings":"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","sourcesContent":["import { LitElement, html } from 'lit';\nimport { customElement } from 'lit/decorators/custom-element.js';\nimport { property } from 'lit/decorators/property.js';\nimport { classMap } from 'lit/directives/class-map.js';\nimport { state } from 'lit/decorators/state.js';\nimport { queryAssignedElements } from 'lit/decorators/query-assigned-elements.js';\n\nimport { ComposedEvent } from '@patternfly/pfe-core';\nimport { InternalsController } from '@patternfly/pfe-core/controllers/internals-controller.js';\nimport { Logger } from '@patternfly/pfe-core/controllers/logger.js';\n\nimport { colorPalettes, type ColorPalette } from '@rhds/elements/lib/color-palettes.js';\nimport { themable } from '@rhds/elements/lib/themable.js';\n\nimport '@rhds/elements/rh-surface/rh-surface.js';\n\nimport './rh-navigation-secondary-menu-section.js';\nimport './rh-navigation-secondary-overlay.js';\n\nimport {\n  RhNavigationSecondaryDropdown,\n  SecondaryNavDropdownExpandEvent,\n} from './rh-navigation-secondary-dropdown.js';\n\nimport { ScreenSizeController } from '../../lib/ScreenSizeController.js';\n\nexport class SecondaryNavOverlayChangeEvent extends ComposedEvent {\n  constructor(\n    public open: boolean,\n    public toggle: HTMLElement\n  ) {\n    super('overlay-change');\n  }\n}\n\nimport styles from './rh-navigation-secondary.css';\n\n/* TODO: Abstract this out to a shareable function, should RTI handle something similar? */\nfunction focusableChildElements(parent: HTMLElement): NodeListOf<HTMLElement> {\n  return parent.querySelectorAll(`a,\n                                  button:not([disabled]),\n                                  input:not([disabled]),\n                                  select:not([disabled]),\n                                  textarea:not([disabled]),\n                                  [tabindex]:not([tabindex=\"-1\"]):not([disabled]),\n                                  details:not([disabled]),\n                                  summary:not(:disabled)`);\n}\n\n/**\n * The Secondary navigation is used to connect a series of pages together. It displays wayfinding content and links relevant to the page it is placed on. It should be used in conjunction with the [primary navigation](../navigation-primary).\n * @summary Propagates related content across a series of pages\n * @slot logo           - Logo added to the main nav bar, expects `<a>Text</a> | <a><svg/></a> | <a><img/></a>` element\n * @slot nav            - Navigation list added to the main nav bar, expects `<ul>` element\n * @slot cta            - Nav bar level CTA, expects `<rh-cta>` element\n * @slot mobile-menu    - Text label for the mobile menu button, for l10n. Defaults to \"Menu\"\n * @csspart nav         - container, `<nav>` element\n * @csspart container   - container, `<div>` element\n * @csspart cta         - container, `<div>` element\n * @fires {SecondaryNavOverlayChangeEvent} overlay-change -\n *                                         Fires when an dropdown is opened or closed in desktop\n *                                         view or when the mobile menu button is toggled in mobile\n *                                         view.\n * @cssprop {<integer>} [--rh-navigation-secondary-z-index=102] - z-index of the navigation-secondary\n * @cssprop {<integer>} [--rh-navigation-secondary-overlay-z-index=-1] - z-index of the navigation-secondary-overlay\n */\n@customElement('rh-navigation-secondary')\n@colorPalettes\n@themable\nexport class RhNavigationSecondary extends LitElement {\n  static readonly styles = [styles];\n\n  private static instances = new Set<RhNavigationSecondary>();\n\n  static {\n    globalThis.addEventListener('keyup', (event: KeyboardEvent) => {\n      const { instances } = RhNavigationSecondary;\n      for (const instance of instances) {\n        instance.#onKeyup(event);\n      }\n    }, { capture: false });\n  }\n\n\n  #logger = new Logger(this);\n  #logoCopy: HTMLElement | null = null;\n\n  /** Compact mode  */\n  #compact = false;\n\n  #internals = InternalsController.of(this, { role: 'navigation' });\n\n  get #computedPalette() {\n    switch (this.colorPalette) {\n      case 'lighter':\n      case 'dark':\n        return this.colorPalette;\n      case 'light':\n      case 'lightest':\n        return 'lighter';\n      case 'darker':\n      case 'darkest':\n        return 'dark';\n      default:\n        return 'lightest';\n    }\n  }\n\n  /**\n   * Color palette dark | lighter (default: lighter)\n   */\n  @property({ reflect: true, attribute: 'color-palette' }) colorPalette: ColorPalette = 'lighter';\n\n\n  @queryAssignedElements({ slot: 'nav' }) private _nav?: HTMLElement[];\n\n  /**\n   * Customize the default `aria-label` on the `<nav>` container.\n   * Defaults to \"secondary\" if no attribute/property is set.\n   */\n  @property({ attribute: 'accessible-label' }) accessibleLabel = 'secondary';\n\n  /**\n   * `mobileMenuExpanded` property is toggled when the mobile menu button is clicked,\n   * a focusout event occurs, or on an overlay click event.  It also switches state\n   * when the viewport changes breakpoints depending on if a dropdown is open or not.\n   */\n  @state() private mobileMenuExpanded = false;\n\n  @state() private overlayOpen = false;\n\n  /**\n   * ScreenSizeController effects callback to set #compact\n   * When viewport size changes,\n   *  - If viewport is mobile, open mobile menu\n   *  - otherwise, close mobile menu and close overlay\n   */\n  #screenSize = new ScreenSizeController(this, 'md', {\n    onChange: matches => {\n      this.#compact = !matches;\n      const dropdownsOpen = this.#allDropdowns().some(x => x.expanded);\n      this.mobileMenuExpanded = this.#compact && dropdownsOpen;\n      this.overlayOpen = dropdownsOpen;\n    },\n  });\n\n  /**\n   * Checks if passed in element is a RhNavigationSecondaryDropdown\n   * @param element possibly an rh-navigation-secondary-dropdown\n   */\n  static isDropdown(element: Element | null): element is RhNavigationSecondaryDropdown {\n    return element instanceof RhNavigationSecondaryDropdown;\n  }\n\n  async connectedCallback() {\n    super.connectedCallback();\n    RhNavigationSecondary.instances.add(this);\n    this.#compact = !this.#screenSize.matches.has('md');\n    this.addEventListener('expand-request', this.#onExpandRequest);\n    this.addEventListener('overlay-change', this.#onOverlayChange);\n    this.addEventListener('focusout', this.#onFocusout);\n    this.addEventListener('keydown', this.#onKeydown);\n    this.#upgradeAccessibility();\n  }\n\n  disconnectedCallback(): void {\n    super.disconnectedCallback();\n    RhNavigationSecondary.instances.delete(this);\n  }\n\n  render() {\n    const expanded = this.mobileMenuExpanded;\n    // CTA must always be 'lightest' on mobile screens\n    const dropdownPalette = this.#compact ? 'lightest' : this.#computedPalette;\n    return html`\n      <div part=\"nav\"\n           class=\"${classMap({ compact: this.#compact })}\">\n        ${this.#logoCopy}\n        <div id=\"container\" part=\"container\" class=\"${classMap({ expanded })}\">\n          <slot name=\"logo\" id=\"logo\"></slot>\n          <button aria-controls=\"container\"\n                  aria-expanded=\"${String(expanded) as 'true' | 'false'}\"\n                  @click=\"${this.#toggleMobileMenu}\"><slot name=\"mobile-menu\">Menu</slot></button>\n          <rh-surface color-palette=\"${dropdownPalette}\">\n            <slot name=\"nav\"></slot>\n            <div id=\"cta\" part=\"cta\">\n              <slot name=\"cta\"></slot>\n            </div>\n          </rh-surface>\n        </div>\n      </div>\n      <rh-navigation-secondary-overlay\n          .open=\"${this.overlayOpen}\"\n          @click=\"${this.#onOverlayClick}\"\n      ></rh-navigation-secondary-overlay>\n    `;\n  }\n\n  /**\n   * When dropdown event is triggered gets dropdown index that triggered\n   * event then closes all dropdowns.\n   * If the event is to open a dropdown, run #expand(index)\n   * If isMobile is set dispatch an SecondaryNavOverlayChangeEvent event\n   * to open the overlay\n   * @param event when a dropdown tries to expand\n   */\n  #onExpandRequest(event: Event) {\n    if (event instanceof SecondaryNavDropdownExpandEvent) {\n      const index = this.#getDropdownIndex(event.target as Element);\n      if (index === null || index === undefined) {\n        return;\n      }\n      this.close();\n      if (event.expanded) {\n        this.#expand(index);\n      }\n      if (this.#screenSize.matches.has('md')) {\n        this.dispatchEvent(new SecondaryNavOverlayChangeEvent(event.expanded, event.toggle));\n      }\n    }\n  }\n\n  /**\n   * Handles when focus changes outside of the navigation\n   * If _compact is set, close the mobileMenu\n   * Closes all dropdowns and toggles overlay to closed\n   * @param event focus\n   */\n  #onFocusout(event: FocusEvent) {\n    const target = event.relatedTarget as HTMLElement;\n    if (target?.closest('rh-navigation-secondary') === this || target === null) {\n      // if the focus is still inside the rh-navigation-secondary exit\n      return;\n    } else {\n      if (this.#screenSize.matches.has('md')) {\n        this.mobileMenuExpanded = false;\n      }\n      this.close();\n      this.overlayOpen = false;\n    }\n  }\n\n  /**\n   * Handles when the overlay receives a click event\n   * Closes all dropdowns and toggles overlay to closed\n   * If _compact then closes mobile menu to closed\n   */\n  #onOverlayClick() {\n    this.close();\n    this.overlayOpen = false;\n    if (!this.#screenSize.matches.has('md')) {\n      this.mobileMenuExpanded = false;\n    }\n  }\n\n  /**\n   * Closes dropdown menu on keydown, then places\n   * focus on last button clicked\n   * @param event keydown\n   */\n  #onKeydown(event: KeyboardEvent) {\n    switch (event.key) {\n      case 'Escape': {\n        if (!this.#screenSize.matches.has('md')) {\n          this.mobileMenuExpanded = false;\n          this.shadowRoot?.querySelector('button')?.focus?.();\n        }\n        this.close();\n        this.overlayOpen = false;\n        break;\n      }\n      case 'Tab':\n        this.#onTabKeydown(event);\n        break;\n      default:\n        break;\n    }\n  }\n\n  #onKeyup(event: KeyboardEvent) {\n    switch (event.key) {\n      case 'Tab':\n        this.#onTabKeyup(event);\n        break;\n      default:\n        break;\n    }\n  }\n\n  #onTabKeyup(event: KeyboardEvent) {\n    if (!this.mobileMenuExpanded) {\n      return;\n    }\n    const { target } = event;\n    if (!this.contains(target as HTMLElement)) {\n      this.#toggleMobileMenu();\n      this.overlayOpen = false;\n    }\n  }\n\n  #onTabKeydown(event: KeyboardEvent) {\n    // target is the element we are leaving with tab press\n    const target = event.target as HTMLElement;\n    // get target parent dropdown\n    const dropdowns = this.#allDropdowns();\n    const dropdownParent = dropdowns.find(dropdown => dropdown.contains(target));\n    if (!dropdownParent) {\n      return;\n    }\n    const focusableChildren = focusableChildElements(dropdownParent);\n    if (!focusableChildren) {\n      return;\n    }\n    if (event.shiftKey) {\n      const firstFocusable = focusableChildren[0] === target;\n      if (!firstFocusable) {\n        return;\n      } else {\n        this.close();\n        if (!this.mobileMenuExpanded) {\n          this.overlayOpen = false;\n        }\n      }\n    } else {\n      // is the target the last focusableChildren element in the dropdown\n      const lastFocusable = focusableChildren[focusableChildren.length - 1] === target;\n      if (!lastFocusable) {\n        return;\n      }\n      this.close();\n      if (!this.mobileMenuExpanded) {\n        this.overlayOpen = false;\n      }\n    }\n  }\n\n  /**\n   * Gets all dropdowns and finds the element given and returns its index\n   * @param element dropdown element\n   */\n  #getDropdownIndex(element: Element | null): void | number {\n    if (!RhNavigationSecondary.isDropdown(element)) {\n      this.#logger.warn('The getDropdownIndex method expects to receive a dropdown element.');\n      return;\n    }\n    const dropdowns = this.#allDropdowns();\n    const index = dropdowns.findIndex(dropdown => dropdown.id === element.id);\n    return index;\n  }\n\n  /**\n   * Gets all dropdowns and returns the dropdown given an index\n   * @param index of the dropdown\n   */\n  #dropdownByIndex(index: number): void | RhNavigationSecondaryDropdown {\n    const dropdowns = this.#allDropdowns();\n    if (dropdowns[index] === undefined) {\n      this.#logger.error('This dropdown index does not exist.');\n      return;\n    }\n    return dropdowns[index];\n  }\n\n  /**\n   * Opens a dropdown given an index\n   * @param index to expand\n   */\n  #expand(index: number): void {\n    if (index == null) {\n      return;\n    }\n    const dropdown = this.#dropdownByIndex(index);\n    if (dropdown && RhNavigationSecondary.isDropdown(dropdown)) {\n      this.#openDropdown(dropdown);\n    }\n  }\n\n  /**\n   * Gets all dropdowns\n   */\n  #allDropdowns(): RhNavigationSecondaryDropdown[] {\n    return Array.from(\n      this.querySelectorAll('rh-navigation-secondary-dropdown')\n    );\n  }\n\n  /**\n   * Sets property expanded=false on dropdown given\n   * @param dropdown to close\n   */\n  #closeDropdown(dropdown: RhNavigationSecondaryDropdown): void {\n    if (dropdown.expanded === false) {\n      return;\n    }\n    dropdown.expanded = false;\n  }\n\n  /**\n   * Sets property expanded=true on dropdown given\n   * @param dropdown to open\n   */\n  #openDropdown(dropdown: RhNavigationSecondaryDropdown): void {\n    if (dropdown.expanded === true) {\n      return;\n    }\n    dropdown.expanded = true;\n  }\n\n  /**\n   * Toggles the overlay triggered by eventListener\n   * @param event secondary nav overlay change event\n   */\n  #onOverlayChange(event: Event) {\n    if (event instanceof SecondaryNavOverlayChangeEvent) {\n      if (this.contains(event.toggle)) {\n        this.overlayOpen = event.open;\n      }\n    }\n  }\n\n  /**\n   * Upgrades the aria attributes on upgrade\n   */\n  #upgradeAccessibility(): void {\n    // remove role=\"navigation\" from host on upgrade\n    this.removeAttribute('role');\n    // remove aria-labelledby from slotted `<ul>` on upgrade\n    this.querySelector(':is([slot=\"nav\"]):is(ul)')?.removeAttribute('aria-labelledby');\n    this.#internals.ariaLabel = this.accessibleLabel;\n  }\n\n  /**\n   * Toggles the mobile menu from `@click` of the _mobileMenuButton\n   */\n  #toggleMobileMenu() {\n    this.mobileMenuExpanded = !this.mobileMenuExpanded;\n    this.dispatchEvent(new SecondaryNavOverlayChangeEvent(this.mobileMenuExpanded, this));\n  }\n\n  /**\n   * Opens a specific dropdown based on index.\n   * Closes all open dropdowns before opening specified.\n   * Toggles overlay to open\n   * @param index - index of the dropdown to open\n   */\n  public open(index: number): void {\n    if (index != null) {\n      const dropdown = this.#dropdownByIndex(index);\n      if (dropdown && RhNavigationSecondary.isDropdown(dropdown)) {\n        this.close();\n        this.#expand(index);\n        dropdown?.querySelector('a')?.focus();\n        this.overlayOpen = true;\n      }\n    }\n  }\n\n  /**\n   * Closes all open dropdowns\n   */\n  public close(): void {\n    this.#allDropdowns()\n        .forEach(dropdown =>\n          this.#closeDropdown(dropdown));\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'rh-navigation-secondary': RhNavigationSecondary;\n  }\n}\n"]}