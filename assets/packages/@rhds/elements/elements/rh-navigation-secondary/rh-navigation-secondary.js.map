{"version":3,"file":"rh-navigation-secondary.js","sourceRoot":"","sources":["rh-navigation-secondary.ts"],"names":[],"mappings":"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","sourcesContent":["import { LitElement, html } from 'lit';\nimport { customElement } from 'lit/decorators/custom-element.js';\nimport { property } from 'lit/decorators/property.js';\nimport { classMap } from 'lit/directives/class-map.js';\nimport { state } from 'lit/decorators/state.js';\nimport { queryAssignedElements } from 'lit/decorators/query-assigned-elements.js';\n\nimport { ComposedEvent } from '@patternfly/pfe-core';\nimport { RovingTabindexController } from '@patternfly/pfe-core/controllers/roving-tabindex-controller.js';\nimport { Logger } from '@patternfly/pfe-core/controllers/logger.js';\n\nimport '@rhds/elements/rh-surface/rh-surface.js';\n\nimport './rh-navigation-secondary-menu-section.js';\nimport './rh-navigation-secondary-overlay.js';\n\nimport {\n  RhNavigationSecondaryDropdown,\n  SecondaryNavDropdownExpandEvent,\n} from './rh-navigation-secondary-dropdown.js';\n\nimport { DirController } from '../../lib/DirController.js';\nimport { ScreenSizeController } from '../../lib/ScreenSizeController.js';\nimport { colorContextProvider, type ColorPalette } from '../../lib/context/color/provider.js';\n\nexport class SecondaryNavOverlayChangeEvent extends ComposedEvent {\n  constructor(\n    public open: boolean,\n    public toggle: HTMLElement\n  ) {\n    super('overlay-change');\n  }\n}\n\nexport type NavPalette = Extract<ColorPalette, (\n  | 'lighter'\n  | 'dark'\n)>;\n\nimport styles from './rh-navigation-secondary.css';\n\n/* TODO: Abstract this out to a shareable function, should RTI handle something similar? */\nfunction focusableChildElements(parent: HTMLElement): NodeListOf<HTMLElement> {\n  return parent.querySelectorAll(`a,\n                                  button:not([disabled]),\n                                  input:not([disabled]),\n                                  select:not([disabled]),\n                                  textarea:not([disabled]),\n                                  [tabindex]:not([tabindex=\"-1\"]):not([disabled]),\n                                  details:not([disabled]),\n                                  summary:not(:disabled)`);\n}\n\n/**\n * The Secondary navigation is used to connect a series of pages together. It displays wayfinding content and links relevant to the page it is placed on. It should be used in conjunction with the [primary navigation](../navigation-primary).\n *\n * @summary Propagates related content across a series of pages\n * @slot logo           - Logo added to the main nav bar, expects `<a>Text</a> | <a><svg/></a> | <a><img/></a>` element\n * @slot nav            - Navigation list added to the main nav bar, expects `<ul>` element\n * @slot cta            - Nav bar level CTA, expects `<rh-cta>` element\n * @slot mobile-menu    - Text label for the mobile menu button, for l10n. Defaults to \"Menu\"\n * @csspart nav         - container, `<nav>` element\n * @csspart container   - container, `<div>` element\n * @csspart cta         - container, `<div>` element\n * @fires {SecondaryNavOverlayChangeEvent} overlay-change -\n *                                         Fires when an dropdown is opened or closed in desktop\n *                                         view or when the mobile menu button is toggled in mobile\n *                                         view.\n * @cssprop {<integer>} --rh-navigation-secondary-z-index - z-index of the navigation-secondary {@default `102`}\n * @cssprop {<integer>} --rh-navigation-secondary-overlay-z-index - z-index of the navigation-secondary-overlay {@default `-1`}\n */\n@customElement('rh-navigation-secondary')\nexport class RhNavigationSecondary extends LitElement {\n  static readonly styles = [styles];\n\n  /**\n   * Color palette darker | lighter (default: lighter)\n   */\n  @colorContextProvider()\n  @property({ reflect: true, attribute: 'color-palette' }) colorPalette: NavPalette = 'lighter';\n\n  @queryAssignedElements({ slot: 'nav' }) private _nav?: HTMLElement[];\n\n  #logger = new Logger(this);\n\n  #logoCopy: HTMLElement | null = null;\n\n  /**\n   * The accessible label for the <nav> element\n   */\n  #label = 'secondary';\n\n  /** Is the element in an RTL context? */\n  #dir = new DirController(this);\n\n  /** Compact mode  */\n  #compact = false;\n\n  #tabindex = new RovingTabindexController(this, {\n    getItems: () => this._nav?.flatMap(slotted =>\n      Array.from(slotted.querySelectorAll<HTMLAnchorElement>(`:is(rh-navigation-secondary-dropdown,\n                                                                  rh-secondary-nav-dropdown) > a,\n                                                              [slot=\"nav\"] > li > a`))) ?? [],\n  });\n\n  /**\n   * `mobileMenuExpanded` property is toggled when the mobile menu button is clicked,\n   * a focusout event occurs, or on an overlay click event.  It also switches state\n   * when the viewport changes breakpoints depending on if a dropdown is open or not.\n   */\n  @state() private mobileMenuExpanded = false;\n\n  @state() private overlayOpen = false;\n\n  /**\n   * ScreenSizeController effects callback to set #compact\n   * When viewport size changes,\n   *  - If viewport is mobile, open mobile menu\n   *  - otherwise, close mobile menu and close overlay\n   */\n  #screenSize = new ScreenSizeController(this, 'md', {\n    onChange: matches => {\n      this.#compact = !matches;\n      const dropdownsOpen = this.#allDropdowns().some(x => x.expanded);\n      this.mobileMenuExpanded = this.#compact && dropdownsOpen;\n      this.overlayOpen = dropdownsOpen;\n    },\n  });\n\n  /**\n   * Checks if passed in element is a RhNavigationSecondaryDropdown\n   * @param element possibly an rh-navigation-secondary-dropdown\n   */\n  static isDropdown(element: Element | null): element is RhNavigationSecondaryDropdown {\n    return element instanceof RhNavigationSecondaryDropdown;\n  }\n\n  async connectedCallback() {\n    super.connectedCallback();\n    this.#compact = !this.#screenSize.matches.has('md');\n    this.addEventListener('expand-request', this.#onExpandRequest);\n    this.addEventListener('overlay-change', this.#onOverlayChange);\n    this.addEventListener('focusout', this.#onFocusout);\n    this.addEventListener('keydown', this.#onKeydown);\n    this.#upgradeAccessibility();\n  }\n\n  render() {\n    const expanded = this.mobileMenuExpanded;\n    const rtl = this.#dir.dir === 'rtl';\n    // CTA must always be 'lightest' on mobile screens\n    const dropdownPalette = this.#compact ? 'lightest' : this.colorPalette;\n    return html`\n      <nav part=\"nav\"\n           class=\"${classMap({ compact: this.#compact, rtl })}\"\n           aria-label=\"${this.#label}\">\n        ${this.#logoCopy}\n        <div id=\"container\" part=\"container\" class=\"${classMap({ expanded })}\">\n          <slot name=\"logo\" id=\"logo\"></slot>\n          <button aria-controls=\"container\"\n                  aria-expanded=\"${String(expanded) as 'true' | 'false'}\"\n                  @click=\"${this.#toggleMobileMenu}\"><slot name=\"mobile-menu\">Menu</slot></button>\n          <rh-surface color-palette=\"${dropdownPalette}\">\n            <slot name=\"nav\" @slotchange=\"${() => this.#tabindex.updateItems()}\"></slot>\n            <div id=\"cta\" part=\"cta\">\n              <slot name=\"cta\"></slot>\n            </div>\n          </rh-surface>\n        </div>\n      </nav>\n      <rh-navigation-secondary-overlay\n          .open=\"${this.overlayOpen}\"\n          @click=\"${this.#onOverlayClick}\"\n      ></rh-navigation-secondary-overlay>\n    `;\n  }\n\n  /**\n   * When dropdown event is triggered gets dropdown index that triggered\n   * event then closes all dropdowns.\n   * If the event is to open a dropdown, run #expand(index)\n   * If isMobile is set dispatch an SecondaryNavOverlayChangeEvent event\n   * to open the overlay\n   * @param event when a dropdown tries to expand\n   */\n  #onExpandRequest(event: Event) {\n    if (event instanceof SecondaryNavDropdownExpandEvent) {\n      const index = this.#getDropdownIndex(event.target as Element);\n      if (index === null || index === undefined) {\n        return;\n      }\n      this.close();\n      if (event.expanded) {\n        this.#expand(index);\n      }\n      if (this.#screenSize.matches.has('md')) {\n        this.dispatchEvent(new SecondaryNavOverlayChangeEvent(event.expanded, event.toggle));\n      }\n    }\n  }\n\n  /**\n   * Handles when focus changes outside of the navigation\n   * If _compact is set, close the mobileMenu\n   * Closes all dropdowns and toggles overlay to closed\n   * @param event focus\n   */\n  #onFocusout(event: FocusEvent) {\n    const target = event.relatedTarget as HTMLElement;\n    if (target?.closest('rh-navigation-secondary, rh-secondary-nav') === this || target === null) {\n      // if the focus is still inside the rh-navigation-secondary exit\n      return;\n    } else {\n      if (this.#screenSize.matches.has('md')) {\n        this.mobileMenuExpanded = false;\n      }\n      this.close();\n      this.overlayOpen = false;\n    }\n  }\n\n  /**\n   * Handles when the overlay receives a click event\n   * Closes all dropdowns and toggles overlay to closed\n   * If _compact then closes mobile menu to closed\n   */\n  #onOverlayClick() {\n    this.close();\n    this.overlayOpen = false;\n    if (!this.#screenSize.matches.has('md')) {\n      this.mobileMenuExpanded = false;\n    }\n  }\n\n  /**\n   * Closes dropdown menu on keydown, then places\n   * focus on last button clicked\n   * @param event keydown\n   */\n  #onKeydown(event: KeyboardEvent) {\n    switch (event.key) {\n      case 'Escape': {\n        if (!this.#screenSize.matches.has('md')) {\n          this.mobileMenuExpanded = false;\n          this.shadowRoot?.querySelector('button')?.focus?.();\n        } else {\n          this.#tabindex.activeItem?.focus();\n        }\n        this.close();\n        this.overlayOpen = false;\n        break;\n      }\n      case 'Tab':\n        this.#onTabEvent(event);\n        break;\n      default:\n        break;\n    }\n  }\n\n  #onTabEvent(event: KeyboardEvent) {\n    // target is the element we are leaving with tab press\n    const target = event.target as HTMLElement;\n    // get target parent dropdown\n    const dropdowns = this.#allDropdowns();\n    const dropdownParent = dropdowns.find(dropdown => dropdown.contains(target));\n    if (!dropdownParent) {\n      return;\n    }\n    const focusableChildren = focusableChildElements(dropdownParent);\n    if (!focusableChildren) {\n      return;\n    }\n    if (event.shiftKey) {\n      const firstFocusable = focusableChildren[0] === target;\n      if (!firstFocusable) {\n        return;\n      } else {\n        this.close();\n        this.overlayOpen = false;\n      }\n    } else {\n      // is the target the last focusableChildren element in the dropdown\n      const lastFocusable = focusableChildren[focusableChildren.length - 1] === target;\n      if (!lastFocusable) {\n        return;\n      }\n      event.preventDefault();\n      this.close();\n      this.overlayOpen = false;\n      this.#tabindex.setActiveItem(this.#tabindex.nextItem);\n      this.#tabindex.activeItem?.focus();\n    }\n  }\n\n  /**\n   * Gets all dropdowns and finds the element given and returns its index\n   * @param element dropdown element\n   */\n  #getDropdownIndex(element: Element | null): void | number {\n    if (!RhNavigationSecondary.isDropdown(element)) {\n      this.#logger.warn('The getDropdownIndex method expects to receive a dropdown element.');\n      return;\n    }\n    const dropdowns = this.#allDropdowns();\n    const index = dropdowns.findIndex(dropdown => dropdown.id === element.id);\n    return index;\n  }\n\n  /**\n   * Gets all dropdowns and returns the dropdown given an index\n   * @param index of the dropdown\n   */\n  #dropdownByIndex(index: number): void | RhNavigationSecondaryDropdown {\n    const dropdowns = this.#allDropdowns();\n    if (dropdowns[index] === undefined) {\n      this.#logger.error('This dropdown index does not exist.');\n      return;\n    }\n    return dropdowns[index];\n  }\n\n  /**\n   * Opens a dropdown given an index\n   * @param index to expand\n   */\n  #expand(index: number): void {\n    if (index == null) {\n      return;\n    }\n    const dropdown = this.#dropdownByIndex(index);\n    if (dropdown && RhNavigationSecondary.isDropdown(dropdown)) {\n      const link = dropdown.querySelector('a');\n      if (link) {\n        this.#tabindex.setActiveItem(link);\n      }\n      this.#openDropdown(dropdown);\n    }\n  }\n\n  /**\n   * Gets all dropdowns\n   */\n  #allDropdowns(): RhNavigationSecondaryDropdown[] {\n    return Array.from(\n      this.querySelectorAll('rh-navigation-secondary-dropdown, rh-secondary-nav-dropdown')\n    );\n  }\n\n  /**\n   * Sets property expanded=false on dropdown given\n   * @param dropdown to close\n   */\n  #closeDropdown(dropdown: RhNavigationSecondaryDropdown): void {\n    if (dropdown.expanded === false) {\n      return;\n    }\n    dropdown.expanded = false;\n  }\n\n  /**\n   * Sets property expanded=true on dropdown given\n   * @param dropdown to open\n   */\n  #openDropdown(dropdown: RhNavigationSecondaryDropdown): void {\n    if (dropdown.expanded === true) {\n      return;\n    }\n    dropdown.expanded = true;\n  }\n\n  /**\n   * Toggles the overlay triggered by eventListener\n   * @param event secondary nav overlay change event\n   */\n  #onOverlayChange(event: Event) {\n    if (event instanceof SecondaryNavOverlayChangeEvent) {\n      if (this.contains(event.toggle)) {\n        this.overlayOpen = event.open;\n      }\n    }\n  }\n\n  /**\n   * Upgrades the aria attributes on upgrade\n   */\n  #upgradeAccessibility(): void {\n    // remove role=\"navigation\" from host on upgrade\n    this.removeAttribute('role');\n    // remove aria-labelledby from slotted `<ul>` on upgrade\n    this.querySelector(':is([slot=\"nav\"]):is(ul)')?.removeAttribute('aria-labelledby');\n    // transfer the aria-label to the shadow <nav>\n    if (this.hasAttribute('aria-label')) {\n      this.#label = this.getAttribute('aria-label') ?? 'secondary';\n      this.removeAttribute('aria-label');\n    }\n  }\n\n  /**\n   * Toggles the mobile menu from `@click` of the _mobileMenuButton\n   */\n  #toggleMobileMenu() {\n    this.mobileMenuExpanded = !this.mobileMenuExpanded;\n    this.dispatchEvent(new SecondaryNavOverlayChangeEvent(this.mobileMenuExpanded, this));\n  }\n\n  /**\n   * Opens a specific dropdown based on index.\n   * Closes all open dropdowns before opening specified.\n   * Toggles overlay to open\n   * @param index - index of the dropdown to open\n   */\n  public open(index: number): void {\n    if (index != null) {\n      const dropdown = this.#dropdownByIndex(index);\n      if (dropdown && RhNavigationSecondary.isDropdown(dropdown)) {\n        this.close();\n        this.#expand(index);\n        dropdown?.querySelector('a')?.focus();\n        this.overlayOpen = true;\n      }\n    }\n  }\n\n  /**\n   * Closes all open dropdowns\n   */\n  public close(): void {\n    this.#allDropdowns()\n        .forEach(dropdown =>\n          this.#closeDropdown(dropdown));\n  }\n}\n\n@customElement('rh-secondary-nav')\nclass RhSecondaryNav extends RhNavigationSecondary {\n  #logger = new Logger(this);\n\n  constructor() {\n    super();\n    this.#logger.warn('rh-secondary-nav is deprecated. Use rh-navigation-secondary instead.');\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'rh-navigation-secondary': RhNavigationSecondary;\n    'rh-secondary-nav': RhSecondaryNav;\n  }\n}\n"]}