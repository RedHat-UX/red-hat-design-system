{"version":3,"file":"rh-navigation-secondary-menu-section.js","sourceRoot":"","sources":["rh-navigation-secondary-menu-section.ts"],"names":[],"mappings":";;AAAA,OAAO,EAAE,IAAI,EAAE,UAAU,EAAE,MAAM,KAAK,CAAC;AACvC,OAAO,EAAE,aAAa,EAAE,MAAM,kCAAkC,CAAC;AAEjE,OAAO,EAAE,WAAW,EAAE,MAAM,0CAA0C,CAAC;AACvE,OAAO,EAAE,MAAM,EAAE,MAAM,4CAA4C,CAAC;AAEpE,OAAO,EAAE,gBAAgB,EAAE,MAAM,wBAAwB,CAAC;;;AAI1D;;;;;;;GAOG;AAEI,IAAM,gCAAgC,GAAtC,MAAM,gCAAiC,SAAQ,UAAU;IAAzD;;;QAGL,mDAAU,IAAI,MAAM,CAAC,IAAI,CAAC,EAAC;IA6C7B,CAAC;IA3CC,iBAAiB;QACf,KAAK,CAAC,iBAAiB,EAAE,CAAC;QAE1B,uBAAA,IAAI,0GAAqB,MAAzB,IAAI,CAAuB,CAAC;IAC9B,CAAC;IAED,MAAM;QACJ,OAAO,IAAI,CAAA;;;;;;KAMV,CAAC;IACJ,CAAC;;;;;IASC,MAAM,KAAK,GAAG,IAAI,CAAC,gBAAgB,CAAC,gCAAgC,CAAC,CAAC;IAEtE,KAAK,MAAM,IAAI,IAAI,KAAK,EAAE,CAAC;QACzB,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,iBAAiB,CAAC,EAAE,CAAC;YAC1C,MAAM,MAAM,GAAG,gBAAgB,CAAC,IAAI,CAAC,sBAAsB,CAAC,CAAC,CAAC;gBAC5D,IAAI,CAAC,sBAAsB;gBAC3B,CAAC,CAAC,IAAI,CAAC;YACT,IAAI,CAAC,MAAM,EAAE,CAAC;gBACZ,OAAO,uBAAA,IAAI,gDAAQ,CAAC,IAAI,CACtB,iEAAiE,CAClE,CAAC;YACJ,CAAC;iBAAM,CAAC;gBACN,wCAAwC;gBACxC,MAAM,CAAC,EAAE,KAAT,MAAM,CAAC,EAAE,GAAK,WAAW,CAAC,sCAAsC,CAAC,EAAC;gBAClE,gDAAgD;gBAChD,IAAI,CAAC,YAAY,CAAC,iBAAiB,EAAE,MAAM,CAAC,EAAE,CAAC,CAAC;YAClD,CAAC;QACH,CAAC;IACH,CAAC;AACH,CAAC;AA9Ce,uCAAM,GAAG,CAAC,MAAM,CAAC,AAAX,CAAY;AADvB,gCAAgC;IAD5C,aAAa,CAAC,sCAAsC,CAAC;GACzC,gCAAgC,CAgD5C","sourcesContent":["import { html, LitElement } from 'lit';\nimport { customElement } from 'lit/decorators/custom-element.js';\n\nimport { getRandomId } from '@patternfly/pfe-core/functions/random.js';\nimport { Logger } from '@patternfly/pfe-core/controllers/logger.js';\n\nimport { isHeadingElement } from '../../lib/functions.js';\n\nimport styles from './rh-navigation-secondary-menu-section.css';\n\n/**\n * A menu section which auto upgrades accessibility for headers and sibling list\n * @summary 'A menu section which auto upgrades accessibility for headers and sibling list'\n * @slot header     - Adds a header tag to section, expects `<h1> | <h2> | <h3> | <h4> | <h5> | <h6>` element\n * @slot links      - Adds a ul tag to section, expects `<ul> | <ol>` element\n * @slot cta        - Adds a section level CTA, expects `<rh-cta>` element\n * @csspart container    - container, <section> element\n */\n@customElement('rh-navigation-secondary-menu-section')\nexport class RhNavigationSecondaryMenuSection extends LitElement {\n  static readonly styles = [styles];\n\n  #logger = new Logger(this);\n\n  connectedCallback(): void {\n    super.connectedCallback();\n\n    this.#updateAccessibility();\n  }\n\n  render() {\n    return html`\n      <section part=\"container\">\n        <slot name=\"header\"></slot>\n        <slot name=\"links\"></slot>\n        <slot name=\"cta\"></slot>\n      </section>\n    `;\n  }\n\n  /**\n   * Finds all list elements `<ul>, <ol>` and if the list does not have an\n   * `aria-labelledby` attribute finds the previousElementSibling header\n   * `<h1-6>` tags if available assigns an id or uses preexisting id\n   * to that header, then uses that id to the list on the `aria-labelledby`.\n   */\n  #updateAccessibility() {\n    const lists = this.querySelectorAll(':is([slot=\"links\"]):is(ul, ol)');\n\n    for (const list of lists) {\n      if (!list.hasAttribute('aria-labelledby')) {\n        const header = isHeadingElement(list.previousElementSibling) ?\n          list.previousElementSibling\n          : null;\n        if (!header) {\n          return this.#logger.warn(\n            'This links set doesn\\'t have a valid header associated with it.'\n          );\n        } else {\n          // add an ID to the header if we need it\n          header.id ||= getRandomId('rh-navigation-secondary-menu-section');\n          // add that header id to the aria-labelledby tag\n          list.setAttribute('aria-labelledby', header.id);\n        }\n      }\n    }\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'rh-navigation-secondary-menu-section': RhNavigationSecondaryMenuSection;\n  }\n}\n"]}