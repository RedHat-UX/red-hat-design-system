{"version":3,"file":"rh-code-block.js","sourceRoot":"","sources":["rh-code-block.ts"],"names":[],"mappings":";;;AAAA,OAAO,EAAE,UAAU,EAAE,IAAI,EAAuB,MAAM,KAAK,CAAC;AAC5D,OAAO,EAAE,aAAa,EAAE,MAAM,kCAAkC,CAAC;AACjE,OAAO,EAAE,QAAQ,EAAE,MAAM,6BAA6B,CAAC;AACvD,OAAO,EAAE,QAAQ,EAAE,MAAM,6BAA6B,CAAC;AACvD,OAAO,EAAE,QAAQ,EAAE,MAAM,4BAA4B,CAAC;AAEtD,OAAO,EAAE,cAAc,EAAE,MAAM,qDAAqD,CAAC;AAErF,OAAO,EAAmB,oBAAoB,EAAE,MAAM,qCAAqC,CAAC;;;AAgB5F;;;;;;;;;;;;;;;GAeG;AAEI,IAAM,WAAW,mBAAjB,MAAM,WAAY,SAAQ,UAAU;IAApC;;;QAyCF,YAAO,GAAwB,EAAE,CAAC;QAErC,6DAA6D;QACjB,YAAO,GAAG,KAAK,CAAC;QAE5D,4CAA4C;QACA,cAAS,GAAG,KAAK,CAAC;QAE9D,4EAA4E;QACN,eAAU,GAAG,KAAK,CAAC;QAEzF,+CAA+C;QAClB,SAAI,GAAG,KAAK,CAAC;QAI1C,6BAAS,IAAI,cAAc,CACzB,IAAI,EACJ,IAAI;QACJ,aAAa;QACb,mBAAmB,EACnB,mBAAmB,EACnB,WAAW,EACX,WAAW,EACX,QAAQ,CACT,EAAC;QAEF,0BAAM,IAAI,cAAc,CAAC,GAAG,EAAE,CAAC,uBAAA,IAAI,+DAAoB,MAAxB,IAAI,CAAsB,CAAC,EAAC;QAE3D,mCAAgC,EAAE,EAAC;IA8MrC,CAAC;IA5MU,iBAAiB;QACxB,KAAK,CAAC,iBAAiB,EAAE,CAAC;QAC1B,uBAAA,IAAI,uBAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;IACzB,CAAC;IAEQ,oBAAoB;QAC3B,KAAK,CAAC,oBAAoB,EAAE,CAAC;QAC7B,uBAAA,IAAI,uBAAI,CAAC,UAAU,EAAE,CAAC;IACxB,CAAC;IAED,MAAM;QACJ,MAAM,EAAE,EAAE,GAAG,EAAE,EAAE,UAAU,EAAE,IAAI,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,IAAI,CAAC;QAC/D,MAAM,UAAU,GAAG,uBAAA,IAAI,gCAAa,CAAC,MAAM,GAAG,CAAC,CAAC;QAChD,MAAM,SAAS,GAAG,UAAU,IAAI,CAAC,UAAU,CAAC;QAC5C,MAAM,OAAO,GAAG,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC;QACtC,OAAO,IAAI,CAAA;;oBAEK,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE;YACT,OAAO;YACP,OAAO;YACP,UAAU;YACV,UAAU;YACV,SAAS;YACT,SAAS;YACT,IAAI,EAAE,CAAC;2BACZ,uBAAA,IAAI,yDAAc;;;qDAGQ,uBAAA,IAAI,gCAAa,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC,IAAI,CAAA;yBACrE,QAAQ,CAAC,EAAE,MAAM,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,OAAO,CAAC;;4CAEnB,uBAAA,IAAI,+DAAoB;;;;uBAI7C,uBAAA,IAAI,2DAAgB;uBACpB,uBAAA,IAAI,2DAAgB;wCACH,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAA;;sDAEZ,CAAC;iCACtB,CAAC;;8CAEY,CAAC;gBAC/B,aAAW,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,KAAK,MAAM,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE;;wBAEpE,CAAC;;;;;2BAKE,CAAC,UAAU;0BACZ,uBAAA,IAAI,0DAAe;4CACD,IAAI,CAAC,UAAU;4CACf,CAAC,IAAI,CAAC,UAAU;;;;;;;;qCAQvB,uBAAA,IAAI,0BAAO,CAAC,OAAO,CAAC,QAAQ,CAAC;KAC7D,CAAC;IACJ,CAAC;IAEkB,YAAY;QAC7B,uBAAA,IAAI,+DAAoB,MAAxB,IAAI,CAAsB,CAAC;IAC7B,CAAC;IAEkB,OAAO,CAAC,OAA6B;QACtD,IAAI,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC;YACxB,uBAAA,IAAI,wDAAa,MAAjB,IAAI,CAAe,CAAC;QACtB,CAAC;IACH,CAAC;;;;;;;IAGC,uBAAA,IAAI,+DAAoB,MAAxB,IAAI,CAAsB,CAAC;IAC3B,4BAA4B;IAC5B,MAAM,IAAI,GAAG,IAAI,CAAC,UAAU,EAAE,aAAa,CAAkB,gCAAgC,CAAC,CAAC;IAC/F,KAAK,MAAM,EAAE,IAAI,IAAI,EAAE,gBAAgB,EAAE,IAAI,EAAE,EAAE,CAAC;QAChD,IAAI,EAAE,YAAY,WAAW,EAAE,CAAC;YAC9B,EAAE,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,cAAc,KAAK,QAAQ,CAAC,KAAK,IAAI,CAAC,IAAI,CAAC;QACrE,CAAC;IACH,CAAC;IACD,IAAI,CAAC,aAAa,EAAE,CAAC;AACvB,CAAC;;IAQC,MAAM,IAAI,GAAG,IAAI,CAAC,UAAU,EAAE,cAAc,CAAC,SAAS,CAAoB,CAAC;IAE3E,MAAM,KAAK,GAAkB,IAAI,CAAC,gBAAgB,EAAE,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAC7D,CAAC,YAAY,iBAAiB;WAC3B,CAAC,YAAY,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACtC,CAAC,CAAC,EAAE,CAAC,CAAC;IAER,MAAM,KAAK,GAA0B,KAAK,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE;QACvD,MAAM,KAAK,GAAG,QAAQ,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;QAC7C,KAAK,CAAC,SAAS,GAAG,OAAO,CAAC;QAC1B,KAAK,CAAC,SAAS,GAAG,GAAG,CAAC;QACtB,KAAK,CAAC,KAAK,CAAC,OAAO,GAAG,OAAO,CAAC;QAC9B,IAAI,CAAC,UAAU,EAAE,cAAc,CAAC,QAAQ,CAAC,EAAE,WAAW,CAAC,KAAK,CAAC,CAAC;QAC9D,OAAO;YACL,KAAK,EAAE,OAAO,CAAC,WAAW,EAAE,KAAK,CAAC,UAAU,CAAC,IAAI,EAAE;YACnD,WAAW,EAAE,EAAE;YACf,KAAK;YACL,cAAc,EAAE,KAAK,CAAC,qBAAqB,EAAE,CAAC,MAAM;SACrD,CAAC;IACJ,CAAC,CAAC,CAAC;IAEH,KAAK,MAAM,EAAE,KAAK,EAAE,WAAW,EAAE,KAAK,EAAE,cAAc,EAAE,IAAI,KAAK,EAAE,CAAC;QAClE,WAAW,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,OAAO;QAClD,KAAK,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE;YACxB,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;gBACpB,MAAM,CAAC,GAAG,KAAK,CAAC,WAAW,CAAC,QAAQ,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC,CAAC;gBAC5D,CAAC,CAAC,KAAK,CAAC,OAAO,GAAG,OAAO,CAAC;gBAC1B,CAAC,CAAC,WAAW,GAAG,IAAI,CAAC;YACvB,CAAC;iBAAM,CAAC;gBACN,WAAW,CAAC,CAAC,CAAC,GAAG,cAAc,CAAC;YAClC,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,KAAK,MAAM,EAAE,KAAK,EAAE,WAAW,EAAE,IAAI,KAAK,EAAE,CAAC;QAC3C,IAAI,UAAU,GAAG,CAAC,CAAC;QACnB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,WAAW,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;YAC5C,IAAI,WAAW,CAAC,CAAC,CAAC,KAAK,SAAS,EAAE,CAAC;gBACjC,WAAW,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,QAAQ,CAAC,UAAU,EAAE,CAAC,CAAC,qBAAqB,EAAE,EAAE,MAAM,IAAI,CAAC,CAAC;YACrF,CAAC;QACH,CAAC;QACD,KAAK,CAAC,MAAM,EAAE,CAAC;IACjB,CAAC;IAED,uBAAA,IAAI,4BAAgB,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CACpC,CAAC,CAAC,WAAW,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CACrB,GAAG,CAAC,IAAI,CAAC,CAAC,cAAc,IAAa,CAAC,CAAC,MAAA,CAAC;IAE5C,IAAI,CAAC,aAAa,CAAC,eAAe,EAAE,CAAC,CAAC,CAAC;AACzC,CAAC;mEAEe,KAAY;IAC1B,uBAAA,IAAI,yDAAc,MAAlB,IAAI,EAAe,KAAK,CAAC,CAAC;AAC5B,CAAC;mEAEe,KAAoB;IAClC,QAAQ,KAAK,CAAC,GAAG,EAAE,CAAC;QAClB,KAAK,OAAO,CAAC;QACb,KAAK,GAAG;YACN,KAAK,CAAC,cAAc,EAAE,CAAC;YACvB,uBAAA,IAAI,yDAAc,MAAlB,IAAI,EAAe,KAAK,CAAC,CAAC;IAC9B,CAAC;AACH,CAAC;+DAEa,KAAY;IACxB,MAAM,EAAE,GAAG,KAAK,CAAC,YAAY,EAAE,CAAC,IAAI,CAAC,CAAC,CAAc,EAAoB,EAAE,CACxE,CAAC,YAAY,WAAW,IAAI,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC;IAC3D,IAAI,EAAE,EAAE,CAAC;QACP,QAAQ,EAAE,CAAC,OAAO,CAAC,eAAe,EAAE,CAAC;YACnC,KAAK,MAAM;gBACT,OAAO,uBAAA,IAAI,iDAAM,MAAV,IAAI,CAAQ,CAAC;YACtB,KAAK,MAAM;gBACT,IAAI,CAAC,IAAI,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC;gBACvB,IAAI,CAAC,aAAa,EAAE,CAAC;gBACrB,OAAO;QACX,CAAC;IACH,CAAC;AACH,CAAC;;IAGC,IAAI,CAAC,UAAU,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC;AACrC,CAAC;oBAED,KAAK;IACH,MAAM,SAAS,CAAC,SAAS,CAAC,SAAS,CACjC,KAAK,CAAC,IAAI,CACR,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,EAC/B,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,WAAW,CACnB,CAAC,IAAI,CAAC,EAAE,CAAC,CACX,CAAC;IACF,4BAA4B;IAC5B,MAAM,IAAI,GAAG,IAAI,CAAC,UAAU,EAAE,aAAa,CAAkB,gCAAgC,CAAC,CAAC;IAC/F,MAAM,OAAO,GAAG,IAAI,EAAE,OAAO,CAAC,YAAY,CAAC,CAAC;IAC5C,OAAO,EAAE,IAAI,EAAE,CAAC;IAChB,KAAK,MAAM,EAAE,IAAI,IAAI,EAAE,gBAAgB,EAAE,IAAI,EAAE,EAAE,CAAC;QAChD,IAAI,EAAE,YAAY,WAAW,EAAE,CAAC;YAC9B,EAAE,CAAC,MAAM,GAAG,EAAE,CAAC,OAAO,CAAC,cAAc,KAAK,QAAQ,CAAC;QACrD,CAAC;IACH,CAAC;IACD,IAAI,CAAC,aAAa,EAAE,CAAC;IACrB,OAAO,EAAE,IAAI,EAAE,CAAC;IAChB,MAAM,IAAI,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,UAAU,CAAC,CAAC,EAAE,IAAK,CAAC,CAAC,CAAC;IAC7C,OAAO,EAAE,IAAI,EAAE,CAAC;IAChB,KAAK,MAAM,EAAE,IAAI,IAAI,EAAE,gBAAgB,EAAE,IAAI,EAAE,EAAE,CAAC;QAChD,IAAI,EAAE,YAAY,WAAW,EAAE,CAAC;YAC9B,EAAE,CAAC,MAAM,GAAG,EAAE,CAAC,OAAO,CAAC,cAAc,KAAK,QAAQ,CAAC;QACrD,CAAC;IACH,CAAC;IACD,IAAI,CAAC,aAAa,EAAE,CAAC;IACrB,OAAO,EAAE,IAAI,EAAE,CAAC;AAClB,CAAC;AAlRc,mBAAO,GAAG,IAAI,GAAG,CAAC;IAC/B,CAAC,MAAM,EAAE,IAAI,CAAA;;;;;;;KAOZ,CAAC;IACF,CAAC,aAAa,EAAE,IAAI,CAAA;;;;;;;;KAQnB,CAAC;IACF,CAAC,MAAM,EAAE,IAAI,CAAA;;;;;;;KAOZ,CAAC;CACH,CAAC,AA1BoB,CA0BnB;AAEI,kBAAM,GAAG,CAAC,KAAK,CAAC,AAAV,CAAW;AAYrB;IAVF,QAAQ,CAAC;QACR,OAAO,EAAE,IAAI;QACb,SAAS,EAAE;YACT,aAAa,CAAC,KAAK;gBACjB,OAAO,CAAC,CAAC,KAAK,IAAI,EAAE,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;YAC/E,CAAC;YACD,WAAW,CAAC,KAAK;gBACf,OAAO,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;YACrD,CAAC;SACF;KACF,CAAC;4CAAmC;AAGO;IAA3C,QAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;4CAAiB;AAGhB;IAA3C,QAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;8CAAmB;AAGQ;IAArE,QAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE,SAAS,EAAE,aAAa,EAAE,CAAC;+CAAoB;AAG5D;IAA5B,QAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;yCAAc;AAEV;IAA/B,oBAAoB,EAAE;uCAAyB;AAvDrC,WAAW;IADvB,aAAa,CAAC,eAAe,CAAC;GAClB,WAAW,CAoRvB;;AAQD;;;;;;;;;;;;;;;;;;;;;;;GAuBG","sourcesContent":["import { LitElement, html, type PropertyValues } from 'lit';\nimport { customElement } from 'lit/decorators/custom-element.js';\nimport { classMap } from 'lit/directives/class-map.js';\nimport { styleMap } from 'lit/directives/style-map.js';\nimport { property } from 'lit/decorators/property.js';\n\nimport { SlotController } from '@patternfly/pfe-core/controllers/slot-controller.js';\n\nimport { type ColorTheme, colorContextConsumer } from '../../lib/context/color/consumer.js';\n\nimport style from './rh-code-block.css';\n\n/* TODO\n * - style slotted and shadow fake-fabs\n * - manage state of copy and wrap, including if they are slotted. see actions.html\n */\n\ninterface CodeLineHeightsInfo {\n  lines: string[];\n  lineHeights: (number | undefined)[];\n  sizer: HTMLElement;\n  oneLinerHeight: number;\n}\n\n/**\n * A code block is formatted text within a container.\n * @summary Formats code strings within a container\n * @slot - A non-executable script tag containing the sample content. JavaScript\n *         samples should use the type `text/sample-javascript`. HTML samples\n *         containing script tags must escape the closing `</script>` tag. Can\n *         also be a `<pre>` tag.\n * @slot action-label-copy - tooltip content for the copy action button\n * @slot action-label-wrap - tooltip content for the wrap action button\n * @slot show-more - text content for the expandable toggle button when the code\n *                   block is collapsed.\n * @slot show-less - text content for the expandable toggle button when the code\n *                   block is expanded.\n * @slot legend - `<dl>` element containing rh-badges in the `<dt>`\n *                and legend text in the `<dd>` elements\n */\n@customElement('rh-code-block')\nexport class RhCodeBlock extends LitElement {\n  private static actions = new Map([\n    ['wrap', html`\n      <svg xmlns=\"http://www.w3.org/2000/svg\"\n          fill=\"currentColor\"\n          viewBox=\"0 0 20 20\">\n        <path d=\"M19 0c.313.039.781-.077 1 .057V20c-.313-.039-.781.077-1-.057V0ZM10.82 4.992C9.877 4.996 8.31 5.57 8.174 6c1.21.03 2.432-.073 3.635.08 2.181.383 3.677 2.796 3.066 4.922-.41 1.753-2.108 2.995-3.877 3.014L11 14H5.207l2.682-2.682-.707-.707L3.293 14.5l3.889 3.889.707-.707L5.207 15h5.736l.004-.008c1.444.005 2.896-.59 3.832-1.722 1.65-1.82 1.612-4.85-.08-6.63A5 5 0 0 0 11 5a1.948 1.948 0 0 0-.18-.008z\"/>\n        <path d=\"M4 5h7c-.039.313.077.781-.057 1H4V5ZM0 0c.313.039.781-.077 1 .057V20c-.313-.039-.781.077-1-.057V0Z\"/>\n      </svg>\n    `],\n    ['wrap-active', html`\n      <svg xmlns=\"http://www.w3.org/2000/svg\"\n           fill=\"none\"\n           viewBox=\"0 0 21 20\">\n        <path fill=\"currentColor\" d=\"M12 13h1v7h-1zM12 0h1v7h-1z\"/>\n        <path stroke=\"currentColor\" d=\"M16.465 6.464 20 10l-3.535 3.536\"/>\n        <path fill=\"currentColor\" d=\"M3 9.5h17v1H3zM0 0h1v20H0z\"/>\n      </svg>\n    `],\n    ['copy', html`\n      <svg xmlns=\"http://www.w3.org/2000/svg\"\n           version=\"1.1\"\n           viewBox=\"0 0 20 20\">\n        <path fill=\"currentColor\" d=\"M12 0H2C.9 0 0 .9 0 2v10h1V2c0-.6.4-1 1-1h10V0z\"/>\n        <path fill=\"currentColor\" d=\"M18 20H8c-1.1 0-2-.9-2-2V8c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2v10c0 1.1-.9 2-2 2zM8 7c-.6 0-1 .4-1 1v10c0 .6.4 1 1 1h10c.6 0 1-.4 1-1V8c0-.6-.4-1-1-1H8z\"/>\n      </svg>\n    `],\n  ]);\n\n  static styles = [style];\n\n  @property({\n    reflect: true,\n    converter: {\n      fromAttribute(value) {\n        return ((value ?? '').split(/\\s+/) ?? []).map(x => x.trim()).filter(Boolean);\n      },\n      toAttribute(value) {\n        return Array.isArray(value) ? value.join(' ') : '';\n      },\n    },\n  }) actions: ('copy' | 'wrap')[] = [];\n\n  /** When set, the code block displays with compact spacing */\n  @property({ type: Boolean, reflect: true }) compact = false;\n\n  /** When set, the code block is resizable */\n  @property({ type: Boolean, reflect: true }) resizable = false;\n\n  /** When set, the code block occupies it's full height, without scrolling */\n  @property({ type: Boolean, reflect: true, attribute: 'full-height' }) fullHeight = false;\n\n  /** When set, lines in the code snippet wrap */\n  @property({ type: Boolean }) wrap = false;\n\n  @colorContextConsumer() private on?: ColorTheme;\n\n  #slots = new SlotController(\n    this,\n    null,\n    // 'actions',\n    'action-label-copy',\n    'action-label-wrap',\n    'show-more',\n    'show-less',\n    'legend',\n  );\n\n  #ro = new ResizeObserver(() => this.#computeLineNumbers());\n\n  #lineHeights: `${string}px`[] = [];\n\n  override connectedCallback() {\n    super.connectedCallback();\n    this.#ro.observe(this);\n  }\n\n  override disconnectedCallback() {\n    super.disconnectedCallback();\n    this.#ro.disconnect();\n  }\n\n  render() {\n    const { on = '', fullHeight, wrap, resizable, compact } = this;\n    const expandable = this.#lineHeights.length > 5;\n    const truncated = expandable && !fullHeight;\n    const actions = !!this.actions.length;\n    return html`\n      <div id=\"container\"\n           class=\"${classMap({ [on]: !!on,\n                                actions,\n                                compact,\n                                expandable,\n                                fullHeight,\n                                resizable,\n                                truncated,\n                                wrap })}\"\n           @code-action=\"${this.#onCodeAction}\">\n        <div id=\"content-lines\">\n          <div id=\"sizers\" aria-hidden=\"true\"></div>\n          <ol id=\"line-numbers\" aria-hidden=\"true\">${this.#lineHeights.map((height, i) => html`\n            <li style=\"${styleMap({ height })}\">${i + 1}</li>`)}\n          </ol>\n          <slot id=\"content\" @slotchange=\"${this.#computeLineNumbers}\"></slot>\n        </div>\n\n        <div id=\"actions\"\n             @click=\"${this.#onActionsClick}\"\n             @keyup=\"${this.#onActionsKeyup}\">\n        <!-- <slot name=\"actions\"> -->${this.actions.map(x => html`\n          <rh-tooltip>\n            <slot slot=\"content\" name=\"action-label-${x}\"></slot>\n            <button id=\"action-${x}\"\n                    class=\"shadow-fab\"\n                    data-code-block-action=\"${x}\">\n              ${RhCodeBlock.actions.get(this.wrap && x === 'wrap' ? 'wrap-active' : x) ?? ''}\n            </button>\n          </rh-tooltip>`)}\n        <!-- </slot> -->\n        </div>\n\n        <button id=\"expand\"\n                ?hidden=\"${!expandable}\"\n                @click=\"${this.#onClickExpand}\">\n          <slot name=\"show-more\" ?hidden=\"${this.fullHeight}\">Show more</slot>\n          <slot name=\"show-less\" ?hidden=\"${!this.fullHeight}\">Show less</slot>\n          <svg xmlns=\"http://www.w3.org/2000/svg\"\n               fill=\"currentColor\"\n               viewBox=\"0 0 11 7\">\n            <path d=\"M4.919.239.242 4.847a.801.801 0 0 0 0 1.148l.778.766a.83.83 0 0 0 1.165 0L5.5 3.495 8.815 6.76a.83.83 0 0 0 1.165 0l.778-.766a.802.802 0 0 0 0-1.148L6.08.239a.826.826 0 0 0-1.162 0Z\"/>\n          </svg>\n        </button>\n      </div>\n      <slot name=\"legend\" ?hidden=\"${this.#slots.isEmpty('legend')}\"></slot>\n    `;\n  }\n\n  protected override firstUpdated(): void {\n    this.#computeLineNumbers();\n  }\n\n  protected override updated(changed: PropertyValues<this>): void {\n    if (changed.has('wrap')) {\n      this.#wrapChanged();\n    }\n  }\n\n  #wrapChanged() {\n    this.#computeLineNumbers();\n    // TODO: handle slotted fabs\n    const slot = this.shadowRoot?.querySelector<HTMLSlotElement>('slot[name=\"action-label-wrap\"]');\n    for (const el of slot?.assignedElements() ?? []) {\n      if (el instanceof HTMLElement) {\n        el.hidden = (el.dataset.codeBlockState !== 'active') === this.wrap;\n      }\n    }\n    this.requestUpdate();\n  }\n\n  /**\n   * Clone the text content and connect it to the document, in order to calculate the number of lines\n   * @license MIT\n   * Portions copyright prism.js authors (MIT license)\n   */\n  #computeLineNumbers() {\n    const slot = this.shadowRoot?.getElementById('content') as HTMLSlotElement;\n\n    const codes: HTMLElement[] = slot.assignedElements().flatMap(x =>\n        x instanceof HTMLScriptElement\n        || x instanceof HTMLPreElement ? [x]\n      : []);\n\n    const infos: CodeLineHeightsInfo[] = codes.map(element => {\n      const sizer = document.createElement('span');\n      sizer.className = 'sizer';\n      sizer.innerText = '0';\n      sizer.style.display = 'block';\n      this.shadowRoot?.getElementById('sizers')?.appendChild(sizer);\n      return {\n        lines: element.textContent?.split(/\\n(?!$)/g) ?? [],\n        lineHeights: [],\n        sizer,\n        oneLinerHeight: sizer.getBoundingClientRect().height,\n      };\n    });\n\n    for (const { lines, lineHeights, sizer, oneLinerHeight } of infos) {\n      lineHeights[lines.length - 1] = undefined; // why?\n      lines.forEach((line, i) => {\n        if (line.length > 1) {\n          const e = sizer.appendChild(document.createElement('span'));\n          e.style.display = 'block';\n          e.textContent = line;\n        } else {\n          lineHeights[i] = oneLinerHeight;\n        }\n      });\n    }\n\n    for (const { sizer, lineHeights } of infos) {\n      let childIndex = 0;\n      for (let i = 0; i < lineHeights.length; i++) {\n        if (lineHeights[i] === undefined) {\n          lineHeights[i] = sizer.children[childIndex++].getBoundingClientRect()?.height ?? 0;\n        }\n      }\n      sizer.remove();\n    }\n\n    this.#lineHeights = infos.flatMap(x =>\n      x.lineHeights?.map(y =>\n        `${y ?? x.oneLinerHeight}px` as const));\n\n    this.requestUpdate('#linesNumbers', 0);\n  }\n\n  #onActionsClick(event: Event) {\n    this.#onCodeAction(event);\n  }\n\n  #onActionsKeyup(event: KeyboardEvent) {\n    switch (event.key) {\n      case 'Enter':\n      case ' ':\n        event.preventDefault();\n        this.#onCodeAction(event);\n    }\n  }\n\n  #onCodeAction(event: Event) {\n    const el = event.composedPath().find((x: EventTarget): x is HTMLElement =>\n      x instanceof HTMLElement && !!x.dataset.codeBlockAction);\n    if (el) {\n      switch (el.dataset.codeBlockAction) {\n        case 'copy':\n          return this.#copy();\n        case 'wrap':\n          this.wrap = !this.wrap;\n          this.requestUpdate();\n          return;\n      }\n    }\n  }\n\n  #onClickExpand() {\n    this.fullHeight = !this.fullHeight;\n  }\n\n  async #copy() {\n    await navigator.clipboard.writeText(\n      Array.from(\n        this.querySelectorAll('script'),\n        x => x.textContent,\n      ).join('')\n    );\n    // TODO: handle slotted fabs\n    const slot = this.shadowRoot?.querySelector<HTMLSlotElement>('slot[name=\"action-label-copy\"]');\n    const tooltip = slot?.closest('rh-tooltip');\n    tooltip?.hide();\n    for (const el of slot?.assignedElements() ?? []) {\n      if (el instanceof HTMLElement) {\n        el.hidden = el.dataset.codeBlockState !== 'active';\n      }\n    }\n    this.requestUpdate();\n    tooltip?.show();\n    await new Promise(r => setTimeout(r, 5_000));\n    tooltip?.hide();\n    for (const el of slot?.assignedElements() ?? []) {\n      if (el instanceof HTMLElement) {\n        el.hidden = el.dataset.codeBlockState === 'active';\n      }\n    }\n    this.requestUpdate();\n    tooltip?.show();\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'rh-code-block': RhCodeBlock;\n  }\n}\n\n/**\n * TODO: slotted fabs like this:\n *\n *```html\n  <rh-tooltip slot=\"actions\">\n    <span slot=\"content\">Copy to Clipboard</span>\n    <span slot=\"content\"\n          hidden\n          data-code-block-state=\"active\">Copied!</span>\n    <rh-fab icon=\"copy\"\n            data-code-block-action=\"copy\"></rh-fab>\n  </rh-tooltip>\n\n  <rh-tooltip slot=\"actions\">\n    <span slot=\"content\">Toggle linewrap</span>\n    <span slot=\"content\"\n          hidden\n          data-code-block-state=\"active\">Toggle linewrap</span>\n    <rh-fab icon=\"copy\"\n            data-code-block-action=\"copy\"></rh-fab>\n  </rh-tooltip>\n  ````\n *\n */\n"]}