{"version":3,"file":"rh-pagination.js","sourceRoot":"","sources":["rh-pagination.ts"],"names":[],"mappings":";;AAEA,OAAO,EAAE,UAAU,EAAE,IAAI,EAAE,MAAM,KAAK,CAAC;AACvC,OAAO,EAAE,aAAa,EAAE,MAAM,kCAAkC,CAAC;AACjE,OAAO,EAAE,QAAQ,EAAE,MAAM,4BAA4B,CAAC;AACtD,OAAO,EAAE,KAAK,EAAE,MAAM,yBAAyB,CAAC;AAChD,OAAO,EAAE,QAAQ,EAAE,MAAM,6BAA6B,CAAC;AACvD,OAAO,EAAE,SAAS,EAAE,MAAM,8BAA8B,CAAC;AAEzD,OAAO,EAAE,MAAM,EAAE,MAAM,4CAA4C,CAAC;AACpE,OAAO,EAAE,oBAAoB,EAAE,MAAM,mCAAmC,CAAC;;;AAIzE,MAAM,EAAE,GAAG,IAAI,CAAA;;;SAGN,CAAC;AAEV,MAAM,EAAE,GAAG,IAAI,CAAA;;;SAGN,CAAC;AAEV;;;GAGG;AAEI,IAAM,YAAY,GAAlB,MAAM,YAAa,SAAQ,UAAU;IAArC;;;QAKL;;;;;;WAMG;QAC0B,aAAQ,GAAoC,IAAI,CAAC;QAE9E,6CAA6C;QACjC,UAAK,GAAG,iBAAiB,CAAC;QAEtC,mDAAmD;QACX,eAAU,GAAG,YAAY,CAAC;QAElE,sDAAsD;QACX,kBAAa,GAAG,eAAe,CAAC;QAE3E,kDAAkD;QACX,cAAS,GAAG,WAAW,CAAC;QAE/D,kDAAkD;QACX,cAAS,GAAG,WAAW,CAAC;QAI/D,2BAAM,IAAI,gBAAgB,CAAC,GAAG,EAAE,CAAC,uBAAA,IAAI,qDAAQ,MAAZ,IAAI,CAAU,CAAC,EAAC;QACjD,+BAAU,IAAI,oBAAoB,CAAC,IAAI,CAAC,EAAC;QACzC,+BAAU,IAAI,MAAM,CAAC,IAAI,CAAC,EAAC;QAE3B,2BAAM,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,EAAC;QAC/B,8BAAS,uBAAA,IAAI,wBAAI,EAAE,gBAAgB,CAAoB,MAAM,CAAC,EAAC;QAE/D,kCAAuC,IAAI,EAAC;QAC5C,iCAAsC,IAAI,EAAC;QAC3C,iCAAsC,IAAI,EAAC;QAC3C,iCAAsC,IAAI,EAAC;QAC3C,oCAAe,uBAAA,IAAI,6DAAgB,MAApB,IAAI,CAAkB,EAAC;QACtC,qCAAgB,CAAC,EAAC;IA4MpB,CAAC;IAvMC,iBAAiB;QACf,KAAK,CAAC,iBAAiB,EAAE,CAAC;QAC1B,uBAAA,IAAI,wBAAI,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,SAAS,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC;IAC7D,CAAC;IAED,oBAAoB;QAClB,KAAK,CAAC,oBAAoB,EAAE,CAAC;QAC7B,uBAAA,IAAI,wBAAI,CAAC,UAAU,EAAE,CAAC;IACxB,CAAC;IAED,MAAM,CAAC,OAA6B;QAClC,uBAAA,IAAI,qDAAQ,MAAZ,IAAI,CAAU,CAAC;QACf,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;IACxB,CAAC;IAED,MAAM;QACJ,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE,GAAG,uBAAA,IAAI,4BAAQ,CAAC;QACtC,MAAM,EAAE,KAAK,EAAE,UAAU,EAAE,aAAa,EAAE,SAAS,EAAE,SAAS,EAAE,GAAG,IAAI,CAAC;QACxE,MAAM,SAAS,GAAG,uBAAA,IAAI,iCAAa,KAAK,uBAAA,IAAI,+BAAW,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,uBAAA,IAAI,+BAAW,EAAE,IAAI,CAAC;QAC5F,MAAM,QAAQ,GAAG,uBAAA,IAAI,8BAAU,EAAE,IAAI,CAAC;QACtC,MAAM,QAAQ,GAAG,uBAAA,IAAI,8BAAU,EAAE,IAAI,CAAC;QACtC,MAAM,QAAQ,GAAG,uBAAA,IAAI,iCAAa,KAAK,uBAAA,IAAI,8BAAU,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,uBAAA,IAAI,8BAAU,EAAE,IAAI,CAAC;QACzF,MAAM,WAAW,GAAG,uBAAA,IAAI,8DAAa,CAAC,QAAQ,EAAE,CAAC;QACjD,OAAO,IAAI,CAAA;kCACmB,QAAQ,CAAC,EAAE,MAAM,EAAE,CAAC,IAAc,CAAC,EAAE,IAAI,EAAE,CAAC;6CACjC,SAAS,CAAC,SAAS,CAAC,WAAW,CAAC,SAAS,eAAe,UAAU,IAAI,EAAE;4CACzE,SAAS,CAAC,QAAQ,CAAC,WAAW,CAAC,QAAQ,eAAe,aAAa,IAAI,EAAE;;uBAE9F,MAAM,WAAW,MAAM,eAAe,KAAK;;;;4CAItB,SAAS,CAAC,QAAQ,CAAC,WAAW,CAAC,QAAQ,eAAe,SAAS,IAAI,EAAE;4CACrE,SAAS,CAAC,QAAQ,CAAC,WAAW,CAAC,QAAQ,eAAe,SAAS,IAAI,EAAE;;;;;;;;0BAQvF,uBAAA,IAAI,2BAAO,EAAE,MAAM,IAAI,CAAC;;wBAE1B,uBAAA,IAAI,uDAAU;uBACf,uBAAA,IAAI,sDAAS;uBACb,WAAW;;oBAEd,SAAS,CAAC,QAAQ,CAAC,IAAI,uBAAA,IAAI,2BAAO,EAAE,MAAM;;;KAGzD,CAAC;IACJ,CAAC;IA4HD,iCAAiC;IACjC,KAAK;QACH,OAAO,uBAAA,IAAI,iDAAI,MAAR,IAAI,EAAK,OAAO,CAAC,CAAC;IAC3B,CAAC;IAED,oCAAoC;IACpC,IAAI;QACF,OAAO,uBAAA,IAAI,iDAAI,MAAR,IAAI,EAAK,MAAM,CAAC,CAAC;IAC1B,CAAC;IAED,gCAAgC;IAChC,IAAI;QACF,OAAO,uBAAA,IAAI,iDAAI,MAAR,IAAI,EAAK,MAAM,CAAC,CAAC;IAC1B,CAAC;IAED,gCAAgC;IAChC,IAAI;QACF,OAAO,uBAAA,IAAI,iDAAI,MAAR,IAAI,EAAK,MAAM,CAAC,CAAC;IAC1B,CAAC;IAED,kCAAkC;IAClC,EAAE,CAAC,IAAyC;QAC1C,OAAO,uBAAA,IAAI,iDAAI,MAAR,IAAI,EAAK,IAAI,CAAC,CAAC;IACxB,CAAC;;;IAzMC,OAAO,uBAAA,IAAI,kCAAc,GAAG,CAAC,CAAC;AAChC,CAAC;IAwDC,IAAI,CAAC,aAAa,CAAC,uBAAuB,CAAC,EAAE,eAAe,CAAC,cAAc,CAAC,CAAC;IAC7E,uBAAA,IAAI,iEAAoB,MAAxB,IAAI,CAAsB,CAAC;IAC3B,IAAI,CAAC,QAAQ,GAAG,uBAAA,IAAI,0DAAa,MAAjB,IAAI,CAAe,CAAC;IACpC,uBAAA,IAAI,4DAAe,MAAnB,IAAI,CAAiB,CAAC;AACxB,CAAC;IAGC,MAAM,UAAU,GAAG,CAAC,CAAC;IACrB,MAAM,MAAM,GAAG,uBAAA,IAAI,2BAAO,EAAE,MAAM,IAAI,CAAC,CAAC;IACxC,IAAI,MAAM,IAAI,UAAU,EAAE;QACxB,OAAO,IAAI,CAAC;KACb;IAED,MAAM,OAAO,GAAG,uBAAA,IAAI,kCAAc,GAAG,CAAC,CAAC;IAEvC,IAAI,OAAO,GAAG,CAAC,UAAU,GAAG,CAAC,CAAC,IAAI,OAAO,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,EAAE;QACxD,OAAO,MAAM,CAAC;KACf;SAAM,IAAI,OAAO,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC,EAAE;QACtC,OAAO,KAAK,CAAC;KACd;SAAM;QACL,OAAO,OAAO,CAAC;KAChB;AACH,CAAC;IAGC,MAAM,WAAW,GAAG,IAAI,CAAC,aAAa,CAAoB,2BAA2B,CAAC,CAAC;IACvF,IAAI,WAAW,EAAE;QACf,OAAO,WAAW,CAAC;KACpB;IACD,KAAK,MAAM,IAAI,IAAI,uBAAA,IAAI,2BAAO,IAAI,EAAE,EAAE;QACpC,MAAM,GAAG,GAAG,IAAI,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC/B,IAAI,GAAG,CAAC,QAAQ,KAAK,QAAQ,CAAC,QAAQ,IAAI,GAAG,CAAC,MAAM,KAAK,QAAQ,CAAC,MAAM,IAAI,GAAG,CAAC,IAAI,KAAK,QAAQ,CAAC,IAAI,EAAE;YACtG,OAAO,IAAI,CAAC;SACb;KACF;IACD,uBAAA,IAAI,4BAAQ,CAAC,IAAI,CAAC,kCAAkC,CAAC,CAAC;IACtD,OAAO,IAAI,CAAC;AACd,CAAC;IAGC,6CAA6C;IAC7C,uBAAA,IAAI,oBAAO,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,MAAA,CAAC;IACpC,uBAAA,IAAI,uBAAU,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,MAAA,CAAC;IAC5C,uBAAA,IAAI,2BAAc,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,MAAA,CAAC;IACzD,uBAAA,IAAI,0BAAa,IAAI,CAAC,aAAa,CAAC,iBAAiB,CAAC,MAAA,CAAC;IACvD,uBAAA,IAAI,6BAAgB,uBAAA,IAAI,6DAAgB,MAApB,IAAI,CAAkB,MAAA,CAAC;IAC3C,IAAI,uBAAA,IAAI,iCAAa,EAAE;QACrB,MAAM,KAAK,GAAG,KAAK,CAAC,IAAI,CAAC,uBAAA,IAAI,2BAAO,CAAC,CAAC;QACtC,uBAAA,IAAI,8BAAiB,KAAK,CAAC,OAAO,CAAC,uBAAA,IAAI,iCAAa,CAAC,MAAA,CAAC;QACtD,uBAAA,IAAI,0BAAa,uBAAA,IAAI,2BAAO,CAAC,uBAAA,IAAI,kCAAc,GAAG,CAAC,CAAC,MAAA,CAAC;QACrD,uBAAA,IAAI,0BAAa,uBAAA,IAAI,2BAAO,CAAC,uBAAA,IAAI,kCAAc,GAAG,CAAC,CAAC,MAAA,CAAC;QACrD,KAAK,MAAM,IAAI,IAAI,IAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC,EAAE;YACvD,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,CAAC;SACnC;QACD,uBAAA,IAAI,iCAAa,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,YAAY,CAAC,WAAW,EAAE,SAAS,CAAC,CAAC;QACtE,uBAAA,IAAI,8BAAU,EAAE,OAAO,CAAC,IAAI,CAAC,EAAE,YAAY,CAAC,WAAW,EAAE,UAAU,CAAC,CAAC;QACrE,uBAAA,IAAI,8BAAU,EAAE,OAAO,CAAC,IAAI,CAAC,EAAE,YAAY,CAAC,WAAW,EAAE,MAAM,CAAC,CAAC;QACjE,IAAI,uBAAA,IAAI,iCAAa,EAAE,YAAY,CAAC,cAAc,CAAC,KAAK,MAAM,EAAE;YAC9D,uBAAA,IAAI,iCAAa,EAAE,YAAY,CAAC,cAAc,EAAE,MAAM,CAAC,CAAC;SACzD;KACF;AACH,CAAC;IAGC,IAAI,OAAO,GAAG,EAAE,CAAC;IACjB,eAAe;IACf,IAAI,CAAC,uBAAA,IAAI,wBAAI,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE;QACzC,OAAO,GAAG,qDAAqD,CAAC;KACjE;IACD,sBAAsB;IACtB,IAAI,IAAI,CAAC,KAAK,IAAI,uBAAA,IAAI,2BAAO,EAAE;QAC7B,IAAI,MAAM,CAAC,KAAK,CAAC,uBAAA,IAAI,8DAAa,CAAC,EAAE;YACnC,OAAO,GAAG,GAAG,uBAAA,IAAI,8DAAa,6BAA6B,CAAC;SAC7D;aAAM,IAAI,uBAAA,IAAI,8DAAa,GAAG,uBAAA,IAAI,2BAAO,CAAC,MAAM,IAAI,uBAAA,IAAI,8DAAa,GAAG,CAAC,EAAE;YAC1E,OAAO,GAAG,2BAA2B,uBAAA,IAAI,8DAAa,EAAE,CAAC;SAC1D;QACD,IAAI,CAAC,KAAK,CAAC,iBAAiB,CAAC,OAAO,CAAC,CAAC;KACvC;IACD,IAAI,OAAO,EAAE;QACX,uBAAA,IAAI,4BAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,iBAAiB,IAAI,oBAAoB,CAAC,CAAC;KAC1E;IACD,IAAI,CAAC,KAAK,EAAE,cAAc,EAAE,CAAC;IAC7B,OAAO,CAAC,OAAO,CAAC;AAClB,CAAC;AAED;;;;GAIG;AACH,KAAK,2BAAK,EAAuC;IAC/C,MAAM,IAAI,CAAC,cAAc,CAAC;IAC1B,IAAI,OAAO,EAAE,KAAK,QAAQ,EAAE;QAC1B,MAAM,IAAI,GAAG,uBAAA,IAAI,2BAAO,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;QACnC,IAAI,EAAE,KAAK,EAAE,EAAE,CAAC;KACjB;SAAM;QACL,IAAI,CAAC,UAAU,EAAE,cAAc,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC;KAC9C;IACD,IAAI,CAAC,aAAa,EAAE,CAAC;IACrB,MAAM,IAAI,CAAC,cAAc,CAAC;IAC1B,OAAO,uBAAA,IAAI,kCAAc,CAAC;AAC5B,CAAC,yDAEQ,KAAY;IACnB,IAAI,CAAC,CAAC,KAAK,CAAC,MAAM,YAAY,gBAAgB,CAAC,IAAI,CAAC,uBAAA,IAAI,2BAAO,EAAE;QAAE,OAAO;KAAE;IAC5E,MAAM,GAAG,GAAG,uBAAA,IAAI,2BAAO,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC;IAC1C,MAAM,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC;IAC3B,IAAI,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,QAAQ,CAAC,GAAG,CAAC,EAAE;QACzC,KAAK,CAAC,KAAK,GAAG,GAAG,CAAC;KACnB;AACH,CAAC;IAGC,IAAI,CAAC,IAAI,CAAC,KAAK,IAAI,CAAC,uBAAA,IAAI,2BAAO,EAAE;QAAE,OAAO;KAAE;IAC5C,MAAM,QAAQ,GAAG,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;IAC5C,uBAAA,IAAI,8BAAiB,QAAQ,GAAG,CAAC,MAAA,CAAC;IAClC,IAAI,uBAAA,IAAI,4DAAe,MAAnB,IAAI,CAAiB,EAAE;QACzB,uBAAA,IAAI,iDAAI,MAAR,IAAI,EAAK,uBAAA,IAAI,8DAAa,CAAC,CAAC;KAC7B;AACH,CAAC;AA5Ne,oBAAO,GAAG,aAAa,CAAC;AAExB,mBAAM,GAAG,CAAC,MAAM,CAAC,CAAC;AASL;IAA5B,QAAQ,CAAC,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;8CAAkD;AAGlE;IAAX,QAAQ,EAAE;2CAA2B;AAGE;IAAvC,QAAQ,CAAC,EAAE,SAAS,EAAE,aAAa,EAAE,CAAC;gDAA2B;AAGvB;IAA1C,QAAQ,CAAC,EAAE,SAAS,EAAE,gBAAgB,EAAE,CAAC;mDAAiC;AAGpC;IAAtC,QAAQ,CAAC,EAAE,SAAS,EAAE,YAAY,EAAE,CAAC;+CAAyB;AAGxB;IAAtC,QAAQ,CAAC,EAAE,SAAS,EAAE,YAAY,EAAE,CAAC;+CAAyB;AAE/C;IAAf,KAAK,CAAC,OAAO,CAAC;2CAAkC;AA7BtC,YAAY;IADxB,aAAa,CAAC,eAAe,CAAC;GAClB,YAAY,CAuPxB;SAvPY,YAAY","sourcesContent":["import type { PropertyValues } from 'lit';\n\nimport { LitElement, html } from 'lit';\nimport { customElement } from 'lit/decorators/custom-element.js';\nimport { property } from 'lit/decorators/property.js';\nimport { query } from 'lit/decorators/query.js';\nimport { classMap } from 'lit/directives/class-map.js';\nimport { ifDefined } from 'lit/directives/if-defined.js';\n\nimport { Logger } from '@patternfly/pfe-core/controllers/logger.js';\nimport { ScreenSizeController } from '../../lib/ScreenSizeController.js';\n\nimport styles from './rh-pagination.css';\n\nconst L1 = html`\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 9 14\">\n    <path d=\"M.3 6.26 6.24.3C6.63-.1 7.3-.1 7.7.3l.99.99c.4.4.4 1.07 0 1.48L4.49 7l4.2 4.22c.41.4.41 1.07 0 1.48l-.98 1c-.41.4-1.07.4-1.48 0L.31 7.73a1.05 1.05 0 0 1 0-1.48Z\"/>\n  </svg>`;\n\nconst L2 = html`\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 17.44 14\">\n    <path d=\"M8.7 6.26 14.66.3a1.05 1.05 0 0 1 1.49 0l.98.99c.42.4.42 1.07 0 1.48L12.92 7l4.2 4.22c.42.4.42 1.07 0 1.48l-.98 1c-.41.4-1.08.4-1.48 0L8.7 7.73a1.05 1.05 0 0 1 0-1.48zM.3 7.74l5.96 5.95c.4.41 1.07.41 1.48 0l.99-.99c.4-.4.4-1.07 0-1.48L4.52 7l4.21-4.22c.41-.4.41-1.07 0-1.48l-.99-1a1.05 1.05 0 0 0-1.48 0L.31 6.27a1.05 1.05 0 0 0 0 1.48z\"/>\n  </svg>`;\n\n/**\n * Pagination\n * @slot - Place element content here\n */\n@customElement('rh-pagination')\nexport class RhPagination extends LitElement {\n  static readonly version = '{{version}}';\n\n  static readonly styles = [styles];\n\n  /**\n   * Override `overflow` values set from HTML or JS.\n   * `overflow` should ideally be private, but because\n   * we can't do `::slotted(nav ol li)`, we need to reflect\n   * it to a host attribute, so that lightdom CSS can target\n   * the list items.\n   */\n  @property({ reflect: true }) overflow: 'start' | 'end' | 'both' | null = null;\n\n  /** Accessible label for the 'nav' element */\n  @property() label = 'Page navigation';\n\n  /** Accessible label for the 'first page' button */\n  @property({ attribute: 'label-first' }) labelFirst = 'first page';\n\n  /** Accessible label for the 'previous page' button */\n  @property({ attribute: 'label-previous' }) labelPrevious = 'previous page';\n\n  /** Accessible label for the 'next page' button */\n  @property({ attribute: 'label-next' }) labelNext = 'next page';\n\n  /** Accessible label for the 'last page' button */\n  @property({ attribute: 'label-last' }) labelLast = 'last page';\n\n  @query('input') private input?: HTMLInputElement;\n\n  #mo = new MutationObserver(() => this.#update());\n  #screen = new ScreenSizeController(this);\n  #logger = new Logger(this);\n\n  #ol = this.querySelector('ol');\n  #links = this.#ol?.querySelectorAll<HTMLAnchorElement>('li a');\n\n  #firstLink: HTMLAnchorElement | null = null;\n  #lastLink: HTMLAnchorElement | null = null;\n  #nextLink: HTMLAnchorElement | null = null;\n  #prevLink: HTMLAnchorElement | null = null;\n  #currentLink = this.#getCurrentLink();\n  #currentIndex = 0;\n  get #currentPage() {\n    return this.#currentIndex + 1;\n  }\n\n  connectedCallback(): void {\n    super.connectedCallback();\n    this.#mo.observe(this, { childList: true, subtree: true });\n  }\n\n  disconnectedCallback(): void {\n    super.disconnectedCallback();\n    this.#mo.disconnect();\n  }\n\n  update(changed: PropertyValues<this>): void {\n    this.#update();\n    super.update(changed);\n  }\n\n  render() {\n    const { mobile, size } = this.#screen;\n    const { label, labelFirst, labelPrevious, labelNext, labelLast } = this;\n    const firstHref = this.#currentLink === this.#firstLink ? undefined : this.#firstLink?.href;\n    const prevHref = this.#prevLink?.href;\n    const nextHref = this.#nextLink?.href;\n    const lastHref = this.#currentLink === this.#lastLink ? undefined : this.#lastLink?.href;\n    const currentPage = this.#currentPage.toString();\n    return html`\n      <div id=\"container\" class=${classMap({ mobile, [size as string]: true })}>\n        <a id=\"first\" class=\"stepper\" href=${ifDefined(firstHref)} ?inert=${!firstHref} aria-label=${labelFirst}>${L2}</a>\n        <a id=\"prev\" class=\"stepper\" href=${ifDefined(prevHref)} ?inert=${!prevHref} aria-label=${labelPrevious}>${L1}</a>\n\n        <nav ?hidden=${mobile} ?inert=${mobile} aria-label=${label}>\n          <slot></slot>\n        </nav>\n\n        <a id=\"next\" class=\"stepper\" href=${ifDefined(nextHref)} ?inert=${!nextHref} aria-label=${labelNext}>${L1}</a>\n        <a id=\"last\" class=\"stepper\" href=${ifDefined(lastHref)} ?inert=${!lastHref} aria-label=${labelLast}>${L2}</a>\n\n        <div id=\"numeric\">\n          <span id=\"go-to-page\">\n            <slot name=\"go-to-page\">Go to page</slot>\n          </span>\n          <input inputmode=\"numeric\"\n              required\n              min=1 max=${this.#links?.length ?? 1}\n              aria-labelledby=\"go-to-page\"\n              @change=${this.#onChange}\n              @keyup=${this.#onKeyup}\n              .value=${currentPage}>\n          <slot name=\"out-of\">of</slot>\n          <a href=${ifDefined(lastHref)}>${this.#links?.length}</a>\n        </div>\n      </div>\n    `;\n  }\n\n  #update() {\n    this.querySelector('[aria-current=\"page\"]')?.removeAttribute('aria-current');\n    this.#updateLightDOMRefs();\n    this.overflow = this.#getOverflow();\n    this.#checkValidity();\n  }\n\n  #getOverflow(): 'start' | 'end' | 'both' | null {\n    const overflowAt = 9;\n    const length = this.#links?.length ?? 0;\n    if (length <= overflowAt) {\n      return null;\n    }\n\n    const current = this.#currentIndex + 1;\n\n    if (current > (overflowAt - 4) && current < (length - 4)) {\n      return 'both';\n    } else if (current <= (overflowAt - 4)) {\n      return 'end';\n    } else {\n      return 'start';\n    }\n  }\n\n  #getCurrentLink(): HTMLAnchorElement | null {\n    const ariaCurrent = this.querySelector<HTMLAnchorElement>('li a[aria-current=\"page\"]');\n    if (ariaCurrent) {\n      return ariaCurrent;\n    }\n    for (const link of this.#links ?? []) {\n      const url = new URL(link.href);\n      if (url.pathname === location.pathname && url.search === location.search && url.hash === location.hash) {\n        return link;\n      }\n    }\n    this.#logger.warn('could not determine current link');\n    return null;\n  }\n\n  #updateLightDOMRefs(): void {\n    // NB: order of operations! must set up state\n    this.#ol = this.querySelector('ol');\n    this.#links = this.querySelectorAll('li a');\n    this.#firstLink = this.querySelector('li:first-child a');\n    this.#lastLink = this.querySelector('li:last-child a');\n    this.#currentLink = this.#getCurrentLink();\n    if (this.#currentLink) {\n      const links = Array.from(this.#links);\n      this.#currentIndex = links.indexOf(this.#currentLink);\n      this.#prevLink = this.#links[this.#currentIndex - 1];\n      this.#nextLink = this.#links[this.#currentIndex + 1];\n      for (const link of this.querySelectorAll('[data-page]')) {\n        link.removeAttribute('data-page');\n      }\n      this.#currentLink.closest('li')?.setAttribute('data-page', 'current');\n      this.#prevLink?.closest('li')?.setAttribute('data-page', 'previous');\n      this.#nextLink?.closest('li')?.setAttribute('data-page', 'next');\n      if (this.#currentLink?.getAttribute('aria-current') !== 'page') {\n        this.#currentLink?.setAttribute('aria-current', 'page');\n      }\n    }\n  }\n\n  #checkValidity(): boolean {\n    let message = '';\n    // Validate DOM\n    if (!this.#ol || this.children.length > 1) {\n      message = 'must have a single <ol> element as it\\'s only child';\n    }\n    // Validate user input\n    if (this.input && this.#links) {\n      if (Number.isNaN(this.#currentPage)) {\n        message = `${this.#currentPage} is not a valid page number`;\n      } else if (this.#currentPage > this.#links.length || this.#currentPage < 1) {\n        message = `cannot navigate to page ${this.#currentPage}`;\n      }\n      this.input.setCustomValidity(message);\n    }\n    if (message) {\n      this.#logger.warn(this.input?.validationMessage || 'could not navigate');\n    }\n    this.input?.reportValidity();\n    return !message;\n  }\n\n  /**\n   * 1. Normalize the element state\n   * 2. validate and act on the input\n   * 3. update the element in case a full browser navigation was prevented (e.g. SPA routing)\n   */\n  async #go(id: 'first'|'prev'|'next'|'last'|number) {\n    await this.updateComplete;\n    if (typeof id === 'number') {\n      const link = this.#links?.[id - 1];\n      link?.click?.();\n    } else {\n      this.shadowRoot?.getElementById(id)?.click();\n    }\n    this.requestUpdate();\n    await this.updateComplete;\n    return this.#currentIndex;\n  }\n\n  #onKeyup(event: Event) {\n    if (!(event.target instanceof HTMLInputElement) || !this.#links) { return; }\n    const max = this.#links.length.toString();\n    const input = event.target;\n    if (parseInt(input.value) > parseInt(max)) {\n      input.value = max;\n    }\n  }\n\n  #onChange() {\n    if (!this.input || !this.#links) { return; }\n    const inputNum = parseInt(this.input.value);\n    this.#currentIndex = inputNum - 1;\n    if (this.#checkValidity()) {\n      this.#go(this.#currentPage);\n    }\n  }\n\n  /** Navigate to the first page */\n  first() {\n    return this.#go('first');\n  }\n\n  /** Navigate to the previous page */\n  prev() {\n    return this.#go('prev');\n  }\n\n  /** Navigate to the next page */\n  next() {\n    return this.#go('next');\n  }\n\n  /** Navigate to the last page */\n  last() {\n    return this.#go('last');\n  }\n\n  /** Navigate to a specific page */\n  go(page: 'first'|'prev'|'next'|'last'|number) {\n    return this.#go(page);\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'rh-pagination': RhPagination;\n  }\n}\n"]}