{"version":3,"file":"rh-chip.js","sourceRoot":"","sources":["rh-chip.ts"],"names":[],"mappings":"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","sourcesContent":["import { LitElement, html } from 'lit';\nimport { customElement } from 'lit/decorators/custom-element.js';\nimport { classMap } from 'lit/directives/class-map.js';\nimport { ifDefined } from 'lit/directives/if-defined.js';\nimport { property } from 'lit/decorators/property.js';\nimport { consume } from '@lit/context';\n\nimport { InternalsController } from '@patternfly/pfe-core/controllers/internals-controller.js';\n\nimport { rhChipGroupSizeCtx } from './context.js';\n\nimport { themable } from '@rhds/elements/lib/themable.js';\n\nimport styles from './rh-chip.css';\n\nimport '@rhds/elements/rh-icon/rh-icon.js';\nimport { observes } from '@patternfly/pfe-core/decorators.js';\n\nexport class ChipChangeEvent extends Event {\n  constructor(public checked: boolean) {\n    super('change', {\n      bubbles: true,\n      cancelable: true,\n    });\n  }\n}\n\n/**\n * A chip is used to filter information or indicate that a selection was made.\n * @summary Filter information or indicate that a selection was made\n *\n * @alias chip\n *\n * @fires {ChipCheckedEvent} chip-checked - when chip is checked/unchecked\n */\n@customElement('rh-chip')\n@themable\nexport class RhChip extends LitElement {\n  static readonly styles = [styles];\n\n  static formAssociated = true;\n\n  /**\n   * Whether the chip is checked.\n   */\n  @property({ type: Boolean, reflect: true }) checked = false;\n\n  /**\n   * Whether the chip is disabled.\n   */\n  @property({ type: Boolean, reflect: true }) disabled = false;\n\n  /**\n   * Set a custom string for the input's `value` attribute. Defaults to `on`.\n   */\n  @property({ reflect: true }) value?: string;\n\n  #internals = InternalsController.of(this);\n\n  #formDisabled = false;\n\n  @consume({ context: rhChipGroupSizeCtx, subscribe: true })\n  private size?: 'sm';\n\n  protected formDisabledCallback(disabled: boolean) {\n    this.#formDisabled = disabled;\n    this.requestUpdate();\n  }\n\n  protected formStateRestoreCallback(state: boolean, mode: string) {\n    this.checked = !!state;\n  }\n\n  render() {\n    return html`\n      <!-- The main chip container -->\n      <label part=\"chip\" class=${classMap({ [`size-${this.size}`]: !!this.size })}>\n        <!-- The label of the checkbox -->\n        <slot></slot>\n        <input type=\"checkbox\"\n               value=\"${ifDefined(this.value)}\"\n               @change=\"${this.#onChecked}\"\n               .checked=\"${this.checked}\"\n               aria-disabled=\"${String(this.disabled || this.#formDisabled) as 'true' | 'false'}\">\n        <rh-icon id=\"close-icon\" set=\"ui\" icon=\"close-circle\"></rh-icon>\n      </label>\n    `;\n  }\n\n  #onChecked(event: Event) {\n    event.stopPropagation();\n    if (this.disabled) {\n      event.preventDefault();\n      (event.target as HTMLInputElement).checked = this.checked;\n      return;\n    }\n\n    if (this.dispatchEvent(new ChipChangeEvent(this.checked))) {\n      this.checked = (event.target as HTMLInputElement).checked;\n    }\n  }\n\n  @observes('checked')\n  private checkedChanged() {\n    if (this.checked) {\n      this.#internals.setFormValue(this.value ?? this.textContent);\n    } else {\n      this.#internals.setFormValue(null);\n    }\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'rh-chip': RhChip;\n  }\n}\n"]}