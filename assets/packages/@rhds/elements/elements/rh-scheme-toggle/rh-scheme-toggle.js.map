{"version":3,"file":"rh-scheme-toggle.js","sourceRoot":"","sources":["rh-scheme-toggle.ts"],"names":[],"mappings":"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","sourcesContent":["import { html, isServer, LitElement } from 'lit';\nimport { customElement } from 'lit/decorators/custom-element.js';\nimport { property } from 'lit/decorators/property.js';\n\nimport '@rhds/elements/rh-icon/rh-icon.js';\nimport { observes } from '@patternfly/pfe-core/decorators.js';\n\nimport styles from './rh-scheme-toggle.css';\n\ndeclare global {\n  interface Storage {\n    rhdsColorScheme: 'light' | 'dark' | 'light dark';\n  }\n}\n\ntype Scheme = 'light' | 'dark' | 'light dark';\n\n/**\n * A switch toggles the state of the color scheme (between light, dark and system default).\n *\n * @summary  A switch toggles the state of the color scheme (between light, dark and system default).\n *\n * @alias Scheme toggle\n */\n@customElement('rh-scheme-toggle')\nexport class RhSchemeToggle extends LitElement {\n  static styles = [styles];\n\n  #isLight = false;\n  #isDark = false;\n  #isSystem = false;\n\n  /** Current color scheme setting */\n  @property({ reflect: true }) scheme?: Scheme = globalThis.localStorage\n      ?.rhdsColorScheme as Scheme;\n\n  /** Legend text for the color scheme toggle group */\n  @property({ attribute: 'legend-text' }) legendText = 'Color scheme';\n\n  /** Label text for the light mode option */\n  @property({ attribute: 'light-text' }) lightText = 'Light';\n\n  /** Label text for the dark mode option */\n  @property({ attribute: 'dark-text' }) darkText = 'Dark';\n\n  /** Label text for the system default option */\n  @property({ attribute: 'system-text' }) systemText = 'System';\n\n  connectedCallback(): void {\n    super.connectedCallback();\n    this.#schemeCheck();\n  }\n\n  render() {\n    return html`\n      <fieldset @change=\"${this.#onChange}\">\n        <legend>${this.legendText}:</legend>\n        <div id=\"button-group\">\n          <label title=\"${this.lightText}\">\n            <span class=\"visually-hidden\">${this.lightText}</span>\n            <input type=\"radio\"\n                   name=\"scheme\"\n                   value=\"light\"\n                   ?checked=\"${this.#isLight}\">\n            <rh-icon set=\"ui\" icon=\"light-mode\"></rh-icon>\n          </label>\n          <label title=\"${this.darkText}\">\n            <span class=\"visually-hidden\">${this.darkText}</span>\n            <input type=\"radio\"\n                   name=\"scheme\"\n                   value=\"dark\"\n                   ?checked=\"${this.#isDark}\">\n            <rh-icon set=\"ui\" icon=\"dark-mode\"></rh-icon>\n          </label>\n          <label title=\"${this.systemText}\">\n            <span class=\"visually-hidden\">${this.systemText}</span>\n            <input type=\"radio\"\n                   name=\"scheme\"\n                   value=\"light dark\"\n                   ?checked=\"${this.#isSystem}\">\n            <rh-icon set=\"ui\" icon=\"auto-light-dark-mode\"></rh-icon>\n          </label>\n        </div>\n      </fieldset>\n    `;\n  }\n\n  #onChange(e: Event) {\n    if (e.target instanceof HTMLInputElement) {\n      this.scheme = e.target.value as Scheme;\n    }\n    this.#schemeCheck();\n  }\n\n  #schemeCheck() {\n    if (!isServer) {\n      this.#isLight = this.scheme === 'light';\n      this.#isDark = this.scheme === 'dark';\n      this.#isSystem = (this.scheme?.includes('light')\n        && this.scheme?.includes('dark'))\n        || (this.scheme === undefined);\n      this.requestUpdate();\n    }\n  }\n\n  @observes('scheme')\n  private schemeChanged() {\n    if (!isServer) {\n      if (this.scheme) {\n        document.body.style.setProperty('color-scheme', this.scheme);\n        if (!isServer) {\n          localStorage.rhdsColorScheme = this.scheme;\n        }\n      }\n    }\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'rh-scheme-toggle': RhSchemeToggle;\n  }\n}\n"]}