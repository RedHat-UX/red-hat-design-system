{"version":3,"file":"rh-menu.js","sourceRoot":"","sources":["rh-menu.ts"],"names":[],"mappings":";;AAAA,OAAO,EAAE,UAAU,EAAE,IAAI,EAAE,MAAM,KAAK,CAAC;AACvC,OAAO,EAAE,aAAa,EAAE,MAAM,kCAAkC,CAAC;AACjE,OAAO,EAAE,QAAQ,EAAE,MAAM,6BAA6B,CAAC;AAEvD,OAAO,EAAE,WAAW,EAAE,MAAM,0CAA0C,CAAC;AACvE,OAAO,EAAE,wBAAwB,EAAE,MAAM,gEAAgE,CAAC;AAE1G,OAAO,EAAE,oBAAoB,EAAmB,MAAM,qCAAqC,CAAC;;;AAI5F,MAAM,OAAO,eAAgB,SAAQ,KAAK;IACxC,YACS,IAAa,EACb,IAAiB;QAExB,KAAK,CAAC,QAAQ,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC;QAH5B,SAAI,GAAJ,IAAI,CAAS;QACb,SAAI,GAAJ,IAAI,CAAa;IAG1B,CAAC;CACF;AAED;;;GAGG;AAEI,IAAM,MAAM,GAAZ,MAAM,MAAO,SAAQ,UAAU;IAA/B;;;QAKL,2BAAY,IAAI,wBAAwB,CAAC,IAAI,CAAC,EAAC;IAoCjD,CAAC;IAlCC,IAAI,UAAU;QACZ,OAAO,uBAAA,IAAI,wBAAU,CAAC,UAAU,CAAC;IACnC,CAAC;IAED,iBAAiB;QACf,KAAK,CAAC,iBAAiB,EAAE,CAAC;QAC1B,IAAI,CAAC,EAAE,KAAP,IAAI,CAAC,EAAE,GAAK,WAAW,CAAC,MAAM,CAAC,EAAC;QAChC,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC,CAAC,qEAAqE;QACxG,uBAAA,IAAI,4CAAW,MAAf,IAAI,CAAa,CAAC;IACpB,CAAC;IAED,MAAM;QACJ,MAAM,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,IAAI,CAAC;QACzB,OAAO,IAAI,CAAA;iCACkB,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC;KACpD,CAAC;IACJ,CAAC;IAcD,YAAY,CAAC,IAAiB;QAC5B,uBAAA,IAAI,wBAAU,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;QACtC,uBAAA,IAAI,wBAAU,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;IACnC,CAAC;;;IAXC,MAAM,KAAK,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC;SACpC,GAAG,CAAC,cAAc,CAAC;SACnB,MAAM,CAAC,CAAC,CAAC,EAAoB,EAAE,CAAC,CAAC,YAAY,WAAW,CAAC,CAAC;IAC7D,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,EAAE,YAAY,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC,CAAC;IAC9D,uBAAA,IAAI,wBAAU,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;IAChC,IAAI,CAAC,aAAa,EAAE,CAAC;AACvB,CAAC;AAlCe,aAAM,GAAG,CAAC,MAAM,CAAC,CAAC;AAEV;IAAvB,oBAAoB,EAAE;kCAAyB;AAHrC,MAAM;IADlB,aAAa,CAAC,SAAS,CAAC;GACZ,MAAM,CAyClB;SAzCY,MAAM;AA2CnB;;GAEG;AACH,SAAS,cAAc,CAAC,OAAgB;IACtC,OAAO,CACH,OAAO,CAAC,SAAS,KAAK,YAAY,CAAC,CAAC,CAAC,OAAO;QAC9C,CAAC,CAAC,OAAO,CAAC,aAAa,CAAC,sBAAsB,CAAC,CAChD,CAAC;AACJ,CAAC","sourcesContent":["import { LitElement, html } from 'lit';\nimport { customElement } from 'lit/decorators/custom-element.js';\nimport { classMap } from 'lit/directives/class-map.js';\n\nimport { getRandomId } from '@patternfly/pfe-core/functions/random.js';\nimport { RovingTabindexController } from '@patternfly/pfe-core/controllers/roving-tabindex-controller.js';\n\nimport { colorContextConsumer, type ColorTheme } from '../../lib/context/color/consumer.js';\n\nimport styles from './rh-menu.css';\n\nexport class MenuToggleEvent extends Event {\n  constructor(\n    public open: boolean,\n    public menu: HTMLElement\n  ) {\n    super('toggle', { bubbles: true });\n  }\n}\n\n/**\n * Menu\n * @slot - menu items\n */\n@customElement('rh-menu')\nexport class RhMenu extends LitElement {\n  static readonly styles = [styles];\n\n  @colorContextConsumer() private on?: ColorTheme;\n\n  #tabindex = new RovingTabindexController(this);\n\n  get activeItem() {\n    return this.#tabindex.activeItem;\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n    this.id ||= getRandomId('menu');\n    this.setAttribute('role', 'menu'); // TODO: use InternalsController.role when support/polyfill is better\n    this.#initItems();\n  }\n\n  render() {\n    const { on = '' } = this;\n    return html`\n      <slot part=\"menu\" class=\"${classMap({ [on]: !!on })}\"></slot>\n    `;\n  }\n\n  /**\n   * finds menu items and sets attributes accordingly\n   */\n  #initItems() {\n    const items = Array.from(this.children)\n      .map(getItemElement)\n      .filter((x): x is HTMLElement => x instanceof HTMLElement);\n    items.forEach(item => item?.setAttribute('role', 'menuitem'));\n    this.#tabindex.initItems(items);\n    this.requestUpdate();\n  }\n\n  activateItem(item: HTMLElement) {\n    this.#tabindex.updateActiveItem(item);\n    this.#tabindex.focusOnItem(item);\n  }\n}\n\n/**\n * Given an element, returns self, or child that is not an rh-tooltip\n */\nfunction getItemElement(element: Element) {\n  return (\n      element.localName !== 'rh-tooltip' ? element\n    : element.querySelector(':not([slot=content])')\n  );\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'rh-menu': RhMenu;\n  }\n}\n"]}