{"version":3,"file":"rh-skeleton.js","sourceRoot":"","sources":["rh-skeleton.ts"],"names":[],"mappings":";AAAA,OAAO,EAAE,UAAU,EAAE,IAAI,EAAE,MAAM,KAAK,CAAC;AACvC,OAAO,EAAE,aAAa,EAAE,MAAM,kCAAkC,CAAC;AACjE,OAAO,EAAE,QAAQ,EAAE,MAAM,4BAA4B,CAAC;;;AAItD;;;;;;;GAOG;AAEI,IAAM,UAAU,GAAhB,MAAM,UAAW,SAAQ,UAAU;IAWxC,MAAM;QACJ,OAAO,IAAI,CAAA;;;;;KAKV,CAAC;IACJ,CAAC;;AAjBe,iBAAM,GAAG,CAAC,MAAM,CAAC,AAAX,CAAY;AAGL;IAA5B,QAAQ,CAAC,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;wCAAoE;AAKnE;IAA5B,QAAQ,CAAC,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;wCAAiD;AATlE,UAAU;IADtB,aAAa,CAAC,aAAa,CAAC;GAChB,UAAU,CAmBtB","sourcesContent":["import { LitElement, html } from 'lit';\nimport { customElement } from 'lit/decorators/custom-element.js';\nimport { property } from 'lit/decorators/property.js';\n\nimport styles from './rh-skeleton.css';\n\n/**\n * A skeleton displays an animated placeholder that mimics the structure and layout of actual content while it loads.\n * It gives users a preview of what's coming and reduces perceived loading time.\n *\n * @summary A placeholder for content that is loading.\n *\n * @alias skeleton\n */\n@customElement('rh-skeleton')\nexport class RhSkeleton extends LitElement {\n  static readonly styles = [styles];\n\n  /** What shape the skeleton should be. Defaults to `body-copy`. */\n  @property({ reflect: true }) type?: 'body-copy' | 'heading' | 'circle' | 'square' | 'rectangle';\n\n  /** What size the skeleton should be. Defaults to `md`.\n   * The `size` attribute is not valid on circle, square, or rectangle skeletons.\n  */\n  @property({ reflect: true }) size?: 'xs' | 'sm' | 'md' | 'lg' | 'xl' | '2xl';\n\n  render() {\n    return html`\n      <span class=\"visually-hidden\">\n        <!-- Place a visually hidden description of what is being loaded for assistive technologies. -->\n        <slot>Loading...</slot>\n      </span>\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'rh-skeleton': RhSkeleton;\n  }\n}\n"]}