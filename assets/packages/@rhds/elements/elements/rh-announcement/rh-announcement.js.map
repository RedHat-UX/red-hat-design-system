{"version":3,"file":"rh-announcement.js","sourceRoot":"","sources":["rh-announcement.ts"],"names":[],"mappings":";;AAAA,OAAO,EAAE,UAAU,EAAE,IAAI,EAAE,MAAM,KAAK,CAAC;AACvC,OAAO,EAAE,aAAa,EAAE,MAAM,kCAAkC,CAAC;AACjE,OAAO,EAAE,QAAQ,EAAE,MAAM,4BAA4B,CAAC;AACtD,OAAO,EAAE,QAAQ,EAAE,MAAM,6BAA6B,CAAC;AAEvD,OAAO,EAAE,cAAc,EAAE,MAAM,qDAAqD,CAAC;AAErF,OAAO,EAAE,aAAa,EAAqB,MAAM,sCAAsC,CAAC;AACxF,OAAO,EAAE,QAAQ,EAAE,MAAM,gCAAgC,CAAC;AAE1D,OAAO,uCAAuC,CAAC;;;AAI/C,MAAM,OAAO,sBAAuB,SAAQ,KAAK;IAC/C;QACE,KAAK,CAAC,OAAO,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,EAAE,IAAI,EAAE,CAAC,CAAC;IACtD,CAAC;CACF;AAED;;;;;;;;;;;;;;;;;;;GAmBG;AAKI,IAAM,cAAc,GAApB,MAAM,cAAe,SAAQ,UAAU;IAAvC;;;QAML;;WAEG;QACyC,gBAAW,GAAG,KAAK,CAAC;QAUhE,gCAAS,IAAI,cAAc,CAAC,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,KAAK,CAAC,EAAC;IAiD1D,CAAC;IA/CC,MAAM;QACJ,MAAM,EAAE,WAAW,EAAE,GAAG,IAAI,CAAC;QAC7B,MAAM,mBAAmB,GAAG,IAAI,CAAC,aAAa,KAAK,cAAc,CAAC;QAClE,MAAM,kBAAkB,GAAG,IAAI,CAAC,aAAa,KAAK,aAAa,CAAC;QAEhE,OAAO,IAAI,CAAA;;oBAEK,QAAQ,CAAC;YACf,WAAW;YACX,cAAc,EAAE,mBAAmB;YACnC,aAAa,EAAE,kBAAkB;YACjC,OAAO,EAAE,uBAAA,IAAI,6BAAO,CAAC,OAAO,CAAC,IAAI,CAAC;SACnC,CAAC;;;;wBAIU,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,uBAAA,IAAI,6BAAO,CAAC,UAAU,CAAC,OAAO,CAAC,EAAE,CAAC;;;;oCAIzC,QAAQ,CAAC,EAAE,KAAK,EAAE,uBAAA,IAAI,6BAAO,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC;;;mCAG/C,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,uBAAA,IAAI,6BAAO,CAAC,UAAU,CAAC,KAAK,CAAC,EAAE,CAAC;;;;;;wBAM9D,CAAC,IAAI,CAAC,WAAW;uBAClB,CAAC,IAAI,CAAC,WAAW;;;;;2BAKb,uBAAA,IAAI,+DAAc;;;KAGxC,CAAC;IACJ,CAAC;;;;;IAGC,MAAM,KAAK,GAAG,IAAI,sBAAsB,EAAE,CAAC;IAC3C,IAAI,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,EAAE,CAAC;QAC9B,IAAI,CAAC,MAAM,EAAE,CAAC;IAChB,CAAC;AACH,CAAC;AAlEM,qBAAM,GAAG,CAAC,MAAM,CAAC,AAAX,CAAY;AAGgC;IAAxD,QAAQ,CAAC,EAAE,OAAO,EAAE,IAAI,EAAE,SAAS,EAAE,eAAe,EAAE,CAAC;oDAA6B;AAKzC;IAA3C,QAAQ,CAAC,EAAE,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;mDAAqB;AAQhE;IADC,QAAQ,CAAC,EAAE,OAAO,EAAE,IAAI,EAAE,SAAS,EAAE,gBAAgB,EAAE,CAAC;qDACV;AAjBpC,cAAc;IAH1B,aAAa,CAAC,iBAAiB,CAAC;IAChC,aAAa;IACb,QAAQ;GACI,cAAc,CAoE1B","sourcesContent":["import { LitElement, html } from 'lit';\nimport { customElement } from 'lit/decorators/custom-element.js';\nimport { property } from 'lit/decorators/property.js';\nimport { classMap } from 'lit/directives/class-map.js';\n\nimport { SlotController } from '@patternfly/pfe-core/controllers/slot-controller.js';\n\nimport { colorPalettes, type ColorPalette } from '@rhds/elements/lib/color-palettes.js';\nimport { themable } from '@rhds/elements/lib/themable.js';\n\nimport '@rhds/elements/rh-button/rh-button.js';\n\nimport styles from './rh-announcement.css';\n\nexport class AnnouncementCloseEvent extends Event {\n  constructor() {\n    super('close', { bubbles: true, cancelable: true });\n  }\n}\n\n/**\n * Announcements are flexible surfaces used to group information in a full width banner layout, traditionally across the top of a page.\n * They are used to announce new features, promos, or news.\n * @summary Arranges content and interactive elements in a layout\n *\n * @alias announcement\n *\n * @slot    image\n *          If this slot is used, we expect an image tag with a width and height set.\n *          An icon, svg, or use of the icon component are also valid in this region.\n * @slot    Any content that is not designated for the header or footer slot, will go to this slot.\n * @slot    cta\n *          If this slot is used, we expect a rh-cta component.\n * @fires   {AnnouncementCloseEvent} close\n *          When a user clicks the close/dismiss button on an announcement.\n * @csspart row\n *          The row for the banner. Contains the image and content divs.\n * @csspart image\n *          The image for the banner. Contains the image slot.\n */\n\n@customElement('rh-announcement')\n@colorPalettes\n@themable\nexport class RhAnnouncement extends LitElement {\n  static styles = [styles];\n\n  /** Sets color context for child components, overrides parent context */\n  @property({ reflect: true, attribute: 'color-palette' }) colorPalette?: ColorPalette;\n\n  /**\n   * Make an announcement dismissable\n   */\n  @property({ reflect: true, type: Boolean }) dismissable = false;\n\n  /**\n   * Set the position of the image in the announcement on mobile viewports. Possible values are:\n   * - `inline-start`\n   * - `block-start`\n   */\n  @property({ reflect: true, attribute: 'image-position' })\n  imagePosition?: 'inline-start' | 'block-start';\n\n  #slots = new SlotController(this, 'image', null, 'cta');\n\n  render() {\n    const { dismissable } = this;\n    const imagePosInlineStart = this.imagePosition === 'inline-start';\n    const imagePosBlockStart = this.imagePosition === 'block-start';\n\n    return html`\n      <div id=\"container\"\n           class=\"${classMap({\n              dismissable,\n              'inline-start': imagePosInlineStart,\n              'block-start': imagePosBlockStart,\n              'empty': this.#slots.isEmpty(null),\n            })}\">\n        <div id=\"row\" part=\"row\">\n          <div id=\"image\"\n               part=\"image\"\n               class=\"${classMap({ empty: !this.#slots.hasSlotted('image') })}\">\n            <slot name=\"image\"></slot>\n          </div>\n          <div id=\"content\">\n            <div id=\"body\" class=\"${classMap({ empty: this.#slots.isEmpty(null) })}\">\n              <slot></slot>\n            </div>\n            <div id=\"cta\" class=\"${classMap({ empty: !this.#slots.hasSlotted('cta') })}\">\n              <slot name=\"cta\"></slot>\n            </div>\n          </div>\n        </div>\n        <div id=\"header-actions\"\n             ?hidden=\"${!this.dismissable}\"\n             ?inert=\"${!this.dismissable}\">\n          <rh-button id=\"close-button\"\n                  label=\"Close\"\n                  confirm\n                  variant=\"close\"\n                  @click=${this.#closeHandler}></rh-button>\n        </div>\n      </div>\n    `;\n  }\n\n  #closeHandler() {\n    const event = new AnnouncementCloseEvent();\n    if (this.dispatchEvent(event)) {\n      this.remove();\n    }\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'rh-announcement': RhAnnouncement;\n  }\n}\n"]}