{"version":3,"file":"rh-timestamp.js","sourceRoot":"","sources":["rh-timestamp.ts"],"names":[],"mappings":";;AAEA,OAAO,EAAE,UAAU,EAAE,IAAI,EAAE,MAAM,KAAK,CAAC;AACvC,OAAO,EAAE,aAAa,EAAE,MAAM,kCAAkC,CAAC;AACjE,OAAO,EAAE,QAAQ,EAAE,MAAM,4BAA4B,CAAC;AAEtD,OAAO,EACL,mBAAmB,GAEpB,MAAM,0DAA0D,CAAC;;;AAIlE,MAAM,sBAAsB,GAA8B;IACxD,aAAa,CAAC,KAAK;QACjB,OAAO,CAAC,KAAK,IAAI,KAAK,KAAK,MAAM,CAAC;IACpC,CAAC;CACF,CAAC;AAEF;;;;GAIG;AAEI,IAAM,WAAW,GAAjB,MAAM,WAAY,SAAQ,UAAU;IAApC;;QA+DL,iCAAa,IAAI,mBAAmB,CAAC,IAAI,CAAC,EAAC;IAqB7C,CAAC;IAzCC;;OAEG;IAEH,IAAI,IAAI;QACN,OAAO,uBAAA,IAAI,8BAAW,CAAC,YAAY,CAAC;IACtC,CAAC;IAED,IAAI,IAAI,CAAC,MAAM;QACb,uBAAA,IAAI,8BAAW,CAAC,IAAI,GAAG,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC;IAC1C,CAAC;IAED,IAAI,SAAS;QACX,OAAO,uBAAA,IAAI,8BAAW,CAAC,SAAS,CAAC;IACnC,CAAC;IAED,IAAI,IAAI;QACN,OAAO,uBAAA,IAAI,8BAAW,CAAC,IAAI,CAAC;IAC9B,CAAC;IAIQ,iBAAiB;QACxB,KAAK,CAAC,iBAAiB,EAAE,CAAC;QAC1B,MAAM,IAAI,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;QACvC,IAAI,IAAI,EAAE;YACR,uBAAA,IAAI,8BAAW,CAAC,IAAI,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC;SACvC;IACH,CAAC;IAEQ,UAAU,CAAC,iBAAuC;QACzD,KAAK,MAAM,CAAC,IAAI,CAAC,IAAI,iBAAiB,EAAE;YACtC,uBAAA,IAAI,8BAAW,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,IAAkB,CAAC,CAAC,CAAC;SACrD;IACH,CAAC;IAEQ,MAAM;QACb,OAAO,IAAI,CAAA;wBACS,uBAAA,IAAI,8BAAW,CAAC,SAAS,KAAK,uBAAA,IAAI,8BAAW,CAAC,IAAI;KACrE,CAAC;IACJ,CAAC;;;AAlFe,kBAAM,GAAG,CAAC,MAAM,CAAC,CAAC;AAKqB;IAAtD,QAAQ,CAAC,EAAE,OAAO,EAAE,IAAI,EAAE,SAAS,EAAE,aAAa,EAAE,CAAC;+CAA6B;AAK5B;IAAtD,QAAQ,CAAC,EAAE,OAAO,EAAE,IAAI,EAAE,SAAS,EAAE,aAAa,EAAE,CAAC;+CAA6B;AAKnD;IAA/B,QAAQ,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC;iDAAuB;AAKI;IAAzD,QAAQ,CAAC,EAAE,OAAO,EAAE,IAAI,EAAE,SAAS,EAAE,gBAAgB,EAAE,CAAC;kDAAwB;AAKpD;IAA5B,QAAQ,CAAC,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;2CAAiB;AAKD;IAA3C,QAAQ,CAAC,EAAE,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;6CAAoB;AAKnB;IAA3C,QAAQ,CAAC,EAAE,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;wCAAe;AAK4B;IAArF,QAAQ,CAAC,EAAE,OAAO,EAAE,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,sBAAsB,EAAE,CAAC;2CAAkB;AAMvG;IADC,QAAQ,CAAC,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;uCAG3B;AAjDU,WAAW;IADvB,aAAa,CAAC,cAAc,CAAC;GACjB,WAAW,CAoFvB;SApFY,WAAW","sourcesContent":["import type { ComplexAttributeConverter, PropertyValues } from 'lit';\n\nimport { LitElement, html } from 'lit';\nimport { customElement } from 'lit/decorators/custom-element.js';\nimport { property } from 'lit/decorators/property.js';\n\nimport {\n  TimestampController,\n  type DateTimeFormat,\n} from '@patternfly/pfe-core/controllers/timestamp-controller.js';\n\nimport styles from './rh-timestamp.css';\n\nconst BooleanStringConverter: ComplexAttributeConverter = {\n  fromAttribute(value) {\n    return !value || value === 'true';\n  },\n};\n\n/**\n * A timestamp provides consistent formats for displaying date and time values.\n *\n * @summary Displays a line of text with date and time values\n */\n@customElement('rh-timestamp')\nexport class RhTimestamp extends LitElement {\n  static readonly styles = [styles];\n\n  /**\n   * Custom date formatting style. See [MDN](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat/DateTimeFormat#datestyle) for options.\n   */\n  @property({ reflect: true, attribute: 'date-format' }) dateFormat?: DateTimeFormat;\n\n  /**\n   * Custom time formatting style. See [MDN](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat/DateTimeFormat#timestyle) for options.\n   */\n  @property({ reflect: true, attribute: 'time-format' }) timeFormat?: DateTimeFormat;\n\n  /**\n   * Custom date and time formatting options. See [MDN](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat/DateTimeFormat#options) for a list of options.\n   */\n  @property({ attribute: false }) customFormat?: object;\n\n  /**\n   * Text to display after the timestamp\n   */\n  @property({ reflect: true, attribute: 'display-suffix' }) displaySuffix?: string;\n\n  /**\n   * Overrides the runtime's default locale\n   */\n  @property({ reflect: true }) locale?: string;\n\n  /**\n   * Formats a timestamp in realtive terms\n   */\n  @property({ reflect: true, type: Boolean }) relative?: boolean;\n\n  /**\n   * Sets the timezone as UTC\n   */\n  @property({ reflect: true, type: Boolean }) utc?: boolean;\n\n  /**\n   * Whether to use 12-hour time (as opposed to 24-hour time)\n   */\n  @property({ reflect: true, attribute: 'hour-12', converter: BooleanStringConverter }) hour12?: boolean;\n\n  /**\n   * A string value representing a date\n   */\n  @property({ reflect: true })\n  get date() {\n    return this.#timestamp.localeString;\n  }\n\n  set date(string) {\n    this.#timestamp.date = new Date(string);\n  }\n\n  get isoString() {\n    return this.#timestamp.isoString;\n  }\n\n  get time() {\n    return this.#timestamp.time;\n  }\n\n  #timestamp = new TimestampController(this);\n\n  override connectedCallback() {\n    super.connectedCallback();\n    const date = this.getAttribute('date');\n    if (date) {\n      this.#timestamp.date = new Date(date);\n    }\n  }\n\n  override willUpdate(changedProperties: PropertyValues<this>) {\n    for (const [prop] of changedProperties) {\n      this.#timestamp.set(prop, this[prop as keyof this]);\n    }\n  }\n\n  override render() {\n    return html`\n      <time datetime=\"${this.#timestamp.isoString}\">${this.#timestamp.time}</time>\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'rh-timestamp': RhTimestamp;\n  }\n}\n"]}