{"version":3,"file":"rh-icon.js","sourceRoot":"","sources":["rh-icon.ts"],"names":[],"mappings":"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","sourcesContent":["import type { IconNameFor, IconSetName } from '@rhds/icons';\n\nimport { LitElement, html, type TemplateResult } from 'lit';\nimport { customElement } from 'lit/decorators/custom-element.js';\nimport { property } from 'lit/decorators/property.js';\nimport { state } from 'lit/decorators/state.js';\nimport { classMap } from 'lit/directives/class-map.js';\n\nimport { observes } from '@patternfly/pfe-core/decorators/observes.js';\nimport { Logger } from '@patternfly/pfe-core/controllers/logger.js';\nimport { InternalsController } from '@patternfly/pfe-core/controllers/internals-controller.js';\n\nimport style from './rh-icon.css';\n\ntype Renderable = unknown;\n\nexport type IconResolverFunction = (set: string, icon: string) =>\n  Renderable | Promise<Renderable>;\n\n/**\n * requestIdleCallback when available, requestAnimationFrame when not\n * @param f callback\n */\nconst ric: typeof globalThis.requestIdleCallback =\n     globalThis.requestIdleCallback\n  ?? globalThis.requestAnimationFrame\n  ?? (async (f: () => void) => Promise.resolve().then(f));\n\n/** Fired when an icon fails to load */\nexport class IconResolveErrorEvent extends ErrorEvent {\n  constructor(\n    set: string,\n    icon: string,\n    /** The original error when importing the icon module */\n    public originalError: Error\n  ) {\n    super('error', { message: `Could not load icon \"${icon}\" from set \"${set}\".` });\n  }\n}\n\n/**\n * Icons represents general concepts and can support text as a decorative element.\n * The icon element, <rh-icon>, is a container that allows users to add icons of varying\n * dimensions in the same area without shifting surrounding content.\n * @summary Decorative element which supports related content\n * @slot - Slotted content is used as a fallback in case the icon doesn't load\n * @fires load - Fired when an icon is loaded and rendered\n * @fires error - Fired when an icon fails to load\n * @csspart fallback - Container for the fallback (i.e. slotted) content\n * @cssprop --rh-icon-size - Override default icon size\n */\n@customElement('rh-icon')\nexport class RhIcon extends LitElement {\n  public static readonly styles: CSSStyleSheet[] = [style];\n\n  private static onIntersect: IntersectionObserverCallback = records =>\n    records.forEach(({ isIntersecting, target }) => {\n      const icon = target as RhIcon;\n      icon.#intersecting = isIntersecting;\n      icon.#dispatchLoad(false);\n    });\n\n  private static io = new IntersectionObserver(RhIcon.onIntersect);\n\n  private static instances = new Set<RhIcon>();\n\n  private static resolve: IconResolverFunction = (set: string, icon: string): Renderable =>\n    import(`@rhds/icons/${set}/${icon}.js`)\n        .then(mod => mod.default.cloneNode(true));\n\n  /** Icon set */\n  @property({ reflect: true }) set?: IconSetName;\n\n  /** Icon name */\n  @property({ reflect: true }) icon?: IconNameFor<IconSetName>;\n\n  /**\n   * Defines a string value that labels the icon element.\n   * Adds role=\"img\" to element.\n   */\n  @property({ attribute: 'accessible-label' }) accessibleLabel?: string;\n\n  /**\n   * Controls how eager the element will be to load the icon data\n   * - `eager`: eagerly load the icon, blocking the main thread\n   * - `idle`: wait for the browser to attain an idle state before loading\n   * - `lazy` (default): wait for the element to enter the viewport before loading\n   */\n  @property() loading?: 'idle' | 'lazy' | 'eager' = 'lazy';\n\n  /** Icon content. Any value that lit can render */\n  @state() private content?: unknown;\n\n  #intersecting = false;\n\n  #logger = new Logger(this);\n\n  #internals = InternalsController.of(this);\n\n  connectedCallback(): void {\n    super.connectedCallback();\n    RhIcon.instances.add(this);\n  }\n\n  render(): TemplateResult {\n    const content = this.content ?? '';\n    const { set = 'standard' } = this;\n    return html`\n      <div id=\"container\"\n           aria-hidden=\"${String(!!content)}\"\n           class=\"${classMap({ [set]: set })}\"\n      >${content}<span part=\"fallback\"\n                       ?hidden=${!!content}><slot></slot></span></div>\n    `;\n  }\n\n  disconnectedCallback(): void {\n    super.disconnectedCallback();\n    RhIcon.io.unobserve(this);\n    RhIcon.instances.delete(this);\n  }\n\n  @observes('icon')\n  @observes('set')\n  private iconChanged(): void {\n    this.#dispatchLoad();\n  }\n\n  @observes('accessibleLabel')\n  private accessibleLabelChanged(): void {\n    this.#internals.ariaLabel = this.accessibleLabel ?? null;\n    if (this.accessibleLabel) {\n      this.#internals.role = 'img';\n    } else {\n      this.#internals.role = 'presentation';\n    }\n  }\n\n  @observes('content' as keyof RhIcon)\n  private async contentChanged(old?: unknown) {\n    if (old !== this.content) {\n      await this.updateComplete;\n      this.dispatchEvent(new Event('load', { bubbles: true }));\n    }\n  }\n\n  #lazyLoad(shouldObserve = true) {\n    if (shouldObserve) {\n      RhIcon.io.observe(this);\n    }\n    if (this.#intersecting) {\n      this.#load();\n    }\n  }\n\n  #dispatchLoad(shouldObserve = true) {\n    switch (this.loading) {\n      case 'idle': return void ric(() => this.#load());\n      case 'lazy': return void this.#lazyLoad(shouldObserve);\n      case 'eager': return void this.#load();\n    }\n  }\n\n  async #load() {\n    const { set = 'standard', icon } = this;\n    const resolver = RhIcon.resolve;\n    if (set && icon && typeof resolver === 'function') {\n      try {\n        this.content = await resolver(set, icon);\n      } catch (error: unknown) {\n        if (error instanceof Error) {\n          this.#logger.error(error.message);\n          this.dispatchEvent(new IconResolveErrorEvent(set, icon, error));\n        }\n      }\n    }\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'rh-icon': RhIcon;\n  }\n}\n"]}