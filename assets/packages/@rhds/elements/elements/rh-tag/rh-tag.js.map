{"version":3,"file":"rh-tag.js","sourceRoot":"","sources":["rh-tag.ts"],"names":[],"mappings":";AAAA,OAAO,EAAE,IAAI,EAAE,MAAM,KAAK,CAAC;AAC3B,OAAO,EAAE,QAAQ,EAAE,MAAM,6BAA6B,CAAC;AACvD,OAAO,EAAE,aAAa,EAAE,MAAM,kCAAkC,CAAC;AACjE,OAAO,EAAE,QAAQ,EAAE,MAAM,4BAA4B,CAAC;AAEtD,OAAO,EAAE,oBAAoB,EAAmB,MAAM,qCAAqC,CAAC;AAC5F,OAAO,EAAE,oBAAoB,EAAqB,MAAM,qCAAqC,CAAC;AAE9F,OAAO,EAAE,SAAS,EAAE,MAAM,4CAA4C,CAAC;AAEvE,OAAO,yCAAyC,CAAC;;;AAejD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAyDG;AAEI,IAAM,KAAK,GAAX,MAAM,KAAM,SAAQ,SAAS;IAA7B;;QAML,gCAAgC;QACpB,YAAO,GAA0B,QAAQ,CAAC;IA2BxD,CAAC;IApBC;;;OAGG;IACO,iBAAiB;QACzB,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAA;yBACR,CAAC,IAAI,CAAC,IAAI,UAAU,IAAI,CAAC,IAAI;KACjD,CAAC;IACJ,CAAC;IAEQ,MAAM;QACb,MAAM,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,IAAI,CAAC;QACzB,OAAO,IAAI,CAAA;qBACM,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,KAAK,KAAK,CAAC,MAAM,EAAE;KAC3D,CAAC;IACJ,CAAC;IAES,YAAY;QACpB,OAAO,IAAI,CAAA,EAAE,CAAC;IAChB,CAAC;;AAhCe,YAAM,GAAG,CAAC,MAAM,CAAC,CAAC;AAGtB;IAAX,QAAQ,EAAE;mCAAe;AAGd;IAAX,QAAQ,EAAE;sCAA2C;AAG1C;IAAX,QAAQ,EAAE;oCAAkB;AAEL;IAAvB,oBAAoB,EAAE;iCAAyB;AAZrC,KAAK;IADjB,aAAa,CAAC,QAAQ,CAAC;GACX,KAAK,CAkCjB;SAlCY,KAAK","sourcesContent":["import { html } from 'lit';\nimport { classMap } from 'lit/directives/class-map.js';\nimport { customElement } from 'lit/decorators/custom-element.js';\nimport { property } from 'lit/decorators/property.js';\n\nimport { colorContextConsumer, type ColorTheme } from '../../lib/context/color/consumer.js';\nimport { colorContextProvider, type ColorPalette } from '../../lib/context/color/provider.js';\n\nimport { BaseLabel } from '@patternfly/elements/pf-label/BaseLabel.js';\n\nimport '@patternfly/elements/pf-icon/pf-icon.js';\n\nimport styles from './rh-tag.css';\n\nexport type TagColor = (\n  | 'blue'\n  | 'cyan'\n  | 'green'\n  | 'orange'\n  | 'purple'\n  | 'red'\n  | 'grey'\n)\n\n\n/**\n * A tag is a caption added to an element for better clarity and user convenience.\n *\n * @summary  Displays a tag with a label and optional icon for additional context.\n * @cssprop  {<length>} --rh-tag-margin-inline-end\n *           The margin at the end of the direction parallel to the flow of the text.\n *           {@default 4px}\n * @cssprop  {<length>} --rh-tag-padding-block-start\n *           The padding at the start of the direction perpendicular to the flow of the text.\n *           {@default 4px}\n * @cssprop  {<length>} --rh-tag-padding-block-end\n *           The padding at the end of the direction perpendicular to the flow of the text.\n *           {@default 4px}\n * @cssprop  {<length>} --rh-tag-padding-inline-start\n *           The padding at the start of the direction parallel to the flow of the text.\n *           {@default 8px}\n * @cssprop  {<length>} --rh-tag-padding-inline-end\n *           The padding at the end of the direction parallel to the flow of the text.\n *           {@default 8px}\n * @cssprop --pf-icon--size\n * @cssprop --rh-border-radius-pill\n * @cssprop --rh-border-width-sm\n * @cssprop --rh-color-accent-base-on-light\n * @cssprop --rh-color-blue-50\n * @cssprop --rh-color-blue-100\n * @cssprop --rh-color-blue-400\n * @cssprop --rh-color-blue-600\n * @cssprop --rh-color-border-subtle-on-light\n * @cssprop --rh-color-cyan-50\n * @cssprop --rh-color-cyan-100\n * @cssprop --rh-color-cyan-300\n * @cssprop --rh-color-cyan-400\n * @cssprop --rh-color-cyan-500\n * @cssprop --rh-color-green-50\n * @cssprop --rh-color-green-100\n * @cssprop --rh-color-green-500\n * @cssprop --rh-color-green-600\n * @cssprop --rh-color-orange-50\n * @cssprop --rh-color-orange-100\n * @cssprop --rh-color-orange-300\n * @cssprop --rh-color-orange-500\n * @cssprop --rh-color-orange-700\n * @cssprop --rh-color-purple-50\n * @cssprop --rh-color-purple-100\n * @cssprop --rh-color-purple-500\n * @cssprop --rh-color-purple-700\n * @cssprop --rh-color-red-50\n * @cssprop --rh-color-red-600\n * @cssprop --rh-color-red-800\n * @cssprop --rh-color-surface-lighter\n * @cssprop --rh-color-surface-lightest\n * @cssprop --rh-color-text-primary-on-dark\n * @cssprop --rh-color-text-primary-on-light\n * @cssprop --rh-font-size-body-text-sm\n * @cssprop --rh-space-md\n * @cssprop --rh-space-xs\n *\n */\n@customElement('rh-tag')\nexport class RhTag extends BaseLabel {\n  static readonly styles = [styles];\n\n  /** The icon to display in the label. */\n  @property() icon?: string;\n\n  /** The variant of the label. */\n  @property() variant?: 'filled' | 'outline' = 'filled';\n\n  /** The color of the label. */\n  @property() color?: TagColor;\n\n  @colorContextConsumer() private on?: ColorTheme;\n\n  /**\n   * RhIcon does not yet exist, so we are using pfe-icon until available\n   * <rh-icon ?hidden=${!this.icon} icon=${this.icon} set=\"${this.set}\" size=\"sm\"></rh-icon>\n   */\n  protected renderDefaultIcon() {\n    return !this.icon ? '' : html`\n      <pf-icon ?hidden=${!this.icon} icon=\"${this.icon}\"></pf-icon>\n    `;\n  }\n\n  override render() {\n    const { on = '' } = this;\n    return html`\n      <span class=\"${classMap({ [on]: !!on })}\">${super.render()}</span>\n    `;\n  }\n\n  protected renderSuffix() {\n    return html``;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'rh-tag': RhTag;\n  }\n}\n"]}