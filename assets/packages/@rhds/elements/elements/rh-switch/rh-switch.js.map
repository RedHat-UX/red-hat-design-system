{"version":3,"file":"rh-switch.js","sourceRoot":"","sources":["rh-switch.ts"],"names":[],"mappings":";;AAAA,OAAO,EAAE,UAAU,EAAE,IAAI,EAAE,MAAM,KAAK,CAAC;AACvC,OAAO,EAAE,aAAa,EAAE,MAAM,kCAAkC,CAAC;AACjE,OAAO,EAAE,QAAQ,EAAE,MAAM,4BAA4B,CAAC;AACtD,OAAO,EAAE,QAAQ,EAAE,MAAM,6BAA6B,CAAC;AAEvD,OAAO,EAAE,mBAAmB,EAAE,MAAM,0DAA0D,CAAC;AAC/F,OAAO,EAAE,cAAc,EAAE,MAAM,qDAAqD,CAAC;AAErF,OAAO,EAAE,aAAa,EAAE,MAAM,4BAA4B,CAAC;AAC3D,OAAO,EAAE,oBAAoB,EAAmB,MAAM,qCAAqC,CAAC;;;AAI5F,OAAO,EAAE,WAAW,EAAE,MAAM,0CAA0C,CAAC;AAEvE;;;;;;GAMG;AAEI,IAAM,QAAQ,GAAd,MAAM,QAAS,SAAQ,UAAU;IAAjC;;;QAOqE,kBAAa,GAAG,KAAK,CAAC;QAEpD,YAAO,GAAG,KAAK,CAAC;QAEhB,aAAQ,GAAG,KAAK,CAAC;QAQjB,aAAQ,GAAG,KAAK,CAAC;QAO7D,8BAAa,mBAAmB,CAAC,EAAE,CAAC,IAAI,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,CAAC,EAAC;QAE9D,0BAAS,IAAI,cAAc,CAAC,IAAI,EAAE,IAAI,EAAE,YAAY,EAAE,aAAa,CAAC,EAAC;QAErE,wBAAO,IAAI,aAAa,CAAC,IAAI,CAAC,EAAC;IAiIjC,CAAC;IA3HC,IAAI,MAAM;QACR,OAAO,uBAAA,IAAI,2BAAW,CAAC,MAAsC,CAAC;IAChE,CAAC;IAED,oBAAoB,CAAC,QAAiB;QACpC,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;IAC3B,CAAC;IAEQ,iBAAiB;QACxB,KAAK,CAAC,iBAAiB,EAAE,CAAC;QAC1B,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;QAClB,IAAI,CAAC,gBAAgB,CAAC,OAAO,EAAE,uBAAA,IAAI,8CAAS,CAAC,CAAC;QAC9C,IAAI,CAAC,gBAAgB,CAAC,OAAO,EAAE,uBAAA,IAAI,8CAAS,CAAC,CAAC;QAC9C,IAAI,CAAC,gBAAgB,CAAC,SAAS,EAAE,uBAAA,IAAI,gDAAW,CAAC,CAAC;IACpD,CAAC;IAED,UAAU;QACR,uBAAA,IAAI,2BAAW,CAAC,WAAW,GAAG,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QACrD,uBAAA,IAAI,2BAAW,CAAC,YAAY,GAAG,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACvD,uBAAA,IAAI,2BAAW,CAAC,SAAS,GAAG,IAAI,CAAC,eAAe,IAAI,EAAE,CAAC;QACvD,MAAM,WAAW,GAAG,uBAAA,IAAI,uBAAO,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;QACtD,MAAM,YAAY,GAAG,uBAAA,IAAI,uBAAO,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC;QACxD,IAAI,WAAW,IAAI,YAAY,EAAE,CAAC;YAChC,IAAI,iBAAiB,IAAI,gBAAgB,EAAE,CAAC;gBAC1C,uBAAA,IAAI,2BAAW,CAAC,eAAe,GAAG,uBAAA,IAAI,kDAAS,IAAI,EAAE,CAAC;YACxD,CAAC;iBAAM,CAAC;gBACN,IAAI,CAAC,YAAY,CAAC,kBAAkB,EAAE,uBAAA,IAAI,kDAAS,IAAI,EAAE,CAAC,CAAC;YAC7D,CAAC;QACH,CAAC;aAAM,CAAC;YACN,MAAM,aAAa,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,aAAa,CAAC;YAClE,MAAM,QAAQ,GAAG,uBAAA,IAAI,uBAAO,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC;YACvD,KAAK,MAAM,EAAE,IAAI,QAAQ,EAAE,CAAC;gBAC1B,EAAE,CAAC,EAAE,KAAL,EAAE,CAAC,EAAE,GAAK,WAAW,CAAC,mBAAmB,CAAC,EAAC;YAC7C,CAAC;YACD,IAAI,yBAAyB,IAAI,gBAAgB,EAAE,CAAC;gBAClD,gDAAgD;gBAChD,uBAAA,IAAI,2BAAW,CAAC,uBAAuB,GAAG,QAAQ,CAAC;YACrD,CAAC;iBAAM,CAAC;gBACN,IAAI,CAAC,YAAY,CAAC,kBAAkB,EAAE,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;YAC3E,CAAC;QACH,CAAC;IACH,CAAC;IAED,MAAM;QACJ,MAAM,GAAG,GAAG,uBAAA,IAAI,qBAAK,CAAC,GAAG,KAAK,KAAK,CAAC;QACpC,MAAM,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,IAAI,CAAC;QACzB,OAAO,IAAI,CAAA;;;oBAGK,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,GAAG,EAAE,CAAC;UACvC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAA;;YAElB,uBAAA,IAAI,qDAAgB,MAApB,IAAI,CAAkB;SACzB,CAAC,CAAC,CAAC,IAAI,CAAA;YACJ,uBAAA,IAAI,qDAAgB,MAApB,IAAI,CAAkB;;SAEzB;2CACkC,CAAC,IAAI,CAAC,OAAO;qCACnB,IAAI,CAAC,SAAS;;4CAEP,IAAI,CAAC,OAAO;qCACnB,IAAI,CAAC,UAAU;;;KAG/C,CAAC;IACJ,CAAC;;;;;;;IApEC,OAAO,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC;AACzD,CAAC;;IAsEC,OAAO,IAAI,CAAA;;UAEL,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,IAAI,CAAA;;;;;;;;;SAS1B,CAAC,CAAC,CAAC,EAAE;;KAET,CAAC;AACJ,CAAC;+CAEQ,KAAY;IACnB,gGAAgG;IAChG,MAAM,EAAE,cAAc,EAAE,sBAAsB,EAAE,GAAG,KAAK,CAAC;IACzD,IAAI,sBAAsB,EAAE,CAAC;QAC3B,IAAI,MAA0B,CAAC;QAC/B,IACE,cAAc,KAAK,KAAK,CAAC,MAAM;eAC5B,CAAC,CAAC,MAAM,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,QAAQ,CAAC,sBAAsB,CAAC;eACpE,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAqB,CAAC,EAC7D,CAAC;YACD,OAAO;QACT,CAAC;IACH,CAAC;IACD,uBAAA,IAAI,6CAAQ,MAAZ,IAAI,CAAU,CAAC;AACjB,CAAC;+CAEQ,KAAoB;IAC3B,IAAI,KAAK,CAAC,GAAG,KAAK,GAAG,IAAI,KAAK,CAAC,GAAG,KAAK,OAAO,EAAE,CAAC;QAC/C,KAAK,CAAC,cAAc,EAAE,CAAC;QACvB,KAAK,CAAC,eAAe,EAAE,CAAC;QACxB,uBAAA,IAAI,6CAAQ,MAAZ,IAAI,CAAU,CAAC;IACjB,CAAC;AACH,CAAC;mDAEU,KAAoB;IAC7B,IAAI,KAAK,CAAC,GAAG,KAAK,GAAG,EAAE,CAAC;QACtB,KAAK,CAAC,cAAc,EAAE,CAAC;QACvB,KAAK,CAAC,eAAe,EAAE,CAAC;IAC1B,CAAC;AACH,CAAC;;IAGC,IAAI,IAAI,CAAC,QAAQ,EAAE,CAAC;QAClB,OAAO;IACT,CAAC;IAED,IAAI,CAAC,OAAO,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC;IAC7B,IAAI,CAAC,aAAa,CAAC,IAAI,KAAK,CAAC,QAAQ,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;AAC7D,CAAC;AA7Je,eAAM,GAAG,CAAC,MAAM,CAAC,AAAX,CAAY;AAElB,uBAAc,GAAG,IAAI,AAAP,CAAQ;AAET;IAA5B,QAAQ,CAAC,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;uCAAgB;AAE8B;IAAzE,QAAQ,CAAC,EAAE,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,iBAAiB,EAAE,CAAC;+CAAuB;AAEpD;IAA3C,QAAQ,CAAC,EAAE,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;yCAAiB;AAEhB;IAA3C,QAAQ,CAAC,EAAE,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;0CAAkB;AAED;IAA3D,QAAQ,CAAC,EAAE,OAAO,EAAE,IAAI,EAAE,SAAS,EAAE,kBAAkB,EAAE,CAAC;iDAA0B;AAE/B;IAArD,QAAQ,CAAC,EAAE,OAAO,EAAE,IAAI,EAAE,SAAS,EAAE,YAAY,EAAE,CAAC;2CAAoB;AAElB;IAAtD,QAAQ,CAAC,EAAE,OAAO,EAAE,IAAI,EAAE,SAAS,EAAE,aAAa,EAAE,CAAC;4CAAqB;AAE/B;IAA3C,QAAQ,CAAC,EAAE,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;0CAAkB;AAK7B;IAA/B,oBAAoB,EAAE;oCAAyB;AAxBrC,QAAQ;IADpB,aAAa,CAAC,WAAW,CAAC;GACd,QAAQ,CA+JpB","sourcesContent":["import { LitElement, html } from 'lit';\nimport { customElement } from 'lit/decorators/custom-element.js';\nimport { property } from 'lit/decorators/property.js';\nimport { classMap } from 'lit/directives/class-map.js';\n\nimport { InternalsController } from '@patternfly/pfe-core/controllers/internals-controller.js';\nimport { SlotController } from '@patternfly/pfe-core/controllers/slot-controller.js';\n\nimport { DirController } from '../../lib/DirController.js';\nimport { colorContextConsumer, type ColorTheme } from '../../lib/context/color/consumer.js';\n\n\nimport styles from './rh-switch.css';\nimport { getRandomId } from '@patternfly/pfe-core/functions/random.js';\n\n/**\n * A switch toggles the state of a setting (between on and off). Switches and checkboxes can often be used interchangeably, but the switch provides a more explicit, visible representation on a setting.\n * @summary  A switch toggles the state of a setting (between on and off).\n * @cssprop --rh-switch-unchecked - The background color of the switch when it is unchecked.\n * @cssprop --rh-switch-checked - The background color of the switch when it is checked.\n * @cssprop --rh-switch-disabled - The background color of the switch when it is disabled.\n */\n@customElement('rh-switch')\nexport class RhSwitch extends LitElement {\n  static readonly styles = [styles];\n\n  static readonly formAssociated = true;\n\n  @property({ reflect: true }) label?: string;\n\n  @property({ reflect: true, type: Boolean, attribute: 'show-check-icon' }) showCheckIcon = false;\n\n  @property({ reflect: true, type: Boolean }) checked = false;\n\n  @property({ reflect: true, type: Boolean }) disabled = false;\n\n  @property({ reflect: true, attribute: 'accessible-label' }) accessibleLabel?: string;\n\n  @property({ reflect: true, attribute: 'message-on' }) messageOn?: string;\n\n  @property({ reflect: true, attribute: 'message-off' }) messageOff?: string;\n\n  @property({ reflect: true, type: Boolean }) reversed = false;\n\n  /**\n   * Sets color theme based on parent context\n   */\n  @colorContextConsumer() private on?: ColorTheme;\n\n  #internals = InternalsController.of(this, { role: 'switch' });\n\n  #slots = new SlotController(this, null, 'message-on', 'message-off');\n\n  #dir = new DirController(this);\n\n  get #message() {\n    return this.checked ? this.messageOn : this.messageOff;\n  }\n\n  get labels(): NodeListOf<HTMLLabelElement> {\n    return this.#internals.labels as NodeListOf<HTMLLabelElement>;\n  }\n\n  formDisabledCallback(disabled: boolean) {\n    this.disabled = disabled;\n  }\n\n  override connectedCallback(): void {\n    super.connectedCallback();\n    this.tabIndex = 0;\n    this.addEventListener('click', this.#onClick);\n    this.addEventListener('keyup', this.#onKeyup);\n    this.addEventListener('keydown', this.#onKeyDown);\n  }\n\n  willUpdate() {\n    this.#internals.ariaChecked = String(!!this.checked);\n    this.#internals.ariaDisabled = String(!!this.disabled);\n    this.#internals.ariaLabel = this.accessibleLabel ?? '';\n    const noMessageOn = this.#slots.isEmpty('message-on');\n    const noMessageOff = this.#slots.isEmpty('message-off');\n    if (noMessageOn || noMessageOff) {\n      if ('ariaDescription' in ElementInternals) {\n        this.#internals.ariaDescription = this.#message ?? '';\n      } else {\n        this.setAttribute('aria-description', this.#message ?? '');\n      }\n    } else {\n      const stateSlotName = this.checked ? 'message-on' : 'message-off';\n      const stateEls = this.#slots.getSlotted(stateSlotName);\n      for (const el of stateEls) {\n        el.id ||= getRandomId('rh-switch-message');\n      }\n      if ('ariaDescribedByElements' in ElementInternals) {\n        // see https://w3c.github.io/aria/#dom-ariamixin\n        this.#internals.ariaDescribedByElements = stateEls;\n      } else {\n        this.setAttribute('aria-describedby', stateEls.map(x => x.id).join(' '));\n      }\n    }\n  }\n\n  render() {\n    const rtl = this.#dir.dir === 'rtl';\n    const { on = '' } = this;\n    return html`\n      <div id=\"container\"\n           part=\"container\"\n           class=\"${classMap({ [on]: !!on, rtl })}\">\n        ${this.reversed ? html`\n          <slot></slot>\n          ${this.#switchTemplate()}\n        ` : html`\n          ${this.#switchTemplate()}\n          <slot></slot>\n        `}\n        <slot name=\"message-on\" ?hidden=\"${!this.checked}\">\n          <span aria-hidden=\"true\">${this.messageOn}</span>\n        </slot>\n        <slot name=\"message-off\" ?hidden=\"${this.checked}\">\n          <span aria-hidden=\"true\">${this.messageOff}</span>\n        </slot>\n      </div>\n    `;\n  }\n\n  #switchTemplate() {\n    return html`\n      <div id=\"switch\" part=\"switch\">\n        ${this.showCheckIcon ? html`\n          <svg id=\"toggle\"\n               role=\"presentation\"\n               fill=\"currentColor\"\n               height=\"1em\"\n               width=\"1em\"\n               viewBox=\"0 0 512 512\">\n            <path d=\"M173.898 439.404l-166.4-166.4c-9.997-9.997-9.997-26.206 0-36.204l36.203-36.204c9.997-9.998 26.207-9.998 36.204 0L192 312.69 432.095 72.596c9.997-9.997 26.207-9.997 36.204 0l36.203 36.204c9.997 9.997 9.997 26.206 0 36.204l-294.4 294.401c-9.998 9.997-26.207 9.997-36.204-.001z\" />\n          </svg>\n        ` : ``}\n      </div>\n    `;\n  }\n\n  #onClick(event: Event) {\n    // @ts-expect-error: firefox workarounds for double-firing in the case of switch nested in label\n    const { originalTarget, explicitOriginalTarget } = event;\n    if (explicitOriginalTarget) {\n      let labels: HTMLLabelElement[];\n      if (\n        originalTarget === event.target\n        && !(labels = Array.from(this.labels)).includes(explicitOriginalTarget)\n        && labels.includes(this.closest('label') as HTMLLabelElement)\n      ) {\n        return;\n      }\n    }\n    this.#toggle();\n  }\n\n  #onKeyup(event: KeyboardEvent) {\n    if (event.key === ' ' || event.key === 'Enter') {\n      event.preventDefault();\n      event.stopPropagation();\n      this.#toggle();\n    }\n  }\n\n  #onKeyDown(event: KeyboardEvent) {\n    if (event.key === ' ') {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n  }\n\n  #toggle() {\n    if (this.disabled) {\n      return;\n    }\n\n    this.checked = !this.checked;\n    this.dispatchEvent(new Event('change', { bubbles: true }));\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'rh-switch': RhSwitch;\n  }\n}\n"]}