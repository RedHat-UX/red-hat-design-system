{"version":3,"file":"yt-api.js","sourceRoot":"","sources":["yt-api.ts"],"names":[],"mappings":"AAmBA,MAAM,OAAO,GAAG,IAAI,OAAO,EAA6B,CAAC;AAEzD,KAAK,UAAU,SAAS,CAAC,MAAyB;IAChD,OAAO,IAAI,OAAO,CAAC,CAAC,CAAC,EAAE;QACrB,IAAI,MAAM,GAAG,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QACjC,IAAI,CAAC,MAAM,EAAE;YACX,OAAO,CAAC,GAAG,CAAC,MAAM,EAAE,IAAI,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,MAAM,EAAE;gBAC/C,MAAM,EAAE;oBACN,OAAO;wBACL,MAAM,GAAG,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;wBAC7B,CAAC,CAAC,MAAM,CAAC,CAAC;oBACZ,CAAC;iBACF;aACF,CAAC,CAAC,CAAC;SACL;aAAM;YACL,qBAAqB,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;SACxC;IACH,CAAC,CAAC,CAAC;AACL,CAAC;AAED,MAAM,CAAC,KAAK,UAAU,UAAU,CAAC,MAAyB;IACxD,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,eAAe,CAAC,EAAE;QACtC,sCAAsC;QACtC,OAAO,CAAC,IAAI,CAAC,+DAA+D,CAAC,CAAC;QAC9E,OAAO;KACR;IACD,gEAAgE;IAChE,IAAI,CAAC,MAAM,CAAC,EAAE,EAAE;QACd,MAAM,GAAG,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;QAC7C,GAAG,CAAC,GAAG,GAAG,oCAAoC,CAAC;QAC/C,MAAM,CAAC,cAAc,CAAC,GAAG,QAAQ,CAAC,oBAAoB,CAAC,QAAQ,CAAC,CAAC;QACjE,cAAc,CAAC,UAAU,EAAE,YAAY,CAAC,GAAG,EAAE,cAAc,CAAC,CAAC;QAE7D,MAAM,IAAI,GAAG,MAAM,CAAC,uBAAuB,CAAC;QAC5C,MAAM,IAAI,OAAO,CAAC,CAAC,CAAC,EAAE;YACpB,MAAM,CAAC,uBAAuB,GAAG;gBAC/B,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;YACZ,CAAC,CAAC;QACJ,CAAC,CAAC,CAAC;QACH,MAAM,CAAC,uBAAuB,GAAG,IAAI,CAAC;KACvC;IACD,MAAM,MAAM,GAAG,MAAM,SAAS,CAAC,MAAM,CAAC,CAAC;IACvC,MAAM,EAAE,UAAU,EAAE,CAAC;AACvB,CAAC","sourcesContent":["declare class Player {\n  constructor(iframeOrID: string|HTMLIFrameElement, options?: {\n    events?: {\n      onReady?(event: Event): void;\n    }\n  });\n\n  pauseVideo(): void\n}\n\ndeclare global {\n  interface Window {\n    onYouTubeIframeAPIReady(): void;\n    YT: {\n      Player: typeof Player;\n    }\n  }\n}\n\nconst players = new WeakMap<HTMLIFrameElement, Player>();\n\nasync function getPlayer(iframe: HTMLIFrameElement): Promise<Player|void> {\n  return new Promise(r => {\n    let player = players.get(iframe);\n    if (!player) {\n      players.set(iframe, new window.YT.Player(iframe, {\n        events: {\n          onReady() {\n            player = players.get(iframe);\n            r(player);\n          }\n        }\n      }));\n    } else {\n      requestAnimationFrame(() => r(player));\n    }\n  });\n}\n\nexport async function pauseVideo(iframe: HTMLIFrameElement) {\n  if (!iframe.src.match(/enablejsapi=1/)) {\n    // eslint-disable-next-line no-console\n    console.warn('Cannot pause video, please add `enablejsapi=1` to iframe url.');\n    return;\n  }\n  // 2. This code loads the IFrame Player API code asynchronously.\n  if (!window.YT) {\n    const tag = document.createElement('script');\n    tag.src = 'https://www.youtube.com/iframe_api';\n    const [firstScriptTag] = document.getElementsByTagName('script');\n    firstScriptTag.parentNode?.insertBefore(tag, firstScriptTag);\n\n    const orig = window.onYouTubeIframeAPIReady;\n    await new Promise(r => {\n      window.onYouTubeIframeAPIReady = function() {\n        r(void 0);\n      };\n    });\n    window.onYouTubeIframeAPIReady = orig;\n  }\n  const player = await getPlayer(iframe);\n  player?.pauseVideo();\n}\n"]}