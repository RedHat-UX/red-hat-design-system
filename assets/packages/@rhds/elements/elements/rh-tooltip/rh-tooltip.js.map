{"version":3,"file":"rh-tooltip.js","sourceRoot":"","sources":["rh-tooltip.ts"],"names":[],"mappings":"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","sourcesContent":["import { html, LitElement } from 'lit';\nimport { customElement } from 'lit/decorators/custom-element.js';\nimport { property } from 'lit/decorators/property.js';\nimport { classMap } from 'lit/directives/class-map.js';\nimport { styleMap } from 'lit/directives/style-map.js';\n\nimport { colorContextConsumer, type ColorTheme } from '../../lib/context/color/consumer.js';\n\nimport {\n  FloatingDOMController,\n  type Placement,\n} from '@patternfly/pfe-core/controllers/floating-dom-controller.js';\n\nimport styles from './rh-tooltip.css';\n\nconst ENTER_EVENTS = ['focusin', 'tap', 'click', 'mouseenter'];\nconst EXIT_EVENTS = ['focusout', 'blur', 'mouseleave'];\n\n/**\n * A tooltip is a floating text area that provides helpful\n * or contextual information on hover, focus, or tap.\n *\n * @summary Reveals a small area of information on hover\n *\n * @slot - Place invoking element here,\n *         i.e. the element which when hovered the tooltip will display.\n *         Must be inline content.\n * @slot content - Place tooltip content here. Overrides the `content` attribute.\n *\n * @cssprop {<length>} [--rh-tooltip-arrow-size=11px]\n * @cssprop {<color>} [--rh-tooltip-content-background-color=#ffffff]\n * @cssprop {<color>} [--rh-tooltip-content-color=#151515]\n * @cssprop {<length>} [--rh-tooltip-max-width=18.75rem]\n * @cssprop {<length>} [--rh-tooltip-content-padding-block-start=16px]\n * @cssprop {<length>} [--rh-tooltip-content-padding-inline-end=16px]\n * @cssprop {<length>} [--rh-tooltip-content-padding-block-end=16px]\n * @cssprop {<length>} [--rh-tooltip-content-padding-inline-start=16px]\n * @cssprop {<absolute-size> | <relative-size> | <length> | <percentage>} [--rh-tooltip-content-font-size=0.875rem]\n */\n@customElement('rh-tooltip')\nexport class RhTooltip extends LitElement {\n  static readonly version = '{{version}}';\n\n  static readonly styles = [styles];\n\n  /** The position of the tooltip, relative to the invoking content */\n  @property() position: Placement = 'top';\n\n  /** Tooltip content. Overridden by the content slot */\n  @property() content?: string;\n\n  @colorContextConsumer() private on?: ColorTheme;\n\n  #float = new FloatingDOMController(this, {\n    content: (): HTMLElement | undefined | null => this.shadowRoot?.querySelector('#tooltip'),\n  });\n\n  override connectedCallback(): void {\n    super.connectedCallback();\n    ENTER_EVENTS.forEach(evt => this.addEventListener(evt, this.show));\n    EXIT_EVENTS.forEach(evt => this.addEventListener(evt, this.hide));\n  }\n\n  override render() {\n    const { on = '' } = this;\n    const { alignment, anchor, open, styles } = this.#float;\n    const ariaHidden = String(!open) as 'true' | 'false';\n\n    return html`\n      <div id=\"container\"\n           style=\"${styleMap(styles)}\"\n           class=\"${classMap({ open,\n                               [on]: !!on,\n                               [anchor]: !!anchor,\n                               [alignment]: !!alignment })}\">\n        <slot id=\"invoker\" role=\"tooltip\" aria-labelledby=\"tooltip\"></slot>\n        <slot id=\"tooltip\"\n              name=\"content\"\n              aria-hidden=\"${ariaHidden}\">${this.content}</slot>\n      </div>\n    `;\n  }\n\n  /** Show the tooltip */\n  async show() {\n    await this.updateComplete;\n    const placement = this.position;\n    const offset =\n        !placement?.match(/top|bottom/) ? 15\n      : { mainAxis: 15, alignmentAxis: -4 };\n    await this.#float.show({ offset, placement });\n  }\n\n  /** Hide the tooltip */\n  async hide() {\n    await this.#float.hide();\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'rh-tooltip': RhTooltip;\n  }\n}\n"]}