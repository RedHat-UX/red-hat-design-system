{"version":3,"file":"rh-tab.js","sourceRoot":"","sources":["rh-tab.ts"],"names":[],"mappings":"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","sourcesContent":["import type { PropertyValues } from 'lit';\n\nimport { html, LitElement } from 'lit';\nimport { customElement } from 'lit/decorators/custom-element.js';\nimport { property } from 'lit/decorators/property.js';\nimport { queryAssignedElements } from 'lit/decorators/query-assigned-elements.js';\nimport { query } from 'lit/decorators/query.js';\nimport { classMap } from 'lit/directives/class-map.js';\n\nimport { observed } from '@patternfly/pfe-core/decorators.js';\n\nimport { colorContextConsumer, type ColorTheme } from '../../lib/context/color/consumer.js';\n\nimport { getRandomId } from '@patternfly/pfe-core/functions/random.js';\n\nimport styles from './rh-tab.css';\n\nexport class TabExpandEvent extends Event {\n  constructor(\n    public active: boolean,\n    public tab: RhTab,\n  ) {\n    super('expand', { bubbles: true, cancelable: true });\n  }\n}\n\n/**\n * The tab button for use within a rh-tabs element, must be paired with a rh-tab-panel.\n *\n * @slot icon - Can contain an `<svg>` or `<pf-icon>`\n * @slot - Tab title text\n *\n * @csspart button - `<button>` element\n * @csspart icon - icon `<span>` element\n * @csspart text - tile text `<span>` element\n *\n * @cssprop {<color>} --rh-tabs-link-color - Tab link text color {@default `#4d4d4d`}\n * @cssprop {<color>} --rh-tabs-active-border-color - Tab active border color {@default `#ff442b`}\n * @cssprop {<length>} --rh-tabs-link-padding-inline-start - Tab padding inline start {@default `32px`}\n * @cssprop {<length>} --rh-tabs-link-padding-block-start - Tab padding block start {@default `16px`}\n * @cssprop {<length>} --rh-tabs-link-padding-inline-end - Tab padding inline end {@default 32px`}\n * @cssprop {<length>} --rh-tabs-link-padding-block-end - Tab padding block end {@default `16px`}\n *\n * @fires { TabExpandEvent } expand - when a tab expands\n */\n@customElement('rh-tab')\nexport class RhTab extends LitElement {\n  static shadowRootOptions = { ...LitElement.shadowRootOptions, delegatesFocus: true };\n\n  static readonly version = '{{version}}';\n\n  static readonly styles = [styles];\n\n  /** `active` should be observed, and true when the tab is selected */\n  @observed\n  @property({ reflect: true, type: Boolean }) active = false;\n\n  /** `disabled` should be observed, and true when the tab is disabled */\n  @observed\n  @property({ reflect: true, type: Boolean }) disabled = false;\n\n  /**\n   * Sets color theme based on parent context\n   */\n  @colorContextConsumer() private on?: ColorTheme;\n\n  @queryAssignedElements({ slot: 'icon', flatten: true })\n  private icons!: Array<HTMLElement>;\n\n  @query('button') private button!: HTMLButtonElement;\n\n  #internals = this.attachInternals();\n\n  connectedCallback() {\n    super.connectedCallback();\n    this.id ||= getRandomId(this.localName);\n    this.addEventListener('click', this.#clickHandler);\n    this.#internals.role = 'tab';\n  }\n\n  render() {\n    const { on = '' } = this;\n    return html`\n      <div id=\"rhds-container\" class=\"${classMap({ [on]: !!on })}\">\n        <button part=\"button\" ?disabled=\"${this.disabled}\">\n          <slot name=\"icon\"\n                part=\"icon\"\n                ?hidden=\"${!this.icons.length}\"\n                @slotchange=\"${() => this.requestUpdate()}\"></slot>\n          <slot part=\"text\"></slot>\n        </button>\n      </div>\n    `;\n  }\n\n  updated(changed: PropertyValues<this>) {\n    this.#internals.ariaSelected = String(this.ariaSelected);\n    if (changed.has('active')) {\n      this.#activeChanged();\n    }\n    if (changed.has('disabled')) {\n      this.#disabledChanged();\n    }\n  }\n\n  #clickHandler() {\n    if (!this.disabled && this.#internals.ariaDisabled !== 'true' && this.ariaDisabled !== 'true') {\n      this.active = true;\n      this.focus(); // safari fix\n    }\n  }\n\n  #activeChanged() {\n    if (this.active && !this.disabled) {\n      this.#internals.ariaSelected = 'true';\n    } else {\n      this.#internals.ariaSelected = 'false';\n    }\n    this.dispatchEvent(new TabExpandEvent(this.active, this));\n  }\n\n  /**\n   * if a tab is disabled, then it is also aria-disabled\n   * if a tab is removed from disabled its not necessarily\n   * not still aria-disabled so we don't remove the aria-disabled\n   */\n  #disabledChanged() {\n    this.#internals.ariaDisabled = String(!!this.disabled);\n  }\n\n  focus() {\n    this.button.focus();\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'rh-tab': RhTab;\n  }\n}\n"]}