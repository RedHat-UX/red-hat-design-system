{"version":3,"file":"rh-tabs.js","sourceRoot":"","sources":["rh-tabs.ts"],"names":[],"mappings":"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","sourcesContent":["import { html, LitElement } from 'lit';\nimport { customElement } from 'lit/decorators/custom-element.js';\nimport { property } from 'lit/decorators/property.js';\nimport { classMap } from 'lit/directives/class-map.js';\nimport { query } from 'lit/decorators/query.js';\nimport { queryAssignedElements } from 'lit/decorators/query-assigned-elements.js';\n\nimport { cascades, deprecation } from '@patternfly/pfe-core/decorators.js';\nimport { RovingTabindexController } from '@patternfly/pfe-core/controllers/roving-tabindex-controller.js';\nimport { OverflowController } from '@patternfly/pfe-core/controllers/overflow-controller.js';\nimport { Logger } from '@patternfly/pfe-core/controllers/logger.js';\n\nimport { getRandomId } from '@patternfly/pfe-core/functions/random.js';\n\nimport { RhTab, TabExpandEvent } from './rh-tab.js';\nimport { RhTabPanel } from './rh-tab-panel.js';\n\nimport { colorContextConsumer, type ColorTheme } from '../../lib/context/color/consumer.js';\nimport { colorContextProvider, type ColorPalette } from '../../lib/context/color/provider.js';\n\nimport styles from './rh-tabs.css';\n\nexport { RhTab };\n\n/* TODO: Remove attrs in JSDoc below when updated use TabsController after PFE 3.0 release */\n\n/**\n * Tabs are used to organize and navigate between sections of content.\n * They feature a horizontal or a vertical list of section text labels\n * with a content panel below or to the right of the component.\n *\n * @summary Arranges content in a contained view on the same page\n *\n * @csspart container - outer container\n * @csspart tabs-container - tabs container\n * @csspart tabs - tablist\n * @csspart panels - panels\n *\n * @slot tab - Must contain one or more `<rh-tab>`\n * @slot - Must contain one or more `<rh-tab-panel>`\n *\n * @cssprop {<color>} --rh-tabs-border-color - Tabs Border color {@default `#c7c7c7`}\n * @cssprop {<length>} --rh-tabs-inset - Tabs inset {@default `auto`}\n *\n */\n@customElement('rh-tabs')\nexport class RhTabs extends LitElement {\n  static readonly styles = [styles];\n\n  static isTab(element: HTMLElement): element is RhTab {\n    return element instanceof RhTab;\n  }\n\n  static isPanel(element: HTMLElement): element is RhTabPanel {\n    return element instanceof RhTabPanel;\n  }\n\n  /** Time in milliseconds to debounce between scroll events and updating scroll button state */\n  protected static readonly scrollTimeoutDelay: number = 0;\n\n  /** Icon name to use for the scroll left button */\n  protected static readonly scrollIconLeft: string = 'angle-left';\n\n  /** Icon name to use for the scroll right button */\n  protected static readonly scrollIconRight: string = 'angle-right';\n\n  /** Icon set to use for the scroll buttons */\n  protected static readonly scrollIconSet: string = 'fas';\n\n  private static instances = new Set<RhTabs>();\n\n  /**\n   * Label for the scroll left button\n   */\n  @property({ reflect: true, attribute: 'label-scroll-left' }) labelScrollLeft = 'Scroll left';\n\n  /**\n   * Label for the scroll right button\n   */\n  @property({ reflect: true, attribute: 'label-scroll-right' }) labelScrollRight = 'Scroll right';\n\n  /**\n   * Tabs can be either [automatic](https://w3c.github.io/aria-practices/examples/tabs/tabs-automatic.html) activated\n   * or [manual](https://w3c.github.io/aria-practices/examples/tabs/tabs-manual.html)\n   */\n  @property({ reflect: true, type: Boolean }) manual = false;\n\n  /**\n   * Index of the active tab\n   */\n  @property({ attribute: false })\n  get activeIndex() {\n    return this.#activeIndex;\n  }\n\n  set activeIndex(index: number) {\n    const oldIndex = this.activeIndex;\n    const tab = this.#allTabs[index];\n    if (tab) {\n      if (tab.disabled) {\n        this.#logger.warn(`Disabled tabs can not be active, setting first focusable tab to active`);\n        this.#tabindex.updateActiveItem(this.#firstFocusable);\n        index = this.#activeItemIndex;\n      } else if (!tab.active) {\n        // if the activeIndex was set through the CLI e.g.`$0.activeIndex = 2`\n        tab.active = true;\n        return;\n      }\n    }\n\n    if (index === -1) {\n      this.#logger.warn(`No active tab found, setting first focusable tab to active`);\n      const first = this.#tabindex.firstItem;\n      this.#tabindex.updateActiveItem(first);\n      index = this.#activeItemIndex;\n    }\n    this.#activeIndex = index;\n    this.requestUpdate('activeIndex', oldIndex);\n\n    this.#allPanels[this.#activeIndex].hidden = false;\n    // close all tabs that are not the activeIndex\n    this.#deactivateExcept(this.#activeIndex);\n  }\n\n  /**\n   * Sets color context for child components, overrides parent context\n   */\n  @colorContextProvider()\n  @property({ reflect: true, attribute: 'color-palette' }) colorPalette?: ColorPalette;\n\n  /**\n   * Aligns tabs to the center\n   */\n  @property({ reflect: true, type: Boolean }) centered? = false;\n\n  /**\n   * Sets the theme for the tabs and panels\n   * @deprecated attribute will be removed in future release, please use the `--rh-tabs-active-border-color` css property directly.\n   */\n  @cascades('rh-tab')\n  @deprecation({\n    alias: 'css property --rh-tabs-active-border-color',\n    reflect: true,\n    attribute: 'theme',\n  }) theme?: 'base' | null = null;\n\n  /**\n   * Sets tabs to a boxed style with or without an inset\n   */\n  @cascades('rh-tab', 'rh-tab-panel')\n  @property({ reflect: true }) box?: 'box' | 'inset' | null = null;\n\n  /**\n   * Sets the alignment of the tabs vertical\n   */\n  @cascades('rh-tab', 'rh-tab-panel')\n  @property({ reflect: true, type: Boolean }) vertical = false;\n\n  protected get canShowScrollButtons(): boolean {\n    return !this.vertical;\n  }\n\n  /**\n   * Sets color theme based on parent context\n   */\n  @colorContextConsumer() private on?: ColorTheme;\n\n  get #activeTab() {\n    const [tab] = this.#_allTabs.filter(tab => tab.active);\n    return tab;\n  }\n\n  get #allTabs() {\n    return this.#_allTabs;\n  }\n\n  set #allTabs(tabs: RhTab[]) {\n    this.#_allTabs = tabs.filter(tab => (this.constructor as typeof RhTabs).isTab(tab));\n  }\n\n  get #allPanels() {\n    return this.#_allPanels;\n  }\n\n  set #allPanels(panels: RhTabPanel[]) {\n    this.#_allPanels = panels.filter(panel => (this.constructor as typeof RhTabs).isPanel(panel));\n  }\n\n  @queryAssignedElements({ slot: 'tab' }) private tabs!: RhTab[];\n\n  @queryAssignedElements() private panels!: RhTabPanel[];\n\n  @query('[part=\"tabs\"]') private tabList!: HTMLElement;\n\n  #tabindex = new RovingTabindexController<RhTab>(this);\n\n  #overflow = new OverflowController(this);\n\n  #logger = new Logger(this);\n\n  #_allTabs: RhTab[] = [];\n\n  #_allPanels: RhTabPanel[] = [];\n\n  #activeIndex = 0;\n\n  get #firstFocusable(): RhTab | undefined {\n    return this.#tabindex.firstItem;\n  }\n\n  get #firstTab(): RhTab | undefined {\n    const [tab] = this.#allTabs;\n    return tab;\n  }\n\n  get #lastTab(): RhTab | undefined {\n    return this.#allTabs.at(-1);\n  }\n\n  get #activeItemIndex() {\n    const { activeItem } = this.#tabindex;\n    return this.#allTabs.findIndex(t => t === activeItem);\n  }\n\n\n  override connectedCallback() {\n    super.connectedCallback();\n    this.id ||= getRandomId(this.localName);\n    this.addEventListener('expand', this.#onTabExpand);\n    RhTabs.instances.add(this);\n  }\n\n  override disconnectedCallback(): void {\n    super.disconnectedCallback();\n    RhTabs.instances.delete(this);\n  }\n\n  override willUpdate(): void {\n    const { activeItem } = this.#tabindex;\n    // If RTI has an activeItem, update the roving tabindex controller\n    if (!this.manual &&\n        activeItem &&\n        activeItem !== this.#activeTab &&\n        activeItem.ariaDisabled !== 'true') {\n      activeItem.active = true;\n    }\n  }\n\n  async firstUpdated() {\n    this.tabList.addEventListener('scroll', this.#overflow.onScroll.bind(this));\n  }\n\n  override render() {\n    const { on = '' } = this;\n    const { scrollIconSet, scrollIconLeft, scrollIconRight } = this.constructor as typeof RhTabs;\n    return html`\n      <div id=\"rhds-container\" class=\"${classMap({ [on]: !!on })}\">\n        <div part=\"container\" class=\"${classMap({ overflow: this.#overflow.showScrollButtons })}\">\n          <div part=\"tabs-container\">${!this.#overflow.showScrollButtons ? '' : html`\n            <button id=\"previousTab\" tabindex=\"-1\"\n                aria-label=\"${this.getAttribute('label-scroll-left') ?? 'Scroll left'}\"\n                ?disabled=\"${!this.#overflow.overflowLeft}\"\n                @click=\"${this.#scrollLeft}\">\n              <pf-icon icon=\"${scrollIconLeft}\" set=\"${scrollIconSet}\" loading=\"eager\"></pf-icon>\n            </button>`}\n            <slot name=\"tab\"\n                  part=\"tabs\"\n                  role=\"tablist\"\n                  @slotchange=\"${this.#onSlotchange}\"></slot> ${!this.#overflow.showScrollButtons ? '' : html`\n            <button id=\"nextTab\" tabindex=\"-1\"\n                aria-label=\"${this.getAttribute('label-scroll-right') ?? 'Scroll right'}\"\n                ?disabled=\"${!this.#overflow.overflowRight}\"\n                @click=\"${this.#scrollRight}\">\n              <pf-icon icon=\"${scrollIconRight}\" set=\"${scrollIconSet}\" loading=\"eager\"></pf-icon>\n            </button>`}\n          </div>\n          <slot part=\"panels\" @slotchange=\"${this.#onSlotchange}\"></slot>\n        </div>\n      </div>\n    `;\n  }\n\n  #onSlotchange(event: { target: { name: string } }) {\n    if (event.target.name === 'tab') {\n      this.#allTabs = this.tabs;\n    } else {\n      this.#allPanels = this.panels;\n    }\n\n    if ((this.#allTabs.length === this.#allPanels.length) &&\n      (this.#allTabs.length !== 0 || this.#allPanels.length !== 0)) {\n      this.#updateAccessibility();\n      this.#firstLastClasses();\n      this.#tabindex.initItems(this.#allTabs);\n      this.activeIndex = this.#allTabs.findIndex(tab => tab.active);\n      this.#tabindex.updateActiveItem(this.#activeTab);\n      this.#overflow.init(this.tabList, this.#allTabs);\n    }\n  }\n\n  #updateAccessibility(): void {\n    this.#allTabs.forEach((tab, index) => {\n      const panel = this.#allPanels[index];\n      if (!panel.hasAttribute('aria-labelledby')) {\n        panel.setAttribute('aria-labelledby', tab.id);\n      }\n      tab.setAttribute('aria-controls', panel.id);\n    });\n  }\n\n  #onTabExpand = (event: Event): void => {\n    if (!(event instanceof TabExpandEvent) ||\n        !this.#allTabs.length ||\n        !this.#allPanels.length) {\n      return;\n    }\n\n    if (event.active) {\n      if (event.tab !== this.#tabindex.activeItem) {\n        this.#tabindex.updateActiveItem(event.tab);\n      }\n      this.activeIndex = this.#allTabs.findIndex(tab => tab === event.tab);\n    }\n  };\n\n  #deactivateExcept(index: number) {\n    this.#allTabs.forEach((tab, i) => tab.active = i === index);\n    this.#allPanels.forEach((panel, i) => panel.hidden = i !== index);\n  }\n\n  #firstLastClasses() {\n    this.#firstTab?.classList.add('first');\n    this.#lastTab?.classList.add('last');\n  }\n\n  #scrollLeft() {\n    this.#overflow.scrollLeft();\n  }\n\n  #scrollRight() {\n    this.#overflow.scrollRight();\n  }\n\n  // Moved to bottom of file to avoid Custom Element Manifest from incorrectly\n  // parsing the file due to the static block. This block will be removed from\n  // rh-tab.ts after PFE 3.0 is released and we migrate to the TabsController.\n  static {\n    // on resize check for overflows to add or remove scroll buttons\n    window.addEventListener('resize', () => {\n      for (const instance of RhTabs.instances) {\n        instance.#overflow.onScroll();\n      }\n    }, { capture: false });\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'rh-tabs': RhTabs;\n  }\n}\n"]}