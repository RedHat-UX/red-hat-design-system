{"version":3,"file":"rh-tab-panel.js","sourceRoot":"","sources":["rh-tab-panel.ts"],"names":[],"mappings":";AAAA,OAAO,EAAE,IAAI,EAAE,MAAM,KAAK,CAAC;AAC3B,OAAO,EAAE,aAAa,EAAE,MAAM,kCAAkC,CAAC;AACjE,OAAO,EAAE,QAAQ,EAAE,MAAM,4BAA4B,CAAC;AAEtD,OAAO,EAAE,QAAQ,EAAE,MAAM,6BAA6B,CAAC;AAEvD,OAAO,EAAE,YAAY,EAAE,MAAM,8CAA8C,CAAC;AAE5E,OAAO,EAAE,oBAAoB,EAAmB,MAAM,qCAAqC,CAAC;AAC5F,OAAO,EAAE,oBAAoB,EAAqB,MAAM,qCAAqC,CAAC;;;AAI9F;;;;;GAKG;AAEI,IAAM,UAAU,GAAhB,MAAM,UAAW,SAAQ,YAAY;IAgB1C,MAAM;QACJ,MAAM,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,IAAI,CAAC;QACzB,OAAO,IAAI,CAAA;wCACyB,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,KAAK,KAAK,CAAC,MAAM,EAAE;KAC9E,CAAC;IACJ,CAAC;;AApBe,kBAAO,GAAG,aAAa,CAAC;AAExB,iBAAM,GAAG,CAAC,MAAM,CAAC,CAAC;AAKV;IAAvB,oBAAoB,EAAE;sCAAyB;AAMS;IADxD,oBAAoB,EAAE;IACtB,QAAQ,CAAC,EAAE,OAAO,EAAE,IAAI,EAAE,SAAS,EAAE,eAAe,EAAE,CAAC;gDAA6B;AAd1E,UAAU;IADtB,aAAa,CAAC,cAAc,CAAC;GACjB,UAAU,CAsBtB;SAtBY,UAAU","sourcesContent":["import { html } from 'lit';\nimport { customElement } from 'lit/decorators/custom-element.js';\nimport { property } from 'lit/decorators/property.js';\n\nimport { classMap } from 'lit/directives/class-map.js';\n\nimport { BaseTabPanel } from '@patternfly/elements/pf-tabs/BaseTabPanel.js';\n\nimport { colorContextConsumer, type ColorTheme } from '../../lib/context/color/consumer.js';\nimport { colorContextProvider, type ColorPalette } from '../../lib/context/color/provider.js';\n\nimport styles from './rh-tab-panel.css';\n\n/**\n * The tab panel for use within a rh-tabs element, must be paired with a rh-tab.\n *\n * @slot - Panel content should follow guidelines for [tab panel content layout](../guidelines)\n *\n */\n@customElement('rh-tab-panel')\nexport class RhTabPanel extends BaseTabPanel {\n  static readonly version = '{{version}}';\n\n  static readonly styles = [styles];\n\n  /**\n   * Sets color theme based on parent context\n   */\n  @colorContextConsumer() private on?: ColorTheme;\n\n  /**\n   * Sets color context for child components, overrides parent context\n   */\n  @colorContextProvider()\n  @property({ reflect: true, attribute: 'color-palette' }) colorPalette?: ColorPalette;\n\n  render() {\n    const { on = '' } = this;\n    return html`\n      <div id=\"rhds-container\" class=\"${classMap({ [on]: !!on })}\">${super.render()}</div>\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'rh-tab-panel': RhTabPanel;\n  }\n}\n"]}