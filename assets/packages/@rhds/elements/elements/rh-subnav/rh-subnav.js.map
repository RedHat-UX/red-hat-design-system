{"version":3,"file":"rh-subnav.js","sourceRoot":"","sources":["rh-subnav.ts"],"names":[],"mappings":"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","sourcesContent":["import { LitElement, html } from 'lit';\nimport { classMap } from 'lit/directives/class-map.js';\nimport { customElement } from 'lit/decorators/custom-element.js';\nimport { query } from 'lit/decorators/query.js';\nimport { queryAssignedElements } from 'lit/decorators/query-assigned-elements.js';\nimport { property } from 'lit/decorators/property.js';\n\nimport { RovingTabindexController } from '@patternfly/pfe-core/controllers/roving-tabindex-controller.js';\nimport { OverflowController } from '@patternfly/pfe-core/controllers/overflow-controller.js';\n\nimport { colorContextConsumer, type ColorTheme } from '../../lib/context/color/consumer.js';\nimport { colorContextProvider, type ColorPalette } from '../../lib/context/color/provider.js';\n\nimport '@patternfly/elements/pf-icon/pf-icon.js';\n\nimport styles from './rh-subnav.css';\n\n/**\n * Subnav provides a tabs-like navigation experience\n * @slot - Place navigation links here, expects collection of `<a>`\n *\n * @csspart container - container, <div> element\n * @csspart links     - <slot> element\n */\n@customElement('rh-subnav')\nexport class RhSubnav extends LitElement {\n  static readonly styles = [styles];\n\n  /** Icon name to use for the scroll left button */\n  protected static readonly scrollIconLeft: string = 'angle-left';\n\n  /** Icon name to use for the scroll right button */\n  protected static readonly scrollIconRight: string = 'angle-right';\n\n  /** Icon set to use for the scroll buttons */\n  protected static readonly scrollIconSet: string = 'fas';\n\n  private static instances = new Set<RhSubnav>();\n\n  static {\n    // on resize check for overflows to add or remove scroll buttons\n    window.addEventListener('resize', () => {\n      // this appears to be an eslint bug.\n      // `this` should refer to the class, but in the minified bundle, it is void\n      const { instances } = RhSubnav;\n      for (const instance of instances) {\n        instance.#overflow.onScroll();\n      }\n    }, { capture: false });\n  }\n\n  /**\n   * Sets color theme based on parent context\n   */\n  @colorContextConsumer() private on?: ColorTheme;\n\n  /**\n   * Sets color palette, which affects the element's styles as well as descendants' color theme.\n   * Overrides parent color context.\n   * Your theme will influence these colors so check there first if you are seeing inconsistencies.\n   * See [CSS Custom Properties](#css-custom-properties) for default values\n   */\n  @colorContextProvider()\n  @property({ reflect: true, attribute: 'color-palette' }) colorPalette?: ColorPalette;\n\n  @queryAssignedElements() private links!: HTMLAnchorElement[];\n\n  @query('[part=\"links\"]') private linkList!: HTMLElement;\n\n  #allLinkElements: HTMLAnchorElement[] = [];\n\n  #tabindex = new RovingTabindexController(this);\n\n  #overflow = new OverflowController(this);\n\n  get #allLinks() {\n    return this.#allLinkElements;\n  }\n\n  set #allLinks(links: HTMLAnchorElement[]) {\n    this.#allLinkElements = links.filter(link => link instanceof HTMLAnchorElement);\n  }\n\n  get #firstLink(): HTMLAnchorElement {\n    const [link] = this.#allLinks;\n    return link;\n  }\n\n  get #lastLink(): HTMLAnchorElement {\n    return this.#allLinks.at(-1) as HTMLAnchorElement;\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n    RhSubnav.instances.add(this);\n  }\n\n  disconnectedCallback() {\n    super.disconnectedCallback();\n    RhSubnav.instances.delete(this);\n  }\n\n  render() {\n    const { scrollIconSet, scrollIconLeft, scrollIconRight } = this.constructor as typeof RhSubnav;\n    const { showScrollButtons } = this.#overflow;\n    const { on = '' } = this;\n    return html`\n      <nav part=\"container\" class=\"${classMap({ [on]: !!on })}\">${!showScrollButtons ? '' : html`\n        <button id=\"previous\" tabindex=\"-1\" aria-hidden=\"true\"\n                ?disabled=\"${!this.#overflow.overflowLeft}\"\n                @click=\"${this.#scrollLeft}\">\n          <pf-icon size=\"sm\"\n                   icon=\"${scrollIconLeft}\"\n                   set=\"${scrollIconSet}\"\n                   loading=\"eager\"></pf-icon>\n        </button>`}\n        <slot part=\"links\"\n              @slotchange=\"${this.#onSlotchange}\"></slot>${!showScrollButtons ? '' : html`\n        <button id=\"next\" tabindex=\"-1\" aria-hidden=\"true\"\n                ?disabled=\"${!this.#overflow.overflowRight}\"\n                @click=\"${this.#scrollRight}\">\n          <pf-icon icon=\"${scrollIconRight}\" set=\"${scrollIconSet}\" loading=\"eager\"></pf-icon>\n        </button>`}\n      </nav>\n    `;\n  }\n\n  firstUpdated() {\n    this.linkList.addEventListener('scroll', this.#overflow.onScroll.bind(this));\n  }\n\n  #onSlotchange() {\n    this.#allLinks = this.links;\n    this.#firstLastClasses();\n    this.#tabindex.initItems(this.#allLinks);\n    this.#overflow.init(this.linkList, this.#allLinks);\n  }\n\n  #firstLastClasses() {\n    this.#firstLink.classList.add('first');\n    this.#lastLink.classList.add('last');\n  }\n\n  #scrollLeft() {\n    this.#overflow.scrollLeft();\n  }\n\n  #scrollRight() {\n    this.#overflow.scrollRight();\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'rh-subnav': RhSubnav;\n  }\n}\n"]}