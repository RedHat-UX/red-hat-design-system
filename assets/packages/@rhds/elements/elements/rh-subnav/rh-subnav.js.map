{"version":3,"file":"rh-subnav.js","sourceRoot":"","sources":["rh-subnav.ts"],"names":[],"mappings":"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","sourcesContent":["import { LitElement, html, isServer } from 'lit';\nimport { customElement } from 'lit/decorators/custom-element.js';\nimport { query } from 'lit/decorators/query.js';\nimport { property } from 'lit/decorators/property.js';\n\nimport { OverflowController } from '@patternfly/pfe-core/controllers/overflow-controller.js';\n\nimport '@rhds/elements/rh-icon/rh-icon.js';\n\nimport { colorPalettes, type ColorPalette } from '@rhds/elements/lib/color-palettes.js';\nimport { themable } from '@rhds/elements/lib/themable.js';\n\nimport styles from './rh-subnav.css';\nimport { SlotController } from '@patternfly/pfe-core/controllers/slot-controller.js';\n\n\n/**\n * A subnavigation allows users to navigate between a small number of page links.\n * @summary Organizes content into sections using tabbed pages\n * @slot - Navigation links, expects collection of `<a>` elements\n * @csspart container - container, `<div>` element\n * @csspart links     - `<slot>` element\n */\n@customElement('rh-subnav')\n@colorPalettes\n@themable\nexport class RhSubnav extends LitElement {\n  static readonly styles = [styles];\n\n  private static instances = new Set<RhSubnav>();\n\n  static {\n    // on resize check for overflows to add or remove scroll buttons\n    if (!isServer) {\n      globalThis.addEventListener('resize', () => {\n      // this appears to be an eslint bug.\n      // `this` should refer to the class, but in the minified bundle, it is void\n        const { instances } = RhSubnav;\n        for (const instance of instances) {\n          instance.#overflow.onScroll();\n        }\n      }, { capture: false });\n    }\n  }\n\n  #allLinkElements: HTMLAnchorElement[] = [];\n\n  #slots = new SlotController(this, null);\n\n  #overflow = new OverflowController(this);\n\n  /**\n   * Sets color palette, which affects the element's styles as well as descendants' color theme.\n   * Overrides parent color context.\n   * Your theme will influence these colors so check there first if you are seeing inconsistencies.\n   * See [CSS Custom Properties](#css-custom-properties) for default values\n   */\n  @property({ reflect: true, attribute: 'color-palette' }) colorPalette?: ColorPalette;\n\n  /**\n   * Customize the default `aria-label` on the `<nav>` container.\n   * Defaults to \"subnavigation\" if no attribute/property is set.\n   */\n  @property({ attribute: 'accessible-label' }) accessibleLabel = 'subnavigation';\n\n  @query('[part=\"links\"]') private linkList!: HTMLElement;\n\n\n  get #allLinks() {\n    return this.#allLinkElements;\n  }\n\n  set #allLinks(links: HTMLAnchorElement[]) {\n    this.#allLinkElements = links.filter(link => link instanceof HTMLAnchorElement);\n  }\n\n  get #firstLink(): HTMLAnchorElement {\n    const [link] = this.#allLinks;\n    return link;\n  }\n\n  get #lastLink(): HTMLAnchorElement {\n    return this.#allLinks.at(-1) as HTMLAnchorElement;\n  }\n\n  override connectedCallback() {\n    super.connectedCallback();\n    RhSubnav.instances.add(this);\n  }\n\n  override disconnectedCallback() {\n    super.disconnectedCallback();\n    RhSubnav.instances.delete(this);\n  }\n\n  protected override firstUpdated() {\n    this.linkList.addEventListener('scroll', this.#overflow.onScroll.bind(this));\n    this.#onSlotchange();\n  }\n\n  override render() {\n    return html`\n      <nav part=\"container\" aria-label=\"${this.accessibleLabel}\">\n        ${!this.#overflow.showScrollButtons ? '' : html`\n          <button id=\"previous\"\n                  tabindex=\"-1\"\n                  data-direction=\"start\"\n                  aria-label=\"${this.getAttribute('label-scroll-left') ?? 'Scroll back'}\"\n                  ?disabled=\"${!this.#overflow.overflowLeft}\"\n                  @click=\"${this.#onClickScroll}\">\n            <rh-icon set=\"ui\" icon=\"caret-left\" loading=\"eager\"></rh-icon>\n          </button>`}\n        <slot part=\"links\" @slotchange=\"${this.#onSlotchange}\"></slot>\n        ${!this.#overflow.showScrollButtons ? '' : html`\n          <button id=\"next\"\n                  tabindex=\"-1\"\n                  data-direction=\"end\"\n                  aria-label=\"${this.getAttribute('label-scroll-right') ?? 'Scroll forward'}\"\n                  ?disabled=\"${!this.#overflow.overflowRight}\"\n                  @click=\"${this.#onClickScroll}\">\n            <rh-icon set=\"ui\" icon=\"caret-right\" loading=\"eager\"></rh-icon>\n          </button>`}\n      </nav>\n    `;\n  }\n\n  async #onSlotchange() {\n    if (!isServer) {\n      this.#allLinks = this.#slots.getSlotted();\n      this.#overflow.init(this.linkList, this.#allLinks);\n      await this.updateComplete;\n      this.#firstLink?.classList.add('first');\n      this.#lastLink?.classList.add('last');\n    }\n  }\n\n  #onClickScroll(event: Event) {\n    if (event.target instanceof HTMLElement) {\n      switch (event.target.dataset.direction) {\n        case 'start':\n          if (this.matches(':dir(rtl)')) {\n            this.#overflow.scrollRight();\n          } else {\n            this.#overflow.scrollLeft();\n          }\n          break;\n        case 'end':\n          if (this.matches(':dir(rtl)')) {\n            this.#overflow.scrollLeft();\n          } else {\n            this.#overflow.scrollRight();\n          }\n          break;\n      }\n    }\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'rh-subnav': RhSubnav;\n  }\n}\n"]}