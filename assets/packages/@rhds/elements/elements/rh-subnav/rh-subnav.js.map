{"version":3,"file":"rh-subnav.js","sourceRoot":"","sources":["rh-subnav.ts"],"names":[],"mappings":"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","sourcesContent":["import { LitElement, html, isServer } from 'lit';\nimport { classMap } from 'lit/directives/class-map.js';\nimport { customElement } from 'lit/decorators/custom-element.js';\nimport { query } from 'lit/decorators/query.js';\nimport { queryAssignedElements } from 'lit/decorators/query-assigned-elements.js';\nimport { property } from 'lit/decorators/property.js';\n\nimport { OverflowController } from '@patternfly/pfe-core/controllers/overflow-controller.js';\n\nimport { colorContextConsumer, type ColorTheme } from '../../lib/context/color/consumer.js';\nimport { colorContextProvider } from '../../lib/context/color/provider.js';\n\nimport '@rhds/elements/rh-icon/rh-icon.js';\n\nimport styles from './rh-subnav.css';\n\n\n/**\n * A subnavigation allows users to navigate between a small number of page links.\n * @summary Organizes content into sections using tabbed pages\n * @slot - Navigation links, expects collection of `<a>` elements\n * @csspart container - container, `<div>` element\n * @csspart links     - `<slot>` element\n */\n@customElement('rh-subnav')\nexport class RhSubnav extends LitElement {\n  static readonly styles = [styles];\n\n  /** Icon name to use for the scroll left button */\n  protected static readonly scrollIconLeft = 'caret-left';\n\n  /** Icon name to use for the scroll right button */\n  protected static readonly scrollIconRight = 'caret-right';\n\n  /** Icon set to use for the scroll buttons */\n  protected static readonly scrollIconSet = 'ui';\n\n  private static instances = new Set<RhSubnav>();\n\n  static {\n    // on resize check for overflows to add or remove scroll buttons\n    if (!isServer) {\n      globalThis.addEventListener('resize', () => {\n      // this appears to be an eslint bug.\n      // `this` should refer to the class, but in the minified bundle, it is void\n        const { instances } = RhSubnav;\n        for (const instance of instances) {\n          instance.#overflow.onScroll();\n        }\n      }, { capture: false });\n    }\n  }\n\n  /**\n   * Sets color theme based on parent context\n   */\n  @colorContextConsumer() private on?: ColorTheme;\n\n  /**\n   * Sets color palette, which affects the element's styles as well as descendants' color theme.\n   * Overrides parent color context.\n   * Your theme will influence these colors so check there first if you are seeing inconsistencies.\n   * See [CSS Custom Properties](#css-custom-properties) for default values\n   */\n  @colorContextProvider()\n  @property({ reflect: true, attribute: 'color-palette' }) colorPalette = 'lighter';\n\n  /**\n   * Customize the default `aria-label` on the `<nav>` container.\n   * Defaults to \"subnavigation\" if no attribute/property is set.\n   */\n  @property({ attribute: 'accessible-label' }) accessibleLabel = 'subnavigation';\n\n  @queryAssignedElements() private links!: HTMLAnchorElement[];\n\n  @query('[part=\"links\"]') private linkList!: HTMLElement;\n\n  #allLinkElements: HTMLAnchorElement[] = [];\n\n  #overflow = new OverflowController(this);\n\n  get #allLinks() {\n    return this.#allLinkElements;\n  }\n\n  set #allLinks(links: HTMLAnchorElement[]) {\n    this.#allLinkElements = links.filter(link => link instanceof HTMLAnchorElement);\n  }\n\n  get #firstLink(): HTMLAnchorElement {\n    const [link] = this.#allLinks;\n    return link;\n  }\n\n  get #lastLink(): HTMLAnchorElement {\n    return this.#allLinks.at(-1) as HTMLAnchorElement;\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n    RhSubnav.instances.add(this);\n  }\n\n  disconnectedCallback() {\n    super.disconnectedCallback();\n    RhSubnav.instances.delete(this);\n  }\n\n  render() {\n    const { scrollIconSet, scrollIconLeft, scrollIconRight } = this.constructor as typeof RhSubnav;\n    const { showScrollButtons } = this.#overflow;\n    const { on = '' } = this;\n    return html`\n      <nav part=\"container\" aria-label=\"${this.accessibleLabel}\" class=\"${classMap({ [on]: !!on })}\">${!showScrollButtons ? '' : html`\n        <button id=\"previous\" tabindex=\"-1\" aria-hidden=\"true\"\n                ?disabled=\"${!this.#overflow.overflowLeft}\"\n                @click=\"${this.#scrollLeft}\">\n          <rh-icon icon=\"${scrollIconLeft}\"\n                   set=\"${scrollIconSet}\"\n                   loading=\"eager\"></rh-icon>\n        </button>`}\n        <slot part=\"links\"\n              @slotchange=\"${this.#onSlotchange}\"></slot>${!showScrollButtons ? '' : html`\n        <button id=\"next\" tabindex=\"-1\" aria-hidden=\"true\"\n                ?disabled=\"${!this.#overflow.overflowRight}\"\n                @click=\"${this.#scrollRight}\">\n          <rh-icon icon=\"${scrollIconRight}\" set=\"${scrollIconSet}\" loading=\"eager\"></rh-icon>\n        </button>`}\n      </nav>\n    `;\n  }\n\n  firstUpdated() {\n    this.linkList.addEventListener('scroll', this.#overflow.onScroll.bind(this));\n  }\n\n  #onSlotchange() {\n    this.#allLinks = this.links;\n    this.#overflow.init(this.linkList, this.#allLinks);\n    this.#firstLastClasses();\n  }\n\n  #firstLastClasses() {\n    this.#firstLink.classList.add('first');\n    this.#lastLink.classList.add('last');\n  }\n\n  #scrollLeft() {\n    this.#overflow.scrollLeft();\n  }\n\n  #scrollRight() {\n    this.#overflow.scrollRight();\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'rh-subnav': RhSubnav;\n  }\n}\n"]}