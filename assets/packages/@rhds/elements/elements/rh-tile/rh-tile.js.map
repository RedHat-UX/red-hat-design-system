{"version":3,"file":"rh-tile.js","sourceRoot":"","sources":["rh-tile.ts"],"names":[],"mappings":"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","sourcesContent":["import { LitElement, html, type PropertyValueMap } from 'lit';\nimport { classMap } from 'lit/directives/class-map.js';\nimport { customElement } from 'lit/decorators/custom-element.js';\nimport { property } from 'lit/decorators/property.js';\nimport { colorContextConsumer, type ColorTheme } from '../../lib/context/color/consumer.js';\nimport { colorContextProvider, type ColorPalette } from '../../lib/context/color/provider.js';\nimport { InternalsController } from '@patternfly/pfe-core/controllers/internals-controller.js';\nimport { ComposedEvent } from '@patternfly/pfe-core';\n\nimport '@patternfly/elements/pf-icon/pf-icon.js';\n\nimport styles from './rh-tile.css';\nimport { state } from 'lit/decorators/state.js';\n\nexport class TileSelectEvent extends ComposedEvent {\n  declare target: RhTile;\n  constructor() {\n    super('select');\n  }\n}\n\n/**\n * A tile is a flexible layout with a clickable and contained surface.\n *\n * @summary Creates a clickable, contained surface\n *\n * @fires {TileSelectEvent} select - when tile is clicked\n * @slot image - optional image on top of tile\n * @slot icon - optional icon\n * @slot title - optional title\n * @slot headline - optional headline / link title\n * @slot - optional body content\n * @slot footer - optional footer\n * @cssprop --rh-tile-text-color - color of text - {@default var(--rh-color-text-primary-on-light, #151515)}\n * @cssprop --rh-tile-text-color-secondary - disabled text and icons - {@default var(--rh-color-text-secondary-on-light, #4d4d4d)}\n * @cssprop --rh-tile-interactive-color - color of interactive elements - {@default var(--rh-color-border-interactive-on-light, #0066cc)}\n * @cssprop --rh-tile-link-color - color of tile link - {@default var(--rh-tile-interactive-color)}\n * @cssprop --rh-tile-link-text-decoration - tile link text decoration - {@default none}\n * @cssprop --rh-tile-background-color - color tile surface - {@default var(--rh-color-surface-lightest, #ffffff)}\n * @cssprop --rh-tile-focus-background-color - color tile surface on focus/hover - {@default var(--rh-color-surface-lighter, #f2f2f2)}\n * @cssprop --rh-tile-disabled-background-color - color tile surface when disabled - {@default var(--rh-color-surface-light, #e0e0e0)}\n * @cssprop --rh-tile-border-color - color of tile border - {@default var(--rh-color-border-subtle-on-light, #c7c7c7)}\n */\n@customElement('rh-tile')\nexport class RhTile extends LitElement {\n  static readonly styles = [styles];\n\n  private static readonly _disabledIcon = html`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"48\" height=\"48\" viewBox=\"0 0 48 48\"><g id=\"uuid-0fd9e805-a455-40ef-9171-f2f334832bf2\"><rect width=\"48\" height=\"48\" fill=\"none\"/></g><g id=\"uuid-48f9e284-0601-4fcd-bbe7-8b444234ac6c\"><path d=\"m24,7c-9.37,0-17,7.63-17,17s7.63,17,17,17,17-7.63,17-17S33.37,7,24,7Zm15,17c0,3.52-1.23,6.76-3.27,9.32L14.68,12.27c2.56-2.04,5.8-3.27,9.32-3.27,8.27,0,15,6.73,15,15Zm-30,0c0-4.03,1.61-7.69,4.2-10.38l21.18,21.18c-2.7,2.6-6.35,4.2-10.38,4.2-8.27,0-15-6.73-15-15Z\"/></g></svg>`;\n\n  /**\n   * whether tile interaction is disabled\n   */\n  @property({ reflect: true, attribute: 'disabled', type: Boolean }) disabled = false;\n\n  // TODO(bennyp): https://lit.dev/docs/data/context/#content\n  @state() private disabledGroup = false;\n\n  // TODO(bennyp): https://lit.dev/docs/data/context/#content\n  @state() private radioGroup = false;\n\n  /**\n   * whether image is full-width (i.e. bleeds into the padding)\n   */\n  @property({ attribute: 'bleed', type: Boolean }) bleed = false;\n\n  /**\n   * whether headline link text is a desaturated color instead of blue;\n   * `true` sets headline color to white on dark tiles or black on light tiles\n   */\n  @property({ attribute: 'desaturated', type: Boolean }) desaturated = false;\n\n  /**\n   * reduces tile padding for more compact spaces\n   */\n  @property({ attribute: 'compact', type: Boolean }) compact = false;\n\n  /**\n   * namespace of icon\n   */\n  @property({ attribute: 'icon', type: String }) icon = false;\n\n  /**\n   * whether tile can be checked like a radio or checkbox:\n   * `false` (default) - tile behaves like a link;\n   * `true` - tile behaves like a checkbox unless it is part of an\n   * `rh-tile-group` with a `radio` type and more than one tile\n   */\n  @property({ type: Boolean }) checkable = false;\n\n  /**\n   * if tile is checkable, whether it is currently checked\n   */\n  @property({ attribute: 'checked', type: Boolean }) checked = false;\n\n  /**\n   * Sets color theme based on parent context\n   */\n  @colorContextConsumer() private on?: ColorTheme;\n\n  /**\n   * Sets color palette, which affects the element's styles as well as descendants' color theme.\n   * Overrides parent color context.\n   * Your theme will influence these colors so check there first if you are seeing inconsistencies.\n   * See [CSS Custom Properties](#css-custom-properties) for default values\n   *\n   * Tile always resets its context to `base`, unless explicitly provided with a `color-palette`.\n   */\n  @colorContextProvider()\n  @property({ reflect: true, attribute: 'color-palette' }) colorPalette?: ColorPalette;\n\n  #internals = new InternalsController(this, { });\n\n  connectedCallback(): void {\n    super.connectedCallback();\n    this.#internals.ariaChecked = this.checkable && this.checked ? 'true' : 'false';\n    this.#internals.role = this.checkable && this.radioGroup ? 'radio' : this.checkable ? 'checkbox' : null;\n    if (this.checkable && !this.radioGroup) {\n      this.setAttribute('tabindex', '0');\n    } else if (!this.radioGroup) {\n      this.removeAttribute('tabindex');\n    }\n    this.addEventListener('keydown', this.#onKeydown);\n    this.addEventListener('keyup', this.#onKeyup);\n    this.addEventListener('click', this.#onClick);\n  }\n\n  protected async updated(_changedProperties: PropertyValueMap<any> | Map<PropertyKey, unknown>) {\n    if (_changedProperties.has('checked') || _changedProperties.has('checkable')) {\n      this.#internals.ariaChecked = this.checkable && this.checked ? 'true' : 'false';\n      await this.updateComplete;\n      if (!this.checked) {\n        this.shadowRoot?.querySelector('form')?.reset();\n      }\n      this.dispatchEvent(new TileSelectEvent());\n      return;\n    }\n\n    if (_changedProperties.has('radio') || _changedProperties.has('checkable')) {\n      this.#internals.role = this.checkable && this.radioGroup ? 'radio' : this.checkable ? 'checkbox' : null;\n      if (this.checkable && !this.radioGroup) {\n        this.setAttribute('tabindex', '0');\n      } else if (!this.radioGroup) {\n        this.removeAttribute('tabindex');\n      }\n    }\n\n    if (_changedProperties.has('disabled')) {\n      this.#internals.ariaDisabled = this.disabled ? 'true' : 'false';\n    }\n  }\n\n  render() {\n    const { bleed, compact, checkable, checked, desaturated, on = '' } = this;\n    const disabled = this.disabledGroup || this.disabled;\n    return html`\n      <div id=\"outer\" class=\"${classMap({\n            bleed,\n            checkable,\n            compact,\n            checked,\n            desaturated,\n            disabled,\n            [on]: !!on,\n          })}\">\n        ${this.checkable ? '' : html`<div id=\"image\"><slot name=\"image\"></slot></div>`}\n        <div id=\"inner\">\n          ${!this.checkable ?\n            html`\n              <div id=\"icon\">\n                <slot name=\"icon\">\n                  ${!this.icon ? '' : html`<pf-icon icon=\"${this.icon}\" size=\"md\" set=\"far\"></pf-icon>`}\n                </slot>\n              </div>` : ''}\n          <div id=\"content\">\n            <div id=\"header\">\n              ${(!this.checkable && !this.compact) ?\n                 html`\n                   <div id=\"title\">\n                    <slot name=\"title\"></slot>\n                   </div>` : ''}\n              <div id=\"headline\"><slot name=\"headline\"></slot></div>\n              ${!this.checkable ? '' : html`\n                <form id=\"form\" aria-hidden=\"true\">\n                    <input \n                      type=\"${this.radioGroup ? 'radio' : 'checkbox'}\" \n                      tabindex=\"-1\"\n                      ?checked=${this.checked}\n                      ?disabled=${this.disabled}>\n                </form>\n              `}\n            </div>\n            <div id=\"body\"><slot></slot></div>\n            <div id=\"footer\">\n              <div id=\"footer-text\"><slot name=\"footer\"></slot></div>\n              ${!this.checkable && !this.disabled ?\n                html`<pf-icon icon=\"arrow-right\" size=\"md\" set=\"fas\"></pf-icon>` : !this.checkable ?\n                RhTile._disabledIcon : ''}\n            </div>\n          </div>\n        </div>\n      </div>\n    `;\n  }\n\n  disconnectedCallback(): void {\n    this.removeEventListener('keydown', this.#onKeydown);\n    this.removeEventListener('keyup', this.#onKeyup);\n    this.removeEventListener('click', this.#onClick);\n    super.disconnectedCallback();\n  }\n\n  /**\n   * handles tile click\n   */\n  #onClick(event: Event) {\n    const { target } = event;\n    if (target === this && this.checkable) {\n      this.checked = !this.checked;\n    }\n  }\n\n  /**\n   * handles keydown and prevents scrolling when spacebar is clicked\n   * @param event {KeyboardEvent}\n   */\n  #onKeydown(event: KeyboardEvent) {\n    const { target, key } = event;\n    if (key === ' ' && target === this && this.checkable) {\n      event.preventDefault();\n      event.stopImmediatePropagation();\n    }\n  }\n\n  /**\n   * handles key up and toggles input\n   * @param event {KeyboardEvent}\n   */\n  #onKeyup(event: KeyboardEvent) {\n    const { target, key } = event;\n    if (['Enter', ' '].includes(key) && target === this && this.checkable && !this.disabled && !this.disabledGroup) {\n      this.checked = !this.checked;\n    }\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'rh-tile': RhTile;\n  }\n}\n"]}