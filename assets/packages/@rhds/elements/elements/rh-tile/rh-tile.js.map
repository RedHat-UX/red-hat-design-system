{"version":3,"file":"rh-tile.js","sourceRoot":"","sources":["rh-tile.ts"],"names":[],"mappings":"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","sourcesContent":["import type { RhTileGroup } from './rh-tile-group.js';\n\nimport { LitElement, html, type PropertyValues } from 'lit';\nimport { classMap } from 'lit/directives/class-map.js';\nimport { customElement } from 'lit/decorators/custom-element.js';\nimport { property } from 'lit/decorators/property.js';\nimport { state } from 'lit/decorators/state.js';\nimport { ifDefined } from 'lit/directives/if-defined.js';\n\nimport { InternalsController } from '@patternfly/pfe-core/controllers/internals-controller.js';\nimport { Logger } from '@patternfly/pfe-core/controllers/logger.js';\n\nimport '@patternfly/elements/pf-icon/pf-icon.js';\n\nimport { colorContextConsumer, type ColorTheme } from '../../lib/context/color/consumer.js';\nimport { colorContextProvider, type ColorPalette } from '../../lib/context/color/provider.js';\n\nimport styles from './rh-tile.css';\n\nexport class TileSelectEvent extends Event {\n  declare target: RhTile;\n  constructor(public force?: boolean) {\n    super('select', { bubbles: true, cancelable: true });\n  }\n}\n\n/**\n * A tile is a flexible layout with a clickable and contained surface.\n *\n * @summary Creates a clickable, contained surface\n *\n * @fires {TileSelectEvent} select - when tile is clicked\n * @slot image - optional image on top of tile\n * @slot icon - optional icon\n * @slot title - optional title\n * @slot headline - optional headline / link title\n * @slot - optional body content\n * @slot footer - optional footer\n * @cssprop --rh-tile-text-color - color of text - {@default var(--rh-color-text-primary-on-light, #151515)}\n * @cssprop --rh-tile-text-color-secondary - disabled text and icons - {@default var(--rh-color-text-secondary-on-light, #4d4d4d)}\n * @cssprop --rh-tile-interactive-color - color of interactive elements - {@default var(--rh-color-border-interactive-on-light, #0066cc)}\n * @cssprop --rh-tile-link-color - color of tile link - {@default var(--rh-tile-interactive-color)}\n * @cssprop --rh-tile-link-text-decoration - tile link text decoration - {@default none}\n * @cssprop --rh-tile-background-color - color tile surface - {@default var(--rh-color-surface-lightest, #ffffff)}\n * @cssprop --rh-tile-focus-background-color - color tile surface on focus/hover - {@default var(--rh-color-surface-lighter, #f2f2f2)}\n * @cssprop --rh-tile-disabled-background-color - color tile surface when disabled - {@default var(--rh-color-surface-light, #e0e0e0)}\n * @cssprop --rh-tile-border-color - color of tile border - {@default var(--rh-color-border-subtle-on-light, #c7c7c7)}\n */\n@customElement('rh-tile')\nexport class RhTile extends LitElement {\n  static readonly styles = [styles];\n\n  static readonly formAssociated = true;\n\n  declare shadowRoot: ShadowRoot;\n\n  /**\n   * Whether image is full-width (i.e. bleeds into the padding)\n   */\n  @property({ type: Boolean }) bleed = false;\n\n  /**\n   * Whether headline link text is a desaturated color instead of blue;\n   * `true` sets headline color to white on dark tiles or black on light tiles\n   */\n  @property({ type: Boolean }) desaturated = false;\n\n  /**\n   * Reduces tile padding for more compact spaces\n   */\n  @property({ type: Boolean }) compact = false;\n\n  /**\n   * Icon (must be a member of the fontawesome \"far\" icon set)\n   */\n  @property() icon?: string;\n\n  /**\n   * When checkable, the accessible (visually hidden) label for the form control\n   * If not set, the text content of the tile element will be used instead.\n   * @example Setting an accessible label when there is no text content\n   *          ```html\n   *          <form>\n   *            <rh-tile-group radio>\n   *              <rh-tile name=\"radio\" value=\"1\">Tile 1</rh-tile>\n   *              <rh-tile name=\"radio\" value=\"2\">Tile 2</rh-tile>\n   *              <rh-tile name=\"radio\"\n   *                       value=\"3\"\n   *                       accessible-label=\"Tile 3\">\n   *                <img slot=\"image\"\n   *                     role=\"presentation\"\n   *                     src=\"tile-3.webp\">\n   *              </rh-tile>\n   *            </rh-tile-group>\n   *          </form>\n   *          ```\n   */\n  @property({ attribute: 'accessible-label' }) accessibleLabel?: string;\n\n  /** Form name */\n  @property() name?: string;\n\n  /** Form value */\n  @property() value?: string;\n\n  /**\n   * When true, tile behaves like a checkbox unless it is part of an\n   * `<rh-tile-group radio>`, in which case it behaves like a radio button\n   */\n  @property({ type: Boolean }) checkable = false;\n\n  /**\n   * If tile is checkable, whether it is currently checked\n   */\n  @property({ type: Boolean, reflect: true }) checked = false;\n\n  /**\n   * Whether tile interaction is disabled\n   */\n  @property({ type: Boolean, reflect: true }) disabled = false;\n\n  /**\n   * Sets color palette, which affects the element's styles as well as descendants' color theme.\n   * Overrides parent color context.\n   * Your theme will influence these colors so check there first if you are seeing inconsistencies.\n   * See [CSS Custom Properties](#css-custom-properties) for default values\n   *\n   * Tile always resets its context to `base`, unless explicitly provided with a `color-palette`.\n   */\n  @colorContextProvider()\n  @property({ reflect: true, attribute: 'color-palette' }) colorPalette?: ColorPalette;\n\n  /**\n   * Sets color theme based on parent context\n   */\n  @colorContextConsumer() private on?: ColorTheme;\n\n  // TODO(bennyp): https://lit.dev/docs/data/context/#content\n  @state() private disabledGroup = false;\n\n  // TODO(bennyp): https://lit.dev/docs/data/context/#content\n  @state() private radioGroup = false;\n\n  #internals = new InternalsController(this);\n\n  #logger = new Logger(this);\n\n  get #isCheckable() {\n    return !!this.radioGroup || this.checkable;\n  }\n\n  get #input(): HTMLInputElement | null {\n    return this.shadowRoot.getElementById('input') as HTMLInputElement;\n  }\n\n  constructor() {\n    super();\n    this.addEventListener('keydown', this.#onKeydown);\n    this.addEventListener('keyup', this.#onKeyup);\n    this.addEventListener('click', this.#onClick);\n  }\n\n  /** Update the internal accessible representation of the element's state */\n  override async willUpdate(changed: PropertyValues<this>) {\n    this.#internals.role = this.radioGroup ? 'radio' : this.checkable ? 'checkbox' : null;\n    this.#internals.ariaChecked = !this.#isCheckable ? null : String(!!this.checked);\n    this.#internals.ariaDisabled = !this.#isCheckable ? null : String(!!this.disabled);\n    this.#internals.ariaLabel = !(this.#isCheckable && this.accessibleLabel) ? null : this.accessibleLabel;\n    if (changed.has('value') || changed.has('checked')) {\n      const formValue = this.#isCheckable && this.checked ? this.value ?? null : null;\n      this.#internals.setFormValue(formValue);\n    }\n    if (this.checkable && !this.radioGroup) {\n      this.setAttribute('tabindex', '0');\n    } else if (!this.radioGroup) {\n      this.removeAttribute('tabindex');\n    }\n  }\n\n  render() {\n    const { bleed, compact, checkable, checked, desaturated, on = '' } = this;\n    const disabled = this.disabledGroup || this.disabled || this.#internals.formDisabled;\n    return html`\n      <div id=\"outer\" class=\"${classMap({\n            bleed,\n            checkable,\n            compact,\n            checked,\n            desaturated,\n            disabled,\n            [on]: !!on,\n          })}\">\n        <slot id=\"image\"\n              name=\"image\"\n              ?hidden=\"${this.checkable}\"\n        ></slot>\n        <div id=\"inner\">\n          <slot id=\"icon\"\n                name=\"icon\"\n                ?hidden=\"${!this.icon}\">\n            <pf-icon icon=\"${ifDefined(this.icon)}\"\n                     size=\"md\"\n                     set=\"far\"\n            ></pf-icon>\n          </slot>\n          <div id=\"content\">\n            <div id=\"header\">\n              <slot id=\"title\"\n                    name=\"title\"\n                    ?hidden=\"${this.checkable || this.compact}\"></slot>\n              <slot id=\"headline\" name=\"headline\"></slot>\n              <div id=\"input-outer\" aria-hidden=\"true\" ?hidden=\"${!this.#isCheckable}\" ?inert=\"${!this.#isCheckable}\">\n                <input id=\"input\"\n                       type=\"${this.radioGroup ? 'radio' : 'checkbox'}\"\n                       tabindex=\"-1\"\n                       ?checked=\"${checked}\"\n                       ?disabled=\"${disabled}\"></input>\n              </div>\n            </div>\n            <slot id=\"body\"></slot>\n            <div id=\"footer\">\n              <slot id=\"footer-text\" name=\"footer\"></slot>${!this.checkable && !this.disabled ? html`\n              <pf-icon icon=\"arrow-right\" size=\"md\" set=\"fas\"></pf-icon>` : !this.checkable ? html`\n              <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"48\" height=\"48\" viewBox=\"0 0 48 48\"><g id=\"uuid-0fd9e805-a455-40ef-9171-f2f334832bf2\"><rect width=\"48\" height=\"48\" fill=\"none\"/></g><g id=\"uuid-48f9e284-0601-4fcd-bbe7-8b444234ac6c\"><path d=\"m24,7c-9.37,0-17,7.63-17,17s7.63,17,17,17,17-7.63,17-17S33.37,7,24,7Zm15,17c0,3.52-1.23,6.76-3.27,9.32L14.68,12.27c2.56-2.04,5.8-3.27,9.32-3.27,8.27,0,15,6.73,15,15Zm-30,0c0-4.03,1.61-7.69,4.2-10.38l21.18,21.18c-2.7,2.6-6.35,4.2-10.38,4.2-8.27,0-15-6.73-15-15Z\"/></g></svg>` : ''}\n            </div>\n          </div>\n        </div>\n      </div>\n    `;\n  }\n\n  async formDisabledCallback() {\n    await this.updateComplete;\n    this.requestUpdate();\n  }\n\n  async formStateRestoreCallback(state: string, mode: string) {\n    if (this.checkable && mode === 'restore') {\n      const [maybeControlMode, maybeValue] = state.split('/');\n      if (maybeValue ?? maybeControlMode === this.value) {\n        this.#requestSelect(!!this.radioGroup ?? true);\n      }\n    }\n  }\n\n  #setValidityFromInput() {\n    if (!this.#input) {\n      this.#logger.warn('await updateComplete before validating');\n    } else {\n      this.#internals.setValidity(\n        this.#input.validity,\n        this.#input.validationMessage,\n      );\n    }\n  }\n\n  setCustomValidity(message: string) {\n    this.#internals.setValidity({}, message);\n  }\n\n  checkValidity() {\n    this.#setValidityFromInput();\n    return this.#internals.checkValidity();\n  }\n\n  reportValidity() {\n    this.#setValidityFromInput();\n    return this.#internals.reportValidity();\n  }\n\n  /**\n   * handles tile click\n   */\n  #onClick(event: Event) {\n    if (event.target === this) {\n      this.#requestSelect();\n    }\n  }\n\n  #requestSelect(force?: boolean) {\n    if (this.checkable &&\n        !this.disabled &&\n        !this.disabledGroup) {\n      if (this.radioGroup) {\n        this.dispatchEvent(new TileSelectEvent(force));\n      } else {\n        this.checked = !this.checked;\n      }\n    }\n  }\n\n  /**\n   * Prevent scrolling when spacebar is pressed down\n   */\n  #onKeydown(event: KeyboardEvent) {\n    switch (event.key) {\n      case ' ':\n        if (event.target === this && this.checkable) {\n          event.preventDefault();\n          event.stopImmediatePropagation();\n        }\n        break;\n    }\n  }\n\n  /**\n   * handles key up and toggles input\n   */\n  #onKeyup(event: KeyboardEvent) {\n    switch (event.key) {\n      case 'Enter':\n      case ' ':\n        if (event.target === this) {\n          this.#requestSelect();\n        }\n        break;\n    }\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'rh-tile': RhTile;\n  }\n}\n"]}