{"version":3,"file":"rh-surface.js","sourceRoot":"","sources":["rh-surface.ts"],"names":[],"mappings":";;AAAA,OAAO,EAAE,UAAU,EAAE,IAAI,EAAE,MAAM,KAAK,CAAC;AACvC,OAAO,EAAE,aAAa,EAAE,MAAM,kCAAkC,CAAC;AACjE,OAAO,EAAE,QAAQ,EAAE,MAAM,4BAA4B,CAAC;AAEtD,OAAO,EAAE,oBAAoB,EAAqB,MAAM,qCAAqC,CAAC;;;;AAK9F;;;;;;;;;;;;;;GAcG;AAEI,IAAM,SAAS,GAAf,MAAM,SAAU,SAAQ,UAAU;IAAlC;;;IAmBP,CAAC;IAPC,MAAM;QACJ,OAAO,IAAI,CAAA,qBAAqB,uBAAA,IAAI,qDAAc,UAAU,CAAC;IAC/D,CAAC;;;IAGC,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,CAAC;AACrC,CAAC;AAjBe,gBAAM,GAAG,CAAC,YAAY,EAAE,MAAM,CAAC,CAAC;AASS;IADxD,oBAAoB,EAAE;IACtB,QAAQ,CAAC,EAAE,OAAO,EAAE,IAAI,EAAE,SAAS,EAAE,eAAe,EAAE,CAAC;+CAA6B;AAV1E,SAAS;IADrB,aAAa,CAAC,YAAY,CAAC;GACf,SAAS,CAmBrB;SAnBY,SAAS","sourcesContent":["import { LitElement, html } from 'lit';\nimport { customElement } from 'lit/decorators/custom-element.js';\nimport { property } from 'lit/decorators/property.js';\n\nimport { colorContextProvider, type ColorPalette } from '../../lib/context/color/provider.js';\n\nimport contextStyle from '../../lib/context/color/context-color.css';\nimport styles from './rh-surface.css';\n\n/**\n * Surfaces are content containers with a color palette which provide a theme\n * (i.e. a background color as well as accessible font colors) to their child\n * elements. Use surface only when other containers like card or accordion\n * are inappropriate.\n *\n * @slot - The `<rh-surface>` element has a single anonymous slot which accepts any content and does not provide additional layout styling\n *\n * @example A surface providing a theme to a spinner\n *          ```html\n *          <rh-surface color-palette=\"light\">\n *            <rh-spinner>Loading...</rh-spinner>\n *          </rh-surface>\n *          ```\n */\n@customElement('rh-surface')\nexport class RhSurface extends LitElement {\n  static readonly styles = [contextStyle, styles];\n\n  /**\n   * Sets color palette, which affects the element's styles as well as descendants' color theme.\n   * Overrides parent color context.\n   * Your theme will influence these colors so check there first if you are seeing inconsistencies.\n   * See [CSS Custom Properties](#css-custom-properties) for default values\n   */\n  @colorContextProvider()\n  @property({ reflect: true, attribute: 'color-palette' }) colorPalette?: ColorPalette;\n\n  render() {\n    return html`<slot @slotchange=${this.#onSlotchange}></slot>`;\n  }\n\n  #onSlotchange() {\n    this.requestUpdate('colorPalette');\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'rh-surface': RhSurface;\n  }\n}\n"]}