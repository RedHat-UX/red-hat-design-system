{"version":3,"file":"rh-health-index.js","sourceRoot":"","sources":["rh-health-index.ts"],"names":[],"mappings":"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","sourcesContent":["import { LitElement, html, type PropertyValues } from 'lit';\nimport { customElement } from 'lit/decorators/custom-element.js';\nimport { property } from 'lit/decorators/property.js';\nimport { classMap } from 'lit/directives/class-map.js';\n\nimport { InternalsController } from '@patternfly/pfe-core/controllers/internals-controller.js';\n\nimport { colorContextConsumer, type ColorTheme } from '../../lib/context/color/consumer.js';\n\nimport styles from './rh-health-index.css';\n\n/**\n * Health index displays a health grade (Aâ€“F) for a particular item or package.\n * @summary     Displays a health grade for a particular item or package\n */\n@customElement('rh-health-index')\nexport class RhHealthIndex extends LitElement {\n  static readonly styles = [styles];\n\n  private static grades = 'ABCDEF';\n\n  /**\n   * Sets the size of the health index\n   * Defaults to `md`\n   */\n  @property({ reflect: true }) size: 'sm' | 'md' | 'lg' | 'xl' = 'md';\n\n  /**\n   * Sets the health grade\n   * Defaults to `A`\n   */\n  @property({ reflect: true }) grade: 'A' | 'B' | 'C' | 'D' | 'E' | 'F' = 'A';\n\n  /**\n   * Sets color theme based on parent context\n   */\n  @colorContextConsumer() private on?: ColorTheme;\n\n  // TODO: use I18nController to support officially supported languages.\n  #internals = InternalsController.of(this, {\n    role: 'meter',\n    ariaValueMin: '1',\n    ariaValueMax: '6',\n    ariaValueText: 'Grade A',\n    ariaLabel: 'Health graded A through F',\n    ariaRoleDescription: 'Level indicator',\n  });\n\n  protected override willUpdate(changed: PropertyValues<this>): void {\n    this.grade = this.grade.toUpperCase() as this['grade'];\n    if (changed.has('grade')) {\n      const { grade } = this;\n      const gradeNumeral = (RhHealthIndex.grades.indexOf(grade) + 1);\n      this.#internals.ariaValueNow = gradeNumeral.toString();\n      this.#internals.ariaValueText = `Grade ${grade}`;\n    }\n  }\n\n  override render() {\n    const { on, size } = this;\n    const grades = [...RhHealthIndex.grades].map(x => x.toLowerCase());\n    const grade = this.grade.toLowerCase();\n    return html`\n      <div id=\"container\"\n           aria-hidden=\"true\"\n           class=\"${classMap({ [size ?? '']: !!size, [on ?? '']: !!on })}\">\n        <div id=\"grade\" ?hidden=\"${size !== 'md'}\">${grade}</div>${size === 'sm' ? html`\n        <div class=\"box active ${grade}\">${grade}</div>` : grades.map(letter => html`\n        <div class=\"box ${classMap({ [letter]: true, active: letter === grade })}\">\n          ${!(size === 'lg' || size === 'xl') ? '' : letter}\n        </div>`)}\n      </div>\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'rh-health-index': RhHealthIndex;\n  }\n}\n"]}