{"version":3,"file":"rh-cta.js","sourceRoot":"","sources":["rh-cta.ts"],"names":[],"mappings":"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","sourcesContent":["import { LitElement, html } from 'lit';\nimport { customElement } from 'lit/decorators/custom-element.js';\nimport { property } from 'lit/decorators/property.js';\nimport { classMap } from 'lit/directives/class-map.js';\n\nimport { Logger } from '@patternfly/pfe-core/controllers/logger.js';\n\nimport { DirController } from '../../lib/DirController.js';\n\nimport { colorContextConsumer, type ColorTheme } from '../../lib/context/color/consumer.js';\nimport { colorContextProvider, type ColorPalette } from '../../lib/context/color/provider.js';\n\nimport style from './rh-cta.css';\n\nimport '@patternfly/elements/pf-icon/pf-icon.js';\n\nexport interface CtaData {\n  href?: string;\n  text?: string;\n  title?: string;\n  color?: string;\n  type?: string;\n}\n\nconst supportedTags = ['a', 'button']; // add input later\nfunction isSupportedContent(el: Element|null): el is HTMLAnchorElement|HTMLButtonElement {\n  return !!el && supportedTags.includes(el.localName);\n}\n\nconst CONTENT = new WeakMap<Element, boolean>();\nfunction contentInitialized(el: Element|null): boolean {\n  return !!el && !!CONTENT.get(el);\n}\n\nfunction isButton(element: Element): element is HTMLButtonElement {\n  return element.tagName.toLowerCase() === 'button';\n}\n\n/**\n * Call to action stands out from regular hypertext links, and is used for linking users to webpages.\n *\n * @summary Directs a user to other pages or displays extra content\n *\n * @slot - We expect an anchor tag, `<a>` with an `href`, to be the first child inside `rh-cta` element. Less preferred but allowed for specific use-cases include: `<button>` (note however that the `button` tag is not supported for the default CTA styles).\n *\n * @csspart container - container element for slotted CTA\n *\n */\n@customElement('rh-cta')\nexport class RhCta extends LitElement {\n  static readonly version = '{{version}}';\n\n  static readonly styles = [style];\n\n  /**\n   * Indicates the importance of this call-to-action in the context of the page.\n   * Will also influence how the call-to-action is styled.\n   *   - **Primary**: Use for the primary or most important link. This variant is the highest in\n   *       hierarchy and can also be used to play a video in a Modal or large container.\n   *   - **Secondary**: Use for secondary or general links. This variant is lower in hierarchy than\n   *       the Primary variant and can be used multiple times in the same container or layout.\n   *   - **Brick**: Use to group links together. Only the Brick variant can stretch to fit a\n   *       container or grid, otherwise the text label padding in other variants stays the same.\n   *   - Default (no variant): Use for tertiary or the least important links. This variant is the\n   *       lowest in hierarchy and can be used multiple times in the same container or layout.\n   */\n  @property({ reflect: true }) variant?: 'primary'|'secondary'|'brick';\n\n  @property({ reflect: true }) icon?: string;\n\n  /**\n   * Sets color palette, which affects the element's styles as well as descendants' color theme.\n   * Overrides parent color context.\n   * Your theme will influence these colors so check there first if you are seeing inconsistencies.\n   * See [CSS Custom Properties](#css-custom-properties) for default values\n   */\n  @colorContextProvider()\n  @property({ reflect: true, attribute: 'color-palette' }) colorPalette?: ColorPalette;\n\n  /**\n   * Sets color theme based on parent context\n   */\n  @colorContextConsumer() private on?: ColorTheme;\n\n  /** The slotted `<a>` or `<button>` element */\n  public cta: HTMLAnchorElement|HTMLButtonElement|null = null;\n\n  /** true while the initializer method is running - to prevent double-execution */\n  #initializing = false;\n\n  /** Is the element in an RTL context? */\n  #dir = new DirController(this);\n\n  #logger = new Logger(this);\n\n  get #isDefault(): boolean {\n    return !this.hasAttribute('variant');\n  }\n\n  render() {\n    const rtl = this.#dir.dir === 'rtl';\n    const { on = '' } = this;\n    return html`\n      <span id=\"container\" part=\"container\" class=\"${classMap({ rtl, [on]: !!on })}\">\n        <slot @slotchange=${this.firstUpdated}></slot>${!this.#isDefault && !this.icon ? '' : this.icon ? html`\n        <pf-icon icon=${this.icon} size=\"md\" set=\"far\"></pf-icon>` : html`<svg xmlns=\"http://www.w3.org/2000/svg\"\n          viewBox=\"0 0 31.56 31.56\" focusable=\"false\" width=\"1em\" aria-hidden=\"true\">\n          <path d=\"M15.78 0l-3.1 3.1 10.5 10.49H0v4.38h23.18l-10.5 10.49 3.1 3.1 15.78-15.78L15.78 0z\" />\n        </svg>`}\n      </span>\n    `;\n  }\n\n  firstUpdated() {\n    let [cta] = this.shadowRoot?.querySelector('slot')?.assignedElements() ?? [];\n\n    while (cta instanceof HTMLSlotElement) {\n      [cta] = cta.assignedElements();\n    }\n\n    if (contentInitialized(cta) || this.#initializing) {\n      return;\n    }\n\n    this.#initializing = true;\n\n    // If the first child does not exist or that child is not a supported tag\n    if (!isSupportedContent(cta)) {\n      return this.#logger.warn(`The first child in the light DOM must be a supported call-to-action tag (<a>, <button>)`);\n    } else if (isButton(cta) && !this.variant) {\n      return this.#logger.warn(`Button tag is not supported semantically by the default link styles`);\n    } else {\n      // Capture the first child as the CTA element\n      this.cta = cta;\n\n      CONTENT.set(this.cta, true);\n      this.#initializing = false;\n    }\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'rh-cta': RhCta;\n  }\n}\n\n"]}