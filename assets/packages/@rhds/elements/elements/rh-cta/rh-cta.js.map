{"version":3,"file":"rh-cta.js","sourceRoot":"","sources":["rh-cta.ts"],"names":[],"mappings":"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","sourcesContent":["import { LitElement, html, isServer } from 'lit';\nimport { customElement } from 'lit/decorators/custom-element.js';\nimport { property } from 'lit/decorators/property.js';\nimport { classMap } from 'lit/directives/class-map.js';\nimport { ifDefined } from 'lit/directives/if-defined.js';\n\nimport { Logger } from '@patternfly/pfe-core/controllers/logger.js';\n\nimport type { IconNameFor, IconSetName } from '@rhds/icons';\n\nimport { themable } from '@rhds/elements/lib/themable.js';\n\nimport style from './rh-cta.css';\n\nfunction isSupportedContent(el: Element | null): el is HTMLAnchorElement | HTMLButtonElement {\n  return el instanceof HTMLAnchorElement || el instanceof HTMLButtonElement;\n}\n\n/**\n * A call to action is styled text representing a link.\n * @summary     A call to action is styled text representing a link.\n *\n * @alias call-to-action\n *\n */\n@customElement('rh-cta')\n@themable\nexport class RhCta extends LitElement {\n  static readonly styles = [style];\n\n  /**\n   * Indicates the importance of this call-to-action in the context of the page.\n   * Will also influence how the call-to-action is styled.\n   *   - **Primary**: Use for the primary or most important link. This variant is the highest in\n   *       hierarchy and can also be used to play a video in a Modal or large container.\n   *   - **Secondary**: Use for secondary or general links. This variant is lower in hierarchy than\n   *       the Primary variant and can be used multiple times in the same container or layout.\n   *   - **Brick**: Use to group links together. Only the Brick variant can stretch to fit a\n   *       container or grid, otherwise the text label padding in other variants stays the same.\n   *   - Default (no variant): Use for tertiary or the least important links. This variant is the\n   *       lowest in hierarchy and can be used multiple times in the same container or layout.\n   */\n  @property({ reflect: true }) variant?: 'primary' | 'secondary' | 'brick';\n\n  /**\n   * When set, overrides the default slot. Use *instead* of a slotted anchor tag\n   */\n  @property({ reflect: true }) href?: string;\n\n  /** when `href` is set, the link's `download` attribute */\n  @property() download?: string;\n\n  /** when `href` is set, the link's `referrerpolicy` attribute */\n  @property() referrerpolicy?: string;\n\n  /** when `href` is set, the link's `rel` attribute */\n  @property() rel?: string;\n\n  /** when `href` is set, the link's `target` attribute */\n  @property() target?: string;\n\n  /** Icon name */\n  @property({ reflect: true }) icon?: IconNameFor<IconSetName>;\n\n  /** Icon set */\n  @property({ attribute: 'icon-set' }) iconSet: IconSetName = 'ui';\n\n  override async scheduleUpdate() {\n    if (this.icon || !this.variant && !customElements.get('rh-icon')) {\n      await import('@rhds/elements/rh-icon/rh-icon.js');\n    }\n    super.scheduleUpdate();\n  }\n\n  #logger = new Logger(this);\n\n  override render() {\n    const {\n      download, href, referrerpolicy, rel, target,\n      icon, iconSet,\n      variant,\n    } = this;\n    const isDefault = !variant;\n    const svg = isDefault;\n    const follower =\n        (variant !== 'brick' && icon) ? html`<rh-icon icon=${icon} set=${iconSet ?? 'ui'}></rh-icon>`\n      : (variant === undefined) ? html`<rh-icon icon=\"arrow-right\" set=\"ui\"></rh-icon>`\n      : '';\n    const iconContent =\n      !(variant === 'brick' && icon) ? '' : html`<rh-icon .icon=${icon} set=\"${iconSet ?? 'ui'}\"></rh-icon>`;\n    const slot = html`<!--\n          The default slot contains the link text when the \\`href\\`\n          attribute is set. In case there is no href attribute, an anchor\n          tag (\\`<a href=\"...\">\\`) should be the first child inside \\`rh-cta\\`\n          element. Less preferred but allowed for specific use-cases\n          include: \\`<button>\\` (note however that the \\`button\\` tag is not\n          supported for the default CTA styles).\n    --><slot></slot>${follower}`;\n    const linkContent =\n        !href ? slot\n      : html`<a href=${href}\n                download=\"${ifDefined(download)}\"\n                rel=\"${ifDefined(rel)}\"\n                referrerpolicy=\"${ifDefined(referrerpolicy)}\"\n                target=\"${ifDefined(target)}\">${slot}</a>`;\n    return html`\n      <!-- container element for slotted CTA -->\n      <span id=\"container\"\n            part=\"container\"\n            class=${classMap({ icon: !!icon, svg })}\n            @slotchange=${this.firstUpdated}>${iconContent}${linkContent}</span>`;\n  }\n\n  override firstUpdated() {\n    // workaround for lit-ssr bugs\n    if (!isServer) {\n      this.removeAttribute('defer-hydration');\n      const [, ...duplicateContainers] = this.shadowRoot?.querySelectorAll('#container') ?? [];\n      for (const dupe of duplicateContainers) {\n        dupe.remove();\n      }\n    }\n    // TODO: remove in next major version, recommend static HTML audits instead\n    const { href, variant } = this;\n    const cta =\n         this.shadowRoot?.querySelector('a')\n      ?? this.shadowRoot?.querySelector('slot')?.assignedElements().find(isSupportedContent)\n      ?? null;\n\n    if (href && cta !== this.shadowRoot?.querySelector('a')) {\n      return this.#logger.warn(`When the href attribute is used, slotted content must not be a link`);\n    } else if (!href && !cta) {\n      return this.#logger.warn(`The first child in the light DOM must be a supported call-to-action tag (<a>, <button>)`);\n    } else if (!href && cta instanceof HTMLButtonElement && !variant) {\n      return this.#logger.warn(`Button tag is not supported semantically by the default link styles`);\n    }\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'rh-cta': RhCta;\n  }\n}\n"]}