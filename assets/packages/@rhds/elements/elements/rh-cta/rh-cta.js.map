{"version":3,"file":"rh-cta.js","sourceRoot":"","sources":["rh-cta.ts"],"names":[],"mappings":"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","sourcesContent":["import { LitElement, html, isServer, noChange } from 'lit';\nimport { customElement } from 'lit/decorators/custom-element.js';\nimport { property } from 'lit/decorators/property.js';\nimport { classMap } from 'lit/directives/class-map.js';\nimport { ifDefined } from 'lit/directives/if-defined.js';\n\nimport { Logger } from '@patternfly/pfe-core/controllers/logger.js';\n\nimport { DirController } from '../../lib/DirController.js';\n\nimport { colorContextConsumer, type ColorTheme } from '../../lib/context/color/consumer.js';\n\nimport type { IconNameFor, IconSetName } from '@rhds/icons';\n\nimport style from './rh-cta.css';\nimport { state } from 'lit/decorators/state.js';\n\nfunction isSupportedContent(el: Element | null): el is HTMLAnchorElement | HTMLButtonElement {\n  return el instanceof HTMLAnchorElement || el instanceof HTMLButtonElement;\n}\n\n/**\n * A call to action is a styled link that entices users to make a selection.\n * @summary     Directs users to other pages or displays extra content\n * @slot\n *              The default slot contains the link text when the `href`\n *              attribute is set. In case there is no href attribute, an anchor\n *              tag (`<a href=\"...\">`) should be the first child inside `rh-cta`\n *              element. Less preferred but allowed for specific use-cases\n *              include: `<button>` (note however that the `button` tag is not\n *              supported for the default CTA styles).\n * @csspart     container - container element for slotted CTA\n * @cssprop     {<color>} [--rh-cta-color=var(--rh-color-text-primary-on-dark, #ffffff)]\n *              Sets the cta color\n * @cssprop     [--rh-cta-background-color=var(--rh-color-brand-red-on-light, #ee0000)]\n *              Sets the cta background color\n * @cssprop     [--rh-cta-border-color=var(--rh-color-brand-red-on-light, #ee0000)]\n *              Sets the cta border color\n * @cssprop     [--rh-cta-hover-color=var(--rh-color-text-primary-on-dark, #ffffff)]\n *              Sets the cta color on hover\n * @cssprop     [--rh-cta-hover-background-color=var(--rh-color-brand-red-dark, #be0000)]\n *              Sets the cta background color on hover\n * @cssprop     [--rh-cta-hover-border-color=var(--rh-color-brand-red-dark, #be0000)]\n *              Sets the cta boder color on hover\n * @cssprop     [--rh-cta-focus-color=var(--rh-color-text-primary-on-dark, #ffffff)]\n *              Sets the cta color on focus\n * @cssprop     [--rh-cta-focus-background-color=var(--rh-color-brand-red-on-light, #ee0000)]\n *              Sets the cta background color on focus\n * @cssprop     [--rh-cta-focus-container-background-color=transparent]\n *              Sets the cta container background color on focus\n * @cssprop     [--rh-cta-focus-container-outline-color=#0066cc]\n *              Sets the cta container outline color on focus\n * @cssprop     [--rh-cta-focus-border-color=transparent]\n *              Sets the cta border color on focus\n * @cssprop     [--rh-cta-focus-inner-border-color=transparent]\n *              Sets the cta inner border color on focus\n * @cssprop     [--rh-cta-active-color=var(--rh-color-text-primary-on-dark, #ffffff)]\n *              Sets the cta color on active. Applicable only for secondary variant\n * @cssprop     [--rh-cta-active-background-color=var(--rh-color-brand-red-dark, #be0000)]\n *              Sets the cta background color on active\n * @cssprop     [--rh-cta-active-container-background-color=#0066cc1a]\n *              Sets the cta container background color on active. Applicable only for default variant\n * @cssprop     [--rh-cta-active-inner-border-color=var(--rh-color-text-primary-on-dark, #ffffff)]\n *              Sets the cta inner border color on active\n * @cssprop     [--rh-cta-text-decoration=none]\n *              Sets the cta text decoration\n * @cssprop     [--rh-cta-focus-text-decoration=none]\n *              Sets the cta text decoration on focus\n * @cssprop     [--rh-cta-hover-text-decoration=none]\n *              Sets the cta text decoration on hover\n * @cssprop     [--rh-cta-active-text-decoration=none]\n *              Sets the cta text decoration on active\n */\n@customElement('rh-cta')\nexport class RhCta extends LitElement {\n  static readonly styles = [style];\n\n  /**\n   * Indicates the importance of this call-to-action in the context of the page.\n   * Will also influence how the call-to-action is styled.\n   *   - **Primary**: Use for the primary or most important link. This variant is the highest in\n   *       hierarchy and can also be used to play a video in a Modal or large container.\n   *   - **Secondary**: Use for secondary or general links. This variant is lower in hierarchy than\n   *       the Primary variant and can be used multiple times in the same container or layout.\n   *   - **Brick**: Use to group links together. Only the Brick variant can stretch to fit a\n   *       container or grid, otherwise the text label padding in other variants stays the same.\n   *   - Default (no variant): Use for tertiary or the least important links. This variant is the\n   *       lowest in hierarchy and can be used multiple times in the same container or layout.\n   */\n  @property({ reflect: true }) variant?: 'primary' | 'secondary' | 'brick';\n\n  /**\n   * When set, overrides the default slot. Use *instead* of a slotted anchor tag\n   */\n  @property({ reflect: true }) href?: string;\n\n  /** when `href` is set, the link's `download` attribute */\n  @property() download?: string;\n\n  /** when `href` is set, the link's `referrerpolicy` attribute */\n  @property() referrerpolicy?: string;\n\n  /** when `href` is set, the link's `rel` attribute */\n  @property() rel?: string;\n\n  /** when `href` is set, the link's `target` attribute */\n  @property() target?: string;\n\n  /**\n   * Icon name\n   */\n  @property({ reflect: true }) icon?: IconNameFor<IconSetName>;\n\n  /**\n   * Icon set\n   */\n  @property({ attribute: 'icon-set' }) iconSet: IconSetName = 'ui';\n\n  /**\n   * Sets color theme based on parent context\n   */\n  @colorContextConsumer() @state() private on?: ColorTheme;\n\n  protected override async getUpdateComplete(): Promise<boolean> {\n    if (this.icon || !this.variant) {\n      await import('@rhds/elements/rh-icon/rh-icon.js');\n    }\n    return super.getUpdateComplete();\n  }\n\n  /** Is the element in an RTL context? */\n  #dir = new DirController(this);\n\n  #logger = new Logger(this);\n\n  override render() {\n    const {\n      download, href, referrerpolicy, rel, target,\n      icon, iconSet,\n      on = 'light', variant,\n    } = this;\n    const rtl = this.#dir.dir === 'rtl';\n    const isDefault = !variant;\n    const svg = isDefault;\n    const iconOrSvg = isDefault || !!icon;\n    const follower =\n      (variant !== 'brick' && icon) ?\n        html`<rh-icon .icon=${icon} .set=${iconSet ?? 'ui'}></rh-icon>`\n        : (variant === undefined) ?\n          html`<rh-icon set=\"ui\" icon=\"arrow-right\"></rh-icon>`\n          : html``;\n    const iconContent =\n          (variant === 'brick' && icon) ?\n            html`<rh-icon .icon=${icon} set=\"${iconSet ?? 'ui'}\"></rh-icon>`\n            : html``;\n    const linkContent =\n        !href ? html`<slot></slot>${follower}`\n      : html`<a href=${href}\n                download=\"${ifDefined(download)}\"\n                rel=\"${ifDefined(rel)}\"\n                referrerpolicy=\"${ifDefined(referrerpolicy)}\"\n                target=\"${ifDefined(target)}\"><slot></slot>${follower}</a>`;\n    return html`\n      <span id=\"container\"\n            part=\"container\"\n            class=${classMap({ rtl, icon: !!icon, svg, on: true, [on]: true })}\n            @slotchange=${this.firstUpdated}>${iconContent}${linkContent}</span>`;\n  }\n\n  override firstUpdated() {\n    const { href, variant } = this;\n    if (!isServer) {\n      this.removeAttribute('defer-hydration');\n    }\n    const cta =\n         this.shadowRoot?.querySelector('a')\n      ?? this.shadowRoot?.querySelector('slot')?.assignedElements().find(isSupportedContent)\n      ?? null;\n\n    if (href && cta !== this.shadowRoot?.querySelector('a')) {\n      return this.#logger.warn(`When the href attribute is used, slotted content must not be a link`);\n    } else if (!href && !cta) {\n      return this.#logger.warn(`The first child in the light DOM must be a supported call-to-action tag (<a>, <button>)`);\n    } else if (!href && cta instanceof HTMLButtonElement && !variant) {\n      return this.#logger.warn(`Button tag is not supported semantically by the default link styles`);\n    }\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'rh-cta': RhCta;\n  }\n}\n"]}