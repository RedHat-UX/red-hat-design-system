{"version":3,"file":"rh-audio-player-subscribe.js","sourceRoot":"","sources":["rh-audio-player-subscribe.ts"],"names":[],"mappings":";;AAAA,OAAO,EAAE,UAAU,EAAE,IAAI,EAAE,MAAM,KAAK,CAAC;AACvC,OAAO,EAAE,aAAa,EAAE,MAAM,kCAAkC,CAAC;AACjE,OAAO,EAAE,QAAQ,EAAE,MAAM,4BAA4B,CAAC;AACtD,OAAO,EAAE,qBAAqB,EAAE,MAAM,2CAA2C,CAAC;AAElF,OAAO,EAAE,2BAA2B,EAAE,MAAM,wCAAwC,CAAC;AAErF,OAAO,8CAA8C,CAAC;;;;AAMtD;;;;;;;GAOG;AAEI,IAAM,sBAAsB,GAA5B,MAAM,sBAAuB,SAAQ,UAAU;IAA/C;;QASL,2CAAY,IAAI,2BAA2B,CAAC,IAAI,CAAC,EAAC;QAElD,gDAAgB;IAuBlB,CAAC;IArBU,MAAM;QACb,OAAO,IAAI,CAAA;;+BAEgB,uBAAA,IAAI,wCAAU,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC;;mCAE/B,CAAC,IAAI,CAAC,IAAI,EAAE,MAAM,IAAI,CAAC,CAAC,GAAG,CAAC;6CAClB,CAAC;IAC5C,CAAC;IAED,IAAI,SAAS,CAAC,KAAa;QACzB,uBAAA,IAAI,iCAAU,KAAK,MAAA,CAAC;QACpB,IAAI,CAAC,aAAa,EAAE,CAAC;IACvB,CAAC;IAED,IAAI,SAAS;QACX,OAAO,IAAI,CAAC,KAAK,IAAI,uBAAA,IAAI,qCAAO,IAAI,WAAW,CAAC;IAClD,CAAC;IAED,UAAU;QACR,IAAI,CAAC,UAAU,EAAE,aAAa,CAAC,yCAAyC,CAAC,EAAE,cAAc,EAAE,CAAC;IAC9F,CAAC;;;AAhCe,6BAAM,GAAG,CAAC,WAAW,EAAE,MAAM,CAAC,CAAC;AAEnC;IAAX,QAAQ,EAAE;uDAAkB;AAEjB;IAAX,QAAQ,EAAE;qDAAgB;AAEU;IAApC,qBAAqB,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE,CAAC;oDAA8B;AAPvD,sBAAsB;IADlC,aAAa,CAAC,2BAA2B,CAAC;GAC9B,sBAAsB,CAkClC;SAlCY,sBAAsB","sourcesContent":["import { LitElement, html } from 'lit';\nimport { customElement } from 'lit/decorators/custom-element.js';\nimport { property } from 'lit/decorators/property.js';\nimport { queryAssignedElements } from 'lit/decorators/query-assigned-elements.js';\n\nimport { HeadingLevelContextConsumer } from '../../lib/context/headings/consumer.js';\n\nimport './rh-audio-player-scrolling-text-overflow.js';\n\nimport panelStyles from './rh-audio-player-panel-styles.css';\nimport styles from './rh-audio-player-subscribe.css';\n\n\n/**\n * Audio Player Subscribe Panel\n * @slot heading - custom heading for panel\n * @slot - panel content\n * @slot link - link to subscribe to podcast\n * @csspart heading - scrolling text overflow\n * @csspart body - body content slot\n */\n@customElement('rh-audio-player-subscribe')\nexport class RhAudioPlayerSubscribe extends LitElement {\n  static readonly styles = [panelStyles, styles];\n\n  @property() heading?: string;\n\n  @property() label?: string;\n\n  @queryAssignedElements({ slot: '' }) private body?: HTMLElement[];\n\n  #headings = new HeadingLevelContextConsumer(this);\n\n  #label?: string;\n\n  override render() {\n    return html`\n      <rh-audio-player-scrolling-text-overflow part=\"heading\">\n        <slot name=\"heading\">${this.#headings.wrap(this.menuLabel)}</slot>\n      </rh-audio-player-scrolling-text-overflow>\n      <slot part=\"body\" ?hidden=\"${(this.body?.length ?? 0) < 1}\"></slot>\n      <slot name=\"link\" part=\"links\"></slot>`;\n  }\n\n  set menuLabel(label: string) {\n    this.#label = label;\n    this.requestUpdate();\n  }\n\n  get menuLabel(): string {\n    return this.label || this.#label || 'Subscribe';\n  }\n\n  scrollText() {\n    this.shadowRoot?.querySelector('rh-audio-player-scrolling-text-overflow')?.startScrolling();\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'rh-audio-player-subscribe': RhAudioPlayerSubscribe;\n  }\n}\n"]}