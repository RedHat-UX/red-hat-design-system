{"version":3,"file":"rh-context-demo.js","sourceRoot":"","sources":["rh-context-demo.ts"],"names":[],"mappings":";;AAAA,OAAO,EAAE,UAAU,EAAuB,IAAI,EAAE,MAAM,KAAK,CAAC;AAC5D,OAAO,EAAE,aAAa,EAAE,MAAM,kCAAkC,CAAC;AACjE,OAAO,EAAE,QAAQ,EAAE,MAAM,4BAA4B,CAAC;AACtD,OAAO,EAAE,QAAQ,EAAE,MAAM,6BAA6B,CAAC;AAEvD,OAAO,EAAqB,MAAM,iCAAiC,CAAC;AACpE,OAAO,EAAE,kBAAkB,EAAE,MAAM,2CAA2C,CAAC;AAE/E,OAAO,yCAAyC,CAAC;;;AAK1C,IAAM,aAAa,GAAnB,MAAM,aAAc,SAAQ,UAAU;IAAtC;;;QAKO,UAAK,GAAiB,SAAS,CAAC;QAEhC,UAAK,GAAG,eAAe,CAAC;QAEqB,iBAAY,GAAG,IAAI,CAAC,KAAK,CAAC;QAEnF,mCAAa,IAAI,CAAC,eAAe,EAAE,EAAC;IA+CtC,CAAC;IA7CoB,MAAM;QACvB,MAAM,EAAE,KAAK,GAAG,SAAS,EAAE,GAAG,IAAI,CAAC;QACnC,MAAM,CAAC,EAAE,GAAG,MAAM,CAAC,GAAG,KAAK,CAAC,KAAK,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC;QACtD,OAAO,IAAI,CAAA;;mCAEoB,KAAK;2BACb,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC;6BACtB,uBAAA,IAAI,yDAAU;;;yCAGF,IAAI,CAAC,KAAK;;kCAEjB,IAAI,CAAC,KAAK;;;;;KAKvC,CAAC;IACJ,CAAC;IAEkB,UAAU,CAAC,OAA6B;QACzD,IAAI,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC,EAAE,CAAC;YAChC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC;QACjC,CAAC;QACD,IAAI,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE,CAAC;YACzB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC;QACjC,CAAC;IACH,CAAC;IAES,wBAAwB,CAAC,KAAa;QAC9C,uBAAA,IAAI,yDAAU,MAAd,IAAI,EAAW,KAAqB,CAAC,CAAC;IACxC,CAAC;;;;2DAES,KAAY;IACpB,IAAI,KAAK,YAAY,kBAAkB,EAAE,CAAC;QACxC,uBAAA,IAAI,yDAAU,MAAd,IAAI,EAAW,KAAK,CAAC,YAAY,CAAC,CAAC;IACrC,CAAC;AACH,CAAC;2DAES,KAAmB;IAC3B,IAAI,KAAK,EAAE,CAAC;QACV,uBAAA,IAAI,gCAAW,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;QACpC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;IACrB,CAAC;AACH,CAAC;AAxDe,oBAAM,GAAG,CAAC,KAAK,CAAC,AAAV,CAAW;AAE1B,4BAAc,GAAG,IAAI,AAAP,CAAQ;AAEjB;IAAX,QAAQ,EAAE;4CAAiC;AAEhC;IAAX,QAAQ,EAAE;4CAAyB;AAEqB;IAAxD,QAAQ,CAAC,EAAE,SAAS,EAAE,eAAe,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;mDAA2B;AATxE,aAAa;IADzB,aAAa,CAAC,iBAAiB,CAAC;GACpB,aAAa,CA0DzB","sourcesContent":["import { LitElement, type PropertyValues, html } from 'lit';\nimport { customElement } from 'lit/decorators/custom-element.js';\nimport { property } from 'lit/decorators/property.js';\nimport { classMap } from 'lit/directives/class-map.js';\n\nimport { type ColorPalette } from '../../context/color/provider.js';\nimport { ContextChangeEvent } from '../rh-context-picker/rh-context-picker.js';\n\nimport '@rhds/elements/rh-surface/rh-surface.js';\n\nimport style from './rh-context-demo.css';\n\n@customElement('rh-context-demo')\nexport class RhContextDemo extends LitElement {\n  static readonly styles = [style];\n\n  static formAssociated = true;\n\n  @property() value: ColorPalette = 'darkest';\n\n  @property() label = 'Color Palette';\n\n  @property({ attribute: 'color-palette', reflect: true }) colorPalette = this.value;\n\n  #internals = this.attachInternals();\n\n  protected override render() {\n    const { value = 'darkest' } = this;\n    const [on = 'dark'] = value.match(/dark|light/) ?? [];\n    return html`\n      <rh-surface id=\"provider\"\n                  color-palette=\"${value}\"\n                  class=\"${classMap({ [on]: true })}\"\n                  @change=\"${this.#onChange}\">\n          <div id=\"picker-container\">\n            <rh-context-picker id=\"picker\"\n                               .value=\"${this.value}\"\n                               target=\"provider\"></rh-context-picker>\n            <label for=\"picker\">${this.label}</label>\n            <slot name=\"controls\"></slot>\n          </div>\n        <slot part=\"demo\"></slot>\n      </rh-surface>\n    `;\n  }\n\n  protected override willUpdate(changed: PropertyValues<this>) {\n    if (changed.has('colorPalette')) {\n      this.value = this.colorPalette;\n    }\n    if (changed.has('value')) {\n      this.colorPalette = this.value;\n    }\n  }\n\n  protected formStateRestoreCallback(state: string) {\n    this.#setValue(state as ColorPalette);\n  }\n\n  #onChange(event: Event) {\n    if (event instanceof ContextChangeEvent) {\n      this.#setValue(event.colorPalette);\n    }\n  }\n\n  #setValue(value: ColorPalette) {\n    if (value) {\n      this.#internals.setFormValue(value);\n      this.value = value;\n    }\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'rh-context-demo': RhContextDemo;\n  }\n}\n"]}