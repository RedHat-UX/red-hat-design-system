{"version":3,"file":"DirController.js","sourceRoot":"","sources":["DirController.ts"],"names":[],"mappings":";;AAEA;;;;GAIG;AACH,MAAM,OAAO,aAAa;IAIxB,YAAmB,IAAsC;QAAtC,SAAI,GAAJ,IAAI,CAAkC;;QACvD,IAAI,CAAC,GAAG,GAAG,uBAAA,IAAI,8DAAe,MAAnB,IAAI,CAAiB,CAAC;IACnC,CAAC;IAED,aAAa;QACX,IAAI,CAAC,GAAG,GAAG,uBAAA,IAAI,8DAAe,MAAnB,IAAI,CAAiB,CAAC;IACnC,CAAC;CAcF;;IAXG,IAAI,IAAI,GAAG,IAAI,CAAC,IAAe,CAAC;IAChC,OAAO,IAAI,EAAE;QACX,MAAM,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;QACzC,IAAI,UAAU,EAAE,YAAY,CAAC,KAAK,CAAC,EAAE;YACnC,OAAO,UAAU,EAAE,YAAY,CAAC,KAAK,CAAC,IAAI,KAAK,CAAC;SACjD;aAAM;YACL,CAAC,EAAE,IAAI,EAAE,GAAI,IAAI,EAAE,WAAW,EAAiB,IAAI,EAAE,CAAC,CAAC;SACxD;KACF;IACD,OAAO,KAAK,CAAC;AACf,CAAC","sourcesContent":["import type { ReactiveController, ReactiveControllerHost } from 'lit';\n\n/**\n * Discovers and reports the host element's closest `dir`,\n * even across shadow roots. Does not observe DOM changes.\n * @see https://caniuse.com/css-dir-pseudo\n */\nexport class DirController implements ReactiveController {\n  /** The element's current `dir` */\n  public dir: string;\n\n  constructor(public host: ReactiveControllerHost & Element) {\n    this.dir = this.#getDirContext();\n  }\n\n  hostConnected() {\n    this.dir = this.#getDirContext();\n  }\n\n  #getDirContext() {\n    let host = this.host as Element;\n    while (host) {\n      const dirContext = host.closest('[dir]');\n      if (dirContext?.hasAttribute('dir')) {\n        return dirContext?.getAttribute('dir') || 'ltr';\n      } else {\n        ({ host } = (host?.getRootNode() as ShadowRoot) ?? {});\n      }\n    }\n    return 'ltr';\n  }\n}\n"]}