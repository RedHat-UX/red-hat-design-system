{"version":3,"file":"ScreenSizeController.js","sourceRoot":"","sources":["ScreenSizeController.ts"],"names":[],"mappings":"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","sourcesContent":["import type { ReactiveControllerHost, ReactiveController } from 'lit';\n\nimport { bound } from '@patternfly/pfe-core/decorators/bound.js';\n\nimport {\n  desktopLargeBreakpoint,\n  desktopSmallBreakpoint,\n  tabletLandscapeBreakpoint,\n  tabletPortraitBreakpoint,\n  mobileLandscapeBreakpoint,\n  mobilePortraitBreakpoint,\n} from './tokens.js';\n\nexport type BreakpointKey =\n  | 'mobile'\n  | 'mobileXl'\n  | 'desktopLarge'\n  | 'desktopSmall'\n  | 'tabletLandscape'\n  | 'tabletPortrait'\n  | 'mobileLandscape'\n  | 'mobilePortrait'\n\nexport class ScreenSizeController implements ReactiveController {\n  static instances = new Set<ScreenSizeController>();\n\n  static queries = new Map<BreakpointKey, MediaQueryList>([\n    ['mobile', matchMedia(`screen and (max-width: ${tabletPortraitBreakpoint})`)],\n    ['mobilePortrait', matchMedia(`screen and (min-width: ${mobilePortraitBreakpoint})`)],\n    ['mobileLandscape', matchMedia(`screen and (min-width: ${mobileLandscapeBreakpoint})`)],\n    ['tabletPortrait', matchMedia(`screen and (min-width: ${tabletPortraitBreakpoint})`)],\n    ['tabletLandscape', matchMedia(`screen and (min-width: ${tabletLandscapeBreakpoint})`)],\n    ['desktopSmall', matchMedia(`screen and (min-width: ${tabletLandscapeBreakpoint}) and (max-width: ${desktopSmallBreakpoint})`)],\n    ['desktopLarge', matchMedia(`screen and (min-width: ${desktopLargeBreakpoint})`)],\n  ]);\n\n  public mobile = ScreenSizeController.queries.get('mobile')?.matches ?? false;\n\n  public size: Omit<BreakpointKey, 'mobile'>;\n\n  public matches = new Set<BreakpointKey>();\n\n  private onChange?(matches: boolean): void\n\n  constructor(\n    /** reference to the host element using this controller */\n    public host: ReactiveControllerHost,\n    private breakpoint: BreakpointKey | void,\n    options?: {\n      onChange?(matches: boolean): void\n    }\n  ) {\n    this.host.addController(this);\n    this.size = 'mobilePortrait';\n    this.breakpoint = breakpoint;\n    this.onChange = options?.onChange;\n\n    for (const [key, list] of ScreenSizeController.queries) {\n      if (key !== 'mobile' && list.matches) {\n        this.size = key;\n        this.matches.add(key);\n        this.evaluate();\n      }\n    }\n  }\n\n  hostConnected() {\n    ScreenSizeController.instances.add(this);\n  }\n\n  hostDisconnected() {\n    ScreenSizeController.instances.delete(this);\n  }\n\n  /** Requests a render and calls the onChange callback */\n  @bound evaluate() {\n    this.host.requestUpdate();\n    if (this.breakpoint) {\n      this.onChange?.(this.matches.has(this.breakpoint) ?? false);\n    }\n  }\n}\n\nfor (const [key, list] of ScreenSizeController.queries) {\n  if (key === 'mobile') {\n    list.addEventListener('change', event => {\n      for (const instance of ScreenSizeController.instances) {\n        instance.mobile = event.matches;\n        instance.evaluate();\n      }\n    });\n  } else {\n    list.addEventListener('change', event => {\n      for (const instance of ScreenSizeController.instances) {\n        if (event.matches) {\n          instance.size = key;\n          instance.matches.add(key);\n        } else {\n          instance.matches.delete(key);\n        }\n        instance.evaluate();\n      }\n    });\n  }\n}\n"]}