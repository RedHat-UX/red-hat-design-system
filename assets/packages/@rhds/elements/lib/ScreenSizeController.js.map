{"version":3,"file":"ScreenSizeController.js","sourceRoot":"","sources":["ScreenSizeController.ts"],"names":[],"mappings":"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","sourcesContent":["import type { ReactiveControllerHost, ReactiveController } from 'lit';\n\nimport {\n  Breakpoint2xsMax,\n  Media2xl,\n  MediaLg,\n  MediaMd,\n  MediaSm,\n  MediaXl,\n  MediaXs,\n} from '@rhds/tokens/media.js';\n\ntype BreakpointKey =\n  | '2xs'\n  | 'xs'\n  | 'sm'\n  | 'md'\n  | 'lg'\n  | 'xl'\n  | '2xl';\n\ntype MediaToken =\n  | typeof Media2xl\n  | typeof MediaLg\n  | typeof MediaMd\n  | typeof MediaSm\n  | typeof MediaXl\n  | typeof MediaXs;\n\nfunction getMediaQueryListForToken(token: MediaToken | string) {\n  const media =\n      typeof token === 'string' ? `(max-width: ${token})`\n    : Object.entries(token).map(x => `(${x.join(':')})`).join(' and ');\n  return matchMedia(`screen and ${media}`);\n}\n\nconst BREAKPOINTS: Record<BreakpointKey, string | MediaToken> = {\n  '2xs': Breakpoint2xsMax,\n  'xs': MediaXs,\n  'sm': MediaSm,\n  'md': MediaMd,\n  'lg': MediaLg,\n  'xl': MediaXl,\n  '2xl': Media2xl,\n};\n\nexport class ScreenSizeController implements ReactiveController {\n  static instances = new Set<ScreenSizeController>();\n\n  static queries = new Map<\n    BreakpointKey,\n    MediaQueryList\n  >(Object.entries(BREAKPOINTS).map(([k, v]) =>\n    [k as BreakpointKey, getMediaQueryListForToken(v)]));\n\n  public mobile = ScreenSizeController.queries.get('2xs')?.matches ?? false;\n\n  public size: Omit<BreakpointKey, 'mobile'>;\n\n  public matches = new Set<BreakpointKey>();\n\n  private onChange?(matches: boolean): void;\n\n  constructor(\n    /** reference to the host element using this controller */\n    public host: ReactiveControllerHost,\n    private breakpoint: BreakpointKey | void,\n    options?: {\n      onChange?(matches: boolean): void;\n    }\n  ) {\n    this.host.addController(this);\n    this.size = '2xs';\n    this.breakpoint = breakpoint;\n    this.onChange = options?.onChange;\n\n    for (const [key, list] of ScreenSizeController.queries) {\n      if (key !== '2xs' && list.matches) {\n        this.size = key;\n        this.matches.add(key);\n        this.evaluate();\n      }\n    }\n  }\n\n  hostConnected() {\n    ScreenSizeController.instances.add(this);\n  }\n\n  hostDisconnected() {\n    ScreenSizeController.instances.delete(this);\n  }\n\n  /** Requests a render and calls the onChange callback */\n  evaluate() {\n    if (this.breakpoint) {\n      this.onChange?.(this.matches.has(this.breakpoint));\n    }\n    this.host.requestUpdate();\n  }\n}\n\nfor (const [key, list] of ScreenSizeController.queries) {\n  if (key === '2xs') {\n    list.addEventListener('change', event => {\n      for (const instance of ScreenSizeController.instances) {\n        instance.mobile = event.matches;\n        instance.evaluate();\n      }\n    });\n  } else {\n    list.addEventListener('change', event => {\n      for (const instance of ScreenSizeController.instances) {\n        if (event.matches) {\n          instance.size = key;\n          instance.matches.add(key);\n        } else {\n          instance.matches.delete(key);\n        }\n        instance.evaluate();\n      }\n    });\n  }\n}\n"]}