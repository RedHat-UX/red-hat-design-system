{"version":3,"file":"themable.js","sourceRoot":"","sources":["themable.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,QAAQ,EAAE,eAAe,EAAE,MAAM,KAAK,CAAC;AAEhD,IAAI,WAAoB,CAAC;AAEzB,KAAK,UAAU,IAAI;IACjB,MAAM,EAAE,OAAO,EAAE,EAAE,OAAO,EAAE,EAAE,GAAG,MAAM,MAAM,CAAC,uCAAuC,CAAC,CAAC;IACvF,MAAM,KAAK,GAAG,IAAI,aAAa,EAAE,CAAC;IAClC,KAAK,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;IAC3B,QAAQ,CAAC,kBAAkB,GAAG,CAAC,GAAG,CAAC,QAAQ,CAAC,kBAAkB,IAAI,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC;AAChF,CAAC;AAED,IAAI,CAAgB,CAAC;AAErB;;;;;GAKG;AACH,MAAM,UAAU,QAAQ,CAAyC,KAAQ;IACvE,IAAI,QAAQ,EAAE,CAAC;QACb,OAAO,KAAK,CAAC;IACf,CAAC;IACD,WAAW,KAAX,WAAW,GACJ,QAAQ,CAAC,eAAe,CAAC,gBAAgB,EAAE,EAAE,CAAC,GAAG,CAAC,wBAAwB,CAAC;WAC7E,CAAC,CAAC,gBAAgB,CAAC,QAAQ,CAAC,eAAe,CAAC,CAAC,gBAAgB,CAAC,wBAAwB,CAAC,EAAE;IAC9F,IAAI,CAAC,WAAW,EAAE,CAAC;QACjB,CAAC,KAAD,CAAC,GAAK,IAAI,EAAE,EAAC;QACb,OAAO,MAAM,eAAgB,SAAQ,KAAK;YAC9B,KAAK,CAAC,iBAAiB;gBAC/B,MAAM,CAAC,CAAC;gBACR,OAAO,KAAK,CAAC,iBAAiB,EAAE,CAAC;YACnC,CAAC;SACF,CAAC;IACJ,CAAC;IACD,OAAO,KAAK,CAAC;AACf,CAAC","sourcesContent":["import type { Constructor } from '@lit/reactive-element/decorators/base.js';\nimport { isServer, ReactiveElement } from 'lit';\n\nlet initialized: boolean;\n\nasync function load() {\n  const { default: { cssText } } = await import('@rhds/tokens/css/default-theme.css.js');\n  const sheet = new CSSStyleSheet();\n  sheet.replaceSync(cssText);\n  document.adoptedStyleSheets = [...(document.adoptedStyleSheets ?? []), sheet];\n}\n\nlet p: Promise<void>;\n\n/**\n * Ensures this element is [themable](https://ux.redhat.com/theming/).\n *\n * @param klass element constructor\n * @see https://ux.redhat.com/theming/color-palettes/\n */\nexport function themable<T extends Constructor<ReactiveElement>>(klass: T) {\n  if (isServer) {\n    return klass;\n  }\n  initialized\n    ??= (document.documentElement.computedStyleMap?.().has('--rh-color-accent-base')\n    ?? !!getComputedStyle(document.documentElement).getPropertyValue('--rh-color-accent-base'));\n  if (!initialized) {\n    p ??= load();\n    return class ThemableElement extends klass {\n      protected async getUpdateComplete(): Promise<boolean> {\n        await p;\n        return super.getUpdateComplete();\n      }\n    };\n  }\n  return klass;\n}\n"]}