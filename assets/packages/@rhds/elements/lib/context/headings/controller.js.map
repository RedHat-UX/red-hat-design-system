{"version":3,"file":"controller.js","sourceRoot":"","sources":["controller.ts"],"names":[],"mappings":";;AACA,OAAO,EAAE,IAAI,EAAE,MAAM,KAAK,CAAC;AAC3B,OAAO,EAAE,SAAS,EAAE,MAAM,8BAA8B,CAAC;AAEzD,OAAO,EACL,aAAa,GAGd,MAAM,aAAa,CAAC;AAwBrB;;;;;;;;;;;;;;;GAeG;AACH,MAAM,CAAC,MAAM,aAAa,GAAG,IAAI,GAAG,EAAwD,CAAC;AAE7F;;;GAGG;AACH,MAAM,OAAO,sBAAsB;IAOjC,IAAI,KAAK;QACP,OAAO,uBAAA,IAAI,qCAAO,CAAC;IACrB,CAAC;IAED,IAAI,KAAK,CAAC,KAAyC;QACjD,MAAM,GAAG,GAAG,OAAO,KAAK,KAAK,QAAQ,CAAC,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;QAChE,IAAI,OAAO,GAAG,KAAK,QAAQ,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC;YAClD,uBAAA,IAAI,iCAAU,GAAG,MAAA,CAAC;QACpB,CAAC;IACH,CAAC;IAED,YACY,IAAqB;IAC/B,oFAAoF;IAC1E,OAAoC;QAFpC,SAAI,GAAJ,IAAI,CAAiB;QAErB,YAAO,GAAP,OAAO,CAA6B;QAhBhD,wCAAS,CAAC,EAAC;QAkBT,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;QACzB,IAAI,CAAC,MAAM,GAAG,OAAO,EAAE,MAAM,IAAI,CAAC,CAAC;QACnC,IAAI,OAAO,EAAE,MAAM,EAAE,CAAC;YACpB,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC;QACpC,CAAC;aAAM,IAAI,OAAO,EAAE,KAAK,EAAE,CAAC;YAC1B,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC;QAC7B,CAAC;IACH,CAAC;IAID;;OAEG;IACH,IAAI,CAAC,OAAgB,EAAE,OAAqC;QAC1D,MAAM,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC;QACpD,MAAM,EAAE,GAAG,OAAO,EAAE,EAAE,CAAC;QACvB,MAAM,MAAM,GAAG,OAAO,EAAE,MAAM,IAAI,KAAK,CAAC;QACxC,QAAQ,KAAK,EAAE,CAAC;YACd,KAAK,CAAC,CAAC,CAAC,OAAO,IAAI,CAAA,eAAe,MAAM,QAAQ,SAAS,CAAC,EAAE,CAAC,KAAK,OAAO,OAAO,CAAC;YACjF,KAAK,CAAC,CAAC,CAAC,OAAO,IAAI,CAAA,eAAe,MAAM,QAAQ,SAAS,CAAC,EAAE,CAAC,KAAK,OAAO,OAAO,CAAC;YACjF,KAAK,CAAC,CAAC,CAAC,OAAO,IAAI,CAAA,eAAe,MAAM,QAAQ,SAAS,CAAC,EAAE,CAAC,KAAK,OAAO,OAAO,CAAC;YACjF,KAAK,CAAC,CAAC,CAAC,OAAO,IAAI,CAAA,eAAe,MAAM,QAAQ,SAAS,CAAC,EAAE,CAAC,KAAK,OAAO,OAAO,CAAC;YACjF,KAAK,CAAC,CAAC,CAAC,OAAO,IAAI,CAAA,eAAe,MAAM,QAAQ,SAAS,CAAC,EAAE,CAAC,KAAK,OAAO,OAAO,CAAC;YACjF,OAAO,CAAC,CAAC,OAAO,IAAI,CAAA,eAAe,MAAM,QAAQ,SAAS,CAAC,EAAE,CAAC,KAAK,OAAO,OAAO,CAAC;QACpF,CAAC;IACH,CAAC;;;AAhDsB,8BAAO,GAAG,aAAa,CAAS,MAAM,CAAC,0BAA0B,CAAC,CAAC,AAA5D,CAA6D","sourcesContent":["import type { ReactiveController, ReactiveElement, TemplateResult } from 'lit';\nimport { html } from 'lit';\nimport { ifDefined } from 'lit/directives/if-defined.js';\n\nimport {\n  createContext,\n  type ContextRequestEvent,\n  type UnknownContext,\n} from '../event.js';\n\nimport type { HeadingLevelContextConsumer } from './consumer.js';\n\nexport interface HeadingLevelTemplateOptions {\n  id?: string;\n  hidden?: boolean;\n}\n\nexport interface HeadingLevelContextOptions {\n  /** Root Heading level. default 1 */\n  level?: number;\n  /** Heading offset for children. default 1 */\n  offset?: number;\n  /**\n   * Attribute to read on the host which will determine root heading level.\n   */\n  attribute?: string;\n  /**\n   * Only for providers which are also consumers.\n   */\n  parent?: HeadingLevelContextConsumer;\n}\n\n/**\n * Maps from consumer host elements to already-fired request events\n * We hold these in memory in order to re-fire the events every time a new provider connects.\n * This is a hedge against cases where an early-upgrading provider claims an early-upgrading\n * consumer before a late-upgrading provider has a chance to register as the rightful provider\n * @example Monkey-in-the-middle error\n *          In this example, we must re-fire the event from eager-consumer when late-provider\n *          upgrades, so as to ensure that late-provider claims it for itself\n *          ```html\n *          <early-provider>\n *            <late-provider>\n *              <eager-consumer></eager-consumer>\n *            </late-provider>\n *          </early-provider>\n *          ```\n */\nexport const contextEvents = new Map<ReactiveElement, ContextRequestEvent<UnknownContext>>();\n\n/**\n * Determines which heading level immediately precedes the host element,\n * and provides templates for shadow headings.\n */\nexport class HeadingLevelController implements ReactiveController {\n  public static readonly context = createContext<number>(Symbol('rh-heading-level-context'));\n\n  public offset: number;\n\n  #level = 1;\n\n  get level(): number {\n    return this.#level;\n  }\n\n  set level(level: string | number | undefined | null) {\n    const val = typeof level === 'string' ? parseInt(level) : level;\n    if (typeof val === 'number' && !Number.isNaN(val)) {\n      this.#level = val;\n    }\n  }\n\n  constructor(\n    protected host: ReactiveElement,\n    /** Heading level preceding component document, as in 1 for <h1>, 2 for <h2> etc. */\n    protected options?: HeadingLevelContextOptions,\n  ) {\n    host.addController(this);\n    this.offset = options?.offset ?? 1;\n    if (options?.parent) {\n      this.level = options.parent.level;\n    } else if (options?.level) {\n      this.level = options.level;\n    }\n  }\n\n  hostConnected?(): void;\n\n  /**\n   * Wraps any renderable content in a heading, based on heading level\n   */\n  wrap(content: unknown, options?: HeadingLevelTemplateOptions): TemplateResult {\n    const level = Math.max(1, this.level + this.offset);\n    const id = options?.id;\n    const hidden = options?.hidden ?? false;\n    switch (level) {\n      case 1: return html`<h1 ?hidden=${hidden} id=\"${ifDefined(id)}\">${content}</h1>`;\n      case 2: return html`<h2 ?hidden=${hidden} id=\"${ifDefined(id)}\">${content}</h2>`;\n      case 3: return html`<h3 ?hidden=${hidden} id=\"${ifDefined(id)}\">${content}</h3>`;\n      case 4: return html`<h4 ?hidden=${hidden} id=\"${ifDefined(id)}\">${content}</h4>`;\n      case 5: return html`<h5 ?hidden=${hidden} id=\"${ifDefined(id)}\">${content}</h5>`;\n      default: return html`<h6 ?hidden=${hidden} id=\"${ifDefined(id)}\">${content}</h6>`;\n    }\n  }\n}\n"]}