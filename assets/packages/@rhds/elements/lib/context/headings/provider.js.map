{"version":3,"file":"provider.js","sourceRoot":"","sources":["provider.ts"],"names":[],"mappings":"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","sourcesContent":["import { contextEvents, HeadingLevelController } from './controller.js';\n\nimport {\n  ContextRequestEvent,\n  type UnknownContext,\n  type ContextCallback,\n} from '../event.js';\n\nconst SELECTORS = `H1,H2,H3,H4,H5,H6`;\n\n/**\n * **START**\n * `H`\n * named capture group 1 `lvl`:\n * > **0-9**\n * **END**\n */\nconst HLVL_RE = /^H(?<lvl>\\d)$/;\n\nfunction getLevel(heading?: Element | null): number {\n  const { lvl } = heading?.tagName.match(HLVL_RE)?.groups ?? {};\n  return parseInt(lvl ?? '');\n}\n\nfunction canQuery(node: Node): node is Document | ShadowRoot {\n  return typeof (node as Element).querySelectorAll === 'function';\n}\n\n/**\n * Determines which heading level immediately precedes the host element,\n * and provides templates for shadow headings.\n */\nexport class HeadingLevelContextProvider extends HeadingLevelController {\n  /** Cache of context callbacks. Call each to update consumers */\n  #callbacks = new Set<ContextCallback<number>>();\n\n  hostConnected() {\n    this.host.addEventListener('context-request', e =>\n      this.#onChildContextRequestEvent(e as ContextRequestEvent<UnknownContext>));\n    for (const [host, fired] of contextEvents) {\n      host.dispatchEvent(fired);\n    }\n    this.level =\n      this.host.getAttribute(this.options?.attribute ?? '')\n      ?? this.#computeLevelFromChildren();\n  }\n\n  #computeLevelFromChildren() {\n    const { host } = this;\n    const slotted = host.querySelector(SELECTORS);\n    if (slotted && host.shadowRoot) {\n      return getLevel(slotted);\n    } else {\n      const root = host.getRootNode();\n      if (canQuery(root)) {\n        const { localName } = host;\n        const els = [...root.querySelectorAll(`${SELECTORS},${localName}`)];\n        const lastHeadingBeforeHost = els.slice(0, els.indexOf(host)).pop();\n        return getLevel(lastHeadingBeforeHost);\n      }\n    }\n  }\n\n  /**\n   * Was the context event fired requesting our colour-context context?\n   * @param event\n   */\n  #isHeadingContextRequestEvent(\n    event: ContextRequestEvent<UnknownContext>\n  ): event is ContextRequestEvent<typeof HeadingLevelController.context> {\n    return event.target !== this.host && event.context === HeadingLevelController.context;\n  }\n\n  async #onChildContextRequestEvent(event: ContextRequestEvent<UnknownContext>) {\n    // only handle ContextRequestEvents relevant to colour context\n    if (this.#isHeadingContextRequestEvent(event)) {\n      // claim the context-request event for ourselves (required by context protocol)\n      event.stopPropagation();\n\n      // Run the callback to initialize the child's value\n      event.callback(this.level);\n\n      // Cache the callback for future updates, if requested\n      if (event.subscribe) {\n        this.#callbacks.add(event.callback);\n      }\n    }\n  }\n}\n"]}