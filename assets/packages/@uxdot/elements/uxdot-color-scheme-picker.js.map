{"version":3,"file":"uxdot-color-scheme-picker.js","sourceRoot":"","sources":["uxdot-color-scheme-picker.ts"],"names":[],"mappings":";;AAAA,OAAO,EAAE,IAAI,EAAE,QAAQ,EAAE,UAAU,EAAE,MAAM,KAAK,CAAC;AACjD,OAAO,EAAE,aAAa,EAAE,MAAM,kCAAkC,CAAC;AACjE,OAAO,EAAE,QAAQ,EAAE,MAAM,4BAA4B,CAAC;AAEtD,OAAO,EAAE,QAAQ,EAAE,MAAM,oCAAoC,CAAC;;;;AAYvD,IAAM,sBAAsB,GAA5B,MAAM,sBAAuB,SAAQ,UAAU;IAA/C;;;QAGwB,WAAM,GACjC,UAAU,CAAC,YAAY,EAAE,eAAkD,CAAC;IAwDhF,CAAC;IAtDC,iBAAiB;QACf,KAAK,CAAC,iBAAiB,EAAE,CAAC;QAC1B,IAAI,CAAC,QAAQ,EAAE,CAAC;YACd,IAAI,CAAC,MAAM,GAAG,YAAY,CAAC,eAAe,CAAC;QAC7C,CAAC;IACH,CAAC;IAED,YAAY;QACV,8BAA8B;QAC9B,IAAI,CAAC,QAAQ,EAAE,CAAC;YACd,IAAI,CAAC,UAAU,EAAE,aAAa,CAAC,WAAW,IAAI,CAAC,MAAM,IAAI,CAAC,EAAE,eAAe,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;QAC/F,CAAC;IACH,CAAC;IAED,MAAM;QACJ,OAAO,IAAI,CAAA;2BACY,uBAAA,IAAI,2EAAU;;;;;wEAK+B,CAAC,QAAQ,IAAI,IAAI,CAAC,MAAM,KAAK,OAAO;;;;;uEAKrC,CAAC,QAAQ,IAAI,IAAI,CAAC,MAAM,KAAK,MAAM;;;;;6EAK7B,QAAQ,IAAI,IAAI,CAAC,MAAM,KAAK,YAAY;;;;;KAKhH,CAAC;IACJ,CAAC;IASO,aAAa;QACnB,IAAI,IAAI,CAAC,MAAM,EAAE,CAAC;YAChB,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,cAAc,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;YAC7D,IAAI,CAAC,QAAQ,EAAE,CAAC;gBACd,YAAY,CAAC,eAAe,GAAG,IAAI,CAAC,MAAM,CAAC;YAC7C,CAAC;QACH,CAAC;IACH,CAAC;;;6EAdS,CAAQ;IAChB,IAAI,CAAC,CAAC,MAAM,YAAY,gBAAgB,EAAE,CAAC;QACzC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,MAAM,CAAC,KAAuB,CAAC;IACjD,CAAC;AACH,CAAC;AAhDM,6BAAM,GAAG,CAAC,MAAM,EAAE,cAAc,CAAC,AAA3B,CAA4B;AAEZ;IAA5B,QAAQ,CAAC,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;sDACkD;AAgDtE;IADP,QAAQ,CAAC,QAAQ,CAAC;2DAQlB;AA3DU,sBAAsB;IADlC,aAAa,CAAC,2BAA2B,CAAC;GAC9B,sBAAsB,CA4DlC","sourcesContent":["import { html, isServer, LitElement } from 'lit';\nimport { customElement } from 'lit/decorators/custom-element.js';\nimport { property } from 'lit/decorators/property.js';\n\nimport { observes } from '@patternfly/pfe-core/decorators.js';\n\nimport styles from './uxdot-color-scheme-picker.css';\nimport visuallyHidden from './visually-hidden.css';\n\ndeclare global {\n  interface Storage {\n    rhdsColorScheme: 'light' | 'dark' | 'light dark';\n  }\n}\n\n@customElement('uxdot-color-scheme-picker')\nexport class UxdotColorSchemePicker extends LitElement {\n  static styles = [styles, visuallyHidden];\n\n  @property({ reflect: true }) scheme?: 'light' | 'dark' | 'light dark' =\n    globalThis.localStorage?.rhdsColorScheme as 'light' | 'dark' | 'light dark';\n\n  connectedCallback(): void {\n    super.connectedCallback();\n    if (!isServer) {\n      this.scheme = localStorage.rhdsColorScheme;\n    }\n  }\n\n  firstUpdated() {\n    // workaround for ssr mismatch\n    if (!isServer) {\n      this.shadowRoot?.querySelector(`[value=\"${this.scheme}\"]`)?.toggleAttribute('checked', true);\n    }\n  }\n\n  render() {\n    return html`\n      <fieldset @change=\"${this.#onChange}\">\n        <legend>Color scheme:</legend>\n        <div id=\"button-group\">\n          <label title=\"Light\">\n            <span class=\"visually-hidden\">Light</span>\n            <input type=\"radio\" name=\"scheme\" value=\"light\" ?checked=\"${!isServer && this.scheme === 'light'}\">\n            <rh-icon set=\"ui\" icon=\"light-mode\"></rh-icon>\n          </label>\n          <label title=\"Dark\">\n            <span class=\"visually-hidden\">Dark</span>\n            <input type=\"radio\" name=\"scheme\" value=\"dark\" ?checked=\"${!isServer && this.scheme === 'dark'}\">\n            <rh-icon set=\"ui\" icon=\"dark-mode\"></rh-icon>\n          </label>\n          <label title=\"Device default\">\n            <span class=\"visually-hidden\">Device default</span>\n            <input type=\"radio\" name=\"scheme\" value=\"light dark\" ?checked=\"${isServer || this.scheme === 'light dark'}\">\n            <rh-icon set=\"ui\" icon=\"auto-light-dark-mode\"></rh-icon>\n          </label>\n        </div>\n      </fieldset>\n    `;\n  }\n\n  #onChange(e: Event) {\n    if (e.target instanceof HTMLInputElement) {\n      this.scheme = e.target.value as this['scheme'];\n    }\n  }\n\n  @observes('scheme')\n  private schemeChanged() {\n    if (this.scheme) {\n      document.body.style.setProperty('color-scheme', this.scheme);\n      if (!isServer) {\n        localStorage.rhdsColorScheme = this.scheme;\n      }\n    }\n  }\n}\n"]}