{"version":3,"file":"uxdot-repo-status-list.js","sourceRoot":"","sources":["uxdot-repo-status-list.ts"],"names":[],"mappings":";AAAA,OAAO,EAAE,IAAI,EAAE,UAAU,EAAE,MAAM,KAAK,CAAC;AACvC,OAAO,EAAE,aAAa,EAAE,MAAM,kCAAkC,CAAC;AACjE,OAAO,EAAE,QAAQ,EAAE,MAAM,4BAA4B,CAAC;AAEtD,OAAO,EAAE,MAAM,EAAE,MAAM,iBAAiB,CAAC;;;AAMlC,IAAM,mBAAmB,GAAzB,MAAM,mBAAoB,SAAQ,UAAU;IAOzC,aAAa,CAAC,MAAmB;QACvC,IAAI,CAAC,MAAM,EAAE,CAAC;YACZ,OAAO,IAAI,CAAC;QACd,CAAC;QACD,OAAO,MAAM,CAAC,MAAM,CAAC,IAAI,IAAI,CAAC;IAChC,CAAC;IAED,MAAM;QACJ,MAAM,SAAS,GAAG;YAChB,EAAE,GAAG,EAAE,OAAO,EAAE,IAAI,EAAE,eAAe,EAAE,MAAM,EAAE,IAAI,CAAC,WAAW,EAAE;YACjE,EAAE,GAAG,EAAE,MAAM,EAAE,IAAI,EAAE,aAAa,EAAE,MAAM,EAAE,IAAI,CAAC,UAAU,EAAE;YAC7D,EAAE,GAAG,EAAE,QAAQ,EAAE,IAAI,EAAE,gBAAgB,EAAE,MAAM,EAAE,IAAI,CAAC,YAAY,EAAE;SACrE,CAAC;QAEF,OAAO,IAAI,CAAA;;;;;;gBAMC,SAAS,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE;YACxB,MAAM,UAAU,GAAG,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;YAClD,OAAO,UAAU,CAAC,CAAC,CAAC,IAAI,CAAA;;sBAEd,GAAG,CAAC,IAAI;;mCAEK,UAAU,CAAC,KAAK;qCACd,UAAU,CAAC,OAAO;kCACrB,UAAU,CAAC,IAAI,KAAK,UAAU,CAAC,MAAM;;qBAElD,CAAC,CAAC,CAAC,EAAE,CAAC;QACjB,CAAC,CAAC;;;;KAIP,CAAC;IACJ,CAAC;;AA1CM,0BAAM,GAAG,CAAC,KAAK,CAAC,AAAV,CAAW;AAEiB;IAAxC,QAAQ,CAAC,EAAE,SAAS,EAAE,cAAc,EAAE,CAAC;wDAA0B;AAC1B;IAAvC,QAAQ,CAAC,EAAE,SAAS,EAAE,aAAa,EAAE,CAAC;uDAAyB;AACtB;IAAzC,QAAQ,CAAC,EAAE,SAAS,EAAE,eAAe,EAAE,CAAC;yDAA2B;AALzD,mBAAmB;IAD/B,aAAa,CAAC,wBAAwB,CAAC;GAC3B,mBAAmB,CA4C/B","sourcesContent":["import { html, LitElement } from 'lit';\nimport { customElement } from 'lit/decorators/custom-element.js';\nimport { property } from 'lit/decorators/property.js';\n\nimport { legend } from './uxdot-repo.js';\nimport type { RepoStatus } from '../docs/_plugins/types.js';\n\nimport style from './uxdot-repo-status-list.css';\n\n@customElement('uxdot-repo-status-list')\nexport class UxdotRepoStatusList extends LitElement {\n  static styles = [style];\n\n  @property({ attribute: 'figma-status' }) figmaStatus?: RepoStatus;\n  @property({ attribute: 'rhds-status' }) rhdsStatus?: RepoStatus;\n  @property({ attribute: 'shared-status' }) sharedStatus?: RepoStatus;\n\n  private getStatusInfo(status?: RepoStatus) {\n    if (!status) {\n      return null;\n    }\n    return legend[status] || null;\n  }\n\n  render() {\n    const libraries = [\n      { key: 'figma', name: 'Figma library', status: this.figmaStatus },\n      { key: 'rhds', name: 'RH Elements', status: this.rhdsStatus },\n      { key: 'shared', name: 'RH Shared Libs', status: this.sharedStatus },\n    ];\n\n    return html`\n      <!-- TODO: remove lightdom after implementing auto-load-->\n      <link rel=\"stylesheet\" href=\"/assets/packages/@rhds/elements/elements/rh-table/rh-table-lightdom.css\">\n      <div id=\"container\">\n        <a href=\"#status-checklist\" class=\"checklist\">What do these mean?</a>\n        <div id=\"inner-container\">\n          <dl>${libraries.map(lib => {\n            const statusInfo = this.getStatusInfo(lib.status);\n            return statusInfo ? html`\n              <div>\n                <dt>${lib.name}:</dt>\n                <dd>\n                  <rh-tag color=\"${statusInfo.color}\"\n                          variant=\"${statusInfo.variant}\"\n                          icon=\"${statusInfo.icon}\">${statusInfo.pretty}</rh-tag>\n                </dd>\n              </div>` : '';\n          })}\n          </dl>\n        </div>\n      </div>\n    `;\n  }\n}\n"]}