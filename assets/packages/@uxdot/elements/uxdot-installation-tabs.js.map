{"version":3,"file":"uxdot-installation-tabs.js","sourceRoot":"","sources":["uxdot-installation-tabs.ts"],"names":[],"mappings":";;AAAA,OAAO,EAAE,QAAQ,EAAE,MAAM,KAAK,CAAC;AAG/B,OAAO,EAAE,MAAM,EAAE,MAAM,mCAAmC,CAAC;AAC3D,OAAO,EAAE,cAAc,EAAE,MAAM,kCAAkC,CAAC;AAElE,OAAO,qCAAqC,CAAC;AAE7C,MAAM,QAAQ,GAAG,uCAAuC,CAAC;AAGzD,MAAM,OAAO,gBAAiB,SAAQ,MAAM;IAD5C;;;KA0BC;IAtBC,KAAK,CAAC,YAAY;QAChB,KAAK,CAAC,YAAY,EAAE,EAAE,CAAC;QACvB,MAAM,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,CAC1B,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,EAC/B,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,cAAc,CACtB,CAAC,CAAC;QACH,IAAI,gBAAgB,CAAC,MAAM,KAAK,IAAI,EAAE,CAAC;YACrC,MAAM,KAAK,GAAG,QAAQ,CAAC,gBAAgB,CAAC,MAAM,CAAC,CAAC;YAChD,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC;mBACjB,KAAK,KAAK,IAAI,CAAC,WAAW;mBAC1B,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC;gBAC1B,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;YAC3B,CAAC;QACH,CAAC;QACD,IAAI,CAAC,gBAAgB,CAAC,QAAQ,EAAE,uBAAA,IAAI,+DAAU,CAAC,CAAC;IAClD,CAAC;;8GAES,KAAY;IACpB,IAAI,KAAK,YAAY,cAAc,EAAE,CAAC;QACpC,YAAY,CAAC,OAAO,CAAC,QAAQ,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC,CAAC;IAC9D,CAAC;AACH,CAAC;AAvBM,uBAAM,GAAG,CAAC,QAAQ,IAAI,YAAY,CAAC,OAAO,CAAC,QAAQ,CAAC,AAA9C,CAA+C","sourcesContent":["import { isServer } from 'lit';\nimport { customElement } from 'lit/decorators/custom-element.js';\n\nimport { RhTabs } from '@rhds/elements/rh-tabs/rh-tabs.js';\nimport { TabExpandEvent } from '@rhds/elements/rh-tabs/rh-tab.js';\n\nimport '@rhds/elements/rh-alert/rh-alert.js';\n\nconst TABS_KEY = 'rhds-installation-tabs-selected-index';\n\n@customElement('uxdot-installation-tabs')\nexport class InstallationTabs extends RhTabs {\n  static stored = !isServer && localStorage.getItem(TABS_KEY);\n\n  async firstUpdated() {\n    super.firstUpdated?.();\n    await Promise.all(Array.from(\n      this.querySelectorAll('rh-tab'),\n      x => x.updateComplete,\n    ));\n    if (InstallationTabs.stored !== null) {\n      const index = parseInt(InstallationTabs.stored);\n      if (!Number.isNaN(index)\n          && index !== this.activeIndex\n          && this.panels[index]) {\n        this.activeIndex = index;\n      }\n    }\n    this.addEventListener('expand', this.#onExpand);\n  }\n\n  #onExpand(event: Event) {\n    if (event instanceof TabExpandEvent) {\n      localStorage.setItem(TABS_KEY, this.activeIndex.toString());\n    }\n  }\n}\n"]}