{"version":3,"file":"uxdot-pattern-ssr-controller-client.js","sourceRoot":"","sources":["uxdot-pattern-ssr-controller-client.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,iBAAiB,EAAE,MAAM,sCAAsC,CAAC;AACzE,OAAO,EAAE,QAAQ,EAAmB,MAAM,KAAK,CAAC;AAEhD,+CAA+C;AAC/C,MAAM,OAAO,+BAAgC,SAAQ,iBAAiB;IAAtE;;QACE,eAAU,GAAG,QAAQ,CAAC;QACtB,gBAAW,GAAG,QAAQ,CAAC;QACvB,cAAS,GAAG,QAAQ,CAAC;QACrB,eAAU,GAAG,QAAQ,CAAC;QACtB,WAAM,GAAG,QAAQ,CAAC;QAClB,UAAK,GAAG,QAAQ,CAAC;QACjB,iCAA4B,GAAG,KAAK,CAAC;IA0BvC,CAAC;IAzBC,KAAK,CAAC,aAAa;QACjB,MAAM,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC;QAC/B,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,eAAe,EAAE,IAAI,CAAC,CAAC;QAC/C,MAAM,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC;QAC/B,4EAA4E;QAC5E,MAAM,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,UAAW,CAAC,gBAAgB,CAAC,YAAY,CAAC,CAAC;QACxE,IAAI,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;YAC1B,MAAM,CAAC,EAAE,GAAG,IAAI,CAAC,GAAG,UAAU,CAAC;YAC/B,KAAK,MAAM,GAAG,IAAI,IAAI,EAAE,CAAC;gBACvB,GAAG,CAAC,MAAM,EAAE,CAAC;YACf,CAAC;YACD,KAAK,MAAM,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,UAAW,CAAC,gBAAgB,CAAC,mBAAmB,CAAC,EAAE,CAAC;gBAC/E,IAAI,CAAC,eAAe,CAAC,iBAAiB,CAAC,CAAC;gBACvC,IAAmB,CAAC,aAAa,EAAE,EAAE,CAAC;YACzC,CAAC;YACD,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE,CAAC;QAC5B,CAAC;QACD,IAAI,CAAC,4BAA4B,KAAjC,IAAI,CAAC,4BAA4B,IAAM,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE,EAAE,IAAI,GAAE;IAC1E,CAAC;IAED,WAAW;QACT,IAAI,CAAC,IAAI,CAAC,4BAA4B,EAAE,CAAC;YACvC,IAAI,CAAC,aAAa,EAAE,CAAC;QACvB,CAAC;IACH,CAAC;CACF","sourcesContent":["import { RHDSSSRController } from '@rhds/elements/lib/ssr-controller.js';\nimport { noChange, type LitElement } from 'lit';\n\n/** Hydrate the results of SSR on the client */\nexport class UxdotPatternSSRControllerClient extends RHDSSSRController {\n  allContent = noChange;\n  htmlContent = noChange;\n  jsContent = noChange;\n  cssContent = noChange;\n  hasCss = noChange;\n  hasJs = noChange;\n  hasWorkedAroundHydrationWoes = false;\n  async hostConnected() {\n    await this.host.updateComplete;\n    this.host.requestUpdate('color-palette', null);\n    await this.host.updateComplete;\n    // workaround for awful terrible no good very bad ssr hydration lib problems\n    const containers = this.host.shadowRoot!.querySelectorAll('#container');\n    if (containers.length > 1) {\n      const [, ...rest] = containers;\n      for (const bad of rest) {\n        bad.remove();\n      }\n      for (const sigh of this.host.shadowRoot!.querySelectorAll('[defer-hydration]')) {\n        sigh.removeAttribute('defer-hydration');\n        (sigh as LitElement).requestUpdate?.();\n      }\n      this.host.requestUpdate();\n    }\n    this.hasWorkedAroundHydrationWoes ||= (this.host.requestUpdate(), true);\n  }\n\n  hostUpdated() {\n    if (!this.hasWorkedAroundHydrationWoes) {\n      this.hostConnected();\n    }\n  }\n}\n\n"]}