{"version":3,"file":"uxdot-example.js","sourceRoot":"","sources":["uxdot-example.ts"],"names":[],"mappings":";AAAA,OAAO,EAAE,UAAU,EAAE,IAAI,EAAE,MAAM,KAAK,CAAC;AACvC,OAAO,EAAE,QAAQ,EAAE,MAAM,6BAA6B,CAAC;AAEvD,OAAO,EAAE,aAAa,EAAqB,MAAM,sCAAsC,CAAC;AACxF,OAAO,EAAE,QAAQ,EAAE,MAAM,gCAAgC,CAAC;AAE1D,OAAO,EAAE,QAAQ,EAAE,MAAM,4BAA4B,CAAC;AACtD,OAAO,EAAE,aAAa,EAAE,MAAM,kCAAkC,CAAC;;;AAO1D,IAAM,YAAY,GAAlB,MAAM,YAAa,SAAQ,UAAU;IAArC;;QASL,oCAAoC;QAEpC,gBAAW,GAAG,KAAK,CAAC;QAMpB,uCAAuC;QAEvC,oBAAe,GAAG,MAAM,CAAC;QAEzB,iDAAiD;QAEjD,aAAQ,GAAG,KAAK,CAAC;QAEjB,mBAAmB;QAEnB,WAAM,GAAG,KAAK,CAAC;QAGf,cAAS,GAAG,QAAQ,CAAC;IAavB,CAAC;IAXC,MAAM;QACJ,MAAM,EAAE,eAAe,EAAE,SAAS,EAAE,GAAG,IAAI,CAAC;QAC5C,OAAO,IAAI,CAAA;;;oBAGK,QAAQ,CAAC,EAAE,eAAe,EAAE,eAAe,KAAK,MAAM,EAAE,CAAC;8BAC/C,eAAe,mBAAmB,SAAS;;;KAGpE,CAAC;IACJ,CAAC;;AAzCM,mBAAM,GAAG,CAAC,MAAM,CAAC,AAAX,CAAY;AAMzB;IADC,QAAQ,CAAC,EAAE,OAAO,EAAE,IAAI,EAAE,SAAS,EAAE,eAAe,EAAE,CAAC;kDAC5B;AAI5B;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;iDACR;AAIpB;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;6CACzB;AAIjB;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,kBAAkB,EAAE,CAAC;qDACjC;AAIzB;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,WAAW,EAAE,CAAC;8CACnC;AAIjB;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;4CAC5B;AAGf;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;+CACN;AA9BV,YAAY;IAHxB,aAAa,CAAC,eAAe,CAAC;IAC9B,aAAa;IACb,QAAQ;GACI,YAAY,CA2CxB","sourcesContent":["import { LitElement, html } from 'lit';\nimport { classMap } from 'lit/directives/class-map.js';\n\nimport { colorPalettes, type ColorPalette } from '@rhds/elements/lib/color-palettes.js';\nimport { themable } from '@rhds/elements/lib/themable.js';\n\nimport { property } from 'lit/decorators/property.js';\nimport { customElement } from 'lit/decorators/custom-element.js';\n\nimport styles from './uxdot-example.css';\n\n@customElement('uxdot-example')\n@colorPalettes\n@themable\nexport class UxdotExample extends LitElement {\n  static styles = [styles];\n\n  /**\n   * Sets color context for child components, overrides parent context\n   */\n  @property({ reflect: true, attribute: 'color-palette' })\n  colorPalette?: ColorPalette;\n\n  /* force a transparent background */\n  @property({ type: Boolean })\n  transparent = false;\n\n  /* full width variant with no padding */\n  @property({ type: String, reflect: true })\n  variant?: 'full';\n\n  /* width in pixels, defaults to 100% */\n  @property({ type: String, attribute: 'width-adjustment' })\n  widthAdjustment = '100%';\n\n  /* display a border around the example content */\n  @property({ type: Boolean, attribute: 'no-border' })\n  noBorder = false;\n\n  /* danger status */\n  @property({ type: Boolean, reflect: true })\n  danger = false;\n\n  @property({ type: String })\n  alignment = 'center';\n\n  render() {\n    const { widthAdjustment, alignment } = this;\n    return html`\n      <div id=\"container\"\n           part=\"container\"\n           class=\"${classMap({ widthAdjustment: widthAdjustment !== '100%' })}\"\n           style=\"--_width: ${widthAdjustment}; --_alignment: ${alignment}\">\n        <slot></slot>\n      </div>\n    `;\n  }\n}\n"]}