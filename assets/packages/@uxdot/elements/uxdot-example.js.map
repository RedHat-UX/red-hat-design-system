{"version":3,"file":"uxdot-example.js","sourceRoot":"","sources":["uxdot-example.ts"],"names":[],"mappings":";AAAA,OAAO,EAAE,UAAU,EAAE,IAAI,EAAE,MAAM,KAAK,CAAC;AACvC,OAAO,EAAE,QAAQ,EAAE,MAAM,6BAA6B,CAAC;AAEvD,OAAO,EACL,oBAAoB,GAErB,MAAM,8CAA8C,CAAC;AAEtD,OAAO,EACL,oBAAoB,GAErB,MAAM,8CAA8C,CAAC;;;AAQtD,MAAM,OAAO,YAAa,SAAQ,UAAU;;;QAe1C,oCAAoC;QACpC,mBACc,KAAK,CAAC;QAMpB,uCAAuC;QACvC,uBACkB,MAAM,CAAC;QAEzB,iDAAiD;QACjD,gBACW,KAAK,CAAC;QAEjB,mBAAmB;QACnB,cACS,KAAK,CAAC;QAEf,iBACY,QAAQ,CAAC;;IAErB,MAAM;QACJ,MAAM,EAAE,EAAE,GAAG,EAAE,EAAE,eAAe,EAAE,SAAS,EAAE,GAAG,IAAI,CAAC;QACrD,OAAO,IAAI,CAAA;;;uBAGQ,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,eAAe,EAAE,eAAe,KAAK,MAAM,EAAE,CAAC;8BAC9D,eAAe,mBAAmB,SAAS;;;KAGpE,CAAC;IACJ,CAAC;;;kBAzCS,EAAE,OAAO,EAAE,IAAI,EAAE,SAAS,EAAE,eAAe,EAAE;iBAS7C,EAAE,IAAI,EAAE,OAAO,EAAE;aAIjB,EAAE,IAAI,EAAE,MAAM,EAAE,OAAO,EAAE,IAAI,EAAE;qBAI/B,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,kBAAkB,EAAE;cAI/C,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,WAAW,EAAE;YAIzC,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE;eAGhC,EAAE,IAAI,EAAE,MAAM,EAAE;;AAlCnB,mBAAM,GAAG,CAAC,MAAM,CAAC,AAAX,CAAY;AAYO;IAA/B,oBAAoB,EAAE;wCAAyB","sourcesContent":["import { LitElement, html } from 'lit';\nimport { classMap } from 'lit/directives/class-map.js';\n\nimport {\n  colorContextProvider,\n  type ColorPalette,\n} from '@rhds/elements/lib/context/color/provider.js';\n\nimport {\n  colorContextConsumer,\n  type ColorTheme,\n} from '@rhds/elements/lib/context/color/consumer.js';\n\nimport { property } from 'lit/decorators/property.js';\nimport { customElement } from 'lit/decorators/custom-element.js';\n\nimport styles from './uxdot-example.css';\n\n@customElement('uxdot-example')\nexport class UxdotExample extends LitElement {\n  static styles = [styles];\n\n  /**\n   * Sets color context for child components, overrides parent context\n   */\n  @colorContextProvider()\n  @property({ reflect: true, attribute: 'color-palette' })\n  colorPalette?: ColorPalette;\n\n  /**\n   * Sets color theme based on parent context\n   */\n  @colorContextConsumer() private on?: ColorTheme;\n\n  /* force a transparent background */\n  @property({ type: Boolean })\n  transparent = false;\n\n  /* full width variant with no padding */\n  @property({ type: String, reflect: true })\n  variant?: 'full';\n\n  /* width in pixels, defaults to 100% */\n  @property({ type: String, attribute: 'width-adjustment' })\n  widthAdjustment = '100%';\n\n  /* display a border around the example content */\n  @property({ type: Boolean, attribute: 'no-border' })\n  noBorder = false;\n\n  /* danger status */\n  @property({ type: Boolean, reflect: true })\n  danger = false;\n\n  @property({ type: String })\n  alignment = 'center';\n\n  render() {\n    const { on = '', widthAdjustment, alignment } = this;\n    return html`\n      <div id=\"container\"\n           part=\"container\"\n           class=\"on ${classMap({ [on]: !!on, widthAdjustment: widthAdjustment !== '100%' })}\"\n           style=\"--_width: ${widthAdjustment}; --_alignment: ${alignment}\">\n        <slot></slot>\n      </div>\n    `;\n  }\n}\n"]}