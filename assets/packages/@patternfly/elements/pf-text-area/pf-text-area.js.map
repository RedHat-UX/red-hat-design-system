{"version":3,"file":"pf-text-area.js","sourceRoot":"","sources":["pf-text-area.ts"],"names":[],"mappings":"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","sourcesContent":["import { LitElement, html, isServer, type TemplateResult } from 'lit';\nimport { customElement } from 'lit/decorators/custom-element.js';\nimport { property } from 'lit/decorators/property.js';\nimport { ifDefined } from 'lit/directives/if-defined.js';\nimport { classMap } from 'lit/directives/class-map.js';\n\nimport { InternalsController } from '@patternfly/pfe-core/controllers/internals-controller.js';\n\nimport styles from './pf-text-area.css';\nimport { Logger } from '@patternfly/pfe-core/controllers/logger.js';\n\n/**\n * A **text area** component is used for entering a paragraph of text that is longer than one line.\n * @cssprop [--pf-c-form-control--Color=var(--pf-global--Color--100, #151515)] -\n * @cssprop [--pf-c-form-control--FontSize=var(--pf-global--FontSize--md, 1rem)] -\n * @cssprop [--pf-c-form-control--LineHeight=var(--pf-global--LineHeight--md, 1.5)] -\n * @cssprop [--pf-c-form-control--BorderWidth=var(--pf-global--BorderWidth--sm, 1px)] -\n * @cssprop [--pf-c-form-control--BorderTopColor=var(--pf-global--BorderColor--300, #f0f0f0)] -\n * @cssprop [--pf-c-form-control--BorderRightColor=var(--pf-global--BorderColor--300, #f0f0f0)] -\n * @cssprop [--pf-c-form-control--BorderBottomColor=var(--pf-global--BorderColor--200, #8a8d90)] -\n * @cssprop [--pf-c-form-control--BorderLeftColor=var(--pf-global--BorderColor--300, #f0f0f0)] -\n * @cssprop [--pf-c-form-control--BorderRadius=0] -\n * @cssprop [--pf-c-form-control--BackgroundColor=var(--pf-global--BackgroundColor--100, #fff)] -\n * @cssprop [--pf-c-form-control--Width=100] -\n * @cssprop [--pf-c-form-control--Height=calc(var(--pf-c-form-control--FontSize) * var(--pf-c-form-control--LineHeight) + var(--pf-c-form-control--BorderWidth) * 2 + var(--pf-c-form-control--PaddingTop) + var(--pf-c-form-control--PaddingBottom))] -\n * @cssprop [--pf-c-form-control--inset--base=var(--pf-global--spacer--sm, 0.5rem)] -\n * @cssprop [--pf-c-form-control--PaddingTop=calc(var(--pf-global--spacer--form-element, 0.375rem) - var(--pf-global--BorderWidth--sm, 1px))] -\n * @cssprop [--pf-c-form-control--PaddingBottom=calc(var(--pf-global--spacer--form-element, 0.375rem) - var(--pf-global--BorderWidth--sm, 1px))] -\n * @cssprop [--pf-c-form-control--PaddingRight=var(--pf-c-form-control--inset--base)] -\n * @cssprop [--pf-c-form-control--PaddingLeft=var(--pf-c-form-control--inset--base)] -\n * @cssprop [--pf-c-form-control--hover--BorderBottomColor=var(--pf-global--primary-color--100, #06c)] -\n * @cssprop [--pf-c-form-control--focus--BorderBottomWidth=var(--pf-global--BorderWidth--md, 2px)] -\n * @cssprop [--pf-c-form-control--focus--PaddingBottom=calc(var(--pf-global--spacer--form-element, 0.375rem) - var(--pf-c-form-control--focus--BorderBottomWidth))] -\n * @cssprop [--pf-c-form-control--focus--BorderBottomColor=var(--pf-global--primary-color--100, #06c)] -\n * @cssprop [--pf-c-form-control--m-expanded--BorderBottomWidth=var(--pf-global--BorderWidth--md, 2px)] -\n * @cssprop [--pf-c-form-control--m-expanded--PaddingBottom=calc(var(--pf-global--spacer--form-element, 0.375rem) - var(--pf-c-form-control--focus--BorderBottomWidth))] -\n * @cssprop [--pf-c-form-control--m-expanded--BorderBottomColor=var(--pf-global--primary-color--100, #06c)] -\n * @cssprop [--pf-c-form-control--placeholder--Color=var(--pf-global--Color--dark-200, #6a6e73)] -\n * @cssprop [--pf-c-form-control--placeholder--child--Color=var(--pf-global--Color--100, #151515)] -\n * @cssprop [--pf-c-form-control--disabled--Color=var(--pf-global--disabled-color--100, #6a6e73)] -\n * @cssprop [--pf-c-form-control--disabled--BackgroundColor=var(--pf-global--disabled-color--300, #f0f0f0)] -\n * @cssprop [--pf-c-form-control--disabled--BorderColor=transparent] -\n * @cssprop [--pf-c-form-control--readonly--BackgroundColor=var(--pf-global--disabled-color--300, #f0f0f0)] -\n * @cssprop [--pf-c-form-control--readonly--hover--BorderBottomColor=var(--pf-global--BorderColor--200, #8a8d90)] -\n * @cssprop [--pf-c-form-control--readonly--focus--PaddingBottom=calc(var(--pf-global--spacer--form-element, 0.375rem) - var(--pf-global--BorderWidth--sm, 1px))] -\n * @cssprop [--pf-c-form-control--readonly--focus--BorderBottomWidth=var(--pf-global--BorderWidth--sm, 1px)] -\n * @cssprop [--pf-c-form-control--readonly--focus--BorderBottomColor=var(--pf-global--BorderColor--200, #8a8d90)] -\n * @cssprop [--pf-c-form-control--readonly--m-plain--BackgroundColor=transparent] -\n * @cssprop [--pf-c-form-control--readonly--m-plain--inset--base=0] -\n * @cssprop [--pf-c-form-control--success--BorderBottomWidth=var(--pf-global--BorderWidth--md, 2px)] -\n * @cssprop [--pf-c-form-control--success--PaddingBottom=calc(var(--pf-global--spacer--form-element, 0.375rem) - var(--pf-c-form-control--success--BorderBottomWidth))] -\n * @cssprop [--pf-c-form-control--success--BorderBottomColor=var(--pf-global--success-color--100, #3e8635)] -\n * @cssprop [--pf-c-form-control--success--PaddingRight=var(--pf-global--spacer--xl, 2rem)] -\n * @cssprop [--pf-c-form-control--success--BackgroundPositionX=calc(100 - var(--pf-c-form-control--PaddingLeft))] -\n * @cssprop [--pf-c-form-control--success--BackgroundPositionY=center] -\n * @cssprop [--pf-c-form-control--success--BackgroundPosition=var(--pf-c-form-control--success--BackgroundPositionX) var(--pf-c-form-control--success--BackgroundPositionY)] -\n * @cssprop [--pf-c-form-control--success--BackgroundSizeX=var(--pf-c-form-control--FontSize)] -\n * @cssprop [--pf-c-form-control--success--BackgroundSizeY=var(--pf-c-form-control--FontSize)] -\n * @cssprop [--pf-c-form-control--success--BackgroundSize=var(--pf-c-form-control--success--BackgroundSizeX) var(--pf-c-form-control--success--BackgroundSizeY)] -\n * @cssprop --pf-c-form-control--success--BackgroundUrl\n * @cssprop [--pf-c-form-control--m-warning--BorderBottomWidth=var(--pf-global--BorderWidth--md, 2px)] -\n * @cssprop [--pf-c-form-control--m-warning--PaddingBottom=calc(var(--pf-global--spacer--form-element, 0.375rem) - var(--pf-c-form-control--m-warning--BorderBottomWidth))] -\n * @cssprop [--pf-c-form-control--m-warning--BorderBottomColor=var(--pf-global--warning-color--100, #f0ab00)] -\n * @cssprop [--pf-c-form-control--m-warning--PaddingRight=var(--pf-global--spacer--xl, 2rem)] -\n * @cssprop [--pf-c-form-control--m-warning--BackgroundPositionX=calc(100 - calc(var(--pf-c-form-control--PaddingLeft) - 0.0625rem))] -\n * @cssprop [--pf-c-form-control--m-warning--BackgroundPositionY=center] -\n * @cssprop [--pf-c-form-control--m-warning--BackgroundPosition=var(--pf-c-form-control--m-warning--BackgroundPositionX) var(--pf-c-form-control--m-warning--BackgroundPositionY)] -\n * @cssprop [--pf-c-form-control--m-warning--BackgroundSizeX=1.25rem] -\n * @cssprop [--pf-c-form-control--m-warning--BackgroundSizeY=var(--pf-c-form-control--FontSize)] -\n * @cssprop [--pf-c-form-control--m-warning--BackgroundSize=var(--pf-c-form-control--m-warning--BackgroundSizeX) var(--pf-c-form-control--m-warning--BackgroundSizeY)] -\n * @cssprop --pf-c-form-control--m-warning--BackgroundUrl -\n * @cssprop [--pf-c-form-control--invalid--BorderBottomWidth=var(--pf-global--BorderWidth--md, 2px)] -\n * @cssprop [--pf-c-form-control--invalid--PaddingBottom=calc(var(--pf-global--spacer--form-element, 0.375rem) - var(--pf-c-form-control--invalid--BorderBottomWidth))] -\n * @cssprop [--pf-c-form-control--invalid--BorderBottomColor=var(--pf-global--danger-color--100, #c9190b)] -\n * @cssprop [--pf-c-form-control--invalid--PaddingRight=var(--pf-global--spacer--xl, 2rem)] -\n * @cssprop [--pf-c-form-control--invalid--BackgroundPositionX=calc(100 - var(--pf-c-form-control--PaddingLeft))] -\n * @cssprop [--pf-c-form-control--invalid--BackgroundPositionY=center] -\n * @cssprop [--pf-c-form-control--invalid--BackgroundPosition=var(--pf-c-form-control--invalid--BackgroundPositionX) var(--pf-c-form-control--invalid--BackgroundPositionY)] -\n * @cssprop [--pf-c-form-control--invalid--BackgroundSizeX=var(--pf-c-form-control--FontSize)] -\n * @cssprop [--pf-c-form-control--invalid--BackgroundSizeY=var(--pf-c-form-control--FontSize)] -\n * @cssprop [--pf-c-form-control--invalid--BackgroundSize=var(--pf-c-form-control--invalid--BackgroundSizeX) var(--pf-c-form-control--invalid--BackgroundSizeY)] -\n * @cssprop --pf-c-form-control--invalid--BackgroundUrl -\n * @cssprop [--pf-c-form-control--invalid--exclamation--Background=var(--pf-c-form-control--invalid--BackgroundUrl) var(--pf-c-form-control--invalid--BackgroundPosition) / var(--pf-c-form-control--invalid--BackgroundSize) no-repeat] -\n * @cssprop [--pf-c-form-control--invalid--Background=var(--pf-c-form-control--BackgroundColor) var(--pf-c-form-control--invalid--exclamation--Background)] -\n * @cssprop [--pf-c-form-control--m-search--PaddingLeft=var(--pf-global--spacer--xl, 2rem)] -\n * @cssprop [--pf-c-form-control--m-search--BackgroundPosition=var(--pf-c-form-control--PaddingRight)] -\n * @cssprop [--pf-c-form-control--m-search--BackgroundSize=var(--pf-c-form-control--FontSize) var(--pf-c-form-control--FontSize)] -\n * @cssprop [--pf-c-form-control--m-search--BackgroundUrl=] -\n * @cssprop [--pf-c-form-control--m-icon--PaddingRight=calc(var(--pf-c-form-control--inset--base) + var(--pf-c-form-control--m-icon--BackgroundSizeX) + var(--pf-c-form-control--m-icon--icon--spacer))] -\n * @cssprop [--pf-c-form-control--m-icon--BackgroundUrl=none] -\n * @cssprop [--pf-c-form-control--m-icon--BackgroundPositionX=calc(100 - var(--pf-c-form-control--inset--base))] -\n * @cssprop [--pf-c-form-control--m-icon--BackgroundPositionY=center] -\n * @cssprop [--pf-c-form-control--m-icon--BackgroundSizeX=var(--pf-c-form-control--FontSize)] -\n * @cssprop [--pf-c-form-control--m-icon--BackgroundSizeY=var(--pf-c-form-control--FontSize)] -\n * @cssprop [--pf-c-form-control--m-icon--icon--spacer=var(--pf-global--spacer--sm, 0.5rem)] -\n * @cssprop [--pf-c-form-control--m-icon--icon--PaddingRight=calc(var(--pf-c-form-control--inset--base) + var(--pf-c-form-control--invalid--BackgroundSizeX) + var(--pf-c-form-control--m-icon--icon--spacer) + var(--pf-c-form-control--m-icon--BackgroundSizeX) + var(--pf-c-form-control--m-icon--icon--spacer))] -\n * @cssprop [--pf-c-form-control--m-icon--icon--BackgroundPositionX=calc(var(--pf-c-form-control--m-icon--BackgroundPositionX) - var(--pf-c-form-control--m-icon--icon--spacer) - var(--pf-c-form-control--invalid--BackgroundSizeX))] -\n * @cssprop [--pf-c-form-control--m-icon--invalid--BackgroundUrl=var(--pf-c-form-control--invalid--BackgroundUrl), var(--pf-c-form-control--m-icon--BackgroundUrl)] -\n * @cssprop [--pf-c-form-control--m-icon--invalid--BackgroundPosition=var(--pf-c-form-control--invalid--BackgroundPosition), var(--pf-c-form-control--m-icon--icon--BackgroundPositionX) var(--pf-c-form-control--m-icon--BackgroundPositionY)] -\n * @cssprop [--pf-c-form-control--m-icon--invalid--BackgroundSize=var(--pf-c-form-control--invalid--BackgroundSize), var(--pf-c-form-control--m-icon--BackgroundSizeX) var(--pf-c-form-control--m-icon--BackgroundSizeY)] -\n * @cssprop [--pf-c-form-control--m-icon--success--BackgroundUrl=var(--pf-c-form-control--success--BackgroundUrl), var(--pf-c-form-control--m-icon--BackgroundUrl)] -\n * @cssprop [--pf-c-form-control--m-icon--success--BackgroundPosition=var(--pf-c-form-control--success--BackgroundPosition), var(--pf-c-form-control--m-icon--icon--BackgroundPositionX) var(--pf-c-form-control--m-icon--BackgroundPositionY)] -\n * @cssprop [--pf-c-form-control--m-icon--success--BackgroundSize=var(--pf-c-form-control--success--BackgroundSize), var(--pf-c-form-control--m-icon--BackgroundSizeX) var(--pf-c-form-control--m-icon--BackgroundSizeY)] -\n * @cssprop [--pf-c-form-control--m-icon--m-warning--BackgroundUrl=var(--pf-c-form-control--m-warning--BackgroundUrl), var(--pf-c-form-control--m-icon--BackgroundUrl)] -\n * @cssprop [--pf-c-form-control--m-icon--m-warning--BackgroundPosition=var(--pf-c-form-control--m-warning--BackgroundPosition), var(--pf-c-form-control--m-icon--icon--BackgroundPositionX) var(--pf-c-form-control--m-icon--BackgroundPositionY)] -\n * @cssprop [--pf-c-form-control--m-icon--m-warning--BackgroundSize=var(--pf-c-form-control--m-warning--BackgroundSize), var(--pf-c-form-control--m-icon--BackgroundSizeX) var(--pf-c-form-control--m-icon--BackgroundSizeY)] -\n * @cssprop --pf-c-form-control--m-calendar--BackgroundUrl -\n * @cssprop --pf-c-form-control--m-clock--BackgroundUrl -\n * @cssprop [--pf-c-form-control__select--PaddingRight=calc(var(--pf-global--spacer--lg, 1.5rem) + var(--pf-c-form-control--BorderWidth) + var(--pf-c-form-control--BorderWidth))] -\n * @cssprop [--pf-c-form-control__select--PaddingLeft=calc(var(--pf-global--spacer--sm, 0.5rem) - var(--pf-c-form-control--BorderWidth))] -\n * @cssprop --pf-c-form-control__select--BackgroundUrl -\n * @cssprop [--pf-c-form-control__select--BackgroundSize=.625em] -\n * @cssprop [--pf-c-form-control__select--BackgroundPositionX=calc(100 - var(--pf-global--spacer--md, 1rem) + 1px)] -\n * @cssprop [--pf-c-form-control__select--BackgroundPositionY=center] -\n * @cssprop [--pf-c-form-control__select--BackgroundPosition=var(--pf-c-form-control__select--BackgroundPositionX) var(--pf-c-form-control__select--BackgroundPositionY)] -\n * @cssprop [--pf-c-form-control__select--success--PaddingRight=var(--pf-global--spacer--3xl, 4rem)] -\n * @cssprop [--pf-c-form-control__select--success--BackgroundPosition=calc(var(--pf-c-form-control__select--BackgroundPositionX) - var(--pf-global--spacer--lg, 1.5rem))] -\n * @cssprop [--pf-c-form-control__select--m-warning--PaddingRight=var(--pf-global--spacer--3xl, 4rem)] -\n * @cssprop [--pf-c-form-control__select--m-warning--BackgroundPosition=calc(var(--pf-c-form-control__select--BackgroundPositionX) - var(--pf-global--spacer--lg, 1.5rem) + 0.0625rem)] -\n * @cssprop [--pf-c-form-control__select--invalid--PaddingRight=var(--pf-global--spacer--3xl, 4rem)] -\n * @cssprop [--pf-c-form-control__select--invalid--BackgroundPosition=calc(var(--pf-c-form-control__select--BackgroundPositionX) - var(--pf-global--spacer--lg, 1.5rem))] -\n * @cssprop [--pf-c-form-control--textarea--Width=var(--pf-c-form-control--Width)] -\n * @cssprop [--pf-c-form-control--textarea--Height=auto] -\n * @cssprop [--pf-c-form-control--textarea--success--BackgroundPositionY=var(--pf-c-form-control--PaddingLeft)] -\n * @cssprop [--pf-c-form-control--textarea--m-warning--BackgroundPositionY=var(--pf-c-form-control--PaddingLeft)] -\n * @cssprop [--pf-c-form-control--textarea--invalid--BackgroundPositionY=var(--pf-c-form-control--PaddingLeft)] -\n * @cssprop --pf-c-form-control--m-icon-sprite--success--BackgroundUrl -\n * @cssprop --pf-c-form-control--m-icon-sprite--m-warning--BackgroundUrl -\n * @cssprop --pf-c-form-control--m-icon-sprite--invalid--BackgroundUrl -\n * @cssprop --pf-c-form-control--m-icon-sprite__select--BackgroundUrl -\n * @cssprop --pf-c-form-control--m-icon-sprite--m-search--BackgroundUrl -\n * @cssprop --pf-c-form-control--m-icon-sprite--m-calendar--BackgroundUrl -\n * @cssprop --pf-c-form-control--m-icon-sprite--m-clock--BackgroundUrl -\n * @cssprop [--pf-c-form-control--m-icon-sprite__select--BackgroundSize=var(--pf-c-form-control--FontSize)] -\n * @cssprop [--pf-c-form-control--m-icon-sprite__select--BackgroundPositionX=calc(100 - var(--pf-global--spacer--md, 1rem) + 7px)] -\n * @cssprop [--pf-c-form-control--m-icon-sprite__select--success--BackgroundPosition=calc(100 - var(--pf-global--spacer--md, 1rem) + 1px - var(--pf-global--spacer--lg, 1.5rem))] -\n * @cssprop [--pf-c-form-control--m-icon-sprite__select--m-warning--BackgroundPosition=calc(100 - var(--pf-global--spacer--md, 1rem) - var(--pf-global--spacer--lg, 1.5rem) + 0.0625rem)] -\n * @cssprop [--pf-c-form-control--m-icon-sprite__select--invalid--BackgroundPosition=calc(100 - var(--pf-global--spacer--md, 1rem) - var(--pf-global--spacer--lg, 1.5rem))] -\n */\n@customElement('pf-text-area')\nexport class PfTextArea extends LitElement {\n  static readonly styles: CSSStyleSheet[] = [styles];\n\n  static readonly formAssociated = true;\n\n  static override readonly shadowRootOptions: ShadowRootInit = {\n    ...LitElement.shadowRootOptions,\n    delegatesFocus: true,\n  };\n\n  /** Accessible label for the input when no `<label>` element is provided. */\n  @property({ reflect: true, attribute: 'accessible-label' }) accessibleLabel?: string;\n\n  /**\n   * Value to indicate if the input is modified to show that validation state.\n   * If set to success, input will be modified to indicate valid state.\n   * If set to warning,  input will be modified to indicate warning state.\n   * Invalid inputs will display an error state\n   */\n  @property({ reflect: true }) validated?: 'success' | 'warning';\n\n  /** Flag to show if the input is disabled. */\n  @property({ type: Boolean, reflect: true }) disabled = false;\n\n  /** Flag to show if the text area is required. */\n  @property({ type: Boolean, reflect: true }) required = false;\n\n  /** Flag to show if the input is read only. */\n  @property({ type: Boolean, reflect: true }) readonly = false;\n\n  /** Input placeholder. */\n  @property() placeholder?: string;\n\n  /** Value of the input. */\n  @property() value = '';\n\n  /** Sets the orientation to limit the resize to */\n  @property() resize?: 'horizontal' | 'vertical' | 'both';\n\n  /** Flag to modify height based on contents. */\n  @property({ type: Boolean, attribute: 'auto-resize' }) autoResize = false;\n\n  #logger = new Logger(this);\n\n  #internals = InternalsController.of(this);\n\n  #derivedLabel = '';\n\n  get #disabled() {\n    return (!isServer && this.matches(':disabled')) || this.disabled;\n  }\n\n  get #input() {\n    return this.shadowRoot?.getElementById('textarea') as HTMLTextAreaElement ?? null;\n  }\n\n  override willUpdate(): void {\n    this.#derivedLabel = this.accessibleLabel || this.#internals.computedLabelText;\n  }\n\n  override render(): TemplateResult<1> {\n    const classes = { [String(this.resize)]: !!this.resize };\n\n    return html`\n      <textarea id=\"textarea\" class=\"${classMap(classes)}\"\n                @input=\"${this.#onInput}\"\n                @change=\"${this.#onInput}\"\n                ?disabled=\"${this.#disabled}\"\n                ?readonly=\"${this.readonly}\"\n                ?required=\"${this.required}\"\n                aria-label=\"${ifDefined(this.#derivedLabel)}\"\n                placeholder=\"${ifDefined(this.placeholder)}\"\n                .value=\"${this.value}\"\n      ></textarea>\n    `;\n  }\n\n  override firstUpdated(): void {\n    if (this.autoResize) {\n      this.#autoSetHeight();\n    }\n  }\n\n  #onInput(event: Event) {\n    if (event.target instanceof HTMLTextAreaElement) {\n      const { value } = event.target;\n      this.value = value;\n      this.#internals.setFormValue(value);\n    }\n    if (this.autoResize) {\n      this.#autoSetHeight();\n    }\n  }\n\n  #autoSetHeight() {\n    this.#input.style.setProperty('--pf-c-form-control--textarea--Height', `auto`);\n    this.#input.style.setProperty('--pf-c-form-control--textarea--Height', `${this.#input.scrollHeight}px`);\n  }\n\n  #setValidityFromInput() {\n    if (!this.#input) {\n      this.#logger.warn('await updateComplete before validating');\n    } else {\n      this.#internals.setValidity(\n        this.#input.validity,\n        this.#input.validationMessage,\n      );\n    }\n  }\n\n  async formDisabledCallback(): Promise<void> {\n    await this.updateComplete;\n    this.requestUpdate();\n  }\n\n  setCustomValidity(message: string): void {\n    this.#internals.setValidity({}, message);\n  }\n\n  checkValidity(): boolean {\n    this.#setValidityFromInput();\n    return this.#internals.checkValidity();\n  }\n\n  reportValidity(): boolean {\n    this.#setValidityFromInput();\n    return this.#internals.reportValidity();\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'pf-text-area': PfTextArea;\n  }\n}\n"]}