{
  "schemaVersion": "1.0.0",
  "readme": "",
  "modules": [
    {
      "kind": "javascript-module",
      "path": "pf-accordion/pf-accordion-header.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "PfAccordionHeaderChangeEvent",
          "members": [
            {
              "kind": "field",
              "name": "target",
              "type": {
                "text": "PfAccordionHeader"
              }
            },
            {
              "kind": "field",
              "type": {
                "text": "boolean",
                "name": "boolean"
              },
              "name": "expanded",
              "privacy": "public"
            },
            {
              "kind": "field",
              "type": {
                "text": "PfAccordionHeader",
                "name": "PfAccordionHeader"
              },
              "name": "toggle",
              "privacy": "public"
            },
            {
              "kind": "field",
              "type": {
                "text": "PfAccordion",
                "name": "PfAccordion",
                "module": "./pf-accordion.js"
              },
              "name": "accordion",
              "privacy": "public"
            }
          ],
          "superclass": {
            "name": "Event",
            "module": "global:"
          }
        },
        {
          "kind": "class",
          "description": "Accordion Header",
          "name": "PfAccordionHeader",
          "cssProperties": [
            {
              "type": {
                "text": "<color>"
              },
              "description": "Sets the font color for the accordion header.",
              "name": "--pf-c-accordion__toggle--Color",
              "default": "var(--pf-global--Color--100, #151515)"
            },
            {
              "type": {
                "text": "<color>"
              },
              "description": "Sets the background color for the accordion header toggle element.",
              "name": "--pf-c-accordion__toggle--BackgroundColor",
              "default": "transparent"
            },
            {
              "type": {
                "text": "<color>"
              },
              "description": "Sets the background color for the after element for the accordion header toggle element.",
              "name": "--pf-c-accordion__toggle--after--BackgroundColor",
              "default": "transparent"
            },
            {
              "type": {
                "text": "<length>"
              },
              "description": "Sets the top padding for the accordion header.",
              "name": "--pf-c-accordion__toggle--PaddingTop",
              "default": "var(--pf-global--spacer--sm, 0.5rem)"
            },
            {
              "type": {
                "text": "<length>"
              },
              "description": "Sets the right padding for the accordion header.",
              "name": "--pf-c-accordion__toggle--PaddingRight",
              "default": "var(--pf-global--spacer--md, 1rem)"
            },
            {
              "type": {
                "text": "<length>"
              },
              "description": "Sets the bottom padding for the accordion header.",
              "name": "--pf-c-accordion__toggle--PaddingBottom",
              "default": "var(--pf-global--spacer--sm, 0.5rem)"
            },
            {
              "type": {
                "text": "<length>"
              },
              "description": "Sets the left padding for the accordion header.",
              "name": "--pf-c-accordion__toggle--PaddingLeft",
              "default": "var(--pf-global--spacer--md, 1rem)"
            },
            {
              "type": {
                "text": "<length>"
              },
              "description": "Sets the sidebar background color for the accordion header.",
              "name": "--pf-c-accordion__toggle--FontSize",
              "default": "var(--pf-global--FontSize--lg, 1rem)"
            },
            {
              "type": {
                "text": "<color>"
              },
              "description": "Sets the font family for the accordion header.",
              "name": "--pf-c-accordion__toggle--FontFamily",
              "default": "var(--pf-global--FontFamily--redhat-updated--heading--sans-serif, \"RedHatDisplayUpdated\", helvetica, arial, sans-serif)"
            },
            {
              "description": "Sets the font weight for the accordion header.",
              "name": "--pf-c-accordion__toggle--FontWeight",
              "default": "var(--pf-global--FontWeight--normal, 400)"
            },
            {
              "type": {
                "text": "<color>"
              },
              "description": "Sets the active backgrdound color for the accordion header.",
              "name": "--pf-c-accordion__toggle--active--BackgroundColor",
              "default": "var(--pf-global--BackgroundColor--200, #f0f0f0)"
            },
            {
              "type": {
                "text": "<color>"
              },
              "description": "Sets the active text color for the accordion header.",
              "name": "--pf-c-accordion__toggle--active-text--Color",
              "default": "var(--pf-global--link--Color, #0066cc)"
            },
            {
              "description": "Sets the active text font weight for the accordion header.",
              "name": "--pf-c-accordion__toggle--active-text--FontWeight",
              "default": "var(--pf-global--FontWeight--semi-bold, 700)"
            },
            {
              "type": {
                "text": "<color>"
              },
              "description": "Sets the hover expanded before background color for the accordion header.",
              "name": "--pf-c-accordion__toggle--expanded--before--BackgroundColor",
              "default": "var(--pf-global--link--Color, #0066cc)"
            },
            {
              "description": "Sets the expanded icon rotation degrees for the accordion header.",
              "name": "--pf-c-accordion__toggle--expanded-icon--Rotate",
              "default": "90deg"
            },
            {
              "type": {
                "text": "<length>"
              },
              "description": "Sets the max width for the text inside the accordion header.",
              "name": "--pf-c-accordion__toggle-text--MaxWidth",
              "default": "calc(100 - var(--pf-global--spacer--lg, 1.5rem))"
            },
            {
              "description": "Sets the sidebar width for the accordion header.",
              "name": "--pf-c-accordion__toggle--before--Width",
              "default": "var(--pf-global--BorderWidth--lg, 3px)"
            },
            {
              "description": "Sets the transition animation for the accordion header.",
              "name": "--pf-c-accordion__toggle-icon--Transition",
              "default": "0.2s ease-in 0s"
            }
          ],
          "cssParts": [
            {
              "description": "inline element containing the heading text or slotted heading content",
              "name": "text"
            },
            {
              "description": "container for accents within the header",
              "name": "accents"
            },
            {
              "description": "caret icon",
              "name": "icon"
            }
          ],
          "slots": [
            {
              "description": "We expect the light DOM of the pf-accordion-header to be a heading level tag (h1, h2, h3, h4, h5, h6)"
            },
            {
              "description": "These elements will appear inline with the accordion header, between the header and the chevron\n(or after the chevron and header in disclosure mode).",
              "name": "accents"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "shadowRootOptions",
              "type": {
                "text": "ShadowRootInit"
              },
              "static": true,
              "default": "{\n    ...LitElement.shadowRootOptions,\n    delegatesFocus: true,\n  }",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "bordered",
              "type": {
                "text": "'true' | 'false' | undefined"
              },
              "attribute": "bordered",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "icon",
              "type": {
                "text": "string | undefined"
              },
              "attribute": "icon",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "iconSet",
              "type": {
                "text": "string | undefined"
              },
              "attribute": "icon-set",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "expanded",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "expanded",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "headingText",
              "type": {
                "text": "string | undefined"
              },
              "attribute": "heading-text",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "headingTag",
              "type": {
                "text": "string | undefined"
              },
              "attribute": "heading-tag",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "#generatedHtag",
              "privacy": "private",
              "type": {
                "text": "HTMLHeadingElement | undefined"
              }
            },
            {
              "kind": "field",
              "name": "#logger",
              "privacy": "private",
              "default": "new Logger(this)"
            },
            {
              "kind": "field",
              "name": "#header",
              "privacy": "private",
              "type": {
                "text": "HTMLElement | undefined"
              }
            },
            {
              "kind": "field",
              "name": "#slots",
              "privacy": "private",
              "default": "new SlotController(this, 'accents', null)"
            },
            {
              "kind": "method",
              "name": "#initHeader",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "#getOrCreateHeader",
              "return": {
                "type": {
                  "text": "HTMLElement | undefined"
                }
              },
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "#onClick",
              "privacy": "private"
            }
          ],
          "events": [
            {
              "type": {
                "text": "AccordionHeaderChangeEvent"
              },
              "description": "when the open panels change",
              "name": "change"
            }
          ],
          "attributes": [
            {
              "name": "bordered",
              "type": {
                "text": "'true' | 'false' | undefined"
              },
              "fieldName": "bordered"
            },
            {
              "name": "icon",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "icon"
            },
            {
              "name": "icon-set",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "iconSet"
            },
            {
              "name": "expanded",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "expanded"
            },
            {
              "name": "heading-text",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "headingText"
            },
            {
              "name": "heading-tag",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "headingTag"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "pf-accordion-header",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PfAccordionHeaderChangeEvent",
          "declaration": {
            "name": "PfAccordionHeaderChangeEvent",
            "module": "pf-accordion/pf-accordion-header.js"
          }
        },
        {
          "kind": "js",
          "name": "PfAccordionHeader",
          "declaration": {
            "name": "PfAccordionHeader",
            "module": "pf-accordion/pf-accordion-header.js"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "pf-accordion-header",
          "declaration": {
            "name": "PfAccordionHeader",
            "module": "pf-accordion/pf-accordion-header.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "pf-accordion/pf-accordion-panel.js",
      "declarations": [
        {
          "kind": "class",
          "description": "Accordion Panel",
          "name": "PfAccordionPanel",
          "cssProperties": [
            {
              "type": {
                "text": "<color>"
              },
              "description": "Sets the background color for the panel content.",
              "name": "--pf-c-accordion--BackgroundColor",
              "default": "var(--pf-global--BackgroundColor--light-100, #ffffff)"
            },
            {
              "type": {
                "text": "<color>"
              },
              "description": "Sets the font color for the panel content.",
              "name": "--pf-c-accordion__panel--Color",
              "default": "var(--pf-global--Color--dark-200, #6a6e73)"
            },
            {
              "type": {
                "text": "<length>"
              },
              "description": "Sets the font size for the panel content.",
              "name": "--pf-c-accordion__panel--FontSize",
              "default": "var(--pf-global--FontSize--sm, 0.875rem)"
            },
            {
              "type": {
                "text": "<color>"
              },
              "description": "Sets the sidebar color for the panel when the context is expanded.",
              "name": "--pf-c-accordion__panel--content-body--before--BackgroundColor",
              "default": "var(--pf-global--primary-color--100, #0066cc)"
            },
            {
              "type": {
                "text": "<length>"
              },
              "description": "Sets the maximum height for the panel content.\nWill only be used if the `fixed` attribute is used.",
              "name": "--pf-c-accordion__panel--m-fixed--MaxHeight",
              "default": "9.375rem"
            },
            {
              "type": {
                "text": "<length>"
              },
              "description": "Sets the padding top for the panel content.",
              "name": "--pf-c-accordion__panel-body--PaddingTop",
              "default": "var(--pf-global--spacer--sm, 0.5rem)"
            },
            {
              "type": {
                "text": "<length>"
              },
              "description": "Sets the padding right for the panel content.",
              "name": "--pf-c-accordion__panel-body--PaddingRight",
              "default": "var(--pf-global--spacer--md, 1rem)"
            },
            {
              "type": {
                "text": "<length>"
              },
              "description": "Sets the padding bottom for the panel content.",
              "name": "--pf-c-accordion__panel-body--PaddingBottom",
              "default": "var(--pf-global--spacer--sm, 0.5rem)"
            },
            {
              "type": {
                "text": "<length>"
              },
              "description": "Sets the padding left for the panel content.",
              "name": "--pf-c-accordion__panel-body--PaddingLeft",
              "default": "var(--pf-global--spacer--md, 1rem)"
            },
            {
              "type": {
                "text": "<color>"
              },
              "description": "Sets the background color for the panel content.",
              "name": "--pf-c-accordion__panel-body--before--BackgroundColor",
              "default": "transparent"
            },
            {
              "description": "Sets the before width for the panel content.",
              "name": "--pf-c-accordion__panel-body--before--Width",
              "default": "var(--pf-global--BorderWidth--lg, 3px)"
            }
          ],
          "slots": [
            {
              "description": "Panel content",
              "name": ""
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "expanded",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "expanded",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "bordered",
              "type": {
                "text": "'true' | 'false' | undefined"
              },
              "attribute": "bordered",
              "reflects": true
            }
          ],
          "attributes": [
            {
              "name": "expanded",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "expanded"
            },
            {
              "name": "bordered",
              "type": {
                "text": "'true' | 'false' | undefined"
              },
              "fieldName": "bordered"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "pf-accordion-panel",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PfAccordionPanel",
          "declaration": {
            "name": "PfAccordionPanel",
            "module": "pf-accordion/pf-accordion-panel.js"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "pf-accordion-panel",
          "declaration": {
            "name": "PfAccordionPanel",
            "module": "pf-accordion/pf-accordion-panel.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "pf-accordion/pf-accordion.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "PfAccordionExpandEvent",
          "members": [
            {
              "kind": "field",
              "type": {
                "text": "PfAccordionHeader",
                "name": "PfAccordionHeader",
                "module": "./pf-accordion-header.js"
              },
              "name": "toggle",
              "privacy": "public"
            },
            {
              "kind": "field",
              "type": {
                "text": "PfAccordionPanel",
                "name": "PfAccordionPanel",
                "module": "./pf-accordion-panel.js"
              },
              "name": "panel",
              "privacy": "public"
            }
          ],
          "superclass": {
            "name": "Event",
            "module": "global:"
          }
        },
        {
          "kind": "class",
          "description": "",
          "name": "PfAccordionCollapseEvent",
          "members": [
            {
              "kind": "field",
              "type": {
                "text": "PfAccordionHeader",
                "name": "PfAccordionHeader",
                "module": "./pf-accordion-header.js"
              },
              "name": "toggle",
              "privacy": "public"
            },
            {
              "kind": "field",
              "type": {
                "text": "PfAccordionPanel",
                "name": "PfAccordionPanel",
                "module": "./pf-accordion-panel.js"
              },
              "name": "panel",
              "privacy": "public"
            }
          ],
          "superclass": {
            "name": "Event",
            "module": "global:"
          }
        },
        {
          "kind": "class",
          "description": "An **accordion** is an interactive container that expands and collapses to hide or reveal nested content. It takes advantage of progressive disclosure to help reduce page scrolling, by allowing users to choose whether they want to show or hide more detailed information as needed.",
          "name": "PfAccordion",
          "cssProperties": [
            {
              "name": "--pf-c-accordion--BackgroundColor",
              "default": "var(--pf-global--BackgroundColor--100, #fff)"
            },
            {
              "name": "--pf-c-accordion__toggle--PaddingTop",
              "default": "var(--pf-global--spacer--sm, 0.5rem)"
            },
            {
              "name": "--pf-c-accordion__toggle--PaddingRight",
              "default": "var(--pf-global--spacer--md, 1rem)"
            },
            {
              "name": "--pf-c-accordion__toggle--PaddingBottom",
              "default": "var(--pf-global--spacer--sm, 0.5rem)"
            },
            {
              "name": "--pf-c-accordion__toggle--PaddingLeft",
              "default": "var(--pf-global--spacer--md, 1rem)"
            },
            {
              "name": "--pf-c-accordion__toggle--before--BackgroundColor",
              "default": "transparent"
            },
            {
              "name": "--pf-c-accordion__toggle--before--Top",
              "default": "0"
            },
            {
              "name": "--pf-c-accordion__toggle--hover--BackgroundColor",
              "default": "var(--pf-global--BackgroundColor--200, #f0f0f0)"
            },
            {
              "name": "--pf-c-accordion__toggle--focus--BackgroundColor",
              "default": "var(--pf-global--BackgroundColor--200, #f0f0f0)"
            },
            {
              "name": "--pf-c-accordion__toggle--active--BackgroundColor",
              "default": "var(--pf-global--BackgroundColor--200, #f0f0f0)"
            },
            {
              "name": "--pf-c-accordion__toggle--before--Width",
              "default": "var(--pf-global--BorderWidth--lg, 3px)"
            },
            {
              "name": "--pf-c-accordion__toggle--m-expanded--before--BackgroundColor",
              "default": "var(--pf-global--primary-color--100, #06c)"
            },
            {
              "name": "--pf-c-accordion__toggle-text--MaxWidth",
              "default": "calc(100 - var(--pf-global--spacer--lg, 1.5rem))"
            },
            {
              "name": "--pf-c-accordion__toggle--hover__toggle-text--Color",
              "default": "var(--pf-global--link--Color, #06c)"
            },
            {
              "name": "--pf-c-accordion__toggle--active__toggle-text--Color",
              "default": "var(--pf-global--link--Color, #06c)"
            },
            {
              "name": "--pf-c-accordion__toggle--active__toggle-text--FontWeight",
              "default": "var(--pf-global--FontWeight--semi-bold, 700)"
            },
            {
              "name": "--pf-c-accordion__toggle--focus__toggle-text--Color",
              "default": "var(--pf-global--link--Color, #06c)"
            },
            {
              "name": "--pf-c-accordion__toggle--focus__toggle-text--FontWeight",
              "default": "var(--pf-global--FontWeight--semi-bold, 700)"
            },
            {
              "name": "--pf-c-accordion__toggle--m-expanded__toggle-text--Color",
              "default": "var(--pf-global--link--Color, #06c)"
            },
            {
              "name": "--pf-c-accordion__toggle--m-expanded__toggle-text--FontWeight",
              "default": "var(--pf-global--FontWeight--semi-bold, 700)"
            },
            {
              "name": "--pf-c-accordion__toggle-icon--Transition",
              "default": ".2s ease-in 0s"
            },
            {
              "name": "--pf-c-accordion__toggle--m-expanded__toggle-icon--Rotate",
              "default": "90deg"
            },
            {
              "name": "--pf-c-accordion__expanded-content--Color",
              "default": "var(--pf-global--Color--200, #6a6e73)"
            },
            {
              "name": "--pf-c-accordion__expanded-content--FontSize",
              "default": "var(--pf-global--FontSize--sm, 0.875rem)"
            },
            {
              "name": "--pf-c-accordion__expanded-content--m-expanded__expanded-content-body--before--BackgroundColor",
              "default": "var(--pf-global--primary-color--100, #06c)"
            },
            {
              "name": "--pf-c-accordion__expanded-content--m-fixed--MaxHeight",
              "default": "9.375rem"
            },
            {
              "name": "--pf-c-accordion__expanded-content-body--PaddingTop",
              "default": "var(--pf-global--spacer--sm, 0.5rem)"
            },
            {
              "name": "--pf-c-accordion__expanded-content-body--PaddingRight",
              "default": "var(--pf-global--spacer--md, 1rem)"
            },
            {
              "name": "--pf-c-accordion__expanded-content-body--PaddingBottom",
              "default": "var(--pf-global--spacer--sm, 0.5rem)"
            },
            {
              "name": "--pf-c-accordion__expanded-content-body--PaddingLeft",
              "default": "var(--pf-global--spacer--md, 1rem)"
            },
            {
              "name": "--pf-c-accordion__expanded-content-body--expanded-content-body--PaddingTop",
              "default": "0"
            },
            {
              "name": "--pf-c-accordion__expanded-content-body--before--BackgroundColor",
              "default": "transparent"
            },
            {
              "name": "--pf-c-accordion__expanded-content-body--before--Width",
              "default": "var(--pf-global--BorderWidth--lg, 3px)"
            },
            {
              "name": "--pf-c-accordion__expanded-content-body--before--Top",
              "default": "0"
            },
            {
              "name": "--pf-c-accordion--m-display-lg__toggle--PaddingTop",
              "default": "var(--pf-global--spacer--md, 1rem)"
            },
            {
              "name": "--pf-c-accordion--m-display-lg__toggle--PaddingRight",
              "default": "var(--pf-global--spacer--md, 1rem)"
            },
            {
              "name": "--pf-c-accordion--m-display-lg__toggle--PaddingBottom",
              "default": "var(--pf-global--spacer--md, 1rem)"
            },
            {
              "name": "--pf-c-accordion--m-display-lg__toggle--PaddingLeft",
              "default": "var(--pf-global--spacer--lg, 1.5rem)"
            },
            {
              "name": "--pf-c-accordion--m-display-lg__toggle--FontFamily",
              "default": "var(--pf-global--FontFamily--heading--sans-serif, \"RedHatDisplay\", \"Overpass\", overpass, helvetica, arial, sans-serif)"
            },
            {
              "name": "--pf-c-accordion--m-display-lg__toggle--FontSize",
              "default": "var(--pf-global--FontSize--xl, 1.25rem)"
            },
            {
              "name": "--pf-c-accordion--m-display-lg__toggle--hover__toggle-text--Color",
              "default": "var(--pf-global--Color--100, #151515)"
            },
            {
              "name": "--pf-c-accordion--m-display-lg__toggle--active__toggle-text--Color",
              "default": "var(--pf-global--Color--100, #151515)"
            },
            {
              "name": "--pf-c-accordion--m-display-lg__toggle--active__toggle-text--FontWeight",
              "default": "var(--pf-global--FontWeight--normal, 400)"
            },
            {
              "name": "--pf-c-accordion--m-display-lg__toggle--focus__toggle-text--Color",
              "default": "var(--pf-global--Color--100, #151515)"
            },
            {
              "name": "--pf-c-accordion--m-display-lg__toggle--focus__toggle-text--FontWeight",
              "default": "var(--pf-global--FontWeight--normal, 400)"
            },
            {
              "name": "--pf-c-accordion--m-display-lg__toggle--m-expanded__toggle-text--Color",
              "default": "var(--pf-global--Color--100, #151515)"
            },
            {
              "name": "--pf-c-accordion--m-display-lg__toggle--m-expanded__toggle-text--FontWeight",
              "default": "var(--pf-global--FontWeight--normal, 400)"
            },
            {
              "name": "--pf-c-accordion--m-display-lg__expanded-content--FontSize",
              "default": "var(--pf-global--FontSize--md, 1rem)"
            },
            {
              "name": "--pf-c-accordion--m-display-lg__expanded-content--Color",
              "default": "var(--pf-global--Color--100, #151515)"
            },
            {
              "name": "--pf-c-accordion--m-display-lg__expanded-content-body--PaddingTop",
              "default": "0"
            },
            {
              "name": "--pf-c-accordion--m-display-lg__expanded-content-body--PaddingRight",
              "default": "var(--pf-global--spacer--md, 1rem)"
            },
            {
              "name": "--pf-c-accordion--m-display-lg__expanded-content-body--PaddingBottom",
              "default": "var(--pf-global--spacer--md, 1rem)"
            },
            {
              "name": "--pf-c-accordion--m-display-lg__expanded-content-body--last-child--PaddingBottom",
              "default": "var(--pf-global--spacer--lg, 1.5rem)"
            },
            {
              "name": "--pf-c-accordion--m-display-lg__expanded-content-body--PaddingLeft",
              "default": "var(--pf-global--spacer--lg, 1.5rem)"
            },
            {
              "name": "--pf-c-accordion--m-bordered--BorderTopWidth",
              "default": "var(--pf-global--BorderWidth--sm, 1px)"
            },
            {
              "name": "--pf-c-accordion--m-bordered--BorderTopColor",
              "default": "var(--pf-global--BorderColor--100, #d2d2d2)"
            },
            {
              "name": "--pf-c-accordion--m-bordered__toggle--before--Top",
              "default": "calc(-1 * var(--pf-global--BorderWidth--sm, 1px))"
            },
            {
              "name": "--pf-c-accordion--m-bordered__toggle--after--BorderColor",
              "default": "var(--pf-global--BorderColor--100, #d2d2d2)"
            },
            {
              "name": "--pf-c-accordion--m-bordered__toggle--after--BorderTopWidth",
              "default": "0"
            },
            {
              "name": "--pf-c-accordion--m-bordered__toggle--after--BorderBottomWidth",
              "default": "var(--pf-global--BorderWidth--sm, 1px)"
            },
            {
              "name": "--pf-c-accordion--m-bordered__expanded-content--m-expanded__expanded-content-body--last-child--after--BorderBottomWidth",
              "default": "var(--pf-global--BorderWidth--sm, 1px)"
            },
            {
              "name": "--pf-c-accordion--m-bordered__expanded-content--m-expanded__expanded-content-body--last-child--after--BorderBottomColor",
              "default": "var(--pf-global--BorderColor--100, #d2d2d2)"
            }
          ],
          "slots": [
            {
              "description": "Place the `pf-accordion-header` and `pf-accordion-panel` elements here."
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "single",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "When true, only one accordion panel may be expanded at a time",
              "attribute": "single",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "bordered",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Whether to apply the `bordered` style variant",
              "attribute": "bordered",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "large",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Whether to apply the `large` style variant",
              "attribute": "large",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "fixed",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "fixed",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "expandedIndex",
              "type": {
                "text": "number[]"
              },
              "description": "Sets and reflects the currently expanded accordion 0-based indexes.\nUse commas to separate multiple indexes.\n```html\n<pf-accordion expanded-index=\"1,2\">\n...\n</pf-accordion>\n```",
              "attribute": "expanded-index"
            },
            {
              "kind": "field",
              "name": "#logger",
              "privacy": "private",
              "default": "new Logger(this)"
            },
            {
              "kind": "field",
              "name": "#initialized",
              "privacy": "private",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "field",
              "name": "#mo",
              "privacy": "private",
              "default": "new MutationObserver(() => this.#init())"
            },
            {
              "kind": "field",
              "name": "#tabindex",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "#expandedIndex",
              "privacy": "private",
              "type": {
                "text": "number[]"
              },
              "default": "[]"
            },
            {
              "kind": "field",
              "name": "expandedSets",
              "type": {
                "text": "Set<number>"
              },
              "privacy": "protected",
              "default": "new Set<number>()"
            },
            {
              "kind": "field",
              "name": "#activeHeader",
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "headers",
              "type": {
                "text": "PfAccordionHeader[]"
              },
              "readonly": true
            },
            {
              "kind": "field",
              "name": "panels",
              "type": {
                "text": "PfAccordionPanel[]"
              },
              "readonly": true
            },
            {
              "kind": "method",
              "name": "getUpdateComplete",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "Promise<boolean>"
                }
              }
            },
            {
              "kind": "method",
              "name": "largeChanged",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "#init",
              "description": "Initialize the accordion by connecting headers and panels\nwith aria controls and labels; set up the default disclosure\nstate if not set by the author; and check the URL for default\nopen",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "updateActiveHeader",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "#panelForHeader",
              "parameters": [
                {
                  "name": "header",
                  "type": {
                    "text": "PfAccordionHeader"
                  }
                }
              ],
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "#expandHeader",
              "parameters": [
                {
                  "name": "header",
                  "type": {
                    "text": "PfAccordionHeader"
                  }
                },
                {
                  "name": "index",
                  "default": "this.#getIndex(header)"
                }
              ],
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "#expandPanel",
              "parameters": [
                {
                  "name": "panel",
                  "type": {
                    "text": "PfAccordionPanel"
                  }
                }
              ],
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "#collapseHeader",
              "parameters": [
                {
                  "name": "header",
                  "type": {
                    "text": "PfAccordionHeader"
                  }
                },
                {
                  "name": "index",
                  "default": "this.#getIndex(header)"
                }
              ],
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "#collapsePanel",
              "parameters": [
                {
                  "name": "panel",
                  "type": {
                    "text": "PfAccordionPanel"
                  }
                }
              ],
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "onChange",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "PfAccordionHeaderChangeEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "#allHeaders",
              "return": {
                "type": {
                  "text": "PfAccordionHeader[]"
                }
              },
              "parameters": [
                {
                  "name": "accordion",
                  "default": "this",
                  "type": {
                    "text": "PfAccordion"
                  }
                }
              ],
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "#allPanels",
              "return": {
                "type": {
                  "text": "PfAccordionPanel[]"
                }
              },
              "parameters": [
                {
                  "name": "accordion",
                  "default": "this",
                  "type": {
                    "text": "PfAccordion"
                  }
                }
              ],
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "#getIndex",
              "parameters": [
                {
                  "name": "el",
                  "type": {
                    "text": "Element | null"
                  }
                }
              ],
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "updateAccessibility",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "expand",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "Promise<void>"
                }
              },
              "parameters": [
                {
                  "name": "index",
                  "type": {
                    "text": "number"
                  },
                  "description": "index (0-based) of the panel to expand"
                }
              ],
              "description": "Accepts a 0-based index value (integer) for the set of accordion items to expand.\nAccepts an optional parent accordion to search for headers and panels."
            },
            {
              "kind": "method",
              "name": "collapse",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "Promise<void>"
                }
              },
              "parameters": [
                {
                  "name": "index",
                  "type": {
                    "text": "number"
                  },
                  "description": "index (0-based) of the panel to collapse"
                }
              ],
              "description": "Accepts a 0-based index value (integer) for the set of accordion items to collapse."
            },
            {
              "kind": "method",
              "name": "toggle",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "Promise<void>"
                }
              },
              "parameters": [
                {
                  "name": "index",
                  "type": {
                    "text": "number"
                  },
                  "description": "index (0-based) of the panel to toggle"
                }
              ],
              "description": "Accepts a 0-based index value (integer) for the set of accordion items to expand or collapse."
            },
            {
              "kind": "method",
              "name": "expandAll",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "Promise<void>"
                }
              },
              "description": "Expands all accordion items."
            },
            {
              "kind": "method",
              "name": "collapseAll",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "Promise<void>"
                }
              },
              "description": "Collapses all accordion items."
            }
          ],
          "events": [
            {
              "type": {
                "text": "AccordionExpandEvent"
              },
              "description": "when a panel expands",
              "name": "expand"
            },
            {
              "type": {
                "text": "AccordionCollapseEvent"
              },
              "description": "when a panel collapses",
              "name": "collapse"
            }
          ],
          "attributes": [
            {
              "name": "single",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "When true, only one accordion panel may be expanded at a time",
              "fieldName": "single"
            },
            {
              "name": "bordered",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Whether to apply the `bordered` style variant",
              "fieldName": "bordered"
            },
            {
              "name": "large",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Whether to apply the `large` style variant",
              "fieldName": "large"
            },
            {
              "name": "fixed",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "fixed"
            },
            {
              "name": "expanded-index",
              "type": {
                "text": "number[]"
              },
              "description": "Sets and reflects the currently expanded accordion 0-based indexes.\nUse commas to separate multiple indexes.\n```html\n<pf-accordion expanded-index=\"1,2\">\n  ...\n</pf-accordion>\n```",
              "fieldName": "expandedIndex"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "summary": "Toggle the visibility of sections of content",
          "tagName": "pf-accordion",
          "customElement": true,
          "demos": [
            {
              "url": "https://patternflyelements.org/components/accordion/demo/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-accordion/demo/pf-accordion.html"
              }
            },
            {
              "url": "https://patternflyelements.org/components/accordion/demo/bordered/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-accordion/demo/bordered.html"
              }
            },
            {
              "url": "https://patternflyelements.org/components/accordion/demo/content-attributes/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-accordion/demo/content-attributes.html"
              }
            },
            {
              "url": "https://patternflyelements.org/components/accordion/demo/fixed-panel/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-accordion/demo/fixed-panel.html"
              }
            },
            {
              "url": "https://patternflyelements.org/components/accordion/demo/nested/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-accordion/demo/nested.html"
              }
            },
            {
              "url": "https://patternflyelements.org/components/accordion/demo/single-expanded-panel/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-accordion/demo/single-expanded-panel.html"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./pf-accordion-header.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./pf-accordion-panel.js"
          }
        },
        {
          "kind": "js",
          "name": "PfAccordionExpandEvent",
          "declaration": {
            "name": "PfAccordionExpandEvent",
            "module": "pf-accordion/pf-accordion.js"
          }
        },
        {
          "kind": "js",
          "name": "PfAccordionCollapseEvent",
          "declaration": {
            "name": "PfAccordionCollapseEvent",
            "module": "pf-accordion/pf-accordion.js"
          }
        },
        {
          "kind": "js",
          "name": "PfAccordion",
          "declaration": {
            "name": "PfAccordion",
            "module": "pf-accordion/pf-accordion.js"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "pf-accordion",
          "declaration": {
            "name": "PfAccordion",
            "module": "pf-accordion/pf-accordion.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "pf-avatar/pf-avatar.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "PfAvatarLoadEvent",
          "members": [
            {
              "kind": "field",
              "type": {
                "text": "Event",
                "name": "Event"
              },
              "name": "originalEvent",
              "privacy": "public"
            }
          ],
          "superclass": {
            "name": "Event",
            "module": "global:"
          }
        },
        {
          "kind": "class",
          "description": "An **avatar** is a visual used to represent a user. It may contain an image or a placeholder graphic.",
          "name": "PfAvatar",
          "cssProperties": [
            {
              "name": "--pf-c-avatar--Width",
              "default": "24px"
            },
            {
              "name": "--pf-c-avatar--Height",
              "default": "24px"
            },
            {
              "name": "--pf-c-avatar--BorderRadius",
              "default": "var(--pf-global--BorderRadius--lg, 128px)"
            },
            {
              "name": "--pf-c-avatar--BorderWidth",
              "default": "0"
            },
            {
              "name": "--pf-c-avatar--BorderColor",
              "default": "var(--pf-global--BorderColor--dark-100, #d2d2d2)"
            },
            {
              "name": "--pf-c-avatar--m-dark--BorderColor",
              "default": "var(--pf-global--palette--black-700, #4f5255)"
            },
            {
              "name": "--pf-c-avatar--m-sm--Width",
              "default": "24px"
            },
            {
              "name": "--pf-c-avatar--m-sm--Height",
              "default": "24px"
            },
            {
              "name": "--pf-c-avatar--m-md--Width",
              "default": "36px"
            },
            {
              "name": "--pf-c-avatar--m-md--Height",
              "default": "36px"
            },
            {
              "name": "--pf-c-avatar--m-lg--Width",
              "default": "72px"
            },
            {
              "name": "--pf-c-avatar--m-lg--Height",
              "default": "72px"
            },
            {
              "name": "--pf-c-avatar--m-xl--Width",
              "default": "28px"
            },
            {
              "name": "--pf-c-avatar--m-xl--Height",
              "default": "28px"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "src",
              "type": {
                "text": "string | undefined"
              },
              "description": "The URL to the user's custom avatar image.",
              "attribute": "src"
            },
            {
              "kind": "field",
              "name": "alt",
              "type": {
                "text": "string | undefined"
              },
              "default": "'Avatar image'",
              "description": "The alt text for the avatar image.",
              "attribute": "alt",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "size",
              "type": {
                "text": "'sm' | 'md' | 'lg' | 'xl'"
              },
              "default": "'sm'",
              "description": "Size of the Avatar",
              "attribute": "size",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "border",
              "type": {
                "text": "'light' | 'dark' | undefined"
              },
              "description": "Whether to display a border around the avatar",
              "attribute": "border",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "dark",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Whether or not the Avatar image is dark",
              "attribute": "dark",
              "reflects": true
            },
            {
              "kind": "method",
              "name": "#onLoad",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "Event"
                  }
                }
              ],
              "privacy": "private"
            }
          ],
          "events": [
            {
              "type": {
                "text": "PfAvatarLoadEvent"
              },
              "description": "when the avatar loads",
              "name": "load"
            }
          ],
          "attributes": [
            {
              "name": "src",
              "type": {
                "text": "string | undefined"
              },
              "description": "The URL to the user's custom avatar image.",
              "fieldName": "src"
            },
            {
              "name": "alt",
              "type": {
                "text": "string | undefined"
              },
              "default": "'Avatar image'",
              "description": "The alt text for the avatar image.",
              "fieldName": "alt"
            },
            {
              "name": "size",
              "type": {
                "text": "'sm' | 'md' | 'lg' | 'xl'"
              },
              "default": "'sm'",
              "description": "Size of the Avatar",
              "fieldName": "size"
            },
            {
              "name": "border",
              "type": {
                "text": "'light' | 'dark' | undefined"
              },
              "description": "Whether to display a border around the avatar",
              "fieldName": "border"
            },
            {
              "name": "dark",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Whether or not the Avatar image is dark",
              "fieldName": "dark"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "summary": "For displaying a user's avatar image",
          "tagName": "pf-avatar",
          "customElement": true,
          "demos": [
            {
              "url": "https://patternflyelements.org/components/avatar/demo/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-avatar/demo/pf-avatar.html"
              }
            },
            {
              "url": "https://patternflyelements.org/components/avatar/demo/bordered/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-avatar/demo/bordered.html"
              }
            },
            {
              "url": "https://patternflyelements.org/components/avatar/demo/dark-border/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-avatar/demo/dark-border.html"
              }
            },
            {
              "url": "https://patternflyelements.org/components/avatar/demo/dark-variant/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-avatar/demo/dark-variant.html"
              }
            },
            {
              "url": "https://patternflyelements.org/components/avatar/demo/sizes/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-avatar/demo/sizes.html"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PfAvatarLoadEvent",
          "declaration": {
            "name": "PfAvatarLoadEvent",
            "module": "pf-avatar/pf-avatar.js"
          }
        },
        {
          "kind": "js",
          "name": "PfAvatar",
          "declaration": {
            "name": "PfAvatar",
            "module": "pf-avatar/pf-avatar.js"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "pf-avatar",
          "declaration": {
            "name": "PfAvatar",
            "module": "pf-avatar/pf-avatar.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "pf-back-to-top/pf-back-to-top.js",
      "declarations": [
        {
          "kind": "class",
          "description": "The **back to top** component is a shortcut that allows users to quickly navigate to the top of a lengthy content page.",
          "name": "PfBackToTop",
          "cssProperties": [
            {
              "type": {
                "text": "<length>"
              },
              "name": "--pf-c-back-to-top--Right",
              "default": "3rem`"
            },
            {
              "type": {
                "text": "<length>"
              },
              "name": "--pf-c-back-to-top--Bottom",
              "default": "1.5rem`"
            },
            {
              "name": "--pf-c-back-to-top--c-button--BoxShadow",
              "default": "0 0.75rem 0.75rem -0.5rem rgba(3, 3, 3, 0.18)"
            },
            {
              "type": {
                "text": "<length>"
              },
              "name": "--pf-c-button--FontSize",
              "default": "0.75rem"
            },
            {
              "type": {
                "text": "<length>|<percentage>"
              },
              "name": "--pf-c-button--BorderRadius",
              "default": "30em"
            },
            {
              "type": {
                "text": "<length>"
              },
              "name": "--pf-c-button--PaddingTop",
              "default": "0.25rem"
            },
            {
              "type": {
                "text": "<length>"
              },
              "name": "--pf-c-button--PaddingRight",
              "default": "0.5rem"
            },
            {
              "type": {
                "text": "<length>"
              },
              "name": "--pf-c-button--PaddingBottom",
              "default": "0.25rem"
            },
            {
              "type": {
                "text": "<length>"
              },
              "name": "--pf-c-button--PaddingLeft",
              "default": "0.5rem"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-button--m-primary--Color",
              "default": "#fff"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-button--m-primary--BackgroundColor",
              "default": "#06c"
            },
            {
              "type": {
                "text": "<length>"
              },
              "name": "--pf-c-button__icon--m-end--MarginLeft",
              "default": "0.25rem"
            }
          ],
          "cssParts": [
            {
              "description": "The `<a>` or `<pf-button>` element",
              "name": "trigger"
            }
          ],
          "slots": [
            {
              "description": "Contains the prefix icon to display before the link or button.",
              "name": "icon"
            },
            {
              "description": "Text to display inside the link or button."
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "icon",
              "type": {
                "text": "string | undefined"
              },
              "description": "Shorthand for the `icon` slot, the value is icon name",
              "attribute": "icon",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "iconSet",
              "type": {
                "text": "string | undefined"
              },
              "description": "Icon set for the `icon` property",
              "attribute": "icon-set"
            },
            {
              "kind": "field",
              "name": "alwaysVisible",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Flag to always show back to top button, defaults to false.",
              "attribute": "always-visible",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "scrollableSelector",
              "type": {
                "text": "string | undefined"
              },
              "description": "Element selector to spy on for scrolling. Not passing a selector defaults to spying on window scroll events",
              "attribute": "scrollable-selector",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "scrollDistance",
              "type": {
                "text": "number"
              },
              "default": "400",
              "description": "Distance from the top of the scrollable element to trigger the visibility of the back to top button",
              "attribute": "scroll-distance"
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string | undefined"
              },
              "description": "Accessible name for the back-to-top link, use when component does not have slotted text",
              "attribute": "label"
            },
            {
              "kind": "field",
              "name": "href",
              "type": {
                "text": "string | undefined"
              },
              "description": "Page fragment link to target element, must include hash ex: #top",
              "attribute": "href",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "#scrollSpy",
              "privacy": "private",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "field",
              "name": "#visible",
              "privacy": "private",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "field",
              "name": "#scrollElement",
              "privacy": "private",
              "type": {
                "text": "Element | Window | undefined"
              }
            },
            {
              "kind": "field",
              "name": "#hasSlottedText",
              "privacy": "private",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "field",
              "name": "#logger",
              "privacy": "private",
              "default": "new Logger(this)"
            },
            {
              "kind": "field",
              "name": "#rootNode",
              "privacy": "private",
              "type": {
                "text": "Document | ShadowRoot | null"
              },
              "readonly": true
            },
            {
              "kind": "field",
              "name": "#ariaLabel",
              "privacy": "private",
              "type": {
                "text": "string | undefined"
              },
              "readonly": true
            },
            {
              "kind": "method",
              "name": "#onSlotchange",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "Event"
                  }
                }
              ],
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "#removeScrollListener",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "#addScrollListener",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "#toggleVisibility",
              "privacy": "private"
            }
          ],
          "attributes": [
            {
              "name": "icon",
              "type": {
                "text": "string | undefined"
              },
              "description": "Shorthand for the `icon` slot, the value is icon name",
              "fieldName": "icon"
            },
            {
              "name": "icon-set",
              "type": {
                "text": "string | undefined"
              },
              "description": "Icon set for the `icon` property",
              "fieldName": "iconSet"
            },
            {
              "name": "always-visible",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Flag to always show back to top button, defaults to false.",
              "fieldName": "alwaysVisible"
            },
            {
              "name": "scrollable-selector",
              "type": {
                "text": "string | undefined"
              },
              "description": "Element selector to spy on for scrolling. Not passing a selector defaults to spying on window scroll events",
              "fieldName": "scrollableSelector"
            },
            {
              "name": "scroll-distance",
              "type": {
                "text": "number"
              },
              "default": "400",
              "description": "Distance from the top of the scrollable element to trigger the visibility of the back to top button",
              "fieldName": "scrollDistance"
            },
            {
              "name": "label",
              "type": {
                "text": "string | undefined"
              },
              "description": "Accessible name for the back-to-top link, use when component does not have slotted text",
              "fieldName": "label"
            },
            {
              "name": "href",
              "type": {
                "text": "string | undefined"
              },
              "description": "Page fragment link to target element, must include hash ex: #top",
              "fieldName": "href"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "summary": "A shortcut that allows users to quickly navigate to the top of a lengthy content page.",
          "tagName": "pf-back-to-top",
          "customElement": true,
          "demos": [
            {
              "url": "https://patternflyelements.org/components/back-to-top/demo/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-back-to-top/demo/pf-back-to-top.html"
              }
            },
            {
              "url": "https://patternflyelements.org/components/back-to-top/demo/always-visible/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-back-to-top/demo/always-visible.html"
              }
            },
            {
              "url": "https://patternflyelements.org/components/back-to-top/demo/button-no-text/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-back-to-top/demo/button-no-text.html"
              }
            },
            {
              "url": "https://patternflyelements.org/components/back-to-top/demo/button/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-back-to-top/demo/button.html"
              }
            },
            {
              "url": "https://patternflyelements.org/components/back-to-top/demo/label/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-back-to-top/demo/label.html"
              }
            },
            {
              "url": "https://patternflyelements.org/components/back-to-top/demo/no-text/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-back-to-top/demo/no-text.html"
              }
            },
            {
              "url": "https://patternflyelements.org/components/back-to-top/demo/scroll-distance/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-back-to-top/demo/scroll-distance.html"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PfBackToTop",
          "declaration": {
            "name": "PfBackToTop",
            "module": "pf-back-to-top/pf-back-to-top.js"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "pf-back-to-top",
          "declaration": {
            "name": "PfBackToTop",
            "module": "pf-back-to-top/pf-back-to-top.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "pf-background-image/pf-background-image.js",
      "declarations": [
        {
          "kind": "class",
          "description": "A **background image** allows you to place an image in the background of your page or area of a page.",
          "name": "PfBackgroundImage",
          "cssProperties": [
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-background-image--BackgroundColor",
              "default": "#151515"
            },
            {
              "name": "--pf-c-background-image--Filter",
              "default": "url(\"#image_overlay\")"
            },
            {
              "name": "--pf-c-background-image--BackgroundImage"
            },
            {
              "name": "--pf-c-background-image--BackgroundImage-2x"
            },
            {
              "name": "--pf-c-background-image--BackgroundImage--sm"
            },
            {
              "name": "--pf-c-background-image--BackgroundImage--sm-2x"
            },
            {
              "name": "--pf-c-background-image--BackgroundImage--lg"
            }
          ],
          "slots": [
            {
              "description": "Overrides the default svg filter for the background image.",
              "name": "filter"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "src",
              "type": {
                "text": "string | undefined"
              },
              "description": "The URL for the image shown on mobile",
              "attribute": "src",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "src2x",
              "type": {
                "text": "string | undefined"
              },
              "description": "The image shown on mobile with 2x DPI",
              "attribute": "src-2x",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "srcSm",
              "type": {
                "text": "string | undefined"
              },
              "description": "The URL for the image shown on small screens (min-width: 576px)",
              "attribute": "src-sm",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "srcSm2x",
              "type": {
                "text": "string | undefined"
              },
              "description": "The URL for the image shown on small screens (min-width: 576px) with 2x DPI",
              "attribute": "src-sm-2x",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "srcLg",
              "type": {
                "text": "string | undefined"
              },
              "description": "The URL for the image shown on large screens (min-width: 992px)",
              "attribute": "src-lg",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "filter",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Apply SVG Filter to the image",
              "attribute": "filter",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "_svg",
              "type": {
                "text": "SVGElement[] | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "#svg",
              "privacy": "private",
              "type": {
                "text": "SVGElement | undefined"
              }
            },
            {
              "kind": "field",
              "name": "#updated",
              "privacy": "private",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "method",
              "name": "#onSlotChange",
              "privacy": "private"
            }
          ],
          "attributes": [
            {
              "name": "src",
              "type": {
                "text": "string | undefined"
              },
              "description": "The URL for the image shown on mobile",
              "fieldName": "src"
            },
            {
              "name": "src-2x",
              "type": {
                "text": "string | undefined"
              },
              "description": "The image shown on mobile with 2x DPI",
              "fieldName": "src2x"
            },
            {
              "name": "src-sm",
              "type": {
                "text": "string | undefined"
              },
              "description": "The URL for the image shown on small screens (min-width: 576px)",
              "fieldName": "srcSm"
            },
            {
              "name": "src-sm-2x",
              "type": {
                "text": "string | undefined"
              },
              "description": "The URL for the image shown on small screens (min-width: 576px) with 2x DPI",
              "fieldName": "srcSm2x"
            },
            {
              "name": "src-lg",
              "type": {
                "text": "string | undefined"
              },
              "description": "The URL for the image shown on large screens (min-width: 992px)",
              "fieldName": "srcLg"
            },
            {
              "name": "filter",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Apply SVG Filter to the image",
              "fieldName": "filter"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "summary": "Allows users to place an image in the background of your page or area of a page.",
          "tagName": "pf-background-image",
          "customElement": true,
          "demos": [
            {
              "url": "https://patternflyelements.org/components/background-image/demo/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-background-image/demo/pf-background-image.html"
              }
            },
            {
              "url": "https://patternflyelements.org/components/background-image/demo/filter-override/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-background-image/demo/filter-override.html"
              }
            },
            {
              "url": "https://patternflyelements.org/components/background-image/demo/sibling-content/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-background-image/demo/sibling-content.html"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PfBackgroundImage",
          "declaration": {
            "name": "PfBackgroundImage",
            "module": "pf-background-image/pf-background-image.js"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "pf-background-image",
          "declaration": {
            "name": "PfBackgroundImage",
            "module": "pf-background-image/pf-background-image.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "pf-badge/pf-badge.js",
      "declarations": [
        {
          "kind": "class",
          "description": "A **badge** is used to annotate other information like a label or an object name.",
          "name": "PfBadge",
          "cssProperties": [
            {
              "type": {
                "text": "<length>"
              },
              "name": "--pf-c-badge--BorderRadius",
              "default": "180em"
            },
            {
              "type": {
                "text": "<length>"
              },
              "name": "--pf-c-badge--MinWidth",
              "default": "2rem"
            },
            {
              "type": {
                "text": "<length>"
              },
              "name": "--pf-c-badge--PaddingLeft",
              "default": "0.5rem"
            },
            {
              "type": {
                "text": "<length>"
              },
              "name": "--pf-c-badge--PaddingRight",
              "default": "0.5rem"
            },
            {
              "type": {
                "text": "<length>"
              },
              "name": "--pf-c-badge--FontSize",
              "default": "0.85em"
            },
            {
              "type": {
                "text": "<length>"
              },
              "name": "--pf-c-badge--LineHeight",
              "default": "1.5"
            },
            {
              "type": {
                "text": "<length>"
              },
              "name": "--pf-c-badge--FontWeight",
              "default": "700"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-badge--Color",
              "default": "#151515"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-badge--BackgroundColor",
              "default": "#f0f0f0"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-badge--m-read--Color",
              "default": "#151515"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-badge--m-read--BackgroundColor",
              "default": "#f0f0f0"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-badge--m-unread--Color",
              "default": "#fff"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-badge--m-unread--BackgroundColor",
              "default": "#06c"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "state",
              "type": {
                "text": "'unread' | 'read' | undefined"
              },
              "description": "Denotes the state-of-affairs this badge represents\nOptions include read and unread",
              "attribute": "state",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "number",
              "type": {
                "text": "number | undefined"
              },
              "description": "Sets a numeric value for a badge.\n\nYou can pair it with `threshold` attribute to add a `+` sign\nif the number exceeds the threshold value.",
              "attribute": "number",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "threshold",
              "type": {
                "text": "number | undefined"
              },
              "description": "Sets a threshold for the numeric value and adds `+` sign if\nthe numeric value exceeds the threshold value.",
              "attribute": "threshold",
              "reflects": true
            }
          ],
          "attributes": [
            {
              "name": "state",
              "type": {
                "text": "'unread' | 'read' | undefined"
              },
              "description": "Denotes the state-of-affairs this badge represents\nOptions include read and unread",
              "fieldName": "state"
            },
            {
              "name": "number",
              "type": {
                "text": "number | undefined"
              },
              "description": "Sets a numeric value for a badge.\n\nYou can pair it with `threshold` attribute to add a `+` sign\nif the number exceeds the threshold value.",
              "fieldName": "number"
            },
            {
              "name": "threshold",
              "type": {
                "text": "number | undefined"
              },
              "description": "Sets a threshold for the numeric value and adds `+` sign if\nthe numeric value exceeds the threshold value.",
              "fieldName": "threshold"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "pf-badge",
          "customElement": true,
          "demos": [
            {
              "url": "https://patternflyelements.org/components/badge/demo/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-badge/demo/pf-badge.html"
              }
            },
            {
              "url": "https://patternflyelements.org/components/badge/demo/read/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-badge/demo/read.html"
              }
            },
            {
              "url": "https://patternflyelements.org/components/badge/demo/threshold/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-badge/demo/threshold.html"
              }
            },
            {
              "url": "https://patternflyelements.org/components/badge/demo/unread/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-badge/demo/unread.html"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PfBadge",
          "declaration": {
            "name": "PfBadge",
            "module": "pf-badge/pf-badge.js"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "pf-badge",
          "declaration": {
            "name": "PfBadge",
            "module": "pf-badge/pf-badge.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "pf-banner/pf-banner.js",
      "declarations": [
        {
          "kind": "class",
          "description": "A banner is a 1-line, full color, full width container that can be used to communicate short snippets of information to users.\nBanners are un-intrusive and non-dismissible.",
          "name": "PfBanner",
          "cssProperties": [
            {
              "type": {
                "text": "<length>"
              },
              "name": "--pf-c-banner--PaddingTop",
              "default": "0.25rem"
            },
            {
              "type": {
                "text": "<length>"
              },
              "name": "--pf-c-banner--PaddingRight",
              "default": "1rem"
            },
            {
              "type": {
                "text": "<length>"
              },
              "name": "--pf-c-banner--PaddingBottom",
              "default": "0.25rem"
            },
            {
              "type": {
                "text": "<length>"
              },
              "name": "--pf-c-banner--PaddingLeft",
              "default": "1rem"
            },
            {
              "type": {
                "text": "<length>"
              },
              "name": "--pf-c-banner--md--PaddingRight",
              "default": "1.5rem"
            },
            {
              "type": {
                "text": "<length>"
              },
              "name": "--pf-c-banner--md--PaddingLeft",
              "default": "1.5rem"
            },
            {
              "type": {
                "text": "<length>"
              },
              "name": "--pf-c-banner--FontSize",
              "default": "0.875rem"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-banner--BackgroundColor",
              "default": "#4f5255"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-banner--m-info--BackgroundColor",
              "default": "#73bcf7"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-banner--m-danger--BackgroundColor",
              "default": "#c9190b"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-banner--m-success--BackgroundColor",
              "default": "#3e8635"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-banner--m-warning--BackgroundColor",
              "default": "#f0ab00"
            },
            {
              "name": "--pf-c-banner--m-sticky--ZIndex",
              "default": "300"
            },
            {
              "name": "--pf-c-banner--m-sticky--BoxShadow",
              "default": "0 0.5rem 0.5rem -0.375rem rgba(3, 3, 3, 0.18)"
            }
          ],
          "cssParts": [
            {
              "description": "The container of the banner",
              "name": "container"
            }
          ],
          "slots": [
            {
              "description": "Contains the labels's icon, e.g. web-icon-alert-success.",
              "name": "icon"
            },
            {
              "description": "Contains the text for the banner"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "variant",
              "type": {
                "text": "BannerVariant | undefined"
              },
              "description": "Changes the visual appearance of the banner.",
              "attribute": "variant",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "icon",
              "type": {
                "text": "string | undefined"
              },
              "description": "Shorthand for the `icon` slot, the value is icon name",
              "attribute": "icon"
            },
            {
              "kind": "field",
              "name": "sticky",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Shorthand for the `icon` slot, the value is icon name",
              "attribute": "sticky"
            },
            {
              "kind": "field",
              "name": "#slots",
              "privacy": "private",
              "default": "new SlotController(this, null, 'icon')",
              "description": "Represents the state of the anonymous and icon slots"
            }
          ],
          "attributes": [
            {
              "name": "variant",
              "type": {
                "text": "BannerVariant | undefined"
              },
              "description": "Changes the visual appearance of the banner.",
              "fieldName": "variant"
            },
            {
              "name": "icon",
              "type": {
                "text": "string | undefined"
              },
              "description": "Shorthand for the `icon` slot, the value is icon name",
              "fieldName": "icon"
            },
            {
              "name": "sticky",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Shorthand for the `icon` slot, the value is icon name",
              "fieldName": "sticky"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "summary": "Allows users to display a stylized banner.",
          "tagName": "pf-banner",
          "customElement": true,
          "demos": [
            {
              "url": "https://patternflyelements.org/components/banner/demo/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-banner/demo/pf-banner.html"
              }
            },
            {
              "url": "https://patternflyelements.org/components/banner/demo/status-banners/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-banner/demo/status-banners.html"
              }
            },
            {
              "url": "https://patternflyelements.org/components/banner/demo/sticky/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-banner/demo/sticky.html"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PfBanner",
          "declaration": {
            "name": "PfBanner",
            "module": "pf-banner/pf-banner.js"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "pf-banner",
          "declaration": {
            "name": "PfBanner",
            "module": "pf-banner/pf-banner.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "pf-button/pf-button.js",
      "declarations": [
        {
          "kind": "class",
          "description": "A **button** is a box area or text that communicates and triggers user actions when\nclicked or selected. Buttons can be used to communicate and immediately trigger\nactions a user can take in an application, like submitting a form, canceling a\nprocess, or creating a new object. Buttons can also be used to take a user to a\nnew location, like another page inside of a web application, or an external site\nsuch as help or documentation..",
          "name": "PfButton",
          "cssProperties": [
            {
              "type": {
                "text": "<length>"
              },
              "name": "--pf-c-button--FontSize",
              "default": "1rem"
            },
            {
              "name": "--pf-c-button--FontWeight",
              "default": "400"
            },
            {
              "type": {
                "text": "<number>"
              },
              "name": "--pf-c-button--LineHeight",
              "default": "1.5"
            },
            {
              "type": {
                "text": "<length>"
              },
              "name": "--pf-c-button--PaddingTop",
              "default": "0.375rem"
            },
            {
              "type": {
                "text": "<length>"
              },
              "name": "--pf-c-button--PaddingLeft",
              "default": "1rem"
            },
            {
              "type": {
                "text": "<length>"
              },
              "name": "--pf-c-button--PaddingBottom",
              "default": "0.375rem"
            },
            {
              "type": {
                "text": "<length>"
              },
              "name": "--pf-c-button--PaddingRight",
              "default": "1rem"
            },
            {
              "type": {
                "text": "<length>|<percentage>"
              },
              "name": "--pf-c-button--BorderRadius",
              "default": "3px"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-button--after--BorderColor",
              "default": "transparent"
            },
            {
              "type": {
                "text": "<length>"
              },
              "name": "--pf-c-button--after--BorderRadius",
              "default": "3px"
            },
            {
              "type": {
                "text": "<length>"
              },
              "name": "--pf-c-button--after--BorderWidth",
              "default": "1px"
            },
            {
              "type": {
                "text": "<length>"
              },
              "name": "--pf-c-button--active--after--BorderWidth",
              "default": "2px"
            },
            {
              "type": {
                "text": "<length>"
              },
              "name": "--pf-c-button--hover--after--BorderWidth",
              "default": "2px"
            },
            {
              "type": {
                "text": "<length>"
              },
              "name": "--pf-c-button--focus--after--BorderWidth",
              "default": "2px"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-button--m-primary--Color",
              "default": "#fff"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-button--m-primary--BackgroundColor",
              "default": "#06c"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-button--m-primary--active--Color",
              "default": "#fff"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-button--m-primary--active--BackgroundColor",
              "default": "#004080"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-button--m-primary--focus--Color",
              "default": "#fff"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-button--m-primary--focus--BackgroundColor",
              "default": "#004080"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-button--m-primary--hover--Color",
              "default": "#fff"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-button--m-primary--hover--BackgroundColor",
              "default": "#004080"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-button--m-secondary--Color",
              "default": "#06c"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-button--m-secondary--BackgroundColor",
              "default": "transparent"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-button--m-secondary--active--Color",
              "default": "#06c"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-button--m-secondary--active--BackgroundColor",
              "default": "transparent"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-button--m-secondary--active--BorderColor",
              "default": "#06c"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-button--m-secondary--focus--Color",
              "default": "#06c"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-button--m-secondary--focus--BackgroundColor",
              "default": "transparent"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-button--m-secondary--focus--BorderColor",
              "default": "#06c"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-button--m-secondary--hover--Color",
              "default": "#06c"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-button--m-secondary--hover--BackgroundColor",
              "default": "transparent"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-button--m-secondary--hover--BorderColor",
              "default": "#06c"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-button--m-tertiary--Color",
              "default": "#151515"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-button--m-tertiary--BackgroundColor",
              "default": "transparent"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-button--m-tertiary--active--Color",
              "default": "#151515"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-button--m-tertiary--active--BackgroundColor",
              "default": "transparent"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-button--m-tertiary--active--BorderColor",
              "default": "#151515"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-button--m-tertiary--focus--Color",
              "default": "#151515"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-button--m-tertiary--focus--BackgroundColor",
              "default": "transparent"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-button--m-tertiary--focus--BorderColor",
              "default": "#151515"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-button--m-tertiary--hover--Color",
              "default": "#151515"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-button--m-tertiary--hover--BackgroundColor",
              "default": "transparent"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-button--m-tertiary--hover--BorderColor",
              "default": "#151515"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-button--m-danger--Color",
              "default": "#fff"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-button--m-danger--BackgroundColor",
              "default": "#c9190b"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-button--m-danger--active--Color",
              "default": "#fff"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-button--m-danger--active--BackgroundColor",
              "default": "#a30000"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-button--m-danger--focus--Color",
              "default": "#fff"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-button--m-danger--focus--BackgroundColor",
              "default": "#a30000"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-button--m-danger--hover--Color",
              "default": "#fff"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-button--m-danger--hover--BackgroundColor",
              "default": "#a30000"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-button--m-secondary--m-danger--Color",
              "default": "#c9190b"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-button--m-secondary--m-danger--BackgroundColor",
              "default": "transparent"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-button--m-secondary--m-danger--BorderColor",
              "default": "#c9190b"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-button--m-secondary--m-danger--active--Color",
              "default": "#a30000"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-button--m-secondary--m-danger--active--BackgroundColor",
              "default": "transparent"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-button--m-secondary--m-danger--active--BorderColor",
              "default": "#c9190b"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-button--m-secondary--m-danger--focus--Color",
              "default": "#a30000"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-button--m-secondary--m-danger--focus--BackgroundColor",
              "default": "transparent"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-button--m-secondary--m-danger--focus--BorderColor",
              "default": "#c9190b"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-button--m-secondary--m-danger--hover--Color",
              "default": "#a30000"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-button--m-secondary--m-danger--hover--BackgroundColor",
              "default": "transparent"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-button--m-secondary--m-danger--hover--BorderColor",
              "default": "#c9190b"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-button--m-control--disabled--BackgroundColor",
              "default": "#f0f0f0"
            },
            {
              "type": {
                "text": "<length>"
              },
              "name": "--pf-c-button--m-control--BorderRadius",
              "default": "0"
            },
            {
              "type": {
                "text": "<length>"
              },
              "name": "--pf-c-button--m-control--after--BorderWidth",
              "default": "1px"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-button--m-control--after--BorderTopColor",
              "default": "#f0f0f0"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-button--m-control--after--BorderRightColor",
              "default": "#f0f0f0"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-button--m-control--after--BorderBottomColor",
              "default": "#8a8d90"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-button--m-control--after--BorderLeftColor",
              "default": "#f0f0f0"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-button--m-control--Color",
              "default": "#151515"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-button--m-control--BackgroundColor",
              "default": "#fff"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-button--m-control--active--Color",
              "default": "#151515"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-button--m-control--active--BackgroundColor",
              "default": "#fff"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-button--m-control--active--BorderBottomColor",
              "default": "#06c"
            },
            {
              "type": {
                "text": "<length>"
              },
              "name": "--pf-c-button--m-control--active--after--BorderBottomWidth",
              "default": "2px"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-button--m-control--focus--Color",
              "default": "#151515"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-button--m-control--focus--BackgroundColor",
              "default": "#fff"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-button--m-control--focus--BorderBottomColor",
              "default": "#06c"
            },
            {
              "type": {
                "text": "<length>"
              },
              "name": "--pf-c-button--m-control--focus--after--BorderBottomWidth",
              "default": "2px"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-button--m-control--hover--Color",
              "default": "#151515"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-button--m-control--hover--BackgroundColor",
              "default": "#fff"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-button--m-control--hover--BorderBottomColor",
              "default": "#06c"
            },
            {
              "type": {
                "text": "<length>"
              },
              "name": "--pf-c-button--m-control--hover--after--BorderBottomWidth",
              "default": "2px"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-button--disabled--Color",
              "default": "#6a6e73"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-button--disabled--BackgroundColor",
              "default": "#d2d2d2"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-button--disabled--after--BorderColor",
              "default": "transparent"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-button--m-warning--Color",
              "default": "#151515"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-button--m-warning--BackgroundColor",
              "default": "#f0ab00"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-button--m-warning--active--Color",
              "default": "#151515"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-button--m-warning--active--BackgroundColor",
              "default": "#c58c00"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-button--m-warning--focus--Color",
              "default": "#151515"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-button--m-warning--focus--BackgroundColor",
              "default": "#c58c00"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-button--m-warning--hover--Color",
              "default": "#151515"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-button--m-warning--hover--BackgroundColor",
              "default": "#c58c00"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-button--m-plain--BackgroundColor",
              "default": "transparent"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-button--m-plain--Color",
              "default": "#6a6e73"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-button--m-plain--hover--BackgroundColor",
              "default": "transparent"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-button--m-plain--hover--Color",
              "default": "#151515"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-button--m-plain--focus--BackgroundColor",
              "default": "transparent"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-button--m-plain--focus--Color",
              "default": "#151515"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-button--m-plain--active--BackgroundColor",
              "default": "transparent"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-button--m-plain--active--Color",
              "default": "#151515"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-button--m-plain--disabled--Color",
              "default": "#d2d2d2"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-button--m-plain--disabled--BackgroundColor",
              "default": "transparent"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "formAssociated",
              "type": {
                "text": "boolean"
              },
              "static": true,
              "default": "true",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "type",
              "type": {
                "text": "'button' | 'submit' | 'reset' | undefined"
              },
              "attribute": "type",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string | undefined"
              },
              "description": "Accessible name for the button, use when the button does not have slotted text",
              "attribute": "label"
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "string | undefined"
              },
              "description": "Form value for the button",
              "attribute": "value"
            },
            {
              "kind": "field",
              "name": "name",
              "type": {
                "text": "string | undefined"
              },
              "description": "Form element name for the button",
              "attribute": "name"
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Disables the button",
              "attribute": "disabled",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "loading",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Represents the state of a stateful button",
              "attribute": "loading",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "size",
              "type": {
                "text": "'small' | 'large' | undefined"
              },
              "description": "Changes the size of the button.",
              "attribute": "size",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "warning",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Not as urgent as danger",
              "attribute": "warning",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "danger",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Use danger buttons for actions a user can take that are potentially\ndestructive or difficult/impossible to undo, like deleting or removing\nuser data.",
              "attribute": "danger",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "plain",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Applies plain styles",
              "attribute": "plain",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "variant",
              "type": {
                "text": "ButtonVariant"
              },
              "default": "'primary'",
              "description": "Changes the style of the button.\n- Primary: Used for the most important call to action on a page. Try to\nlimit primary buttons to one per page.\n- Secondary: Use secondary buttons for general actions on a page, that\ndon’t require as much emphasis as primary button actions. For example,\nyou can use secondary buttons where there are multiple actions, like in\ntoolbars or data lists.\n- Tertiary: Tertiary buttons are flexible and can be used as needed.",
              "attribute": "variant",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "inline",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "inline",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "block",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "block",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "icon",
              "type": {
                "text": "string | undefined"
              },
              "description": "Shorthand for the `icon` slot, the value is icon name",
              "attribute": "icon"
            },
            {
              "kind": "field",
              "name": "iconSet",
              "type": {
                "text": "string | undefined"
              },
              "description": "Icon set for the `icon` property",
              "attribute": "icon-set"
            },
            {
              "kind": "field",
              "name": "href",
              "type": {
                "text": "string | undefined"
              },
              "description": "Store the URL Link",
              "attribute": "href",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "target",
              "type": {
                "text": "string | undefined"
              },
              "description": "Redirecting the URL Link to new Tab",
              "attribute": "target",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "#internals",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "#slots",
              "privacy": "private",
              "default": "new SlotController(this, 'icon', null)"
            },
            {
              "kind": "field",
              "name": "#disabled",
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "method",
              "name": "formDisabledCallback",
              "return": {
                "type": {
                  "text": "Promise<void>"
                }
              }
            },
            {
              "kind": "method",
              "name": "#onClick",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "#onKeydown",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "KeyboardEvent"
                  }
                }
              ],
              "privacy": "private"
            }
          ],
          "events": [
            {
              "name": "click",
              "type": {
                "text": "MouseEvent"
              }
            }
          ],
          "attributes": [
            {
              "type": {
                "text": "string"
              },
              "description": "ARIA label for the loading indicator",
              "name": "loading-label",
              "default": "'loading'"
            },
            {
              "name": "type",
              "type": {
                "text": "'button' | 'submit' | 'reset' | undefined"
              },
              "fieldName": "type"
            },
            {
              "name": "label",
              "type": {
                "text": "string | undefined"
              },
              "description": "Accessible name for the button, use when the button does not have slotted text",
              "fieldName": "label"
            },
            {
              "name": "value",
              "type": {
                "text": "string | undefined"
              },
              "description": "Form value for the button",
              "fieldName": "value"
            },
            {
              "name": "name",
              "type": {
                "text": "string | undefined"
              },
              "description": "Form element name for the button",
              "fieldName": "name"
            },
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Disables the button",
              "fieldName": "disabled"
            },
            {
              "name": "loading",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Represents the state of a stateful button",
              "fieldName": "loading"
            },
            {
              "name": "size",
              "type": {
                "text": "'small' | 'large' | undefined"
              },
              "description": "Changes the size of the button.",
              "fieldName": "size"
            },
            {
              "name": "warning",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Not as urgent as danger",
              "fieldName": "warning"
            },
            {
              "name": "danger",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Use danger buttons for actions a user can take that are potentially\ndestructive or difficult/impossible to undo, like deleting or removing\nuser data.",
              "fieldName": "danger"
            },
            {
              "name": "plain",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Applies plain styles",
              "fieldName": "plain"
            },
            {
              "name": "variant",
              "type": {
                "text": "ButtonVariant"
              },
              "default": "'primary'",
              "description": "Changes the style of the button.\n- Primary: Used for the most important call to action on a page. Try to\n  limit primary buttons to one per page.\n- Secondary: Use secondary buttons for general actions on a page, that\n  don’t require as much emphasis as primary button actions. For example,\n  you can use secondary buttons where there are multiple actions, like in\n  toolbars or data lists.\n- Tertiary: Tertiary buttons are flexible and can be used as needed.",
              "fieldName": "variant"
            },
            {
              "name": "inline",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "inline"
            },
            {
              "name": "block",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "block"
            },
            {
              "name": "icon",
              "type": {
                "text": "string | undefined"
              },
              "description": "Shorthand for the `icon` slot, the value is icon name",
              "fieldName": "icon"
            },
            {
              "name": "icon-set",
              "type": {
                "text": "string | undefined"
              },
              "description": "Icon set for the `icon` property",
              "fieldName": "iconSet"
            },
            {
              "name": "href",
              "type": {
                "text": "string | undefined"
              },
              "description": "Store the URL Link",
              "fieldName": "href"
            },
            {
              "name": "target",
              "type": {
                "text": "string | undefined"
              },
              "description": "Redirecting the URL Link to new Tab",
              "fieldName": "target"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "summary": "Allows users to perform an action when triggered",
          "tagName": "pf-button",
          "customElement": true,
          "demos": [
            {
              "url": "https://patternflyelements.org/components/button/demo/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-button/demo/pf-button.html"
              }
            },
            {
              "url": "https://patternflyelements.org/components/button/demo/block/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-button/demo/block.html"
              }
            },
            {
              "url": "https://patternflyelements.org/components/button/demo/form-control/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-button/demo/form-control.html"
              }
            },
            {
              "url": "https://patternflyelements.org/components/button/demo/sizes/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-button/demo/sizes.html"
              }
            },
            {
              "url": "https://patternflyelements.org/components/button/demo/stateful/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-button/demo/stateful.html"
              }
            },
            {
              "url": "https://patternflyelements.org/components/button/demo/user-role/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-button/demo/user-role.html"
              }
            },
            {
              "url": "https://patternflyelements.org/components/button/demo/variants/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-button/demo/variants.html"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PfButton",
          "declaration": {
            "name": "PfButton",
            "module": "pf-button/pf-button.js"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "pf-button",
          "declaration": {
            "name": "PfButton",
            "module": "pf-button/pf-button.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "pf-card/pf-card.js",
      "declarations": [
        {
          "kind": "class",
          "description": "A **card** is a square or rectangular container that can contain any kind of content.\nCards symbolize units of information, and each one acts as an entry point for\nusers to access more details. For example, in dashboards and catalog views, cards\nfunction as a preview of a detailed page. Cards may also be used in data displays\nlike card views, or for positioning content on a page.",
          "name": "PfCard",
          "cssProperties": [
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-card--BackgroundColor",
              "default": "#ffffff"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-card--BoxShadow",
              "default": "0 0.0625rem 0.125rem 0 rgba(3, 3, 3, 0.12), 0 0 0.125rem 0 rgba(3, 3, 3, 0.06)"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-card--size-compact__body--FontSize",
              "default": ".875rem"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-card--size-compact__footer--FontSize",
              "default": "1rem"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-card--size-compact--first-child--PaddingTop",
              "default": "1.5rem"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-card--size-compact--child--PaddingRight",
              "default": "1rem"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-card--size-compact--child--PaddingBottom",
              "default": "1rem"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-card--size-compact--child--PaddingLeft",
              "default": "1rem"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-card--size-compact__title--not--last-child--PaddingBottom",
              "default": ".5rem"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-card--size-large__title--FontSize",
              "default": "1.25rem"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-card--size-large--first-child--PaddingTop",
              "default": "2rem"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-card--size-large--child--PaddingRight",
              "default": "2rem"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-card--size-large--child--PaddingBottom",
              "default": "2rem"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-card--size-large--child--PaddingLeft",
              "default": "2rem"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-card--size-large__title--not--last-child--PaddingBottom",
              "default": "1.5rem"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-card--m-flat--BorderWidth",
              "default": "1px solid #d2d2d2"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-card--m-plain--BoxShadow",
              "default": "none"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-card--m-plain--BackgroundColor",
              "default": "transparent"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-card--m-rounded--BorderRadius",
              "default": "3px"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-card--m-full-height--Height",
              "default": "100"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-card__title--FontFamily",
              "default": "\"RedHatDisplayUpdated\", helvetica, arial, sans-serif"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-card__title--FontSize",
              "default": "1rem"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-card__title--FontWeight",
              "default": "700"
            }
          ],
          "cssParts": [
            {
              "description": "The container for *header* content",
              "name": "header"
            },
            {
              "description": "The container for *body* content",
              "name": "body"
            },
            {
              "description": "The container for *footer* content",
              "name": "footer"
            }
          ],
          "slots": [
            {
              "description": "When included, defines the contents of a card. Card headers can contain images as well as\nthe title of a card and an actions menu represented by the right-aligned kebab.\nIn most cases, your card should include a header. The only exceptions are when cards being\nused as a layout element to create a white background behind other content.",
              "name": "header"
            },
            {
              "description": "Communicates the title of a card if it's not included in the header.\nIf a card will be utilized as a selectable and clickable card, the title needs to be made as a linked text to trigger action and indicate interaction.",
              "name": "title"
            },
            {
              "description": "Body. Provides details about the item. A card body can include any combination of static\ntext and/or active content.",
              "name": ""
            },
            {
              "description": "Contains external links, actions, or static text at the bottom of a card.",
              "name": "footer"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "size",
              "type": {
                "text": "'compact' | 'large' | undefined"
              },
              "description": "Optionally provide a size for the card and the card contents.\nThe default is set to `undefined` and provides default styles.\nCompact provides styles which decreases the padding between the sections.\nLarge provides styles which increases the padding between the sections and the font size for the title, header, and footer.",
              "attribute": "size",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "rounded",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Optionally apply a border radius for the drop shadow and/or border.",
              "attribute": "rounded",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "fullHeight",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Optionally allow the card to take up the full height of the parent element.",
              "attribute": "full-height",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "plain",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Optionally remove the border on the card container.",
              "attribute": "plain",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "#slots",
              "privacy": "private",
              "default": "new SlotController(this, 'header', 'title', null, 'footer')"
            }
          ],
          "attributes": [
            {
              "name": "size",
              "type": {
                "text": "'compact' | 'large' | undefined"
              },
              "description": "Optionally provide a size for the card and the card contents.\nThe default is set to `undefined` and provides default styles.\nCompact provides styles which decreases the padding between the sections.\nLarge provides styles which increases the padding between the sections and the font size for the title, header, and footer.",
              "fieldName": "size"
            },
            {
              "name": "rounded",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Optionally apply a border radius for the drop shadow and/or border.",
              "fieldName": "rounded"
            },
            {
              "name": "full-height",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Optionally allow the card to take up the full height of the parent element.",
              "fieldName": "fullHeight"
            },
            {
              "name": "plain",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Optionally remove the border on the card container.",
              "fieldName": "plain"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "summary": "Gives a preview of information in a small layout",
          "tagName": "pf-card",
          "customElement": true,
          "demos": [
            {
              "url": "https://patternflyelements.org/components/card/demo/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-card/demo/pf-card.html"
              }
            },
            {
              "url": "https://patternflyelements.org/components/card/demo/header-images-and-actions/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-card/demo/header-images-and-actions.html"
              }
            },
            {
              "url": "https://patternflyelements.org/components/card/demo/modifiers/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-card/demo/modifiers.html"
              }
            },
            {
              "url": "https://patternflyelements.org/components/card/demo/ssr/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-card/demo/ssr.html"
              }
            },
            {
              "url": "https://patternflyelements.org/components/card/demo/title-inline-with-images-and-actions/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-card/demo/title-inline-with-images-and-actions.html"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PfCard",
          "declaration": {
            "name": "PfCard",
            "module": "pf-card/pf-card.js"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "pf-card",
          "declaration": {
            "name": "PfCard",
            "module": "pf-card/pf-card.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "pf-chip/pf-chip-group.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "PfChipGroupExpandEvent",
          "superclass": {
            "name": "Event",
            "module": "global:"
          }
        },
        {
          "kind": "class",
          "description": "",
          "name": "PfChipGroupRemoveEvent",
          "superclass": {
            "name": "Event",
            "module": "global:"
          }
        },
        {
          "kind": "class",
          "description": "A **chip group** is a collection of chips that can be grouped by category and used to represent one or more values assigned to a single attribute. When value of numChips is exceeded, additional chips will be hidden using an overflow chip.",
          "name": "PfChipGroup",
          "cssProperties": [
            {
              "name": "--pf-c-chip-group__list--MarginBottom",
              "default": "calc(var(--pf-global--spacer--xs, 0.25rem) * -1)"
            },
            {
              "name": "--pf-c-chip-group__list--MarginRight",
              "default": "calc(var(--pf-global--spacer--xs, 0.25rem) * -1)"
            },
            {
              "name": "--pf-c-chip-group--m-category--PaddingTop",
              "default": "var(--pf-global--spacer--xs, 0.25rem)"
            },
            {
              "name": "--pf-c-chip-group--m-category--PaddingRight",
              "default": "var(--pf-global--spacer--xs, 0.25rem)"
            },
            {
              "name": "--pf-c-chip-group--m-category--PaddingBottom",
              "default": "var(--pf-global--spacer--xs, 0.25rem)"
            },
            {
              "name": "--pf-c-chip-group--m-category--PaddingLeft",
              "default": "var(--pf-global--spacer--sm, 0.5rem)"
            },
            {
              "name": "--pf-c-chip-group--m-category--BorderRadius",
              "default": "var(--pf-global--BorderRadius--sm, 3px)"
            },
            {
              "name": "--pf-c-chip-group--m-category--BackgroundColor",
              "default": "var(--pf-global--BackgroundColor--200, #f0f0f0)"
            },
            {
              "name": "--pf-c-chip-group__label--MarginRight",
              "default": "var(--pf-global--spacer--sm, 0.5rem)"
            },
            {
              "name": "--pf-c-chip-group__label--FontSize",
              "default": "var(--pf-global--FontSize--sm, 0.875rem)"
            },
            {
              "name": "--pf-c-chip-group__label--MaxWidth",
              "default": "18ch"
            },
            {
              "name": "--pf-c-chip-group__close--MarginTop",
              "default": "calc(var(--pf-global--spacer--xs, 0.25rem) * -1)"
            },
            {
              "name": "--pf-c-chip-group__close--MarginBottom",
              "default": "calc(var(--pf-global--spacer--xs, 0.25rem) * -1)"
            },
            {
              "name": "--pf-c-chip-group__list-item--MarginRight",
              "default": "var(--pf-global--spacer--xs, 0.25rem)"
            },
            {
              "name": "--pf-c-chip-group__list-item--MarginBottom",
              "default": "var(--pf-global--spacer--xs, 0.25rem)"
            }
          ],
          "slots": [
            {
              "description": "Category name text for chip group category. If this prop is supplied chip group with have a label and category styling applied",
              "name": "category-name"
            },
            {
              "description": "`<pf-chip>` elements.",
              "name": ""
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "shadowRootOptions",
              "type": {
                "text": "ShadowRootInit"
              },
              "static": true,
              "default": "{\n    ...LitElement.shadowRootOptions,\n    delegatesFocus: true,\n  }",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "accessibleLabel",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Accessible label for chip group that does not have a category name",
              "attribute": "accessible-label"
            },
            {
              "kind": "field",
              "name": "accessibleCloseLabel",
              "type": {
                "text": "string"
              },
              "default": "'Close'",
              "description": "Accessible label for close button",
              "attribute": "accessible-close-label"
            },
            {
              "kind": "field",
              "name": "collapsedText",
              "type": {
                "text": "string"
              },
              "default": "'${remaining} more'",
              "description": "Customizeable \"more\" template string. Use variable \"${remaining}\" for overflow chip count.",
              "attribute": "collapsed-text"
            },
            {
              "kind": "field",
              "name": "expandedText",
              "type": {
                "text": "string"
              },
              "default": "'show less'",
              "description": "Customizable \"show less\" text string.",
              "attribute": "expanded-text"
            },
            {
              "kind": "field",
              "name": "numChips",
              "type": {
                "text": "number"
              },
              "default": "3",
              "description": "Set number of chips to show before overflow",
              "attribute": "num-chips"
            },
            {
              "kind": "field",
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Flag indicating if overflow chips are visible",
              "attribute": "open",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "closeable",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Flag if chip group can be closed",
              "attribute": "closeable",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "_overflowChip",
              "type": {
                "text": "PfChip | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "_button",
              "type": {
                "text": "HTMLButtonElement | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "_categorySlotted",
              "type": {
                "text": "Node[] | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "#chips",
              "privacy": "private",
              "type": {
                "text": "NodeListOf<PfChip>"
              },
              "readonly": true
            },
            {
              "kind": "field",
              "name": "#tabindex",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "activeChip",
              "description": "active chip that receives focus when group receives focus"
            },
            {
              "kind": "field",
              "name": "hasCategory",
              "type": {
                "text": "boolean"
              },
              "description": "whether or not group has a category",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "remaining",
              "type": {
                "text": "number"
              },
              "readonly": true
            },
            {
              "kind": "method",
              "name": "chipsChanged",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "description": "updates chips when they change"
            },
            {
              "kind": "method",
              "name": "#onCloseClick",
              "description": "handles chip group close",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "#onMoreClick",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "Event"
                  },
                  "description": "click event"
                }
              ],
              "description": "handles overflow chip's click event",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "#onSlotchange",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "#onRemove",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "Event"
                  }
                }
              ],
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "#updateOverflow",
              "description": "updates which chips are hidden",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "focusOnChip",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "chip",
                  "type": {
                    "text": "PfChip"
                  },
                  "description": "pf-chip element"
                }
              ],
              "description": "Activates the specified chip and sets focus on it"
            }
          ],
          "events": [
            {
              "description": "Fires when chip group is expanded to show all chips",
              "name": "expand"
            },
            {
              "description": "Fires when chip group is closed/removed",
              "name": "remove"
            }
          ],
          "attributes": [
            {
              "name": "accessible-label",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Accessible label for chip group that does not have a category name",
              "fieldName": "accessibleLabel"
            },
            {
              "name": "accessible-close-label",
              "type": {
                "text": "string"
              },
              "default": "'Close'",
              "description": "Accessible label for close button",
              "fieldName": "accessibleCloseLabel"
            },
            {
              "name": "collapsed-text",
              "type": {
                "text": "string"
              },
              "default": "'${remaining} more'",
              "description": "Customizeable \"more\" template string. Use variable \"${remaining}\" for overflow chip count.",
              "fieldName": "collapsedText"
            },
            {
              "name": "expanded-text",
              "type": {
                "text": "string"
              },
              "default": "'show less'",
              "description": "Customizable \"show less\" text string.",
              "fieldName": "expandedText"
            },
            {
              "name": "num-chips",
              "type": {
                "text": "number"
              },
              "default": "3",
              "description": "Set number of chips to show before overflow",
              "fieldName": "numChips"
            },
            {
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Flag indicating if overflow chips are visible",
              "fieldName": "open"
            },
            {
              "name": "closeable",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Flag if chip group can be closed",
              "fieldName": "closeable"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "pf-chip-group",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PfChipGroupExpandEvent",
          "declaration": {
            "name": "PfChipGroupExpandEvent",
            "module": "pf-chip/pf-chip-group.js"
          }
        },
        {
          "kind": "js",
          "name": "PfChipGroupRemoveEvent",
          "declaration": {
            "name": "PfChipGroupRemoveEvent",
            "module": "pf-chip/pf-chip-group.js"
          }
        },
        {
          "kind": "js",
          "name": "PfChipGroup",
          "declaration": {
            "name": "PfChipGroup",
            "module": "pf-chip/pf-chip-group.js"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "pf-chip-group",
          "declaration": {
            "name": "PfChipGroup",
            "module": "pf-chip/pf-chip-group.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "pf-chip/pf-chip.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "PfChipRemoveEvent",
          "members": [
            {
              "kind": "field",
              "type": {
                "text": "PfChip",
                "name": "PfChip"
              },
              "name": "chip",
              "privacy": "public"
            }
          ],
          "superclass": {
            "name": "Event",
            "module": "global:"
          }
        },
        {
          "kind": "class",
          "description": "A **chip** is used to communicate a value or a set of attribute-value pairs within workflows that involve filtering a set of objects.",
          "name": "PfChip",
          "cssProperties": [
            {
              "name": "--pf-c-chip--PaddingTop",
              "default": "var(--pf-global--spacer--xs, 0.25rem)"
            },
            {
              "name": "--pf-c-chip--PaddingRight",
              "default": "var(--pf-global--spacer--sm, 0.5rem)"
            },
            {
              "name": "--pf-c-chip--PaddingBottom",
              "default": "var(--pf-global--spacer--xs, 0.25rem)"
            },
            {
              "name": "--pf-c-chip--PaddingLeft",
              "default": "var(--pf-global--spacer--sm, 0.5rem)"
            },
            {
              "name": "--pf-c-chip--BackgroundColor",
              "default": "var(--pf-global--Color--light-100, #fff)"
            },
            {
              "name": "--pf-c-chip--BorderRadius",
              "default": "var(--pf-global--BorderRadius--sm, 3px)"
            },
            {
              "name": "--pf-c-chip--before--BorderColor",
              "default": "var(--pf-global--BorderColor--300, #f0f0f0)"
            },
            {
              "name": "--pf-c-chip--before--BorderWidth",
              "default": "var(--pf-global--BorderWidth--sm, 1px)"
            },
            {
              "name": "--pf-c-chip--before--BorderRadius",
              "default": "var(--pf-c-chip--BorderRadius)"
            },
            {
              "name": "--pf-c-chip--m-overflow__text--Color",
              "default": "var(--pf-global--primary-color--100, #06c)"
            },
            {
              "name": "--pf-c-chip--m-draggable--BackgroundColor",
              "default": "var(--pf-global--BackgroundColor--200, #f0f0f0)"
            },
            {
              "name": "--pf-c-chip--m-draggable--BoxShadow",
              "default": "var(--pf-global--BoxShadow--sm, 0 0.0625rem 0.125rem 0 rgba(3, 3, 3, 0.12), 0 0 0.125rem 0 rgba(3, 3, 3, 0.06))"
            },
            {
              "name": "--pf-c-chip--m-draggable__icon--FontSize",
              "default": "var(--pf-global--icon--FontSize--sm, 0.625rem)"
            },
            {
              "name": "--pf-c-chip__text--FontSize",
              "default": "var(--pf-global--FontSize--xs, 0.75rem)"
            },
            {
              "name": "--pf-c-chip__text--Color",
              "default": "var(--pf-global--Color--100, #151515)"
            },
            {
              "name": "--pf-c-chip__text--MaxWidth",
              "default": "16ch"
            },
            {
              "name": "--pf-c-chip__icon--MarginLeft",
              "default": "var(--pf-global--spacer--sm, 0.5rem)"
            }
          ],
          "cssParts": [
            {
              "description": "container for chip text",
              "name": "text"
            }
          ],
          "slots": [
            {
              "description": "chip text"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "shadowRootOptions",
              "type": {
                "text": "ShadowRootInit"
              },
              "static": true,
              "default": "{\n    ...LitElement.shadowRootOptions,\n    delegatesFocus: true,\n  }",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "accessibleCloseLabel",
              "type": {
                "text": "string"
              },
              "default": "'Close'",
              "description": "Accessible label for close button",
              "attribute": "accessible-close-label"
            },
            {
              "kind": "field",
              "name": "readonly",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Flag indicating if chip is read-only and cannot be removed",
              "attribute": "readonly",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "overflowChip",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Flag indicating if chip is read-only and cannot be removed",
              "attribute": "overflow-chip",
              "reflects": true
            },
            {
              "kind": "method",
              "name": "#onClick",
              "privacy": "private"
            }
          ],
          "events": [
            {
              "type": {
                "text": "ChipRemoveEvent"
              },
              "description": "Fires when chip is removed",
              "name": "remove"
            },
            {
              "type": {
                "text": "Event"
              },
              "description": "when close button is clicked",
              "name": "click"
            }
          ],
          "attributes": [
            {
              "name": "accessible-close-label",
              "type": {
                "text": "string"
              },
              "default": "'Close'",
              "description": "Accessible label for close button",
              "fieldName": "accessibleCloseLabel"
            },
            {
              "name": "readonly",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Flag indicating if chip is read-only and cannot be removed",
              "fieldName": "readonly"
            },
            {
              "name": "overflow-chip",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Flag indicating if chip is read-only and cannot be removed",
              "fieldName": "overflowChip"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "pf-chip",
          "customElement": true,
          "demos": [
            {
              "url": "https://patternflyelements.org/components/chip/demo/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-chip/demo/pf-chip.html"
              }
            },
            {
              "url": "https://patternflyelements.org/components/chip/demo/chip-group-closeable/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-chip/demo/chip-group-closeable.html"
              }
            },
            {
              "url": "https://patternflyelements.org/components/chip/demo/chip-group-open/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-chip/demo/chip-group-open.html"
              }
            },
            {
              "url": "https://patternflyelements.org/components/chip/demo/chip-group-with-accessible-label/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-chip/demo/chip-group-with-accessible-label.html"
              }
            },
            {
              "url": "https://patternflyelements.org/components/chip/demo/chip-group-with-custom-number-of-chips/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-chip/demo/chip-group-with-custom-number-of-chips.html"
              }
            },
            {
              "url": "https://patternflyelements.org/components/chip/demo/chip-group-with-visible-category-name/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-chip/demo/chip-group-with-visible-category-name.html"
              }
            },
            {
              "url": "https://patternflyelements.org/components/chip/demo/chip-group/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-chip/demo/chip-group.html"
              }
            },
            {
              "url": "https://patternflyelements.org/components/chip/demo/long-chip-with-tooltip/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-chip/demo/long-chip-with-tooltip.html"
              }
            },
            {
              "url": "https://patternflyelements.org/components/chip/demo/overflow/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-chip/demo/overflow.html"
              }
            },
            {
              "url": "https://patternflyelements.org/components/chip/demo/read-only/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-chip/demo/read-only.html"
              }
            },
            {
              "url": "https://patternflyelements.org/components/chip/demo/with-badge/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-chip/demo/with-badge.html"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PfChipRemoveEvent",
          "declaration": {
            "name": "PfChipRemoveEvent",
            "module": "pf-chip/pf-chip.js"
          }
        },
        {
          "kind": "js",
          "name": "PfChip",
          "declaration": {
            "name": "PfChip",
            "module": "pf-chip/pf-chip.js"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "pf-chip",
          "declaration": {
            "name": "PfChip",
            "module": "pf-chip/pf-chip.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "pf-clipboard-copy/pf-clipboard-copy.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "PfClipboardCopyCopiedEvent",
          "members": [
            {
              "kind": "field",
              "type": {
                "text": "string",
                "name": "string"
              },
              "name": "text",
              "privacy": "public"
            }
          ],
          "superclass": {
            "name": "Event",
            "module": "global:"
          }
        },
        {
          "kind": "class",
          "description": "The **clipboard copy** component allows users to quickly and easily copy content to their clipboard.",
          "name": "PfClipboardCopy",
          "cssProperties": [
            {
              "name": "--pf-c-clipboard-copy__toggle-icon--Transition",
              "default": ".2s ease-in 0s"
            },
            {
              "name": "--pf-c-clipboard-copy--m-expanded__toggle-icon--Rotate",
              "default": "90deg"
            },
            {
              "name": "--pf-c-clipboard-copy__expandable-content--PaddingTop",
              "default": "var(--pf-global--spacer--md, 1rem)"
            },
            {
              "name": "--pf-c-clipboard-copy__expandable-content--PaddingRight",
              "default": "var(--pf-global--spacer--md, 1rem)"
            },
            {
              "name": "--pf-c-clipboard-copy__expandable-content--PaddingBottom",
              "default": "var(--pf-global--spacer--md, 1rem)"
            },
            {
              "name": "--pf-c-clipboard-copy__expandable-content--PaddingLeft",
              "default": "var(--pf-global--spacer--md, 1rem)"
            },
            {
              "name": "--pf-c-clipboard-copy__expandable-content--BackgroundColor",
              "default": "var(--pf-global--BackgroundColor--light-100, #fff)"
            },
            {
              "name": "--pf-c-clipboard-copy__expandable-content--BorderTopWidth",
              "default": "0"
            },
            {
              "name": "--pf-c-clipboard-copy__expandable-content--BorderRightWidth",
              "default": "var(--pf-global--BorderWidth--sm, 1px)"
            },
            {
              "name": "--pf-c-clipboard-copy__expandable-content--BorderBottomWidth",
              "default": "var(--pf-global--BorderWidth--sm, 1px)"
            },
            {
              "name": "--pf-c-clipboard-copy__expandable-content--BorderLeftWidth",
              "default": "var(--pf-global--BorderWidth--sm, 1px)"
            },
            {
              "name": "--pf-c-clipboard-copy__expandable-content--BorderColor",
              "default": "var(--pf-global--BorderColor--100, #d2d2d2)"
            },
            {
              "name": "--pf-c-clipboard-copy__expandable-content--OutlineOffset",
              "default": "calc(-1 * var(--pf-global--spacer--xs, 0.25rem))"
            },
            {
              "name": "--pf-c-clipboard-copy--m-inline--PaddingTop",
              "default": "0"
            },
            {
              "name": "--pf-c-clipboard-copy--m-inline--PaddingBottom",
              "default": "0"
            },
            {
              "name": "--pf-c-clipboard-copy--m-inline--PaddingLeft",
              "default": "var(--pf-global--spacer--xs, 0.25rem)"
            },
            {
              "name": "--pf-c-clipboard-copy--m-inline--BackgroundColor",
              "default": "var(--pf-global--BackgroundColor--200, #f0f0f0)"
            },
            {
              "name": "--pf-c-clipboard-copy__text--m-code--FontFamily",
              "default": "var(--pf-global--FontFamily--monospace, \"Liberation Mono\", consolas, \"SFMono-Regular\", menlo, monaco, \"Courier New\", monospace)"
            },
            {
              "name": "--pf-c-clipboard-copy__text--m-code--FontSize",
              "default": "var(--pf-global--FontSize--sm, 0.875rem)"
            },
            {
              "name": "--pf-c-clipboard-copy__actions-item--MarginTop",
              "default": "calc(-1 * var(--pf-global--spacer--form-element, 0.375rem))"
            },
            {
              "name": "--pf-c-clipboard-copy__actions-item--MarginBottom",
              "default": "calc(-1 * var(--pf-global--spacer--form-element, 0.375rem))"
            },
            {
              "name": "--pf-c-clipboard-copy__actions-item--button--PaddingTop",
              "default": "var(--pf-global--spacer--xs, 0.25rem)"
            },
            {
              "name": "--pf-c-clipboard-copy__actions-item--button--PaddingRight",
              "default": "var(--pf-global--spacer--sm, 0.5rem)"
            },
            {
              "name": "--pf-c-clipboard-copy__actions-item--button--PaddingBottom",
              "default": "var(--pf-global--spacer--xs, 0.25rem)"
            },
            {
              "name": "--pf-c-clipboard-copy__actions-item--button--PaddingLeft",
              "default": "var(--pf-global--spacer--sm, 0.5rem)"
            }
          ],
          "slots": [
            {
              "description": "Place content to copy here, or use the `value` attribute",
              "name": ""
            },
            {
              "description": "Place additional action buttons here",
              "name": "actions"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "shadowRootOptions",
              "type": {
                "text": "ShadowRootInit"
              },
              "static": true,
              "default": "{\n    ...LitElement.shadowRootOptions,\n    delegatesFocus: true,\n  }",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "clickTip",
              "type": {
                "text": "string"
              },
              "default": "'Successfully copied to clipboard!'",
              "description": "Tooltip message to display when clicking the copy button",
              "attribute": "click-tip"
            },
            {
              "kind": "field",
              "name": "hoverTip",
              "type": {
                "text": "string"
              },
              "default": "'Copy to clipboard'",
              "description": "Tooltip message to display when hover the copy button",
              "attribute": "hover-tip"
            },
            {
              "kind": "field",
              "name": "accessibleTextLabel",
              "type": {
                "text": "string"
              },
              "default": "'Copyable input'",
              "description": "Accessible label to use on the text input.",
              "attribute": "accessible-text-label"
            },
            {
              "kind": "field",
              "name": "accessibleToggleLabel",
              "type": {
                "text": "string"
              },
              "default": "'Show content'",
              "description": "Accessible label to use on the toggle button.",
              "attribute": "accessible-toggle-label"
            },
            {
              "kind": "field",
              "name": "entryDelay",
              "type": {
                "text": "number"
              },
              "default": "300",
              "description": "Delay in ms before the tooltip appears.",
              "attribute": "entry-delay"
            },
            {
              "kind": "field",
              "name": "exitDelay",
              "type": {
                "text": "number"
              },
              "default": "1500",
              "description": "Delay in ms before the tooltip disappears.",
              "attribute": "exit-delay"
            },
            {
              "kind": "field",
              "name": "block",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Flag to determine if inline clipboard copy should be block styling",
              "attribute": "block",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "code",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Flag to determine if clipboard copy content includes code",
              "attribute": "code",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "expanded",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Flag to determine if clipboard copy is in the expanded state",
              "attribute": "expanded",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "expandable",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Implies not `inline`.",
              "attribute": "expandable",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "readonly",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Flag to show if the input is read only.",
              "attribute": "readonly",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "inline",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Implies not expandable. Overrules `expandable`.",
              "attribute": "inline",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "compact",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Flag to determine if inline clipboard copy should have compact styling",
              "attribute": "compact",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "String to copy",
              "attribute": "value"
            },
            {
              "kind": "field",
              "name": "#copied",
              "privacy": "private",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "field",
              "name": "#mo",
              "privacy": "private",
              "default": "new MutationObserver(() => this.#onMutation())"
            },
            {
              "kind": "method",
              "name": "#onClick",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "#onChange",
              "parameters": [
                {
                  "name": "e",
                  "type": {
                    "text": "Event"
                  }
                }
              ],
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "#onMutation",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "#dedent",
              "return": {
                "type": {
                  "text": "string"
                }
              },
              "parameters": [
                {
                  "name": "str",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "copy",
              "return": {
                "type": {
                  "text": "Promise<void>"
                }
              },
              "description": "Copy the current value to the clipboard."
            }
          ],
          "events": [
            {
              "type": {
                "text": "PfClipboardCopyCopiedEvent"
              },
              "description": "when the text snippet is successfully copied.",
              "name": "copy"
            }
          ],
          "attributes": [
            {
              "name": "click-tip",
              "type": {
                "text": "string"
              },
              "default": "'Successfully copied to clipboard!'",
              "description": "Tooltip message to display when clicking the copy button",
              "fieldName": "clickTip"
            },
            {
              "name": "hover-tip",
              "type": {
                "text": "string"
              },
              "default": "'Copy to clipboard'",
              "description": "Tooltip message to display when hover the copy button",
              "fieldName": "hoverTip"
            },
            {
              "name": "accessible-text-label",
              "type": {
                "text": "string"
              },
              "default": "'Copyable input'",
              "description": "Accessible label to use on the text input.",
              "fieldName": "accessibleTextLabel"
            },
            {
              "name": "accessible-toggle-label",
              "type": {
                "text": "string"
              },
              "default": "'Show content'",
              "description": "Accessible label to use on the toggle button.",
              "fieldName": "accessibleToggleLabel"
            },
            {
              "name": "entry-delay",
              "type": {
                "text": "number"
              },
              "default": "300",
              "description": "Delay in ms before the tooltip appears.",
              "fieldName": "entryDelay"
            },
            {
              "name": "exit-delay",
              "type": {
                "text": "number"
              },
              "default": "1500",
              "description": "Delay in ms before the tooltip disappears.",
              "fieldName": "exitDelay"
            },
            {
              "name": "block",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Flag to determine if inline clipboard copy should be block styling",
              "fieldName": "block"
            },
            {
              "name": "code",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Flag to determine if clipboard copy content includes code",
              "fieldName": "code"
            },
            {
              "name": "expanded",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Flag to determine if clipboard copy is in the expanded state",
              "fieldName": "expanded"
            },
            {
              "name": "expandable",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Implies not `inline`.",
              "fieldName": "expandable"
            },
            {
              "name": "readonly",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Flag to show if the input is read only.",
              "fieldName": "readonly"
            },
            {
              "name": "inline",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Implies not expandable. Overrules `expandable`.",
              "fieldName": "inline"
            },
            {
              "name": "compact",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Flag to determine if inline clipboard copy should have compact styling",
              "fieldName": "compact"
            },
            {
              "name": "value",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "String to copy",
              "fieldName": "value"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "pf-clipboard-copy",
          "customElement": true,
          "demos": [
            {
              "url": "https://patternflyelements.org/components/clipboard-copy/demo/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-clipboard-copy/demo/pf-clipboard-copy.html"
              }
            },
            {
              "url": "https://patternflyelements.org/components/clipboard-copy/demo/code/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-clipboard-copy/demo/code.html"
              }
            },
            {
              "url": "https://patternflyelements.org/components/clipboard-copy/demo/expandable/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-clipboard-copy/demo/expandable.html"
              }
            },
            {
              "url": "https://patternflyelements.org/components/clipboard-copy/demo/inline-compact-code/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-clipboard-copy/demo/inline-compact-code.html"
              }
            },
            {
              "url": "https://patternflyelements.org/components/clipboard-copy/demo/inline-compact/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-clipboard-copy/demo/inline-compact.html"
              }
            },
            {
              "url": "https://patternflyelements.org/components/clipboard-copy/demo/read-only-expandable/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-clipboard-copy/demo/read-only-expandable.html"
              }
            },
            {
              "url": "https://patternflyelements.org/components/clipboard-copy/demo/read-only-expanded/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-clipboard-copy/demo/read-only-expanded.html"
              }
            },
            {
              "url": "https://patternflyelements.org/components/clipboard-copy/demo/read-only/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-clipboard-copy/demo/read-only.html"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PfClipboardCopyCopiedEvent",
          "declaration": {
            "name": "PfClipboardCopyCopiedEvent",
            "module": "pf-clipboard-copy/pf-clipboard-copy.js"
          }
        },
        {
          "kind": "js",
          "name": "PfClipboardCopy",
          "declaration": {
            "name": "PfClipboardCopy",
            "module": "pf-clipboard-copy/pf-clipboard-copy.js"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "pf-clipboard-copy",
          "declaration": {
            "name": "PfClipboardCopy",
            "module": "pf-clipboard-copy/pf-clipboard-copy.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "pf-code-block/pf-code-block.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "PfCodeBlock",
          "members": [
            {
              "kind": "field",
              "name": "expanded",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Flag for whether the code block is expanded",
              "attribute": "expanded",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "#expandedContent",
              "privacy": "private",
              "type": {
                "text": "string"
              },
              "readonly": true
            },
            {
              "kind": "field",
              "name": "#content",
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "method",
              "name": "#toggle",
              "privacy": "private"
            }
          ],
          "attributes": [
            {
              "name": "expanded",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Flag for whether the code block is expanded",
              "fieldName": "expanded"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "pf-code-block",
          "customElement": true,
          "demos": [
            {
              "url": "https://patternflyelements.org/components/code-block/demo/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-code-block/demo/pf-code-block.html"
              }
            },
            {
              "url": "https://patternflyelements.org/components/code-block/demo/expandable/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-code-block/demo/expandable.html"
              }
            },
            {
              "url": "https://patternflyelements.org/components/code-block/demo/expanded/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-code-block/demo/expanded.html"
              }
            },
            {
              "url": "https://patternflyelements.org/components/code-block/demo/javascript-sample/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-code-block/demo/javascript-sample.html"
              }
            },
            {
              "url": "https://patternflyelements.org/components/code-block/demo/noscript/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-code-block/demo/noscript.html"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PfCodeBlock",
          "declaration": {
            "name": "PfCodeBlock",
            "module": "pf-code-block/pf-code-block.js"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "pf-code-block",
          "declaration": {
            "name": "PfCodeBlock",
            "module": "pf-code-block/pf-code-block.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "pf-dropdown/pf-dropdown-group.js",
      "declarations": [
        {
          "kind": "class",
          "description": "Represents a group of items for a dropdown component.",
          "name": "PfDropdownGroup",
          "slots": [
            {
              "description": "Content for the group of dropdown items"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "shadowRootOptions",
              "type": {
                "text": "ShadowRootInit"
              },
              "static": true,
              "default": "{\n    ...LitElement.shadowRootOptions,\n    delegatesFocus: true,\n  }",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string | undefined"
              },
              "description": "The label for the group of dropdown items.",
              "attribute": "label",
              "reflects": true
            }
          ],
          "attributes": [
            {
              "name": "label",
              "type": {
                "text": "string | undefined"
              },
              "description": "The label for the group of dropdown items.",
              "fieldName": "label"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "pf-dropdown-group",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PfDropdownGroup",
          "declaration": {
            "name": "PfDropdownGroup",
            "module": "pf-dropdown/pf-dropdown-group.js"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "pf-dropdown-group",
          "declaration": {
            "name": "PfDropdownGroup",
            "module": "pf-dropdown/pf-dropdown-group.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "pf-dropdown/pf-dropdown-item.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "DropdownItemChange",
          "superclass": {
            "name": "Event",
            "module": "global:"
          }
        },
        {
          "kind": "class",
          "description": "Represents an item for a dropdown component.",
          "name": "PfDropdownItem",
          "cssProperties": [
            {
              "type": {
                "text": "<length>"
              },
              "description": "Dropdown item font size",
              "name": "--pf-c-dropdown__menu-item--FontSize",
              "default": "1rem"
            },
            {
              "type": {
                "text": "<length>"
              },
              "description": "Dropdown item font weight",
              "name": "--pf-c-dropdown__menu-item--FontWeight",
              "default": "400"
            },
            {
              "type": {
                "text": "<length>"
              },
              "description": "Dropdown item line height",
              "name": "--pf-c-dropdown__menu-item--LineHeight",
              "default": "1.5"
            },
            {
              "type": {
                "text": "<length>"
              },
              "description": "Dropdown item color",
              "name": "--pf-c-dropdown__menu-item--Color",
              "default": "#151515"
            },
            {
              "type": {
                "text": "<length>"
              },
              "description": "Dropdown item background color",
              "name": "--pf-c-dropdown__menu-item--BackgroundColor",
              "default": "transparent"
            },
            {
              "type": {
                "text": "<length>"
              },
              "description": "Dropdown item padding top",
              "name": "--pf-c-dropdown__menu-item--PaddingTop",
              "default": "0.5rem"
            },
            {
              "type": {
                "text": "<length>"
              },
              "description": "Dropdown item padding right",
              "name": "--pf-c-dropdown__menu-item--PaddingRight",
              "default": "1rem"
            },
            {
              "type": {
                "text": "<length>"
              },
              "description": "Dropdown item padding bottom",
              "name": "--pf-c-dropdown__menu-item--PaddingBottom",
              "default": "0.5rem"
            },
            {
              "type": {
                "text": "<length>"
              },
              "description": "Dropdown item padding left",
              "name": "--pf-c-dropdown__menu-item--PaddingLeft",
              "default": "1rem"
            }
          ],
          "slots": [
            {
              "description": "Optional slot for an icon",
              "name": "icon"
            },
            {
              "description": "Optional slot for item description",
              "name": "description"
            },
            {
              "description": "Content for the dropdown item",
              "name": ""
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "shadowRootOptions",
              "type": {
                "text": "ShadowRootInit"
              },
              "static": true,
              "default": "{\n    ...LitElement.shadowRootOptions,\n    delegatesFocus: true,\n  }",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "string | undefined"
              },
              "description": "The value associated with the dropdown item.\nThis value can be used to identify the selected item",
              "attribute": "value",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "href",
              "type": {
                "text": "string | undefined"
              },
              "description": "href for link dropdown items",
              "attribute": "href"
            },
            {
              "kind": "field",
              "name": "active",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Flag indicating whether the item is active",
              "attribute": "active",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Indicates whether the dropdown item is disabled.\nA disabled item cannot be selected.",
              "attribute": "disabled",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "description",
              "type": {
                "text": "string | undefined"
              },
              "description": "Item description; overridden by `description` slot",
              "attribute": "description"
            },
            {
              "kind": "field",
              "name": "ctx",
              "type": {
                "text": "PfDropdownContext | undefined"
              },
              "privacy": "private"
            }
          ],
          "attributes": [
            {
              "name": "value",
              "type": {
                "text": "string | undefined"
              },
              "description": "The value associated with the dropdown item.\nThis value can be used to identify the selected item",
              "fieldName": "value"
            },
            {
              "name": "href",
              "type": {
                "text": "string | undefined"
              },
              "description": "href for link dropdown items",
              "fieldName": "href"
            },
            {
              "name": "active",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Flag indicating whether the item is active",
              "fieldName": "active"
            },
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Indicates whether the dropdown item is disabled.\nA disabled item cannot be selected.",
              "fieldName": "disabled"
            },
            {
              "name": "description",
              "type": {
                "text": "string | undefined"
              },
              "description": "Item description; overridden by `description` slot",
              "fieldName": "description"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "pf-dropdown-item",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "DropdownItemChange",
          "declaration": {
            "name": "DropdownItemChange",
            "module": "pf-dropdown/pf-dropdown-item.js"
          }
        },
        {
          "kind": "js",
          "name": "PfDropdownItem",
          "declaration": {
            "name": "PfDropdownItem",
            "module": "pf-dropdown/pf-dropdown-item.js"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "pf-dropdown-item",
          "declaration": {
            "name": "PfDropdownItem",
            "module": "pf-dropdown/pf-dropdown-item.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "pf-dropdown/pf-dropdown-menu.js",
      "declarations": [
        {
          "kind": "class",
          "description": "A **dropdown** presents a menu of actions or links in a constrained space that will trigger a\nprocess or navigate to a new location.",
          "name": "PfDropdownMenu",
          "slots": [
            {
              "description": "Must contain one or more `<pf-dropdown-item>` or `<pf-dropdown-group>`",
              "name": ""
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "shadowRootOptions",
              "type": {
                "text": "ShadowRootInit"
              },
              "static": true,
              "default": "{\n    ...LitElement.shadowRootOptions,\n    delegatesFocus: true,\n  }",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "ctx",
              "type": {
                "text": "PfDropdownContext | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "#internals",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "#items",
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "#tabindex",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "activeItem",
              "type": {
                "text": "HTMLElement | null"
              },
              "description": "current active descendant in menu",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "activeIndex",
              "type": {
                "text": "number"
              },
              "description": "index of current active descendant in menu",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "items",
              "type": {
                "text": "PfDropdownItem[]"
              },
              "readonly": true
            },
            {
              "kind": "method",
              "name": "#onItemChange",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "Event"
                  }
                }
              ],
              "description": "handles a change event from a dropdown item",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "#onSlotChange",
              "description": "handles slot change event",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "#onMenuitemFocusin",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "FocusEvent"
                  },
                  "description": "the focus event"
                }
              ],
              "description": "handles focusing on an option:\nupdates roving tabindex and active descendant",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "#onMenuitemClick",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "MouseEvent"
                  },
                  "description": "the click event"
                }
              ],
              "description": "handles clicking on a menuitem:\nwhich selects an item by default\nor toggles selection if multiselectable",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "#focusItem",
              "parameters": [
                {
                  "name": "item",
                  "type": {
                    "text": "HTMLElement"
                  }
                }
              ],
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "#getSlottedItems",
              "return": {
                "type": {
                  "text": "PfDropdownItem[]"
                }
              },
              "parameters": [
                {
                  "name": "slot",
                  "optional": true,
                  "type": {
                    "text": "HTMLSlotElement | null"
                  }
                }
              ],
              "privacy": "private"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "pf-dropdown-menu",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PfDropdownMenu",
          "declaration": {
            "name": "PfDropdownMenu",
            "module": "pf-dropdown/pf-dropdown-menu.js"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "pf-dropdown-menu",
          "declaration": {
            "name": "PfDropdownMenu",
            "module": "pf-dropdown/pf-dropdown-menu.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "pf-dropdown/pf-dropdown.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "PfDropdownSelectEvent",
          "members": [
            {
              "kind": "field",
              "type": {
                "text": "Event | KeyboardEvent",
                "name": "Event | KeyboardEvent"
              },
              "name": "originalEvent",
              "privacy": "public"
            },
            {
              "kind": "field",
              "type": {
                "text": "string",
                "name": "string"
              },
              "name": "value",
              "privacy": "public"
            }
          ],
          "superclass": {
            "name": "Event",
            "module": "global:"
          }
        },
        {
          "kind": "class",
          "description": "A **dropdown** presents a menu of actions or links in a constrained space that\nwill trigger a process or navigate to a new location.",
          "name": "PfDropdown",
          "cssProperties": [
            {
              "type": {
                "text": "<length>"
              },
              "description": "Dropdown top padding",
              "name": "--pf-c-dropdown__menu--PaddingTop",
              "default": "0.5rem"
            },
            {
              "type": {
                "text": "<length>"
              },
              "description": "Dropdown right padding",
              "name": "--pf-c-tooltip__content--PaddingRight",
              "default": "0.5rem"
            },
            {
              "type": {
                "text": "<length>"
              },
              "description": "Dropdown z-index",
              "name": "--pf-c-dropdown__menu--ZIndex",
              "default": "200"
            },
            {
              "description": "Dropdown box shadow",
              "name": "--pf-c-dropdown__menu--BoxShadow",
              "default": "0 0.25rem 0.5rem 0rem rgba(3, 3, 3, 0.12), 0 0 0.25rem 0 rgba(3, 3, 3, 0.06)"
            },
            {
              "type": {
                "text": "<length>"
              },
              "description": "Dropdown top",
              "name": "--pf-c-dropdown__menu--Top",
              "default": "100% + 0.25rem"
            }
          ],
          "cssParts": [
            {
              "description": "The dropdown menu wrapper",
              "name": "menu"
            }
          ],
          "slots": [
            {
              "description": "Must contain one or more `<pf-dropdown-item>` or `<pf-dropdown-group>`",
              "name": ""
            },
            {
              "description": "Custom toggle button",
              "name": "toggle"
            },
            {
              "description": "when using a custom toggle, you must slot a `<pf-dropdown-menu>` in alongside it",
              "name": "menu"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "shadowRootOptions",
              "type": {
                "text": "ShadowRootInit"
              },
              "static": true,
              "default": "{\n    ...LitElement.shadowRootOptions,\n    delegatesFocus: true,\n  }",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "When disabled, the dropdown can still be toggled open and closed via keyboard, but menu items cannot be activated.",
              "attribute": "disabled",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "expanded",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Whether the dropdown is expanded",
              "attribute": "expanded",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "_toggleElements",
              "type": {
                "text": "HTMLElement[]"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "_menuElements",
              "type": {
                "text": "HTMLElement[]"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "ctx",
              "type": {
                "text": "PfDropdownContext"
              },
              "privacy": "private",
              "default": "{ disabled: false }"
            },
            {
              "kind": "field",
              "name": "#logger",
              "privacy": "private",
              "default": "new Logger(this)"
            },
            {
              "kind": "field",
              "name": "#float",
              "privacy": "private",
              "default": "new FloatingDOMController(this, {\n    content: () => this._menuElements?.at(0),\n  })"
            },
            {
              "kind": "method",
              "name": "getUpdateComplete",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "Promise<boolean>"
                }
              }
            },
            {
              "kind": "method",
              "name": "#validateDOM",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "#onSlotchange",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "#expandedChanged",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "#disabledChanged",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "#onSelect",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "KeyboardEvent | Event & { target: PfDropdownItem }"
                  }
                }
              ],
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "#onButtonKeydown",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "KeyboardEvent"
                  }
                }
              ],
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "#onMenuFocusout",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "FocusEvent"
                  }
                }
              ],
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "#onMenuKeydown",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "KeyboardEvent"
                  }
                }
              ],
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "show",
              "return": {
                "type": {
                  "text": "Promise<void>"
                }
              },
              "description": "Opens the dropdown"
            },
            {
              "kind": "method",
              "name": "hide",
              "return": {
                "type": {
                  "text": "Promise<void>"
                }
              },
              "description": "Closes the dropdown"
            },
            {
              "kind": "method",
              "name": "toggle",
              "return": {
                "type": {
                  "text": "Promise<void>"
                }
              }
            }
          ],
          "events": [
            {
              "type": {
                "text": "PfDropdownSelectEvent"
              },
              "description": "when a user select dropdown value",
              "name": "select"
            },
            {
              "description": "when the dropdown toggles open",
              "name": "open"
            },
            {
              "description": "when the dropdown toggles closed",
              "name": "close"
            }
          ],
          "attributes": [
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "When disabled, the dropdown can still be toggled open and closed via keyboard, but menu items cannot be activated.",
              "fieldName": "disabled"
            },
            {
              "name": "expanded",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Whether the dropdown is expanded",
              "fieldName": "expanded"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "pf-dropdown",
          "customElement": true,
          "demos": [
            {
              "url": "https://patternflyelements.org/components/dropdown/demo/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-dropdown/demo/pf-dropdown.html"
              }
            },
            {
              "url": "https://patternflyelements.org/components/dropdown/demo/custom-toggle/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-dropdown/demo/custom-toggle.html"
              }
            },
            {
              "url": "https://patternflyelements.org/components/dropdown/demo/descriptions/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-dropdown/demo/descriptions.html"
              }
            },
            {
              "url": "https://patternflyelements.org/components/dropdown/demo/disabled-item/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-dropdown/demo/disabled-item.html"
              }
            },
            {
              "url": "https://patternflyelements.org/components/dropdown/demo/disabled/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-dropdown/demo/disabled.html"
              }
            },
            {
              "url": "https://patternflyelements.org/components/dropdown/demo/groups/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-dropdown/demo/groups.html"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PfDropdownSelectEvent",
          "declaration": {
            "name": "PfDropdownSelectEvent",
            "module": "pf-dropdown/pf-dropdown.js"
          }
        },
        {
          "kind": "js",
          "name": "PfDropdown",
          "declaration": {
            "name": "PfDropdown",
            "module": "pf-dropdown/pf-dropdown.js"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "pf-dropdown",
          "declaration": {
            "name": "PfDropdown",
            "module": "pf-dropdown/pf-dropdown.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "pf-icon/pf-icon.js",
      "declarations": [
        {
          "kind": "class",
          "description": "Fired when an icon fails to load",
          "name": "IconResolveError",
          "members": [
            {
              "kind": "field",
              "description": "The original error when importing the icon module",
              "type": {
                "text": "Error",
                "name": "Error"
              },
              "name": "originalError",
              "privacy": "public"
            }
          ],
          "superclass": {
            "name": "ErrorEvent",
            "module": "pf-icon/pf-icon.ts"
          }
        },
        {
          "kind": "class",
          "description": "An **icon** component is a container that allows for icons of varying dimensions to\nseamlessly replace each other without shifting surrounding content.",
          "name": "PfIcon",
          "cssProperties": [
            {
              "type": {
                "text": "<length>"
              },
              "description": "size of the icon",
              "name": "--pf-icon--size"
            }
          ],
          "cssParts": [
            {
              "description": "Container for the fallback (i.e. slotted) content",
              "name": "fallback"
            }
          ],
          "slots": [
            {
              "description": "Slotted content is used as a fallback in case the icon doesn't load",
              "name": ""
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "onIntersect",
              "type": {
                "text": "IntersectionObserverCallback"
              },
              "privacy": "private",
              "static": true
            },
            {
              "kind": "field",
              "name": "defaultResolve",
              "type": {
                "text": "IconResolverFunction"
              },
              "privacy": "private",
              "static": true
            },
            {
              "kind": "field",
              "name": "io",
              "privacy": "private",
              "static": true,
              "default": "new IntersectionObserver(PfIcon.onIntersect)"
            },
            {
              "kind": "field",
              "name": "resolvers",
              "privacy": "private",
              "static": true,
              "default": "new Map<string, IconResolverFunction>()"
            },
            {
              "kind": "field",
              "name": "instances",
              "privacy": "private",
              "static": true,
              "default": "new Set<PfIcon>()"
            },
            {
              "kind": "method",
              "name": "addIconSet",
              "privacy": "public",
              "static": true,
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "setName",
                  "type": {
                    "text": "string"
                  },
                  "description": "The name of the icon set"
                },
                {
                  "name": "resolver",
                  "type": {
                    "text": "IconResolverFunction"
                  },
                  "description": "A function that returns the URL of an icon"
                }
              ],
              "description": "Register a new icon set"
            },
            {
              "kind": "method",
              "name": "reset",
              "privacy": "public",
              "static": true,
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "description": "Removes all added icon sets and resets resolve function"
            },
            {
              "kind": "field",
              "name": "resolve",
              "type": {
                "text": "IconResolverFunction"
              },
              "privacy": "public",
              "static": true,
              "description": "Gets a renderable icon. Override this to customize how icons are resolved.",
              "parameters": [
                {
                  "description": "The name of the icon set",
                  "name": "set"
                },
                {
                  "description": "The name of the icon",
                  "name": "icon"
                }
              ],
              "return": {
                "type": {
                  "text": ""
                }
              }
            },
            {
              "kind": "field",
              "name": "set",
              "type": {
                "text": "string"
              },
              "default": "'fas'",
              "description": "Icon set",
              "attribute": "set"
            },
            {
              "kind": "field",
              "name": "icon",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Icon name",
              "attribute": "icon",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "size",
              "type": {
                "text": "'sm' | 'md' | 'lg' | 'xl'"
              },
              "default": "'sm'",
              "description": "Size of the icon",
              "attribute": "size",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "loading",
              "type": {
                "text": "'idle' | 'lazy' | 'eager' | undefined"
              },
              "default": "'lazy'",
              "description": "Controls how eager the element will be to load the icon data\n- `eager`: eagerly load the icon, blocking the main thread\n- `idle`: wait for the browser to attain an idle state before loading\n- `lazy` (default): wait for the element to enter the viewport before loading",
              "attribute": "loading"
            },
            {
              "kind": "field",
              "name": "content",
              "type": {
                "text": "unknown | undefined"
              },
              "privacy": "private",
              "description": "Icon content. Any value that lit can render"
            },
            {
              "kind": "field",
              "name": "#intersecting",
              "privacy": "private",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "field",
              "name": "#logger",
              "privacy": "private",
              "default": "new Logger(this)"
            },
            {
              "kind": "method",
              "name": "#lazyLoad",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "#load",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "#contentChanged",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "load",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "Promise<void>"
                }
              }
            }
          ],
          "events": [
            {
              "name": "load",
              "type": {
                "text": "Event"
              },
              "description": "Fired when an icon is loaded and rendered"
            },
            {
              "description": "Fired when an icon fails to load",
              "name": "error"
            }
          ],
          "attributes": [
            {
              "name": "set",
              "type": {
                "text": "string"
              },
              "default": "'fas'",
              "description": "Icon set",
              "fieldName": "set"
            },
            {
              "name": "icon",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Icon name",
              "fieldName": "icon"
            },
            {
              "name": "size",
              "type": {
                "text": "'sm' | 'md' | 'lg' | 'xl'"
              },
              "default": "'sm'",
              "description": "Size of the icon",
              "fieldName": "size"
            },
            {
              "name": "loading",
              "type": {
                "text": "'idle' | 'lazy' | 'eager' | undefined"
              },
              "default": "'lazy'",
              "description": "Controls how eager the element will be to load the icon data\n- `eager`: eagerly load the icon, blocking the main thread\n- `idle`: wait for the browser to attain an idle state before loading\n- `lazy` (default): wait for the element to enter the viewport before loading",
              "fieldName": "loading"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "pf-icon",
          "customElement": true,
          "demos": [
            {
              "url": "https://patternflyelements.org/components/icon/demo/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-icon/demo/pf-icon.html"
              }
            },
            {
              "url": "https://patternflyelements.org/components/icon/demo/custom-icon-sets/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-icon/demo/custom-icon-sets.html"
              }
            },
            {
              "url": "https://patternflyelements.org/components/icon/demo/sets/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-icon/demo/sets.html"
              }
            },
            {
              "url": "https://patternflyelements.org/components/icon/demo/styling-icons/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-icon/demo/styling-icons.html"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "IconResolveError",
          "declaration": {
            "name": "IconResolveError",
            "module": "pf-icon/pf-icon.js"
          }
        },
        {
          "kind": "js",
          "name": "PfIcon",
          "declaration": {
            "name": "PfIcon",
            "module": "pf-icon/pf-icon.js"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "pf-icon",
          "declaration": {
            "name": "PfIcon",
            "module": "pf-icon/pf-icon.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "pf-jump-links/pf-jump-links-item.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "PfJumpLinksItem",
          "cssProperties": [
            {
              "description": "-- padding around the link",
              "name": "--pf-c-jump-links__link--PaddingTop"
            },
            {
              "name": "--pf-c-jump-links__link--PaddingRight"
            },
            {
              "name": "--pf-c-jump-links__link--PaddingBottom"
            },
            {
              "name": "--pf-c-jump-links__link--PaddingLeft"
            },
            {
              "name": "--pf-c-jump-links__link--OutlineOffset"
            },
            {
              "name": "--pf-c-jump-links__link-text--Color"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "shadowRootOptions",
              "type": {
                "text": "ShadowRootInit"
              },
              "static": true,
              "default": "{\n    ...LitElement.shadowRootOptions,\n    delegatesFocus: true,\n  }",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "active",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Whether this item is active.",
              "attribute": "active",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "href",
              "type": {
                "text": "string | undefined"
              },
              "description": "hypertext reference for this link",
              "attribute": "href",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "#internals",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "activeChanged",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "#onClick",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "#onFocus",
              "privacy": "private"
            }
          ],
          "events": [
            {
              "name": "select",
              "type": {
                "text": "Event"
              }
            },
            {
              "name": "focus",
              "type": {
                "text": "Event"
              }
            }
          ],
          "attributes": [
            {
              "name": "active",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Whether this item is active.",
              "fieldName": "active"
            },
            {
              "name": "href",
              "type": {
                "text": "string | undefined"
              },
              "description": "hypertext reference for this link",
              "fieldName": "href"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "pf-jump-links-item",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PfJumpLinksItem",
          "declaration": {
            "name": "PfJumpLinksItem",
            "module": "pf-jump-links/pf-jump-links-item.js"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "pf-jump-links-item",
          "declaration": {
            "name": "PfJumpLinksItem",
            "module": "pf-jump-links/pf-jump-links-item.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "pf-jump-links/pf-jump-links-list.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "PfJumpLinksList",
          "cssProperties": [
            {
              "description": "-- padding around each link",
              "name": "--pf-c-jump-links__list__list__link--PaddingTop"
            },
            {
              "name": "--pf-c-jump-links__list__list__link--PaddingBottom"
            },
            {
              "name": "--pf-c-jump-links__list__list__link--PaddingLeft"
            }
          ],
          "members": [],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "pf-jump-links-list",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PfJumpLinksList",
          "declaration": {
            "name": "PfJumpLinksList",
            "module": "pf-jump-links/pf-jump-links-list.js"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "pf-jump-links-list",
          "declaration": {
            "name": "PfJumpLinksList",
            "module": "pf-jump-links/pf-jump-links-list.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "pf-jump-links/pf-jump-links.js",
      "declarations": [
        {
          "kind": "class",
          "description": "**Jump links** allow users to navigate to sections within a page.",
          "name": "PfJumpLinks",
          "cssProperties": [
            {
              "name": "--pf-c-jump-links__list--Display"
            },
            {
              "name": "--pf-c-jump-links__list--FlexDirection"
            },
            {
              "description": "-- padding around the list of links",
              "name": "--pf-c-jump-links__list--PaddingTop"
            },
            {
              "name": "--pf-c-jump-links__list--PaddingRight"
            },
            {
              "name": "--pf-c-jump-links__list--PaddingBottom"
            },
            {
              "name": "--pf-c-jump-links__list--PaddingLeft"
            },
            {
              "name": "--pf-c-jump-links__list--Visibility"
            },
            {
              "name": "--pf-c-jump-links__list--before--BorderColor"
            },
            {
              "name": "--pf-c-jump-links__list--before--BorderTopWidth"
            },
            {
              "name": "--pf-c-jump-links__list--before--BorderRightWidth"
            },
            {
              "name": "--pf-c-jump-links__list--before--BorderBottomWidth"
            },
            {
              "name": "--pf-c-jump-links__list--before--BorderLeftWidth"
            },
            {
              "name": "--pf-c-jump-links__toggle--MarginBottom--base"
            },
            {
              "description": "-- padding around the expandable jump links disclosure widget.",
              "name": "--pf-c-jump-links__toggle--MarginTop"
            },
            {
              "name": "--pf-c-jump-links__toggle--MarginBottom"
            },
            {
              "name": "--pf-c-jump-links__toggle--MarginBottom--base"
            },
            {
              "name": "--pf-c-jump-links__toggle--MarginLeft"
            },
            {
              "name": "--pf-c-jump-links__toggle-text--Color"
            },
            {
              "description": "-- padding around the expandable jump links disclosure widget.",
              "name": "--pf-c-button--PaddingTop"
            },
            {
              "name": "--pf-c-button--PaddingRight"
            },
            {
              "name": "--pf-c-button--PaddingBottom"
            },
            {
              "name": "--pf-c-button--PaddingLeft"
            },
            {
              "name": "--pf-c-jump-links__toggle-icon--Rotate"
            },
            {
              "name": "--pf-c-jump-links__toggle-icon--Transition"
            },
            {
              "name": "--pf-c-jump-links__toggle-text--MarginLeft"
            },
            {
              "name": "--pf-c-jump-links--m-expanded__toggle--MarginBottom"
            },
            {
              "name": "--pf-c-jump-links--m-expanded__toggle-icon--Rotate"
            },
            {
              "name": "--pf-c-jump-links--m-expanded__toggle-icon--Color"
            },
            {
              "name": "--pf-c-jump-links--m-vertical__list--PaddingTop"
            },
            {
              "name": "--pf-c-jump-links--m-vertical__list--PaddingRight"
            },
            {
              "name": "--pf-c-jump-links--m-vertical__list--PaddingBottom"
            },
            {
              "name": "--pf-c-jump-links--m-vertical__list--PaddingLeft"
            },
            {
              "name": "--pf-c-jump-links--m-vertical__list--before--BorderTopWidth"
            },
            {
              "name": "--pf-c-jump-links--m-vertical__list--before--BorderLeftWidth"
            },
            {
              "name": "--pf-c-jump-links--m-vertical__item--m-current__link--before--BorderTopWidth"
            },
            {
              "name": "--pf-c-jump-links--m-vertical__item--m-current__link--before--BorderLeftWidth"
            },
            {
              "name": "--pf-c-jump-links--m-vertical__list--FlexDirection"
            }
          ],
          "slots": [
            {
              "description": "Place pf-jump-links-items here",
              "name": ""
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "expandable",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Whether the element features a disclosure widget around the nav items",
              "attribute": "expandable",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "expanded",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Whether the expandable element's disclosure widget is expanded",
              "attribute": "expanded",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "vertical",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Whether the layout of children is vertical or horizontal.",
              "attribute": "vertical",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "centered",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Whether to center children.",
              "attribute": "centered",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "offset",
              "type": {
                "text": "number"
              },
              "default": "0",
              "description": "Offset to add to the scroll position, potentially for a masthead which content scrolls under.",
              "attribute": "offset"
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string | undefined"
              },
              "description": "Label to add to nav element.",
              "attribute": "label"
            },
            {
              "kind": "field",
              "name": "#kids",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "#items",
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "#tabindex",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "#spy",
              "privacy": "private",
              "default": "new ScrollSpyController(this, {\n    rootMargin: `${this.offset}px 0px 0px 0px`,\n    tagNames: ['pf-jump-links-item'],\n  })"
            },
            {
              "kind": "method",
              "name": "getUpdateComplete",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "Promise<boolean>"
                }
              }
            },
            {
              "kind": "method",
              "name": "#onSlotChange",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "#onSelect",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "Event"
                  }
                }
              ],
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "#setActiveItem",
              "parameters": [
                {
                  "name": "item",
                  "type": {
                    "text": "PfJumpLinksItem"
                  }
                }
              ],
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "#onToggle",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "Event"
                  }
                }
              ],
              "privacy": "private"
            }
          ],
          "events": [
            {
              "name": "toggle",
              "type": {
                "text": "Event"
              },
              "description": "when the `expanded` disclosure widget is toggled"
            }
          ],
          "attributes": [
            {
              "name": "expandable",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Whether the element features a disclosure widget around the nav items",
              "fieldName": "expandable"
            },
            {
              "name": "expanded",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Whether the expandable element's disclosure widget is expanded",
              "fieldName": "expanded"
            },
            {
              "name": "vertical",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Whether the layout of children is vertical or horizontal.",
              "fieldName": "vertical"
            },
            {
              "name": "centered",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Whether to center children.",
              "fieldName": "centered"
            },
            {
              "name": "offset",
              "type": {
                "text": "number"
              },
              "default": "0",
              "description": "Offset to add to the scroll position, potentially for a masthead which content scrolls under.",
              "fieldName": "offset"
            },
            {
              "name": "label",
              "type": {
                "text": "string | undefined"
              },
              "description": "Label to add to nav element.",
              "fieldName": "label"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "pf-jump-links",
          "customElement": true,
          "demos": [
            {
              "url": "https://patternflyelements.org/components/jump-links/demo/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-jump-links/demo/pf-jump-links.html"
              }
            },
            {
              "url": "https://patternflyelements.org/components/jump-links/demo/centered-list/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-jump-links/demo/centered-list.html"
              }
            },
            {
              "url": "https://patternflyelements.org/components/jump-links/demo/expandable-vertical-with-subsection/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-jump-links/demo/expandable-vertical-with-subsection.html"
              }
            },
            {
              "url": "https://patternflyelements.org/components/jump-links/demo/label/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-jump-links/demo/label.html"
              }
            },
            {
              "url": "https://patternflyelements.org/components/jump-links/demo/scrollspy-with-subsections/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-jump-links/demo/scrollspy-with-subsections.html"
              }
            },
            {
              "url": "https://patternflyelements.org/components/jump-links/demo/vertical-with-label/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-jump-links/demo/vertical-with-label.html"
              }
            },
            {
              "url": "https://patternflyelements.org/components/jump-links/demo/vertical/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-jump-links/demo/vertical.html"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PfJumpLinks",
          "declaration": {
            "name": "PfJumpLinks",
            "module": "pf-jump-links/pf-jump-links.js"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "pf-jump-links",
          "declaration": {
            "name": "PfJumpLinks",
            "module": "pf-jump-links/pf-jump-links.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "pf-label/pf-label.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "LabelCloseEvent",
          "superclass": {
            "name": "Event",
            "module": "global:"
          }
        },
        {
          "kind": "class",
          "description": "The **label** component allows users to add specific element captions for user\nclarity and convenience.",
          "name": "PfLabel",
          "cssProperties": [
            {
              "type": {
                "text": "<length>"
              },
              "name": "--pf-c-label--FontSize",
              "default": "0.875em"
            },
            {
              "type": {
                "text": "<length>"
              },
              "name": "--pf-c-label--PaddingTop",
              "default": "0.25rem"
            },
            {
              "type": {
                "text": "<length>"
              },
              "name": "--pf-c-label--PaddingRight",
              "default": "0.5rem"
            },
            {
              "type": {
                "text": "<length>"
              },
              "name": "--pf-c-label--PaddingBottom",
              "default": "0.25rem"
            },
            {
              "type": {
                "text": "<length>"
              },
              "name": "--pf-c-label--PaddingLeft",
              "default": "0.5rem"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-label--Color",
              "default": "#151515"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-label--BackgroundColor",
              "default": "#f5f5f5"
            },
            {
              "type": {
                "text": "<length>"
              },
              "name": "--pf-c-label--BorderRadius",
              "default": "30em"
            },
            {
              "type": {
                "text": "<length>"
              },
              "name": "--pf-c-label__content--MaxWidth",
              "default": "100"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-label__content--Color",
              "default": "#151515"
            },
            {
              "type": {
                "text": "<length>"
              },
              "name": "--pf-c-label__content--before--BorderWidth",
              "default": "1px"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-label__content--before--BorderColor",
              "default": "#d2d2d2"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-label--m-outline__content--Color",
              "default": "#151515"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-label--m-outline--BackgroundColor",
              "default": "#ffffff"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-label--m-blue__content--Color",
              "default": "#002952"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-label--m-blue--BackgroundColor",
              "default": "#e7f1fa"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-label--m-blue__content--before--BorderColor",
              "default": "#bee1f4"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-label--m-outline--m-blue__content--Color",
              "default": "#06c"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-label--m-cyan__content--Color",
              "default": "#3b1f00"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-label--m-cyan--BackgroundColor",
              "default": "#f2f9f9"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-label--m-cyan__content--before--BorderColor",
              "default": "#a2d9d9"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-label--m-outline--m-cyan__content--Color",
              "default": "#005f60"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-label--m-green__content--Color",
              "default": "#1e4f18"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-label--m-green--BackgroundColor",
              "default": "#f3faf2"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-label--m-green__content--before--BorderColor",
              "default": "#bde5b8"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-label--m-outline--m-green__content--Color",
              "default": "#3e8635"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-label--m-orange__content--Color",
              "default": "#003737"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-label--m-orange--BackgroundColor",
              "default": "#fff6ec"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-label--m-orange__content--before--BorderColor",
              "default": "#f4b678"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-label--m-outline--m-orange__content--Color",
              "default": "#8f4700"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-label--m-purple__content--Color",
              "default": "#1f0066"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-label--m-purple--BackgroundColor",
              "default": "#f2f0fc"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-label--m-purple__content--before--BorderColor",
              "default": "#cbc1ff"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-label--m-outline--m-purple__content--Color",
              "default": "#6753ac"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-label--m-red__content--Color",
              "default": "#7d1007"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-label--m-red--BackgroundColor",
              "default": "#faeae8"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-label--m-red__content--before--BorderColor",
              "default": "#c9190b"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-label--m-outline--m-red__content--Color",
              "default": "#c9190b"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-label--m-gold__content--Color",
              "default": "#3d2c00"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-label--m-gold--BackgroundColor",
              "default": "#fdf7e7"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-label--m-gold__content--before--BorderColor",
              "default": "#f9e0a2"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-label--m-outline--m-gold__content--Color",
              "default": "#795600"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-label--m-blue__icon--Color",
              "default": "#06c"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-label--m-cyan__icon--Color",
              "default": "#009596"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-label--m-green__icon--Color",
              "default": "#3e8635"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-label--m-orange__icon--Color",
              "default": "#ec7a08"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-label--m-red__icon--Color",
              "default": "#c9190b"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-label--m-gold__icon--Color",
              "default": "#f0ab00"
            },
            {
              "type": {
                "text": "<length>"
              },
              "name": "--pf-c-label--m-compact--PaddingTop",
              "default": "0"
            },
            {
              "type": {
                "text": "<length>"
              },
              "name": "--pf-c-label--m-compact--PaddingRight",
              "default": "0.5rem"
            },
            {
              "type": {
                "text": "<length>"
              },
              "name": "--pf-c-label--m-compact--PaddingBottom",
              "default": "0"
            },
            {
              "type": {
                "text": "<length>"
              },
              "name": "--pf-c-label--m-compact--PaddingLeft",
              "default": "0.5rem"
            }
          ],
          "cssParts": [
            {
              "description": "container for the label icon",
              "name": "icon"
            },
            {
              "description": "container for removable labels' close button",
              "name": "close-button"
            }
          ],
          "slots": [
            {
              "description": "Contains the labels's icon, e.g. web-icon-alert-success.",
              "name": "icon"
            },
            {
              "description": "Must contain the text for the label."
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "shadowRootOptions",
              "type": {
                "text": "ShadowRootInit"
              },
              "static": true,
              "default": "{\n    ...LitElement.shadowRootOptions,\n    delegatesFocus: true,\n  }",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "variant",
              "type": {
                "text": "| 'filled'\n    | 'outline'"
              },
              "default": "'filled'",
              "description": "Changes the style of the label.\n- Filled: Colored background with colored border.\n- Outline: White background with colored border.",
              "attribute": "variant"
            },
            {
              "kind": "field",
              "name": "color",
              "type": {
                "text": "| 'blue'\n    | 'cyan'\n    | 'green'\n    | 'orange'\n    | 'purple'\n    | 'red'\n    | 'grey'\n    | 'gold'"
              },
              "default": "'grey'",
              "description": "Changes the color of the label",
              "attribute": "color"
            },
            {
              "kind": "field",
              "name": "icon",
              "type": {
                "text": "string | undefined"
              },
              "description": "Shorthand for the `icon` slot, the value is icon name",
              "attribute": "icon"
            },
            {
              "kind": "field",
              "name": "compact",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Flag indicating the label is compact",
              "attribute": "compact"
            },
            {
              "kind": "field",
              "name": "truncated",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Flag indicating the label text should be truncated",
              "attribute": "truncated"
            },
            {
              "kind": "field",
              "name": "removable",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Flag indicating the label is removable",
              "attribute": "removable"
            },
            {
              "kind": "field",
              "name": "closeButtonLabel",
              "type": {
                "text": "string | undefined"
              },
              "description": "Text label for a removable label's close button",
              "attribute": "close-button-label"
            },
            {
              "kind": "field",
              "name": "#slots",
              "privacy": "private",
              "default": "new SlotController(this, null, 'icon')",
              "description": "Represents the state of the anonymous and icon slots"
            },
            {
              "kind": "method",
              "name": "#onClickClose",
              "privacy": "private"
            }
          ],
          "events": [
            {
              "type": {
                "text": "LabelCloseEvent"
              },
              "description": "when a removable label's close button is clicked",
              "name": "close"
            }
          ],
          "attributes": [
            {
              "name": "variant",
              "type": {
                "text": "| 'filled'\n    | 'outline'"
              },
              "default": "'filled'",
              "description": "Changes the style of the label.\n- Filled: Colored background with colored border.\n- Outline: White background with colored border.",
              "fieldName": "variant"
            },
            {
              "name": "color",
              "type": {
                "text": "| 'blue'\n    | 'cyan'\n    | 'green'\n    | 'orange'\n    | 'purple'\n    | 'red'\n    | 'grey'\n    | 'gold'"
              },
              "default": "'grey'",
              "description": "Changes the color of the label",
              "fieldName": "color"
            },
            {
              "name": "icon",
              "type": {
                "text": "string | undefined"
              },
              "description": "Shorthand for the `icon` slot, the value is icon name",
              "fieldName": "icon"
            },
            {
              "name": "compact",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Flag indicating the label is compact",
              "fieldName": "compact"
            },
            {
              "name": "truncated",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Flag indicating the label text should be truncated",
              "fieldName": "truncated"
            },
            {
              "name": "removable",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Flag indicating the label is removable",
              "fieldName": "removable"
            },
            {
              "name": "close-button-label",
              "type": {
                "text": "string | undefined"
              },
              "description": "Text label for a removable label's close button",
              "fieldName": "closeButtonLabel"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "summary": "Allows users to display meta data in a stylized form.",
          "tagName": "pf-label",
          "customElement": true,
          "demos": [
            {
              "url": "https://patternflyelements.org/components/label/demo/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-label/demo/pf-label.html"
              }
            },
            {
              "url": "https://patternflyelements.org/components/label/demo/compact/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-label/demo/compact.html"
              }
            },
            {
              "url": "https://patternflyelements.org/components/label/demo/filled-color/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-label/demo/filled-color.html"
              }
            },
            {
              "url": "https://patternflyelements.org/components/label/demo/icon/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-label/demo/icon.html"
              }
            },
            {
              "url": "https://patternflyelements.org/components/label/demo/outline-color/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-label/demo/outline-color.html"
              }
            },
            {
              "url": "https://patternflyelements.org/components/label/demo/patternfly/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-label/demo/patternfly.html"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "LabelCloseEvent",
          "declaration": {
            "name": "LabelCloseEvent",
            "module": "pf-label/pf-label.js"
          }
        },
        {
          "kind": "js",
          "name": "PfLabel",
          "declaration": {
            "name": "PfLabel",
            "module": "pf-label/pf-label.js"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "pf-label",
          "declaration": {
            "name": "PfLabel",
            "module": "pf-label/pf-label.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "pf-modal/pf-modal.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "ModalCancelEvent",
          "superclass": {
            "name": "ComposedEvent",
            "package": "@patternfly/pfe-core"
          }
        },
        {
          "kind": "class",
          "description": "",
          "name": "ModalCloseEvent",
          "superclass": {
            "name": "ComposedEvent",
            "package": "@patternfly/pfe-core"
          }
        },
        {
          "kind": "class",
          "description": "",
          "name": "ModalOpenEvent",
          "members": [
            {
              "kind": "field",
              "description": "The trigger element which triggered the modal to open",
              "type": {
                "text": "HTMLElement | null",
                "name": "HTMLElement | null"
              },
              "name": "trigger",
              "privacy": "public"
            }
          ],
          "superclass": {
            "name": "ComposedEvent",
            "package": "@patternfly/pfe-core"
          }
        },
        {
          "kind": "class",
          "description": "A **modal** displays important information to a user without requiring them to navigate\nto a new page.",
          "name": "PfModal",
          "cssProperties": [
            {
              "type": {
                "text": "<length>"
              },
              "name": "--pf-c-modal-box--ZIndex",
              "default": "500"
            },
            {
              "type": {
                "text": "<length>"
              },
              "description": "Width of the modal",
              "name": "--pf-c-modal-box--Width",
              "default": "calc(100 - 2rem)"
            },
            {
              "type": {
                "text": "<length>"
              },
              "description": "Max width of the modal",
              "name": "--pf-c-modal-box--MaxWidth",
              "default": "calc(100 - 2rem)"
            },
            {
              "type": {
                "text": "<length>"
              },
              "description": "Max width of the small variant modal",
              "name": "--pf-c-modal-box--m-sm--sm--MaxWidth",
              "default": "35rem"
            },
            {
              "type": {
                "text": "<length>"
              },
              "description": "Max width of the small variant modal",
              "name": "--pf-c-modal-box--m-md--MaxWidth",
              "default": "52.5rem"
            },
            {
              "type": {
                "text": "<length>"
              },
              "description": "Max width of the large variant modal",
              "name": "--pf-c-modal-box--m-lg--lg--MaxWidth",
              "default": "70rem"
            },
            {
              "type": {
                "text": "<length>"
              },
              "description": "Max height of the modal",
              "name": "--pf-c-modal-box--MaxHeight",
              "default": "calc(100 - 3rem)"
            },
            {
              "type": {
                "text": "<length>"
              },
              "description": "-",
              "name": "--pf-c-modal-box--BoxShadow",
              "default": "var(--pf-global--BoxShadow--xl)"
            },
            {
              "type": {
                "text": "<length>"
              },
              "description": "-",
              "name": "--pf-c-modal-box__title--FontSize",
              "default": "1.5rem"
            },
            {
              "type": {
                "text": "<length>"
              },
              "description": "-",
              "name": "--pf-c-modal-box--m-align-top--MarginTop",
              "default": "2rem"
            },
            {
              "type": {
                "text": "<length>"
              },
              "name": "--pf-c-modal-box--m-align-top--MaxWidth"
            },
            {
              "type": {
                "text": "<length>"
              },
              "name": "--pf-c-modal-box--m-align-top--MaxHeight"
            },
            {
              "type": {
                "text": "<color>"
              },
              "description": "-",
              "name": "--pf-c-modal-box--BackgroundColor",
              "default": "#fff"
            },
            {
              "description": "default font family for header-slotted headings",
              "name": "--pf-c-modal-box__title--FontFamily"
            }
          ],
          "cssParts": [
            {
              "description": "The modal overlay which lies under the dialog and above the page body",
              "name": "overlay"
            },
            {
              "description": "The dialog element",
              "name": "dialog"
            },
            {
              "description": "The container for the dialog content",
              "name": "content"
            },
            {
              "description": "The container for the optional dialog header",
              "name": "header"
            },
            {
              "description": "The container for the optional dialog description in the header",
              "name": "description"
            },
            {
              "description": "The modal's close button",
              "name": "close-button"
            },
            {
              "description": "Actions footer container",
              "name": "footer"
            }
          ],
          "slots": [
            {
              "description": "The default slot can contain any type of content. When the header is not present this unnamed slot appear at the top of the modal window (to the left of the close button). Otherwise it will appear beneath the header.",
              "name": ""
            },
            {
              "description": "The header is an optional slot that appears at the top of the modal window. It should be a header tag (h2-h6).",
              "name": "header"
            },
            {
              "description": "Optional footer content. Good place to put action buttons.",
              "name": "footer"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "shadowRootOptions",
              "type": {
                "text": "ShadowRootInit"
              },
              "static": true,
              "default": "{\n    ...LitElement.shadowRootOptions,\n    delegatesFocus: true,\n  }",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "closeOnOutsideClick",
              "type": {
                "text": "boolean"
              },
              "privacy": "protected",
              "static": true,
              "default": "false",
              "description": "Should the dialog close when user clicks outside the dialog?"
            },
            {
              "kind": "field",
              "name": "variant",
              "type": {
                "text": "'small' | 'medium' | 'large' | undefined"
              },
              "description": "The `variant` controls the width of the modal.\nThere are three options: `small`, `medium` and `large`. The default is `large`.",
              "attribute": "variant",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "position",
              "type": {
                "text": "'top' | undefined"
              },
              "description": "`position=\"top\"` aligns the dialog with the top of the page",
              "attribute": "position",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "open",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "trigger",
              "type": {
                "text": "string | undefined"
              },
              "description": "Optional ID of the trigger element",
              "attribute": "trigger"
            },
            {
              "kind": "field",
              "name": "returnValue",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "''"
            },
            {
              "kind": "field",
              "name": "overlay",
              "type": {
                "text": "HTMLElement | null | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "dialog",
              "type": {
                "text": "HTMLElement | null | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "closeButton",
              "type": {
                "text": "HTMLElement | null | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "#headerId",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "#triggerElement",
              "privacy": "private",
              "type": {
                "text": "HTMLElement | null"
              },
              "default": "null"
            },
            {
              "kind": "field",
              "name": "#header",
              "privacy": "private",
              "type": {
                "text": "HTMLElement | null"
              },
              "default": "null"
            },
            {
              "kind": "field",
              "name": "#body",
              "privacy": "private",
              "type": {
                "text": "Element[]"
              },
              "default": "[]"
            },
            {
              "kind": "field",
              "name": "#headings",
              "privacy": "private",
              "type": {
                "text": "Element[]"
              },
              "default": "[]"
            },
            {
              "kind": "field",
              "name": "#cancelling",
              "privacy": "private",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "field",
              "name": "#slots",
              "privacy": "private",
              "default": "new SlotController(this, null, 'header', 'description', 'footer')"
            },
            {
              "kind": "method",
              "name": "_init",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "Promise<void>"
                }
              }
            },
            {
              "kind": "method",
              "name": "openChanged",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "Promise<void>"
                }
              },
              "parameters": [
                {
                  "name": "oldValue",
                  "optional": true,
                  "type": {
                    "text": "boolean"
                  }
                },
                {
                  "name": "newValue",
                  "optional": true,
                  "type": {
                    "text": "boolean"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "triggerChanged",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "onTriggerClick",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "MouseEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "onClick",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "MouseEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "onKeydown",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "KeyboardEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "cancel",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "setTrigger",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "element",
                  "type": {
                    "text": "HTMLElement"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "toggle",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "description": "Manually toggles the modal.\n```js\nmodal.toggle();\n```"
            },
            {
              "kind": "method",
              "name": "show",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "description": "Manually opens the modal.\n```js\nmodal.open();\n```"
            },
            {
              "kind": "method",
              "name": "showModal",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "close",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "returnValue",
                  "optional": true,
                  "type": {
                    "text": "string"
                  },
                  "description": "dialog return value"
                }
              ],
              "description": "Manually closes the modal.\n```js\nmodal.close();\n```"
            }
          ],
          "events": [
            {
              "type": {
                "text": "ModalOpenEvent"
              },
              "description": "Fires when a user clicks on the trigger or manually opens a modal.",
              "name": "open"
            },
            {
              "type": {
                "text": "ModalCloseEvent"
              },
              "description": "Fires when either a user clicks on either the close button or the overlay or manually closes a modal.",
              "name": "close"
            }
          ],
          "attributes": [
            {
              "name": "variant",
              "type": {
                "text": "'small' | 'medium' | 'large' | undefined"
              },
              "description": "The `variant` controls the width of the modal.\nThere are three options: `small`, `medium` and `large`. The default is `large`.",
              "fieldName": "variant"
            },
            {
              "name": "position",
              "type": {
                "text": "'top' | undefined"
              },
              "description": "`position=\"top\"` aligns the dialog with the top of the page",
              "fieldName": "position"
            },
            {
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "open"
            },
            {
              "name": "trigger",
              "type": {
                "text": "string | undefined"
              },
              "description": "Optional ID of the trigger element",
              "fieldName": "trigger"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "summary": "Displays information or helps a user focus on a task",
          "tagName": "pf-modal",
          "customElement": true,
          "demos": [
            {
              "url": "https://patternflyelements.org/components/modal/demo/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-modal/demo/pf-modal.html"
              }
            },
            {
              "url": "https://patternflyelements.org/components/modal/demo/custom-header-footer/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-modal/demo/custom-header-footer.html"
              }
            },
            {
              "url": "https://patternflyelements.org/components/modal/demo/custom-icon/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-modal/demo/custom-icon.html"
              }
            },
            {
              "url": "https://patternflyelements.org/components/modal/demo/description/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-modal/demo/description.html"
              }
            },
            {
              "url": "https://patternflyelements.org/components/modal/demo/no-header/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-modal/demo/no-header.html"
              }
            },
            {
              "url": "https://patternflyelements.org/components/modal/demo/overflowing-content/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-modal/demo/overflowing-content.html"
              }
            },
            {
              "url": "https://patternflyelements.org/components/modal/demo/styling/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-modal/demo/styling.html"
              }
            },
            {
              "url": "https://patternflyelements.org/components/modal/demo/top-aligned/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-modal/demo/top-aligned.html"
              }
            },
            {
              "url": "https://patternflyelements.org/components/modal/demo/trigger-attribute/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-modal/demo/trigger-attribute.html"
              }
            },
            {
              "url": "https://patternflyelements.org/components/modal/demo/variants/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-modal/demo/variants.html"
              }
            },
            {
              "url": "https://patternflyelements.org/components/modal/demo/warning-alert/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-modal/demo/warning-alert.html"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ModalCancelEvent",
          "declaration": {
            "name": "ModalCancelEvent",
            "module": "pf-modal/pf-modal.js"
          }
        },
        {
          "kind": "js",
          "name": "ModalCloseEvent",
          "declaration": {
            "name": "ModalCloseEvent",
            "module": "pf-modal/pf-modal.js"
          }
        },
        {
          "kind": "js",
          "name": "ModalOpenEvent",
          "declaration": {
            "name": "ModalOpenEvent",
            "module": "pf-modal/pf-modal.js"
          }
        },
        {
          "kind": "js",
          "name": "PfModal",
          "declaration": {
            "name": "PfModal",
            "module": "pf-modal/pf-modal.js"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "pf-modal",
          "declaration": {
            "name": "PfModal",
            "module": "pf-modal/pf-modal.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "pf-panel/pf-panel.js",
      "declarations": [
        {
          "kind": "class",
          "description": "The **panel** component is a container that supports flexible content layouts. It can\nbe used to house other components such as fields, forms, videos, buttons, and more.\nThe panel should not be confused with the [drawer](https://www.patternfly.org/v4/components/drawer/design-guidelines/)\ncomponent, which allows you to surface information via a collapsable container.",
          "name": "PfPanel",
          "cssProperties": [
            {
              "name": "--pf-c-panel--Width",
              "default": "auto"
            },
            {
              "name": "--pf-c-panel--MinWidth",
              "default": "auto"
            },
            {
              "name": "--pf-c-panel--MaxWidth",
              "default": "none"
            },
            {
              "name": "--pf-c-panel--ZIndex",
              "default": "auto"
            },
            {
              "name": "--pf-c-panel--BackgroundColor",
              "default": "var(--pf-global--BackgroundColor--100, #fff)"
            },
            {
              "name": "--pf-c-panel--BoxShadow",
              "default": "none"
            },
            {
              "name": "--pf-c-panel--before--BorderWidth",
              "default": "0"
            },
            {
              "name": "--pf-c-panel--before--BorderColor",
              "default": "var(--pf-global--BorderColor--100, #d2d2d2)"
            },
            {
              "name": "--pf-c-panel--m-bordered--before--BorderWidth",
              "default": "var(--pf-global--BorderWidth--sm, 1px)"
            },
            {
              "name": "--pf-c-panel--m-raised--BoxShadow",
              "default": "var(--pf-global--BoxShadow--md, 0 0.25rem 0.5rem 0rem rgba(3, 3, 3, 0.12), 0 0 0.25rem 0 rgba(3, 3, 3, 0.06))"
            },
            {
              "name": "--pf-c-panel--m-raised--ZIndex",
              "default": "var(--pf-global--ZIndex--sm, 200)"
            },
            {
              "name": "--pf-c-panel__header--PaddingTop",
              "default": "var(--pf-global--spacer--md, 1rem)"
            },
            {
              "name": "--pf-c-panel__header--PaddingRight",
              "default": "var(--pf-global--spacer--md, 1rem)"
            },
            {
              "name": "--pf-c-panel__header--PaddingBottom",
              "default": "var(--pf-global--spacer--md, 1rem)"
            },
            {
              "name": "--pf-c-panel__header--PaddingLeft",
              "default": "var(--pf-global--spacer--md, 1rem)"
            },
            {
              "name": "--pf-c-panel__main--MaxHeight",
              "default": "none"
            },
            {
              "name": "--pf-c-panel__main--Overflow",
              "default": "visible"
            },
            {
              "name": "--pf-c-panel__main-body--PaddingTop",
              "default": "var(--pf-global--spacer--md, 1rem)"
            },
            {
              "name": "--pf-c-panel__main-body--PaddingRight",
              "default": "var(--pf-global--spacer--md, 1rem)"
            },
            {
              "name": "--pf-c-panel__main-body--PaddingBottom",
              "default": "var(--pf-global--spacer--md, 1rem)"
            },
            {
              "name": "--pf-c-panel__main-body--PaddingLeft",
              "default": "var(--pf-global--spacer--md, 1rem)"
            },
            {
              "name": "--pf-c-panel__footer--PaddingTop",
              "default": "var(--pf-global--spacer--md, 1rem)"
            },
            {
              "name": "--pf-c-panel__footer--PaddingRight",
              "default": "var(--pf-global--spacer--md, 1rem)"
            },
            {
              "name": "--pf-c-panel__footer--PaddingBottom",
              "default": "var(--pf-global--spacer--md, 1rem)"
            },
            {
              "name": "--pf-c-panel__footer--PaddingLeft",
              "default": "var(--pf-global--spacer--md, 1rem)"
            },
            {
              "name": "--pf-c-panel__footer--BoxShadow",
              "default": "none"
            },
            {
              "name": "--pf-c-panel--m-scrollable__main--MaxHeight",
              "default": "18.75rem"
            },
            {
              "name": "--pf-c-panel--m-scrollable__main--Overflow",
              "default": "auto"
            },
            {
              "name": "--pf-c-panel--m-scrollable__footer--BoxShadow",
              "default": "0 -0.3125rem 0.25rem -0.25rem rgba(3, 3, 3, 0.16)"
            }
          ],
          "slots": [
            {
              "description": "Place header content here",
              "name": "header"
            },
            {
              "description": "Place main content here",
              "name": ""
            },
            {
              "description": "Place footer content here",
              "name": "footer"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "scrollable",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "scrollable",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "variant",
              "type": {
                "text": "'raised' | 'bordered' | undefined"
              },
              "attribute": "variant",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "#slots",
              "privacy": "private",
              "default": "new SlotController(this, 'header', null, 'footer')"
            }
          ],
          "attributes": [
            {
              "name": "scrollable",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "scrollable"
            },
            {
              "name": "variant",
              "type": {
                "text": "'raised' | 'bordered' | undefined"
              },
              "fieldName": "variant"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "pf-panel",
          "customElement": true,
          "demos": [
            {
              "url": "https://patternflyelements.org/components/panel/demo/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-panel/demo/pf-panel.html"
              }
            },
            {
              "url": "https://patternflyelements.org/components/panel/demo/bordered/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-panel/demo/bordered.html"
              }
            },
            {
              "url": "https://patternflyelements.org/components/panel/demo/footer/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-panel/demo/footer.html"
              }
            },
            {
              "url": "https://patternflyelements.org/components/panel/demo/header-and-footer/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-panel/demo/header-and-footer.html"
              }
            },
            {
              "url": "https://patternflyelements.org/components/panel/demo/header/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-panel/demo/header.html"
              }
            },
            {
              "url": "https://patternflyelements.org/components/panel/demo/raised/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-panel/demo/raised.html"
              }
            },
            {
              "url": "https://patternflyelements.org/components/panel/demo/scrollable-with-header-and-footer/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-panel/demo/scrollable-with-header-and-footer.html"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PfPanel",
          "declaration": {
            "name": "PfPanel",
            "module": "pf-panel/pf-panel.js"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "pf-panel",
          "declaration": {
            "name": "PfPanel",
            "module": "pf-panel/pf-panel.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "pf-popover/pf-popover.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "PopoverHideEvent",
          "superclass": {
            "name": "ComposedEvent",
            "package": "@patternfly/pfe-core/core.js"
          }
        },
        {
          "kind": "class",
          "description": "",
          "name": "PopoverHiddenEvent",
          "superclass": {
            "name": "ComposedEvent",
            "package": "@patternfly/pfe-core/core.js"
          }
        },
        {
          "kind": "class",
          "description": "",
          "name": "PopoverShowEvent",
          "superclass": {
            "name": "ComposedEvent",
            "package": "@patternfly/pfe-core/core.js"
          }
        },
        {
          "kind": "class",
          "description": "",
          "name": "PopoverShownEvent",
          "superclass": {
            "name": "ComposedEvent",
            "package": "@patternfly/pfe-core/core.js"
          }
        },
        {
          "kind": "class",
          "description": "A **Popover** displays content in a non-modal dialog and adds contextual information or provides resources via text and links.",
          "name": "PfPopover",
          "cssProperties": [
            {
              "type": {
                "text": "<length>"
              },
              "description": "Height of the arrow",
              "name": "--pf-c-popover__arrow--Height",
              "default": "1.5625rem"
            },
            {
              "type": {
                "text": "<length>"
              },
              "description": "Width of the arrow",
              "name": "--pf-c-popover__arrow--Width",
              "default": "1.5625rem"
            },
            {
              "type": {
                "text": "<color>"
              },
              "description": "Heading font color",
              "name": "--pf-c-popover__title-text--Color",
              "default": "inherit"
            },
            {
              "type": {
                "text": "<color>"
              },
              "description": "Heading icon font color",
              "name": "--pf-c-popover__title-icon--Color",
              "default": "#151515"
            },
            {
              "type": {
                "text": "<color>"
              },
              "description": "Arrow background color",
              "name": "--pf-c-popover__arrow--BackgroundColor",
              "default": "#fff"
            },
            {
              "description": "Arrow box shadow",
              "name": "--pf-c-popover__arrow--BoxShadow",
              "default": "0 0.5rem 1rem 0 rgba(3, 3, 3, 0.16), 0 0 0.375rem 0 rgba(3, 3, 3, 0.08)"
            },
            {
              "description": "Popover box shadow",
              "name": "--pf-c-popover--BoxShadow",
              "default": "0 0.5rem 1rem 0 rgba(3, 3, 3, 0.16), 0 0 0.375rem 0 rgba(3, 3, 3, 0.08)"
            },
            {
              "type": {
                "text": "<length>"
              },
              "description": "Popover top padding",
              "name": "--pf-c-tooltip__content--PaddingTop",
              "default": "1rem"
            },
            {
              "type": {
                "text": "<length>"
              },
              "description": "Popover right padding",
              "name": "--pf-c-tooltip__content--PaddingRight",
              "default": "1rem"
            },
            {
              "type": {
                "text": "<length>"
              },
              "description": "Popover bottom padding",
              "name": "--pf-c-tooltip__content--PaddingBottom",
              "default": "1rem"
            },
            {
              "type": {
                "text": "<length>"
              },
              "description": "Popover left padding",
              "name": "--pf-c-tooltip__content--PaddingLeft",
              "default": "1rem"
            },
            {
              "type": {
                "text": "<number>"
              },
              "description": "Popover line height",
              "name": "--pf-c-popover--line-height",
              "default": "1.5"
            },
            {
              "type": {
                "text": "<length>"
              },
              "description": "Popover font-size",
              "name": "--pf-c-popover__content--FontSize",
              "default": "0.875rem"
            },
            {
              "type": {
                "text": "<color>"
              },
              "description": "Popover background color",
              "name": "--pf-c-popover__content--BackgroundColor",
              "default": "#fff"
            },
            {
              "type": {
                "text": "<length>"
              },
              "description": "Popover max-width",
              "name": "--pf-c-popover--MaxWidth",
              "default": "20.75rem"
            },
            {
              "type": {
                "text": "<length>"
              },
              "description": "Popover min-width",
              "name": "--pf-c-popover--MinWidth",
              "default": "20.75rem"
            },
            {
              "type": {
                "text": "<number>"
              },
              "description": "Close button right position",
              "name": "--pf-c-popover--c-button--Right",
              "default": "`0"
            },
            {
              "type": {
                "text": "<number>"
              },
              "description": "Close button top position",
              "name": "--pf-c-popover--c-button--Top",
              "default": "0"
            },
            {
              "type": {
                "text": "<length>"
              },
              "description": "Padding between close button and its immediate sibling",
              "name": "--pf-c-popover--c-button--sibling--PaddingRight",
              "default": "3rem"
            },
            {
              "type": {
                "text": "<length>"
              },
              "description": "Heading icon right margin",
              "name": "--pf-c-popover__title-icon--MarginRight",
              "default": "0.5rem"
            },
            {
              "type": {
                "text": "<length>"
              },
              "description": "Header font-size",
              "name": "--pf-c-popover__title--FontSize",
              "default": "1rem"
            },
            {
              "type": {
                "text": "<length>"
              },
              "description": "Header bottom margin",
              "name": "--pf-c-popover__title--MarginBottom",
              "default": "0.5rem"
            },
            {
              "type": {
                "text": "<number>"
              },
              "description": "Header line height",
              "name": "--pf-c-popover__title--LineHeight",
              "default": "1.5"
            },
            {
              "type": {
                "text": "<string>"
              },
              "description": "Header font-family",
              "name": "--pf-c-popover__title--FontFamily",
              "default": "'RedHatDisplay', 'Overpass', overpass, helvetica, arial, sans-serif"
            },
            {
              "type": {
                "text": "<length>"
              },
              "description": "Footer top margin",
              "name": "--pf-c-popover__footer--MarginTop",
              "default": "1rem"
            },
            {
              "type": {
                "text": "<color>"
              },
              "description": "Default alert heading color",
              "name": "--pf-c-popover--m-default__title-text--Color",
              "default": "#003737"
            },
            {
              "type": {
                "text": "<color>"
              },
              "description": "Default alert icon color",
              "name": "--pf-c-popover--m-default__title-icon--Color",
              "default": "#009596"
            },
            {
              "type": {
                "text": "<color>"
              },
              "description": "Default alert heading color",
              "name": "--pf-c-popover--m-info__title-text--Color",
              "default": "#002952"
            },
            {
              "type": {
                "text": "<color>"
              },
              "description": "Default alert icon color",
              "name": "--pf-c-popover--m-info__title-icon--Color",
              "default": "#2b9af3"
            },
            {
              "type": {
                "text": "<color>"
              },
              "description": "Default alert heading color",
              "name": "--pf-c-popover--m-warning__title-text--Color",
              "default": "#795600"
            },
            {
              "type": {
                "text": "<color>"
              },
              "description": "Default alert icon color",
              "name": "--pf-c-popover--m-warning__title-icon--Color",
              "default": "#f0ab00"
            },
            {
              "type": {
                "text": "<color>"
              },
              "description": "Default alert heading color",
              "name": "--pf-c-popover--m-success__title-text--Color",
              "default": "#1e4f18"
            },
            {
              "type": {
                "text": "<color>"
              },
              "description": "Default alert icon color",
              "name": "--pf-c-popover--m-success__title-icon--Color",
              "default": "#3e8635"
            },
            {
              "type": {
                "text": "<color>"
              },
              "description": "Default alert heading color",
              "name": "--pf-c-popover--m-danger__title-text--Color",
              "default": "#a30000"
            },
            {
              "type": {
                "text": "<color>"
              },
              "description": "Default alert icon color",
              "name": "--pf-c-popover--m-danger__title-icon--Color",
              "default": "#c9190b"
            }
          ],
          "cssParts": [
            {
              "description": "The component wrapper",
              "name": "container"
            },
            {
              "description": "The content wrapper",
              "name": "content"
            },
            {
              "description": "The header element; only visible if both an icon annd heading are provided.",
              "name": "header"
            },
            {
              "description": "The heading element",
              "name": "heading"
            },
            {
              "description": "The header icon",
              "name": "icon"
            },
            {
              "description": "The close button",
              "name": "close-button"
            },
            {
              "description": "The container for the body content",
              "name": "body"
            },
            {
              "description": "The container for the footer content",
              "name": "footer"
            }
          ],
          "slots": [
            {
              "description": "The default slot holds invoking element.\nTypically this would be an icon, button, or other small sized element.",
              "name": ""
            },
            {
              "description": "This slot renders the content that will be displayed inside of the header of the popover.\nTypically this would be a heading element.",
              "name": "heading"
            },
            {
              "description": "This slot renders the icon that will be displayed inside the header of the popover,\nbefore the heading.",
              "name": "icon"
            },
            {
              "description": "This slot renders the content that will be displayed inside of the body of the popover.",
              "name": "body"
            },
            {
              "description": "This slot renders the content that will be displayed inside of the footer of the popover.",
              "name": "footer"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "instances",
              "privacy": "private",
              "static": true,
              "default": "new Set<PfPopover>()"
            },
            {
              "kind": "field",
              "name": "alertIcons",
              "privacy": "private",
              "static": true,
              "default": "new Map(Object.entries({\n    default: 'bell',\n    info: 'circle-info',\n    success: 'circle-check',\n    warning: 'triangle-exclamation',\n    danger: 'circle-exclamation',\n  } satisfies Record<AlertSeverity, string>) as [AlertSeverity, string][])"
            },
            {
              "kind": "field",
              "name": "",
              "static": true
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "summary": "Toggle the visibility of helpful or contextual information.",
          "tagName": "pf-popover",
          "customElement": true,
          "demos": [
            {
              "url": "https://patternflyelements.org/components/popover/demo/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-popover/demo/pf-popover.html"
              }
            },
            {
              "url": "https://patternflyelements.org/components/popover/demo/alert/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-popover/demo/alert.html"
              }
            },
            {
              "url": "https://patternflyelements.org/components/popover/demo/content/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-popover/demo/content.html"
              }
            },
            {
              "url": "https://patternflyelements.org/components/popover/demo/edge-of-viewport/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-popover/demo/edge-of-viewport.html"
              }
            },
            {
              "url": "https://patternflyelements.org/components/popover/demo/flip/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-popover/demo/flip.html"
              }
            },
            {
              "url": "https://patternflyelements.org/components/popover/demo/icons/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-popover/demo/icons.html"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PopoverHideEvent",
          "declaration": {
            "name": "PopoverHideEvent",
            "module": "pf-popover/pf-popover.js"
          }
        },
        {
          "kind": "js",
          "name": "PopoverHiddenEvent",
          "declaration": {
            "name": "PopoverHiddenEvent",
            "module": "pf-popover/pf-popover.js"
          }
        },
        {
          "kind": "js",
          "name": "PopoverShowEvent",
          "declaration": {
            "name": "PopoverShowEvent",
            "module": "pf-popover/pf-popover.js"
          }
        },
        {
          "kind": "js",
          "name": "PopoverShownEvent",
          "declaration": {
            "name": "PopoverShownEvent",
            "module": "pf-popover/pf-popover.js"
          }
        },
        {
          "kind": "js",
          "name": "PfPopover",
          "declaration": {
            "name": "PfPopover",
            "module": "pf-popover/pf-popover.js"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "pf-popover",
          "declaration": {
            "name": "PfPopover",
            "module": "pf-popover/pf-popover.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "pf-progress/pf-progress.js",
      "declarations": [
        {
          "kind": "class",
          "description": "A progress bar gives the user a visual representation of their completion status of an ongoing process or task.",
          "name": "PfProgress",
          "cssProperties": [
            {
              "type": {
                "text": "<length>"
              },
              "description": "Gap between the sections of the progress bar.",
              "name": "--pf-c-progress--GridGap",
              "default": "1rem"
            },
            {
              "type": {
                "text": "<color>"
              },
              "description": "Color of the progress bar.",
              "name": "--pf-c-progress__bar--before--BackgroundColor",
              "default": "#06c"
            },
            {
              "type": {
                "text": "<length>"
              },
              "description": "Height of the progress bar.",
              "name": "--pf-c-progress__bar--Height",
              "default": "1rem"
            },
            {
              "type": {
                "text": "<color>"
              },
              "description": "Background color of the progress bar.",
              "name": "--pf-c-progress__bar--BackgroundColor",
              "default": "#ffffff"
            },
            {
              "type": {
                "text": "<color>"
              },
              "description": "Color of the status icon.",
              "name": "--pf-c-progress__status-icon--Color",
              "default": "#151515"
            },
            {
              "type": {
                "text": "<length>"
              },
              "description": "Margin left of the status icon.",
              "name": "--pf-c-progress__status-icon--MarginLeft",
              "default": "0.5rem"
            },
            {
              "type": {
                "text": "<length>"
              },
              "description": "Height of the progress bar indicator.",
              "name": "--pf-c-progress__indicator--Height",
              "default": "1rem"
            },
            {
              "type": {
                "text": "<color>"
              },
              "description": "Background color of the progress bar indicator.",
              "name": "--pf-c-progress__indicator--BackgroundColor",
              "default": "#ffffff"
            },
            {
              "type": {
                "text": "<color>"
              },
              "description": "Background color of the progress bar when variant is success.",
              "name": "--pf-c-progress--m-success__bar--BackgroundColor",
              "default": "#3e8635"
            },
            {
              "type": {
                "text": "<color>"
              },
              "description": "Background color of the progress bar when variant is warning.",
              "name": "--pf-c-progress--m-warning__bar--BackgroundColor",
              "default": "#f0ab00"
            },
            {
              "type": {
                "text": "<color>"
              },
              "description": "Background color of the progress bar when variant is danger.",
              "name": "--pf-c-progress--m-danger__bar--BackgroundColor",
              "default": "#c9190b"
            },
            {
              "type": {
                "text": "<color>"
              },
              "description": "Color of the status icon when variant is success.",
              "name": "--pf-c-progress--m-success__status-icon--Color",
              "default": "#3e8635"
            },
            {
              "type": {
                "text": "<color>"
              },
              "description": "Color of the status icon when variant is warning.",
              "name": "--pf-c-progress--m-warning__status-icon--Color",
              "default": "#f0ab00"
            },
            {
              "type": {
                "text": "<color>"
              },
              "description": "Color of the status icon when variant is danger.",
              "name": "--pf-c-progress--m-danger__status-icon--Color",
              "default": "#c9190b"
            },
            {
              "type": {
                "text": "<color>"
              },
              "description": "Color of the progress bar measure when variant is success and measure location is inside.",
              "name": "--pf-c-progress--m-success--m-inside__measure--Color",
              "default": "#ffffff"
            },
            {
              "type": {
                "text": "<length>"
              },
              "description": "Font size of the progress bar measure when measure location is outside.",
              "name": "--pf-c-progress--m-outside__measure--FontSize",
              "default": "0.875rem"
            },
            {
              "type": {
                "text": "<length>"
              },
              "description": "Height of the progress bar when the size is small.",
              "name": "--pf-c-progress--m-sm__bar--Height",
              "default": "0.5rem"
            },
            {
              "type": {
                "text": "<length>"
              },
              "description": "Font size of the progress bar description when the size is small.",
              "name": "--pf-c-progress--m-sm__description--FontSize",
              "default": "0.875rem"
            },
            {
              "type": {
                "text": "<length>"
              },
              "description": "Height of the progress bar when the size is large.",
              "name": "--pf-c-progress--m-lg__bar--Height",
              "default": "1.5rem"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "#internals",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "number"
              },
              "default": "0",
              "description": "Represents the value of the progress bar",
              "attribute": "value",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "description",
              "type": {
                "text": "string | undefined"
              },
              "description": "Description (title) above the progress bar",
              "attribute": "description"
            },
            {
              "kind": "field",
              "name": "descriptionTruncated",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Indicate whether to truncate the string description (title)",
              "attribute": "description-truncated",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "max",
              "type": {
                "text": "number"
              },
              "default": "100",
              "description": "Maximum value for the progress bar",
              "attribute": "max",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "min",
              "type": {
                "text": "number"
              },
              "default": "0",
              "description": "Minimum value for the progress bar",
              "attribute": "min",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "size",
              "type": {
                "text": "'sm' | 'lg' | undefined"
              },
              "description": "Size of the progress bar (height)",
              "attribute": "size"
            },
            {
              "kind": "field",
              "name": "measureLocation",
              "type": {
                "text": "'outside' | 'inside' | 'none' | undefined"
              },
              "description": "Where the percentage will be displayed with the progress element",
              "attribute": "measure-location"
            },
            {
              "kind": "field",
              "name": "variant",
              "type": {
                "text": "'success' | 'danger' | 'warning' | undefined"
              },
              "description": "Variant of the progress bar",
              "attribute": "variant"
            },
            {
              "kind": "field",
              "name": "#calculatedPercentage",
              "privacy": "private",
              "type": {
                "text": "number"
              },
              "readonly": true
            },
            {
              "kind": "field",
              "name": "#icon",
              "privacy": "private",
              "readonly": true
            }
          ],
          "attributes": [
            {
              "name": "value",
              "type": {
                "text": "number"
              },
              "default": "0",
              "description": "Represents the value of the progress bar",
              "fieldName": "value"
            },
            {
              "name": "description",
              "type": {
                "text": "string | undefined"
              },
              "description": "Description (title) above the progress bar",
              "fieldName": "description"
            },
            {
              "name": "description-truncated",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Indicate whether to truncate the string description (title)",
              "fieldName": "descriptionTruncated"
            },
            {
              "name": "max",
              "type": {
                "text": "number"
              },
              "default": "100",
              "description": "Maximum value for the progress bar",
              "fieldName": "max"
            },
            {
              "name": "min",
              "type": {
                "text": "number"
              },
              "default": "0",
              "description": "Minimum value for the progress bar",
              "fieldName": "min"
            },
            {
              "name": "size",
              "type": {
                "text": "'sm' | 'lg' | undefined"
              },
              "description": "Size of the progress bar (height)",
              "fieldName": "size"
            },
            {
              "name": "measure-location",
              "type": {
                "text": "'outside' | 'inside' | 'none' | undefined"
              },
              "description": "Where the percentage will be displayed with the progress element",
              "fieldName": "measureLocation"
            },
            {
              "name": "variant",
              "type": {
                "text": "'success' | 'danger' | 'warning' | undefined"
              },
              "description": "Variant of the progress bar",
              "fieldName": "variant"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "summary": "Display completion status of ongoing process or task.",
          "tagName": "pf-progress",
          "customElement": true,
          "demos": [
            {
              "url": "https://patternflyelements.org/components/progress/demo/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-progress/demo/pf-progress.html"
              }
            },
            {
              "url": "https://patternflyelements.org/components/progress/demo/kitchen-sink/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-progress/demo/kitchen-sink.html"
              }
            },
            {
              "url": "https://patternflyelements.org/components/progress/demo/truncated-description/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-progress/demo/truncated-description.html"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PfProgress",
          "declaration": {
            "name": "PfProgress",
            "module": "pf-progress/pf-progress.js"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "pf-progress",
          "declaration": {
            "name": "PfProgress",
            "module": "pf-progress/pf-progress.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "pf-progress-stepper/pf-progress-step.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "PfProgressStep",
          "slots": [
            {
              "description": "Short description of the current step.",
              "name": ""
            },
            {
              "description": "Longer description of the current step.",
              "name": "description"
            },
            {
              "description": "Overrides the icon property",
              "name": "icon"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "parentTagName",
              "type": {
                "text": "string"
              },
              "privacy": "protected",
              "static": true,
              "default": "'pf-progress-stepper'"
            },
            {
              "kind": "field",
              "name": "description",
              "type": {
                "text": "string | undefined"
              },
              "description": "Optional extended description of the step",
              "attribute": "description"
            },
            {
              "kind": "field",
              "name": "icon",
              "type": {
                "text": "string | undefined"
              },
              "description": "Step Icon",
              "attribute": "icon"
            },
            {
              "kind": "field",
              "name": "iconSet",
              "type": {
                "text": "string | undefined"
              },
              "description": "Step icon set",
              "attribute": "icon-set"
            },
            {
              "kind": "field",
              "name": "variant",
              "type": {
                "text": "'pending' | 'info' | 'success' | 'warning' | 'danger' | undefined"
              },
              "description": "Describes the state of the current item",
              "attribute": "variant",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "current",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Indicates if this item is the current active item.",
              "attribute": "current",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "#slots",
              "privacy": "private",
              "default": "new SlotController(this, 'title', 'description')"
            },
            {
              "kind": "field",
              "name": "#internals",
              "privacy": "private"
            }
          ],
          "attributes": [
            {
              "name": "description",
              "type": {
                "text": "string | undefined"
              },
              "description": "Optional extended description of the step",
              "fieldName": "description"
            },
            {
              "name": "icon",
              "type": {
                "text": "string | undefined"
              },
              "description": "Step Icon",
              "fieldName": "icon"
            },
            {
              "name": "icon-set",
              "type": {
                "text": "string | undefined"
              },
              "description": "Step icon set",
              "fieldName": "iconSet"
            },
            {
              "name": "variant",
              "type": {
                "text": "'pending' | 'info' | 'success' | 'warning' | 'danger' | undefined"
              },
              "description": "Describes the state of the current item",
              "fieldName": "variant"
            },
            {
              "name": "current",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Indicates if this item is the current active item.",
              "fieldName": "current"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "pf-progress-step",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PfProgressStep",
          "declaration": {
            "name": "PfProgressStep",
            "module": "pf-progress-stepper/pf-progress-step.js"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "pf-progress-step",
          "declaration": {
            "name": "PfProgressStep",
            "module": "pf-progress-stepper/pf-progress-step.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "pf-progress-stepper/pf-progress-stepper.js",
      "declarations": [
        {
          "kind": "class",
          "description": "A **progress stepper** displays a timeline of tasks in a workflow and tracks the user's current progress through this workflow.",
          "name": "PfProgressStepper",
          "cssProperties": [
            {
              "name": "--pf-c-progress-stepper--m-vertical--GridAutoFlow",
              "default": "row"
            },
            {
              "name": "--pf-c-progress-stepper--m-vertical--GridTemplateColumns",
              "default": "auto 1fr"
            },
            {
              "name": "--pf-c-progress-stepper--m-vertical__step-connector--before--Top",
              "default": "0"
            },
            {
              "name": "--pf-c-progress-stepper--m-vertical__step-connector--before--Left",
              "default": "calc(var(--pf-c-progress-stepper__step-icon--Width) / 2)"
            },
            {
              "name": "--pf-c-progress-stepper--m-vertical__step-connector--before--Width",
              "default": "auto"
            },
            {
              "name": "--pf-c-progress-stepper--m-vertical__step-connector--before--Height",
              "default": "100%"
            },
            {
              "name": "--pf-c-progress-stepper--m-vertical__step-connector--before--BorderRightWidth",
              "default": "var(--pf-global--BorderWidth--md, 2px)"
            },
            {
              "name": "--pf-c-progress-stepper--m-vertical__step-connector--before--BorderRightColor",
              "default": "var(--pf-global--BorderColor--100, #d2d2d2)"
            },
            {
              "name": "--pf-c-progress-stepper--m-vertical__step-connector--before--BorderBottomWidth",
              "default": "0"
            },
            {
              "name": "--pf-c-progress-stepper--m-vertical__step-connector--before--BorderBottomColor",
              "default": "transparent"
            },
            {
              "name": "--pf-c-progress-stepper--m-vertical__step-connector--before--Transform",
              "default": "translateX(-50%)"
            },
            {
              "name": "--pf-c-progress-stepper--m-vertical__step-main--MarginTop",
              "default": "var(--pf-global--spacer--xs, 0.25rem)"
            },
            {
              "name": "--pf-c-progress-stepper--m-vertical__step-main--MarginRight",
              "default": "0"
            },
            {
              "name": "--pf-c-progress-stepper--m-vertical__step-main--MarginBottom",
              "default": "var(--pf-global--spacer--xl, 2rem)"
            },
            {
              "name": "--pf-c-progress-stepper--m-vertical__step-main--MarginLeft",
              "default": "var(--pf-global--spacer--xs, 0.25rem)"
            },
            {
              "name": "--pf-c-progress-stepper--m-vertical--m-compact--GridTemplateColumns",
              "default": "1fr"
            },
            {
              "name": "--pf-c-progress-stepper--m-vertical--m-compact__step-connector--PaddingBottom",
              "default": "var(--pf-global--spacer--xs, 0.25rem)"
            },
            {
              "name": "--pf-c-progress-stepper--m-vertical--m-compact__step-connector--GridRow",
              "default": "auto"
            },
            {
              "name": "--pf-c-progress-stepper--m-vertical--m-compact__step-main--MarginRight",
              "default": "0"
            },
            {
              "name": "--pf-c-progress-stepper--m-vertical--m-center__step-main--MarginRight",
              "default": "0"
            },
            {
              "name": "--pf-c-progress-stepper--m-vertical--m-center__step-main--MarginLeft",
              "default": "0"
            },
            {
              "name": "--pf-c-progress-stepper--m-horizontal--GridAutoFlow",
              "default": "column"
            },
            {
              "name": "--pf-c-progress-stepper--m-horizontal--GridTemplateColumns",
              "default": "initial"
            },
            {
              "name": "--pf-c-progress-stepper--m-horizontal__step-connector--before--Top",
              "default": "calc(var(--pf-c-progress-stepper__step-icon--Height) / 2)"
            },
            {
              "name": "--pf-c-progress-stepper--m-horizontal__step-connector--before--Left",
              "default": "0"
            },
            {
              "name": "--pf-c-progress-stepper--m-horizontal__step-connector--before--Width",
              "default": "100%"
            },
            {
              "name": "--pf-c-progress-stepper--m-horizontal__step-connector--before--Height",
              "default": "auto"
            },
            {
              "name": "--pf-c-progress-stepper--m-horizontal__step-connector--before--BorderRightWidth",
              "default": "0"
            },
            {
              "name": "--pf-c-progress-stepper--m-horizontal__step-connector--before--BorderRightColor",
              "default": "unset"
            },
            {
              "name": "--pf-c-progress-stepper--m-horizontal__step-connector--before--BorderBottomWidth",
              "default": "var(--pf-global--BorderWidth--md, 2px)"
            },
            {
              "name": "--pf-c-progress-stepper--m-horizontal__step-connector--before--BorderBottomColor",
              "default": "var(--pf-global--BorderColor--100, #d2d2d2)"
            },
            {
              "name": "--pf-c-progress-stepper--m-horizontal__step-connector--before--Transform",
              "default": "translateY(-50%)"
            },
            {
              "name": "--pf-c-progress-stepper--m-horizontal__step-main--MarginTop",
              "default": "var(--pf-global--spacer--xs, 0.25rem)"
            },
            {
              "name": "--pf-c-progress-stepper--m-horizontal__step-main--MarginRight",
              "default": "var(--pf-global--spacer--xs, 0.25rem)"
            },
            {
              "name": "--pf-c-progress-stepper--m-horizontal__step-main--MarginBottom",
              "default": "0"
            },
            {
              "name": "--pf-c-progress-stepper--m-horizontal__step-main--MarginLeft",
              "default": "0"
            },
            {
              "name": "--pf-c-progress-stepper--m-horizontal--m-compact--GridTemplateColumns",
              "default": "repeat(auto-fill, 1.75rem)"
            },
            {
              "name": "--pf-c-progress-stepper--m-horizontal--m-compact__step-connector--PaddingBottom",
              "default": "0"
            },
            {
              "name": "--pf-c-progress-stepper--m-horizontal--m-compact__step-connector--GridRow",
              "default": "2"
            },
            {
              "name": "--pf-c-progress-stepper--m-compact--GridAutoFlow",
              "default": "row"
            },
            {
              "name": "--pf-c-progress-stepper--m-compact__step-main--MarginTop",
              "default": "0"
            },
            {
              "name": "--pf-c-progress-stepper--m-compact__step-main--MarginBottom",
              "default": "var(--pf-global--spacer--xs, 0.25rem)"
            },
            {
              "name": "--pf-c-progress-stepper--m-compact__step-connector--MinWidth",
              "default": "1.75rem"
            },
            {
              "name": "--pf-c-progress-stepper--m-compact__step-icon--Width",
              "default": "1.125rem"
            },
            {
              "name": "--pf-c-progress-stepper--m-compact__step-icon--FontSize",
              "default": "var(--pf-global--icon--FontSize--sm, 0.625rem)"
            },
            {
              "name": "--pf-c-progress-stepper--m-compact__step-title--FontSize",
              "default": "var(--pf-global--FontSize--sm, 0.875rem)"
            },
            {
              "name": "--pf-c-progress-stepper--m-compact__step-title--FontWeight",
              "default": "var(--pf-global--FontWeight--normal, 400)"
            },
            {
              "name": "--pf-c-progress-stepper--m-compact__pficon--MarginTop",
              "default": "2px"
            },
            {
              "name": "--pf-c-progress-stepper--m-compact__fa-exclamation-triangle--MarginTop",
              "default": "-3px"
            },
            {
              "name": "--pf-c-progress-stepper--m-center__step-connector--before--Left",
              "default": "50%"
            },
            {
              "name": "--pf-c-progress-stepper--m-center--GridTemplateColumns",
              "default": "1fr"
            },
            {
              "name": "--pf-c-progress-stepper--m-center__step-connector--JustifyContent",
              "default": "center"
            },
            {
              "name": "--pf-c-progress-stepper--m-center__step-main--MarginRight",
              "default": "var(--pf-global--spacer--xs, 0.25rem)"
            },
            {
              "name": "--pf-c-progress-stepper--m-center__step-main--MarginLeft",
              "default": "var(--pf-global--spacer--xs, 0.25rem)"
            },
            {
              "name": "--pf-c-progress-stepper--m-center__step-main--TextAlign",
              "default": "center"
            },
            {
              "name": "--pf-c-progress-stepper--m-center__step-description--MarginRight",
              "default": "0"
            },
            {
              "name": "--pf-c-progress-stepper--m-center__step-description--MarginLeft",
              "default": "0"
            },
            {
              "name": "--pf-c-progress-stepper--GridTemplateRows",
              "default": "auto 1fr"
            },
            {
              "name": "--pf-c-progress-stepper__step-connector--JustifyContent",
              "default": "start"
            },
            {
              "name": "--pf-c-progress-stepper__step-icon--ZIndex",
              "default": "var(--pf-global--ZIndex--xs, 100)"
            },
            {
              "name": "--pf-c-progress-stepper__step-icon--Width",
              "default": "1.75rem"
            },
            {
              "name": "--pf-c-progress-stepper__step-icon--Height",
              "default": "var(--pf-c-progress-stepper__step-icon--Width)"
            },
            {
              "name": "--pf-c-progress-stepper__step-icon--FontSize",
              "default": "var(--pf-global--FontSize--md, 1rem)"
            },
            {
              "name": "--pf-c-progress-stepper__step-icon--Color",
              "default": "var(--pf-global--Color--100, #151515)"
            },
            {
              "name": "--pf-c-progress-stepper__step-icon--BackgroundColor",
              "default": "var(--pf-global--BackgroundColor--light-200, #fafafa)"
            },
            {
              "name": "--pf-c-progress-stepper__step-icon--BorderWidth",
              "default": "var(--pf-global--BorderWidth--md, 2px)"
            },
            {
              "name": "--pf-c-progress-stepper__step-icon--BorderColor",
              "default": "var(--pf-global--BorderColor--100, #d2d2d2)"
            },
            {
              "name": "--pf-c-progress-stepper__pficon--MarginTop",
              "default": "3px"
            },
            {
              "name": "--pf-c-progress-stepper__fa-exclamation-triangle--MarginTop",
              "default": "-5px"
            },
            {
              "name": "--pf-c-progress-stepper__step-title--Color",
              "default": "var(--pf-global--Color--100, #151515)"
            },
            {
              "name": "--pf-c-progress-stepper__step-title--TextAlign",
              "default": "left"
            },
            {
              "name": "--pf-c-progress-stepper__step-title--FontSize",
              "default": "var(--pf-global--FontSize--md, 1rem)"
            },
            {
              "name": "--pf-c-progress-stepper__step-title--FontWeight",
              "default": "var(--pf-global--FontWeight--normal, 400)"
            },
            {
              "name": "--pf-c-progress-stepper__step--m-current__step-title--FontWeight",
              "default": "var(--pf-global--FontWeight--bold, 700)"
            },
            {
              "name": "--pf-c-progress-stepper__step--m-current__step-title--Color",
              "default": "var(--pf-global--Color--100, #151515)"
            },
            {
              "name": "--pf-c-progress-stepper__step--m-pending__step-title--Color",
              "default": "var(--pf-global--Color--200, #6a6e73)"
            },
            {
              "name": "--pf-c-progress-stepper__step--m-danger__step-title--Color",
              "default": "var(--pf-global--danger-color--100, #c9190b)"
            },
            {
              "name": "--pf-c-progress-stepper__step-title--m-help-text--TextDecorationColor",
              "default": "var(--pf-global--BorderColor--200, #8a8d90)"
            },
            {
              "name": "--pf-c-progress-stepper__step-title--m-help-text--TextDecorationThickness",
              "default": "var(--pf-global--BorderWidth--sm, 1px)"
            },
            {
              "name": "--pf-c-progress-stepper__step-title--m-help-text--TextUnderlineOffset",
              "default": "0.25rem"
            },
            {
              "name": "--pf-c-progress-stepper__step-title--m-help-text--hover--TextDecorationColor",
              "default": "var(--pf-global--Color--100, #151515)"
            },
            {
              "name": "--pf-c-progress-stepper__step-title--m-help-text--focus--TextDecorationColor",
              "default": "var(--pf-global--Color--100, #151515)"
            },
            {
              "name": "--pf-c-progress-stepper__step-title--m-help-text--hover--Color",
              "default": "var(--pf-global--Color--100, #151515)"
            },
            {
              "name": "--pf-c-progress-stepper__step-title--m-help-text--focus--Color",
              "default": "var(--pf-global--Color--100, #151515)"
            },
            {
              "name": "--pf-c-progress-stepper__step--m-danger__step-title--m-help-text--hover--Color",
              "default": "var(--pf-global--danger-color--200, #a30000)"
            },
            {
              "name": "--pf-c-progress-stepper__step--m-danger__step-title--m-help-text--focus--Color",
              "default": "var(--pf-global--danger-color--200, #a30000)"
            },
            {
              "name": "--pf-c-progress-stepper__step--m-danger__step-title--m-help-text--TextDecorationColor",
              "default": "var(--pf-global--danger-color--100, #c9190b)"
            },
            {
              "name": "--pf-c-progress-stepper__step--m-danger__step-title--m-help-text--hover--TextDecorationColor",
              "default": "var(--pf-global--danger-color--200, #a30000)"
            },
            {
              "name": "--pf-c-progress-stepper__step--m-danger__step-title--m-help-text--focus--TextDecoerationColor",
              "default": "var(--pf-global--danger-color--200, #a30000)"
            },
            {
              "name": "--pf-c-progress-stepper__step-description--MarginTop",
              "default": "var(--pf-global--spacer--xs, 0.25rem)"
            },
            {
              "name": "--pf-c-progress-stepper__step-description--FontSize",
              "default": "var(--pf-global--FontSize--sm, 0.875rem)"
            },
            {
              "name": "--pf-c-progress-stepper__step-description--Color",
              "default": "var(--pf-global--Color--200, #6a6e73)"
            },
            {
              "name": "--pf-c-progress-stepper__step-description--TextAlign",
              "default": "left"
            },
            {
              "name": "--pf-c-progress-stepper--GridAutoFlow",
              "default": "var(--pf-c-progress-stepper--m-vertical--GridAutoFlow)"
            },
            {
              "name": "--pf-c-progress-stepper--GridTemplateColumns",
              "default": "var(--pf-c-progress-stepper--m-vertical--GridTemplateColumns)"
            },
            {
              "name": "--pf-c-progress-stepper__step-connector--before--Top",
              "default": "var(--pf-c-progress-stepper--m-vertical__step-connector--before--Top)"
            },
            {
              "name": "--pf-c-progress-stepper__step-connector--before--Left",
              "default": "var(--pf-c-progress-stepper--m-vertical__step-connector--before--Left)"
            },
            {
              "name": "--pf-c-progress-stepper__step-connector--before--Width",
              "default": "var(--pf-c-progress-stepper--m-vertical__step-connector--before--Width)"
            },
            {
              "name": "--pf-c-progress-stepper__step-connector--before--Height",
              "default": "var(--pf-c-progress-stepper--m-vertical__step-connector--before--Height)"
            },
            {
              "name": "--pf-c-progress-stepper__step-connector--before--BorderRightWidth",
              "default": "var(--pf-c-progress-stepper--m-vertical__step-connector--before--BorderRightWidth)"
            },
            {
              "name": "--pf-c-progress-stepper__step-connector--before--BorderRightColor",
              "default": "var(--pf-c-progress-stepper--m-vertical__step-connector--before--BorderRightColor)"
            },
            {
              "name": "--pf-c-progress-stepper__step-connector--before--BorderBottomWidth",
              "default": "var(--pf-c-progress-stepper--m-vertical__step-connector--before--BorderBottomWidth)"
            },
            {
              "name": "--pf-c-progress-stepper__step-connector--before--BorderBottomColor",
              "default": "var(--pf-c-progress-stepper--m-vertical__step-connector--before--BorderBottomColor)"
            },
            {
              "name": "--pf-c-progress-stepper__step-connector--before--Transform",
              "default": "var(--pf-c-progress-stepper--m-vertical__step-connector--before--Transform)"
            },
            {
              "name": "--pf-c-progress-stepper__step-main--MarginTop",
              "default": "var(--pf-c-progress-stepper--m-vertical__step-main--MarginTop)"
            },
            {
              "name": "--pf-c-progress-stepper__step-main--MarginRight",
              "default": "var(--pf-c-progress-stepper--m-vertical__step-main--MarginRight)"
            },
            {
              "name": "--pf-c-progress-stepper__step-main--MarginBottom",
              "default": "var(--pf-c-progress-stepper--m-vertical__step-main--MarginBottom)"
            },
            {
              "name": "--pf-c-progress-stepper__step-main--MarginLeft",
              "default": "var(--pf-c-progress-stepper--m-vertical__step-main--MarginLeft)"
            },
            {
              "name": "--pf-c-progress-stepper--m-compact--GridTemplateColumns",
              "default": "var(--pf-c-progress-stepper--m-vertical--m-compact--GridTemplateColumns)"
            },
            {
              "name": "--pf-c-progress-stepper--m-compact__step-connector--GridRow",
              "default": "var(--pf-c-progress-stepper--m-vertical--m-compact__step-connector--GridRow)"
            },
            {
              "name": "--pf-c-progress-stepper--m-compact__step-connector--PaddingBottom",
              "default": "var(--pf-c-progress-stepper--m-vertical--m-compact__step-connector--PaddingBottom)"
            },
            {
              "name": "--pf-c-progress-stepper--m-center__step-connector--before--Content",
              "default": "none"
            },
            {
              "name": "--pf-c-progress-stepper--m-center__step-main--before--Content",
              "default": "''"
            },
            {
              "name": "--pf-c-progress-stepper__step-connector--before--Content",
              "default": "''"
            },
            {
              "name": "--pf-c-progress-stepper__step-main--before--Content",
              "default": "none"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "childTagName",
              "type": {
                "text": "string"
              },
              "privacy": "protected",
              "static": true,
              "default": "'pf-progress-step'"
            },
            {
              "kind": "field",
              "name": "formAssociated",
              "type": {
                "text": "boolean"
              },
              "static": true,
              "default": "true"
            },
            {
              "kind": "field",
              "name": "vertical",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Whether to use the vertical layout",
              "attribute": "vertical",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "center",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Whether to use the center alignment",
              "attribute": "center",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "compact",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Whether to use the compact layout",
              "attribute": "compact",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "#internals",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "#mo",
              "privacy": "private",
              "default": "new MutationObserver(() => this.#onMutation())"
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "number"
              },
              "readonly": true
            },
            {
              "kind": "method",
              "name": "#onMutation",
              "privacy": "private"
            }
          ],
          "attributes": [
            {
              "name": "vertical",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Whether to use the vertical layout",
              "fieldName": "vertical"
            },
            {
              "name": "center",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Whether to use the center alignment",
              "fieldName": "center"
            },
            {
              "name": "compact",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Whether to use the compact layout",
              "fieldName": "compact"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "pf-progress-stepper",
          "customElement": true,
          "demos": [
            {
              "url": "https://patternflyelements.org/components/progress-stepper/demo/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-progress-stepper/demo/pf-progress-stepper.html"
              }
            },
            {
              "url": "https://patternflyelements.org/components/progress-stepper/demo/alignment/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-progress-stepper/demo/alignment.html"
              }
            },
            {
              "url": "https://patternflyelements.org/components/progress-stepper/demo/compact/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-progress-stepper/demo/compact.html"
              }
            },
            {
              "url": "https://patternflyelements.org/components/progress-stepper/demo/custom-icons/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-progress-stepper/demo/custom-icons.html"
              }
            },
            {
              "url": "https://patternflyelements.org/components/progress-stepper/demo/danger/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-progress-stepper/demo/danger.html"
              }
            },
            {
              "url": "https://patternflyelements.org/components/progress-stepper/demo/info/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-progress-stepper/demo/info.html"
              }
            },
            {
              "url": "https://patternflyelements.org/components/progress-stepper/demo/step-descriptions/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-progress-stepper/demo/step-descriptions.html"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PfProgressStepper",
          "declaration": {
            "name": "PfProgressStepper",
            "module": "pf-progress-stepper/pf-progress-stepper.js"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "pf-progress-stepper",
          "declaration": {
            "name": "PfProgressStepper",
            "module": "pf-progress-stepper/pf-progress-stepper.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "pf-select/pf-option-group.js",
      "declarations": [
        {
          "kind": "class",
          "description": "Group of options within a listbox",
          "name": "PfOptionGroup",
          "slots": [
            {
              "description": "`<pf-option>` or `<hr>` elements",
              "name": ""
            },
            {
              "description": "Group label. Overrides the `label` attribute.",
              "name": "label"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string | undefined"
              },
              "description": "Group description. Overridden by `label` slot.",
              "attribute": "label"
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "whether group is disabled",
              "attribute": "disabled",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "#internals",
              "privacy": "private"
            }
          ],
          "attributes": [
            {
              "name": "label",
              "type": {
                "text": "string | undefined"
              },
              "description": "Group description. Overridden by `label` slot.",
              "fieldName": "label"
            },
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "whether group is disabled",
              "fieldName": "disabled"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "pf-option-group",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PfOptionGroup",
          "declaration": {
            "name": "PfOptionGroup",
            "module": "pf-select/pf-option-group.js"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "pf-option-group",
          "declaration": {
            "name": "PfOptionGroup",
            "module": "pf-select/pf-option-group.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "pf-select/pf-option.js",
      "declarations": [
        {
          "kind": "class",
          "description": "Option within a listbox",
          "name": "PfOption",
          "slots": [
            {
              "description": "option text",
              "name": ""
            },
            {
              "description": "optional icon",
              "name": "icon"
            },
            {
              "description": "optional description",
              "name": "description"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "whether option is disabled",
              "attribute": "disabled",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "value",
              "description": "form value for this option",
              "attribute": "value",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "selected",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "whether option is selected",
              "attribute": "selected",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "active",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "whether option is active descendant",
              "attribute": "active",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "description",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Optional option description; overridden by description slot.",
              "attribute": "description"
            },
            {
              "kind": "field",
              "name": "_slottedText",
              "type": {
                "text": "Node[]"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "posInSet",
              "description": "this option's position relative to the other options"
            },
            {
              "kind": "field",
              "name": "setSize",
              "description": "total number of options"
            },
            {
              "kind": "field",
              "name": "#value",
              "privacy": "private",
              "type": {
                "text": "string | undefined"
              }
            },
            {
              "kind": "field",
              "name": "#internals",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "selectedChanged",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "disabledChanged",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "optionText",
              "type": {
                "text": "string"
              },
              "description": "text content within option (used for filtering)",
              "readonly": true
            }
          ],
          "attributes": [
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "whether option is disabled",
              "fieldName": "disabled"
            },
            {
              "name": "value",
              "description": "form value for this option",
              "fieldName": "value"
            },
            {
              "name": "selected",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "whether option is selected",
              "fieldName": "selected"
            },
            {
              "name": "active",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "whether option is active descendant",
              "fieldName": "active"
            },
            {
              "name": "description",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Optional option description; overridden by description slot.",
              "fieldName": "description"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "pf-option",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PfOption",
          "declaration": {
            "name": "PfOption",
            "module": "pf-select/pf-option.js"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "pf-option",
          "declaration": {
            "name": "PfOption",
            "module": "pf-select/pf-option.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "pf-select/pf-select.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "PfSelectChangeEvent",
          "superclass": {
            "name": "Event",
            "module": "global:"
          }
        },
        {
          "kind": "class",
          "description": "A select list enables users to select one or more items from a list.\n\nA select component consists of a toggle control to open and close a menu of actions or links.\nSelects differ from dropdowns in that they persist selection,\nwhereas dropdowns are typically used to present a list of actions or links.",
          "name": "PfSelect",
          "cssProperties": [
            {
              "name": "--pf-c-select__toggle--PaddingTop",
              "default": "var(--pf-global--spacer--form-element, 0.375rem)"
            },
            {
              "name": "--pf-c-select__toggle--PaddingRight",
              "default": "var(--pf-global--spacer--sm, 0.5rem)"
            },
            {
              "name": "--pf-c-select__toggle--PaddingBottom",
              "default": "var(--pf-global--spacer--form-element, 0.375rem)"
            },
            {
              "name": "--pf-c-select__toggle--PaddingLeft",
              "default": "var(--pf-global--spacer--sm, 0.5rem)"
            },
            {
              "name": "--pf-c-select__toggle--MinWidth",
              "default": "var(--pf-global--target-size--MinWidth, 44px)"
            },
            {
              "name": "--pf-c-select__toggle--FontSize",
              "default": "var(--pf-global--FontSize--md, 1rem)"
            },
            {
              "name": "--pf-c-select__toggle--FontWeight",
              "default": "var(--pf-global--FontWeight--normal, 400)"
            },
            {
              "name": "--pf-c-select__toggle--LineHeight",
              "default": "var(--pf-global--LineHeight--md, 1.5)"
            },
            {
              "name": "--pf-c-select__toggle--BackgroundColor",
              "default": "var(--pf-global--BackgroundColor--100, #fff)"
            },
            {
              "name": "--pf-c-select__toggle--before--BorderTopWidth",
              "default": "var(--pf-global--BorderWidth--sm, 1px)"
            },
            {
              "name": "--pf-c-select__toggle--before--BorderRightWidth",
              "default": "var(--pf-global--BorderWidth--sm, 1px)"
            },
            {
              "name": "--pf-c-select__toggle--before--BorderBottomWidth",
              "default": "var(--pf-global--BorderWidth--sm, 1px)"
            },
            {
              "name": "--pf-c-select__toggle--before--BorderLeftWidth",
              "default": "var(--pf-global--BorderWidth--sm, 1px)"
            },
            {
              "name": "--pf-c-select__toggle--before--BorderWidth",
              "default": "initial"
            },
            {
              "name": "--pf-c-select__toggle--before--BorderTopColor",
              "default": "var(--pf-global--BorderColor--300, #f0f0f0)"
            },
            {
              "name": "--pf-c-select__toggle--before--BorderRightColor",
              "default": "var(--pf-global--BorderColor--300, #f0f0f0)"
            },
            {
              "name": "--pf-c-select__toggle--before--BorderBottomColor",
              "default": "var(--pf-global--BorderColor--200, #8a8d90)"
            },
            {
              "name": "--pf-c-select__toggle--before--BorderLeftColor",
              "default": "var(--pf-global--BorderColor--300, #f0f0f0)"
            },
            {
              "name": "--pf-c-select__toggle--Color",
              "default": "var(--pf-global--Color--100, #151515)"
            },
            {
              "name": "--pf-c-select__toggle--hover--before--BorderBottomColor",
              "default": "var(--pf-global--active-color--100, #06c)"
            },
            {
              "name": "--pf-c-select__toggle--focus--before--BorderBottomColor",
              "default": "var(--pf-global--active-color--100, #06c)"
            },
            {
              "name": "--pf-c-select__toggle--focus--before--BorderBottomWidth",
              "default": "var(--pf-global--BorderWidth--md, 2px)"
            },
            {
              "name": "--pf-c-select__toggle--active--before--BorderBottomColor",
              "default": "var(--pf-global--active-color--100, #06c)"
            },
            {
              "name": "--pf-c-select__toggle--active--before--BorderBottomWidth",
              "default": "var(--pf-global--BorderWidth--md, 2px)"
            },
            {
              "name": "--pf-c-select__toggle--m-expanded--before--BorderBottomColor",
              "default": "var(--pf-global--active-color--100, #06c)"
            },
            {
              "name": "--pf-c-select__toggle--m-expanded--before--BorderBottomWidth",
              "default": "var(--pf-global--BorderWidth--md, 2px)"
            },
            {
              "name": "--pf-c-select__toggle--disabled--BackgroundColor",
              "default": "var(--pf-global--disabled-color--300, #f0f0f0)"
            },
            {
              "name": "--pf-c-select__toggle--m-plain--before--BorderColor",
              "default": "transparent"
            },
            {
              "name": "--pf-c-select__toggle--m-placeholder--Color",
              "default": "transparent"
            },
            {
              "name": "--pf-c-select--m-invalid__toggle--before--BorderBottomColor",
              "default": "var(--pf-global--danger-color--100, #c9190b)"
            },
            {
              "name": "--pf-c-select--m-invalid__toggle--before--BorderBottomWidth",
              "default": "var(--pf-global--BorderWidth--md, 2px)"
            },
            {
              "name": "--pf-c-select--m-invalid__toggle--hover--before--BorderBottomColor",
              "default": "var(--pf-global--danger-color--100, #c9190b)"
            },
            {
              "name": "--pf-c-select--m-invalid__toggle--focus--before--BorderBottomColor",
              "default": "var(--pf-global--danger-color--100, #c9190b)"
            },
            {
              "name": "--pf-c-select--m-invalid__toggle--active--before--BorderBottomColor",
              "default": "var(--pf-global--danger-color--100, #c9190b)"
            },
            {
              "name": "--pf-c-select--m-invalid__toggle--m-expanded--before--BorderBottomColor",
              "default": "var(--pf-global--danger-color--100, #c9190b)"
            },
            {
              "name": "--pf-c-select--m-invalid__toggle-status-icon--Color",
              "default": "var(--pf-global--danger-color--100, #c9190b)"
            },
            {
              "name": "--pf-c-select--m-success__toggle--before--BorderBottomColor",
              "default": "var(--pf-global--success-color--100, #3e8635)"
            },
            {
              "name": "--pf-c-select--m-success__toggle--before--BorderBottomWidth",
              "default": "var(--pf-global--BorderWidth--md, 2px)"
            },
            {
              "name": "--pf-c-select--m-success__toggle--hover--before--BorderBottomColor",
              "default": "var(--pf-global--success-color--100, #3e8635)"
            },
            {
              "name": "--pf-c-select--m-success__toggle--focus--before--BorderBottomColor",
              "default": "var(--pf-global--success-color--100, #3e8635)"
            },
            {
              "name": "--pf-c-select--m-success__toggle--active--before--BorderBottomColor",
              "default": "var(--pf-global--success-color--100, #3e8635)"
            },
            {
              "name": "--pf-c-select--m-success__toggle--m-expanded--before--BorderBottomColor",
              "default": "var(--pf-global--success-color--100, #3e8635)"
            },
            {
              "name": "--pf-c-select--m-success__toggle-status-icon--Color",
              "default": "var(--pf-global--success-color--100, #3e8635)"
            },
            {
              "name": "--pf-c-select--m-warning__toggle--before--BorderBottomColor",
              "default": "var(--pf-global--warning-color--100, #f0ab00)"
            },
            {
              "name": "--pf-c-select--m-warning__toggle--before--BorderBottomWidth",
              "default": "var(--pf-global--BorderWidth--md, 2px)"
            },
            {
              "name": "--pf-c-select--m-warning__toggle--hover--before--BorderBottomColor",
              "default": "var(--pf-global--warning-color--100, #f0ab00)"
            },
            {
              "name": "--pf-c-select--m-warning__toggle--focus--before--BorderBottomColor",
              "default": "var(--pf-global--warning-color--100, #f0ab00)"
            },
            {
              "name": "--pf-c-select--m-warning__toggle--active--before--BorderBottomColor",
              "default": "var(--pf-global--warning-color--100, #f0ab00)"
            },
            {
              "name": "--pf-c-select--m-warning__toggle--m-expanded--before--BorderBottomColor",
              "default": "var(--pf-global--warning-color--100, #f0ab00)"
            },
            {
              "name": "--pf-c-select--m-warning__toggle-status-icon--Color",
              "default": "var(--pf-global--warning-color--100, #f0ab00)"
            },
            {
              "name": "--pf-c-select__toggle-wrapper--not-last-child--MarginRight",
              "default": "var(--pf-global--spacer--xs, 0.25rem)"
            },
            {
              "name": "--pf-c-select__toggle-wrapper--MaxWidth",
              "default": "calc(100% - var(--pf-global--spacer--lg, 1.5rem))"
            },
            {
              "name": "--pf-c-select__toggle-wrapper--c-chip-group--MarginTop",
              "default": "0.3125rem"
            },
            {
              "name": "--pf-c-select__toggle-wrapper--c-chip-group--MarginBottom",
              "default": "0.3125rem"
            },
            {
              "name": "--pf-c-select__toggle-typeahead--FlexBasis",
              "default": "10em"
            },
            {
              "name": "--pf-c-select__toggle-typeahead--BackgroundColor",
              "default": "transparent"
            },
            {
              "name": "--pf-c-select__toggle-typeahead--BorderTop",
              "default": "var(--pf-global--BorderWidth--sm, 1px) solid transparent"
            },
            {
              "name": "--pf-c-select__toggle-typeahead--BorderRight",
              "default": "none"
            },
            {
              "name": "--pf-c-select__toggle-typeahead--BorderLeft",
              "default": "none"
            },
            {
              "name": "--pf-c-select__toggle-typeahead--MinWidth",
              "default": "7.5rem"
            },
            {
              "name": "--pf-c-select__toggle-typeahead--focus--PaddingBottom",
              "default": "calc(var(--pf-global--spacer--form-element, 0.375rem) - var(--pf-global--BorderWidth--md))"
            },
            {
              "name": "--pf-c-select__toggle--m-placeholder__toggle-text--Color",
              "default": "var(--pf-global--Color--dark-200, #6a6e73)"
            },
            {
              "name": "--pf-c-select__toggle-icon--toggle-text--MarginLeft",
              "default": "var(--pf-global--spacer--xs, 0.25rem)"
            },
            {
              "name": "--pf-c-select__toggle-badge--PaddingLeft",
              "default": "var(--pf-global--spacer--sm, 0.5rem)"
            },
            {
              "name": "--pf-c-select__toggle-status-icon--MarginLeft",
              "default": "var(--pf-global--spacer--xs, 0.25rem)"
            },
            {
              "name": "--pf-c-select__toggle-status-icon--Color",
              "default": "var(--pf-global--Color--100, #151515)"
            },
            {
              "name": "--pf-c-select__toggle-arrow--MarginLeft",
              "default": "var(--pf-global--spacer--md, 1rem)"
            },
            {
              "name": "--pf-c-select__toggle-arrow--MarginRight",
              "default": "var(--pf-global--spacer--sm, 0.5rem)"
            },
            {
              "name": "--pf-c-select__toggle-arrow--with-clear--MarginLeft",
              "default": "var(--pf-global--spacer--sm, 0.5rem)"
            },
            {
              "name": "--pf-c-select__toggle-arrow--m-top--m-expanded__toggle-arrow--Rotate",
              "default": "180deg"
            },
            {
              "name": "--pf-c-select--m-plain__toggle-arrow--Color",
              "default": "var(--pf-global--Color--200, #6a6e73)"
            },
            {
              "name": "--pf-c-select--m-plain--hover__toggle-arrow--Color",
              "default": "var(--pf-global--Color--100, #151515)"
            },
            {
              "name": "--pf-c-select__toggle-clear--PaddingRight",
              "default": "var(--pf-global--spacer--sm, 0.5rem)"
            },
            {
              "name": "--pf-c-select__toggle-clear--PaddingLeft",
              "default": "var(--pf-global--spacer--md, 1rem)"
            },
            {
              "name": "--pf-c-select__toggle-clear--toggle-button--PaddingLeft",
              "default": "var(--pf-global--spacer--sm, 0.5rem)"
            },
            {
              "name": "--pf-c-select__toggle-button--Color",
              "default": "var(--pf-global--Color--100, #151515)"
            },
            {
              "name": "--pf-c-select__menu--BackgroundColor",
              "default": "var(--pf-global--BackgroundColor--light-100, #fff)"
            },
            {
              "name": "--pf-c-select__menu--BoxShadow",
              "default": "var(--pf-global--BoxShadow--md, 0 0.25rem 0.5rem 0rem rgba(3, 3, 3, 0.12), 0 0 0.25rem 0 rgba(3, 3, 3, 0.06))"
            },
            {
              "name": "--pf-c-select__menu--PaddingTop",
              "default": "var(--pf-global--spacer--sm, 0.5rem)"
            },
            {
              "name": "--pf-c-select__menu--PaddingBottom",
              "default": "var(--pf-global--spacer--sm, 0.5rem)"
            },
            {
              "name": "--pf-c-select__menu--Top",
              "default": "calc(100% + var(--pf-global--spacer--xs, 0.25rem))"
            },
            {
              "name": "--pf-c-select__menu--ZIndex",
              "default": "var(--pf-global--ZIndex--sm, 200)"
            },
            {
              "name": "--pf-c-select__menu--Width",
              "default": "auto"
            },
            {
              "name": "--pf-c-select__menu--MinWidth",
              "default": "100%"
            },
            {
              "name": "--pf-c-select__menu--m-top--TranslateY",
              "default": "calc(-100% - var(--pf-global--spacer--xs, 0.25rem))"
            },
            {
              "name": "--pf-c-select__list-item--m-loading--PaddingTop",
              "default": "var(--pf-global--spacer--sm, 0.5rem)"
            },
            {
              "name": "--pf-c-select__menu-item--PaddingTop",
              "default": "var(--pf-global--spacer--sm, 0.5rem)"
            },
            {
              "name": "--pf-c-select__menu-item--PaddingRight",
              "default": "var(--pf-global--spacer--md, 1rem)"
            },
            {
              "name": "--pf-c-select__menu-item--m-selected--PaddingRight",
              "default": "var(--pf-global--spacer--2xl, 3rem)"
            },
            {
              "name": "--pf-c-select__menu-item--PaddingBottom",
              "default": "var(--pf-global--spacer--sm, 0.5rem)"
            },
            {
              "name": "--pf-c-select__menu-item--PaddingLeft",
              "default": "var(--pf-global--spacer--md, 1rem)"
            },
            {
              "name": "--pf-c-select__menu-item--FontSize",
              "default": "var(--pf-global--FontSize--md, 1rem)"
            },
            {
              "name": "--pf-c-select__menu-item--FontWeight",
              "default": "var(--pf-global--FontWeight--normal, 400)"
            },
            {
              "name": "--pf-c-select__menu-item--LineHeight",
              "default": "var(--pf-global--LineHeight--md, 1.5)"
            },
            {
              "name": "--pf-c-select__menu-item--Color",
              "default": "var(--pf-global--Color--dark-100, #151515)"
            },
            {
              "name": "--pf-c-select__menu-item--disabled--Color",
              "default": "var(--pf-global--Color--dark-200, #6a6e73)"
            },
            {
              "name": "--pf-c-select__menu-item--Width",
              "default": "100%"
            },
            {
              "name": "--pf-c-select__menu-item--hover--BackgroundColor",
              "default": "var(--pf-global--BackgroundColor--light-300, #f0f0f0)"
            },
            {
              "name": "--pf-c-select__menu-item--focus--BackgroundColor",
              "default": "var(--pf-global--BackgroundColor--light-300, #f0f0f0)"
            },
            {
              "name": "--pf-c-select__menu-item--disabled--BackgroundColor",
              "default": "transparent"
            },
            {
              "name": "--pf-c-select__menu-item--m-link--Width",
              "default": "auto"
            },
            {
              "name": "--pf-c-select__menu-item--m-link--hover--BackgroundColor",
              "default": "transparent"
            },
            {
              "name": "--pf-c-select__menu-item--m-link--focus--BackgroundColor",
              "default": "transparent"
            },
            {
              "name": "--pf-c-select__menu-item--m-action--Color",
              "default": "var(--pf-global--Color--200, #6a6e73)"
            },
            {
              "name": "--pf-c-select__menu-item--m-action--hover--Color",
              "default": "var(--pf-global--Color--100, #151515)"
            },
            {
              "name": "--pf-c-select__menu-item--m-action--focus--Color",
              "default": "var(--pf-global--Color--100, #151515)"
            },
            {
              "name": "--pf-c-select__menu-item--m-action--disabled--Color",
              "default": "var(--pf-global--disabled-color--200, #d2d2d2)"
            },
            {
              "name": "--pf-c-select__menu-item--m-action--Width",
              "default": "auto"
            },
            {
              "name": "--pf-c-select__menu-item--m-action--FontSize",
              "default": "var(--pf-global--icon--FontSize--sm, 0.625rem)"
            },
            {
              "name": "--pf-c-select__menu-item--m-action--hover--BackgroundColor",
              "default": "transparent"
            },
            {
              "name": "--pf-c-select__menu-item--m-action--focus--BackgroundColor",
              "default": "transparent"
            },
            {
              "name": "--pf-c-select__menu-item--hover__menu-item--m-action--Color",
              "default": "var(--pf-global--Color--200, #6a6e73)"
            },
            {
              "name": "--pf-c-select__menu-item--m-favorite-action--Color",
              "default": "var(--pf-global--Color--200, #6a6e73)"
            },
            {
              "name": "--pf-c-select__menu-item--m-favorite-action--hover--Color",
              "default": "var(--pf-global--Color--100, #151515)"
            },
            {
              "name": "--pf-c-select__menu-item--m-favorite-action--focus--Color",
              "default": "var(--pf-global--Color--100, #151515)"
            },
            {
              "name": "--pf-c-select__menu-wrapper--m-favorite__menu-item--m-favorite-action--Color",
              "default": "var(--pf-global--palette--gold-400, #f0ab00)"
            },
            {
              "name": "--pf-c-select__menu-wrapper--m-favorite__menu-item--m-favorite-action--hover--Color",
              "default": "var(--pf-global--palette--gold-500, #c58c00)"
            },
            {
              "name": "--pf-c-select__menu-wrapper--m-favorite__menu-item--m-favorite-action--focus--Color",
              "default": "var(--pf-global--palette--gold-500, #c58c00)"
            },
            {
              "name": "--pf-c-select__menu-item--m-load--Color",
              "default": "var(--pf-global--link--Color, #06c)"
            },
            {
              "name": "--pf-c-select__menu-item-icon--Color",
              "default": "var(--pf-global--active-color--100, #06c)"
            },
            {
              "name": "--pf-c-select__menu-item-icon--FontSize",
              "default": "var(--pf-global--icon--FontSize--sm, 0.625rem)"
            },
            {
              "name": "--pf-c-select__menu-item-icon--Right",
              "default": "var(--pf-global--spacer--md, 1rem)"
            },
            {
              "name": "--pf-c-select__menu-item-icon--Top",
              "default": "50%"
            },
            {
              "name": "--pf-c-select__menu-item-icon--TranslateY",
              "default": "-50%"
            },
            {
              "name": "--pf-c-select__menu-item-action-icon--MinHeight",
              "default": "calc(var(--pf-c-select__menu-item--FontSize) * var(--pf-c-select__menu-item--LineHeight))"
            },
            {
              "name": "--pf-c-select__menu-item--match--FontWeight",
              "default": "var(--pf-global--FontWeight--bold, 700)"
            },
            {
              "name": "--pf-c-select__menu-search--PaddingTop",
              "default": "var(--pf-global--spacer--sm, 0.5rem)"
            },
            {
              "name": "--pf-c-select__menu-search--PaddingRight",
              "default": "var(--pf-c-select__menu-item--PaddingRight)"
            },
            {
              "name": "--pf-c-select__menu-search--PaddingBottom",
              "default": "var(--pf-global--spacer--md, 1rem)"
            },
            {
              "name": "--pf-c-select__menu-search--PaddingLeft",
              "default": "var(--pf-c-select__menu-item--PaddingLeft)"
            },
            {
              "name": "--pf-c-select__menu-group--menu-group--PaddingTop",
              "default": "var(--pf-global--spacer--sm, 0.5rem)"
            },
            {
              "name": "--pf-c-select__menu-group-title--PaddingTop",
              "default": "var(--pf-c-select__menu-item--PaddingTop)"
            },
            {
              "name": "--pf-c-select__menu-group-title--PaddingRight",
              "default": "var(--pf-c-select__menu-item--PaddingRight)"
            },
            {
              "name": "--pf-c-select__menu-group-title--PaddingBottom",
              "default": "var(--pf-c-select__menu-item--PaddingBottom)"
            },
            {
              "name": "--pf-c-select__menu-group-title--PaddingLeft",
              "default": "var(--pf-c-select__menu-item--PaddingLeft)"
            },
            {
              "name": "--pf-c-select__menu-group-title--FontSize",
              "default": "var(--pf-global--FontSize--xs, 0.75rem)"
            },
            {
              "name": "--pf-c-select__menu-group-title--FontWeight",
              "default": "var(--pf-global--FontWeight--normal, 400)"
            },
            {
              "name": "--pf-c-select__menu-group-title--Color",
              "default": "var(--pf-global--Color--dark-200, #6a6e73)"
            },
            {
              "name": "--pf-c-select__menu-item-count--MarginLeft",
              "default": "var(--pf-global--spacer--md, 1rem)"
            },
            {
              "name": "--pf-c-select__menu-item-count--FontSize",
              "default": "var(--pf-global--FontSize--sm, 0.875rem)"
            },
            {
              "name": "--pf-c-select__menu-item-count--Color",
              "default": "var(--pf-global--Color--200, #6a6e73)"
            },
            {
              "name": "--pf-c-select__menu-item--disabled__menu-item-count--Color",
              "default": "var(--pf-global--Color--dark-200, #6a6e73)"
            },
            {
              "name": "--pf-c-select__menu-item-description--FontSize",
              "default": "var(--pf-global--FontSize--xs, 0.75rem)"
            },
            {
              "name": "--pf-c-select__menu-item-description--Color",
              "default": "var(--pf-global--Color--200, #6a6e73)"
            },
            {
              "name": "--pf-c-select__menu-item-description--PaddingRight",
              "default": "var(--pf-c-select__menu-item--PaddingRight)"
            },
            {
              "name": "--pf-c-select__menu-item-main--PaddingRight",
              "default": "var(--pf-c-select__menu-item--PaddingRight)"
            },
            {
              "name": "--pf-c-select__menu-item--m-selected__menu-item-main--PaddingRight",
              "default": "var(--pf-c-select__menu-item--m-selected--PaddingRight)"
            },
            {
              "name": "--pf-c-select__menu-footer--BoxShadow",
              "default": "var(--pf-global--BoxShadow--sm-top, 0 -0.125rem 0.25rem -0.0625rem rgba(3, 3, 3, 0.16))"
            },
            {
              "name": "--pf-c-select__menu-footer--PaddingTop",
              "default": "var(--pf-global--spacer--md, 1rem)"
            },
            {
              "name": "--pf-c-select__menu-footer--PaddingRight",
              "default": "var(--pf-global--spacer--md, 1rem)"
            },
            {
              "name": "--pf-c-select__menu-footer--PaddingBottom",
              "default": "var(--pf-global--spacer--md, 1rem)"
            },
            {
              "name": "--pf-c-select__menu-footer--PaddingLeft",
              "default": "var(--pf-global--spacer--md, 1rem)"
            },
            {
              "name": "--pf-c-select__menu-footer--MarginTop",
              "default": "var(--pf-global--spacer--sm, 0.5rem)"
            },
            {
              "name": "--pf-c-select__menu-footer--MarginBottom",
              "default": "calc(var(--pf-global--spacer--sm, 0.5rem) * -1)"
            },
            {
              "name": "--pf-c-select-menu--c-divider--MarginTop",
              "default": "var(--pf-global--spacer--sm, 0.5rem)"
            },
            {
              "name": "--pf-c-select-menu--c-divider--MarginBottom",
              "default": "var(--pf-global--spacer--sm, 0.5rem)"
            }
          ],
          "slots": [
            {
              "description": "insert `pf-option` and/or `pf-option-groups` here",
              "name": ""
            },
            {
              "description": "placeholder text for the select. Overrides the `placeholder` attribute.",
              "name": "placeholder"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "formAssociated",
              "type": {
                "text": "boolean"
              },
              "static": true,
              "default": "true",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "shadowRootOptions",
              "type": {
                "text": "ShadowRootInit"
              },
              "static": true,
              "default": "{\n    ...LitElement.shadowRootOptions,\n    delegatesFocus: true,\n  }",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "variant",
              "type": {
                "text": "'single' | 'checkbox' | 'typeahead' | 'typeaheadmulti'"
              },
              "default": "'single'",
              "description": "Variant of rendered Select",
              "attribute": "variant"
            },
            {
              "kind": "field",
              "name": "accessibleLabel",
              "type": {
                "text": "string | undefined"
              },
              "description": "Accessible label for the select",
              "attribute": "accessible-label"
            },
            {
              "kind": "field",
              "name": "accessibleCurrentSelectionsLabel",
              "type": {
                "text": "string"
              },
              "default": "'Current selections'",
              "description": "Accessible label for chip group used to describe chips",
              "attribute": "accessible-current-selections-label"
            },
            {
              "kind": "field",
              "name": "itemsSelectedText",
              "type": {
                "text": "string"
              },
              "default": "'items selected'",
              "description": "Multi listbox button text",
              "attribute": "items-selected-text"
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Whether the select is disabled",
              "attribute": "disabled",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "expanded",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Whether the select listbox is expanded",
              "attribute": "expanded",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "enableFlip",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Enable to flip listbox when it reaches boundary",
              "attribute": "enable-flip"
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "string | undefined"
              },
              "description": "Current form value",
              "attribute": "value"
            },
            {
              "kind": "field",
              "name": "placeholder",
              "type": {
                "text": "string | undefined"
              },
              "description": "Placeholder entry. Overridden by the `placeholder` slot",
              "attribute": "placeholder"
            },
            {
              "kind": "field",
              "name": "position",
              "type": {
                "text": "Placement"
              },
              "default": "'bottom'",
              "description": "Indicates initial popover position.\nThere are 6 options: `bottom`, `top`, `top-start`, `top-end`, `bottom-start`, `bottom-end`.\nDefault is `bottom`.",
              "attribute": "position",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "checkboxSelectionBadgeHidden",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Flag indicating if selection badge should be hidden for checkbox variant,default false",
              "attribute": "checkbox-selection-badge-hidden"
            },
            {
              "kind": "field",
              "name": "_chipGroup",
              "type": {
                "text": "PfChipGroup | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "_toggleInput",
              "type": {
                "text": "HTMLInputElement | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "_toggleButton",
              "type": {
                "text": "HTMLButtonElement | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "_listbox",
              "type": {
                "text": "HTMLElement | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "_listboxContainer",
              "type": {
                "text": "HTMLElement | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "_placeholder",
              "type": {
                "text": "PfOption | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "#isNotPlaceholderOption",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "#internals",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "#float",
              "privacy": "private",
              "default": "new FloatingDOMController(this, { content: () => this._listboxContainer })"
            },
            {
              "kind": "field",
              "name": "#slots",
              "privacy": "private",
              "default": "new SlotController(this, null, 'placeholder')"
            },
            {
              "kind": "field",
              "name": "#combobox",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "selected",
              "description": "Single select option value for single select menus,\nor array of select option values for multi select.",
              "type": {
                "text": "PfOption[]"
              },
              "attribute": "selected"
            },
            {
              "kind": "field",
              "name": "options",
              "type": {
                "text": "PfOption[]"
              },
              "description": "List of options",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "#hasBadge",
              "privacy": "private",
              "description": "Whether select has badge for number of selected items",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "#buttonLabel",
              "privacy": "private",
              "type": {
                "text": "string"
              },
              "readonly": true
            },
            {
              "kind": "method",
              "name": "disabledChanged",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "expandedChanged",
              "privacy": "private",
              "parameters": [
                {
                  "name": "old",
                  "type": {
                    "text": "boolean"
                  }
                },
                {
                  "name": "expanded",
                  "type": {
                    "text": "boolean"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "selectedChanged",
              "privacy": "private",
              "parameters": [
                {
                  "name": "_",
                  "type": {
                    "text": "PfOption[]"
                  }
                },
                {
                  "name": "selected",
                  "type": {
                    "text": "PfOption[]"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "variantChanged",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "valueChanged",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "focusChips",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "#doExpand",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "#doCollapse",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "#onChipRemove",
              "parameters": [
                {
                  "name": "opt",
                  "type": {
                    "text": "PfOption"
                  },
                  "description": "pf-option"
                },
                {
                  "name": "event",
                  "type": {
                    "text": "Event"
                  },
                  "description": "remove event"
                }
              ],
              "description": "handles chip's remove button clicking",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "#computePlaceholderText",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "show",
              "return": {
                "type": {
                  "text": "Promise<void>"
                }
              },
              "description": "Opens the dropdown"
            },
            {
              "kind": "method",
              "name": "hide",
              "return": {
                "type": {
                  "text": "Promise<void>"
                }
              },
              "description": "Closes listbox"
            },
            {
              "kind": "method",
              "name": "toggle",
              "return": {
                "type": {
                  "text": "Promise<void>"
                }
              },
              "description": "toggles popup based on current state"
            }
          ],
          "events": [
            {
              "description": "when the menu toggles open",
              "name": "open"
            },
            {
              "description": "when the menu toggles closed",
              "name": "close"
            }
          ],
          "attributes": [
            {
              "name": "variant",
              "type": {
                "text": "'single' | 'checkbox' | 'typeahead' | 'typeaheadmulti'"
              },
              "default": "'single'",
              "description": "Variant of rendered Select",
              "fieldName": "variant"
            },
            {
              "name": "accessible-label",
              "type": {
                "text": "string | undefined"
              },
              "description": "Accessible label for the select",
              "fieldName": "accessibleLabel"
            },
            {
              "name": "accessible-current-selections-label",
              "type": {
                "text": "string"
              },
              "default": "'Current selections'",
              "description": "Accessible label for chip group used to describe chips",
              "fieldName": "accessibleCurrentSelectionsLabel"
            },
            {
              "name": "items-selected-text",
              "type": {
                "text": "string"
              },
              "default": "'items selected'",
              "description": "Multi listbox button text",
              "fieldName": "itemsSelectedText"
            },
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Whether the select is disabled",
              "fieldName": "disabled"
            },
            {
              "name": "expanded",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Whether the select listbox is expanded",
              "fieldName": "expanded"
            },
            {
              "name": "enable-flip",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Enable to flip listbox when it reaches boundary",
              "fieldName": "enableFlip"
            },
            {
              "name": "value",
              "type": {
                "text": "string | undefined"
              },
              "description": "Current form value",
              "fieldName": "value"
            },
            {
              "name": "placeholder",
              "type": {
                "text": "string | undefined"
              },
              "description": "Placeholder entry. Overridden by the `placeholder` slot",
              "fieldName": "placeholder"
            },
            {
              "name": "position",
              "type": {
                "text": "Placement"
              },
              "default": "'bottom'",
              "description": "Indicates initial popover position.\nThere are 6 options: `bottom`, `top`, `top-start`, `top-end`, `bottom-start`, `bottom-end`.\nDefault is `bottom`.",
              "fieldName": "position"
            },
            {
              "name": "checkbox-selection-badge-hidden",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Flag indicating if selection badge should be hidden for checkbox variant,default false",
              "fieldName": "checkboxSelectionBadgeHidden"
            },
            {
              "name": "selected",
              "description": "Single select option value for single select menus,\nor array of select option values for multi select.",
              "type": {
                "text": "PfOption[]"
              },
              "fieldName": "selected"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "pf-select",
          "customElement": true,
          "demos": [
            {
              "url": "https://patternflyelements.org/components/select/demo/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-select/demo/pf-select.html"
              }
            },
            {
              "url": "https://patternflyelements.org/components/select/demo/checkbox-input-no-badge/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-select/demo/checkbox-input-no-badge.html"
              }
            },
            {
              "url": "https://patternflyelements.org/components/select/demo/checkbox-input/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-select/demo/checkbox-input.html"
              }
            },
            {
              "url": "https://patternflyelements.org/components/select/demo/grouped-checkbox-input/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-select/demo/grouped-checkbox-input.html"
              }
            },
            {
              "url": "https://patternflyelements.org/components/select/demo/grouped-single/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-select/demo/grouped-single.html"
              }
            },
            {
              "url": "https://patternflyelements.org/components/select/demo/single-with-description/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-select/demo/single-with-description.html"
              }
            },
            {
              "url": "https://patternflyelements.org/components/select/demo/typeahead/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-select/demo/typeahead.html"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PfSelectChangeEvent",
          "declaration": {
            "name": "PfSelectChangeEvent",
            "module": "pf-select/pf-select.js"
          }
        },
        {
          "kind": "js",
          "name": "PfSelect",
          "declaration": {
            "name": "PfSelect",
            "module": "pf-select/pf-select.js"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "pf-select",
          "declaration": {
            "name": "PfSelect",
            "module": "pf-select/pf-select.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "pf-spinner/pf-spinner.js",
      "declarations": [
        {
          "kind": "class",
          "description": "A **spinner** is used to indicate to users that an action is in progress. For actions\nthat may take a long time, use a progress bar instead.",
          "name": "PfSpinner",
          "cssProperties": [
            {
              "type": {
                "text": "<length>"
              },
              "name": "--pf-c-spinner--diameter",
              "default": "3.375rem"
            },
            {
              "type": {
                "text": "<length>"
              },
              "name": "--pf-c-spinner--Width",
              "default": "3.375rem"
            },
            {
              "type": {
                "text": "<length>"
              },
              "name": "--pf-c-spinner--Height",
              "default": "3.375rem"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-spinner--Color",
              "default": "#06c"
            },
            {
              "type": {
                "text": "<length>"
              },
              "name": "--pf-c-spinner--m-sm--diameter",
              "default": "0.625rem"
            },
            {
              "type": {
                "text": "<length>"
              },
              "name": "--pf-c-spinner--m-md--diameter",
              "default": "1.125rem"
            },
            {
              "type": {
                "text": "<length>"
              },
              "name": "--pf-c-spinner--m-lg--diameter",
              "default": "1.5rem"
            },
            {
              "type": {
                "text": "<length>"
              },
              "name": "--pf-c-spinner--m-xl--diameter",
              "default": "3.375rem"
            },
            {
              "type": {
                "text": "<time>"
              },
              "name": "--pf-c-spinner--AnimationDuration",
              "default": "1.4s"
            },
            {
              "type": {
                "text": "<string>"
              },
              "name": "--pf-c-spinner--AnimationTimingFunction",
              "default": "linear"
            },
            {
              "type": {
                "text": "<number>"
              },
              "name": "--pf-c-spinner--stroke-width",
              "default": "10"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-spinner__path--Stroke",
              "default": "#06c"
            },
            {
              "type": {
                "text": "<number>"
              },
              "name": "--pf-c-spinner__path--StrokeWidth",
              "default": "10"
            },
            {
              "type": {
                "text": "<string>"
              },
              "name": "--pf-c-spinner__path--AnimationTimingFunction",
              "default": "ease-in-out"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "#internals",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "size",
              "type": {
                "text": "'sm' | 'md' | 'lg' | 'xl'"
              },
              "default": "'xl'",
              "description": "Preset sizes for the spinner",
              "attribute": "size",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "diameter",
              "type": {
                "text": "`${string}${'px' | '%' | 'rem' | 'em' | 'fr' | 'pt'}` | undefined"
              },
              "description": "Custom diameter of spinner set as CSS variable",
              "attribute": "diameter",
              "reflects": true
            }
          ],
          "attributes": [
            {
              "name": "size",
              "type": {
                "text": "'sm' | 'md' | 'lg' | 'xl'"
              },
              "default": "'xl'",
              "description": "Preset sizes for the spinner",
              "fieldName": "size"
            },
            {
              "name": "diameter",
              "type": {
                "text": "`${string}${'px' | '%' | 'rem' | 'em' | 'fr' | 'pt'}` | undefined"
              },
              "description": "Custom diameter of spinner set as CSS variable",
              "fieldName": "diameter"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "pf-spinner",
          "customElement": true,
          "demos": [
            {
              "url": "https://patternflyelements.org/components/spinner/demo/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-spinner/demo/pf-spinner.html"
              }
            },
            {
              "url": "https://patternflyelements.org/components/spinner/demo/diameter/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-spinner/demo/diameter.html"
              }
            },
            {
              "url": "https://patternflyelements.org/components/spinner/demo/size/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-spinner/demo/size.html"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PfSpinner",
          "declaration": {
            "name": "PfSpinner",
            "module": "pf-spinner/pf-spinner.js"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "pf-spinner",
          "declaration": {
            "name": "PfSpinner",
            "module": "pf-spinner/pf-spinner.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "pf-switch/pf-switch.js",
      "declarations": [
        {
          "kind": "class",
          "description": "A **switch** toggles the state of a setting (between on and off). Switches and\ncheckboxes can often be used interchangeably, but the switch provides a more\nexplicit, visible representation on a setting.",
          "name": "PfSwitch",
          "cssProperties": [
            {
              "name": "--pf-c-switch--FontSize",
              "default": "1rem"
            },
            {
              "type": {
                "text": "<length>"
              },
              "name": "--pf-c-switch--ColumnGap",
              "default": "1rem"
            },
            {
              "name": "--pf-c-switch__toggle-icon--FontSize",
              "default": "calc(1rem * .625)"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-switch__toggle-icon--Color",
              "default": "#fff"
            },
            {
              "type": {
                "text": "<length>"
              },
              "name": "--pf-c-switch__toggle-icon--Left",
              "default": "1rem"
            },
            {
              "type": {
                "text": "<length>"
              },
              "name": "--pf-c-switch__toggle-icon--Offset",
              "default": "0.125rem"
            },
            {
              "type": {
                "text": "<number>"
              },
              "name": "--pf-c-switch--LineHeight",
              "default": "1.5"
            },
            {
              "type": {
                "text": "<length>"
              },
              "name": "--pf-c-switch--Height",
              "default": "auto"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-switch__input--checked__toggle--BackgroundColor",
              "default": "#06c"
            },
            {
              "type": {
                "text": "<length>"
              },
              "name": "--pf-c-switch__input--checked__toggle--before--TranslateX",
              "default": "calc(100 + 0.125rem)"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-switch__input--checked__label--Color",
              "default": "#151515"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-switch__input--not-checked__label--Color",
              "default": "#6a6e73"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-switch__input--disabled__label--Color",
              "default": "#6a6e73"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-switch__input--disabled__toggle--BackgroundColor",
              "default": "#d2d2d2"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-switch__input--disabled__toggle--before--BackgroundColor",
              "default": "#f5f5f5"
            },
            {
              "type": {
                "text": "<length>"
              },
              "name": "--pf-c-switch__input--focus__toggle--OutlineWidth",
              "default": "2px"
            },
            {
              "type": {
                "text": "<length>"
              },
              "name": "--pf-c-switch__input--focus__toggle--OutlineOffset",
              "default": "0.5rem"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-switch__input--focus__toggle--OutlineColor",
              "default": "#06c"
            },
            {
              "type": {
                "text": "<length>"
              },
              "name": "--pf-c-switch__toggle--Height",
              "default": "calc(1rem * 1.5)"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-switch__toggle--BackgroundColor",
              "default": "#8a8d90"
            },
            {
              "type": {
                "text": "<length>"
              },
              "name": "--pf-c-switch__toggle--BorderRadius",
              "default": "calc(1rem * 1.5)"
            },
            {
              "type": {
                "text": "<length>"
              },
              "name": "--pf-c-switch__toggle--before--Width",
              "default": "calc(1rem - 0.125rem)"
            },
            {
              "type": {
                "text": "<length>"
              },
              "name": "--pf-c-switch__toggle--before--Height",
              "default": "calc(1rem - 0.125rem)"
            },
            {
              "type": {
                "text": "<length>"
              },
              "name": "--pf-c-switch__toggle--before--Top",
              "default": "calc((calc(1rem * 1.5) - calc(1rem - 0.125rem)) / 2)`"
            },
            {
              "type": {
                "text": "<length>"
              },
              "name": "--pf-c-switch__toggle--before--Left",
              "default": "calc((calc(1rem * 1.5) - calc(1rem - 0.125rem)) / 2)"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-switch__toggle--before--BackgroundColor",
              "default": "#fff"
            },
            {
              "type": {
                "text": "<length>"
              },
              "name": "--pf-c-switch__toggle--before--BorderRadius",
              "default": "30em"
            },
            {
              "name": "--pf-c-switch__toggle--before--BoxShadow",
              "default": "0 0.25rem 0.5rem 0rem rgba(3, 3, 3, 0.12), 0 0 0.25rem 0 rgba(3, 3, 3, 0.06)"
            },
            {
              "name": "--pf-c-switch__toggle--before--Transition",
              "default": "transform .25s ease 0s"
            },
            {
              "type": {
                "text": "<length>"
              },
              "name": "--pf-c-switch__toggle--Width",
              "default": "calc(calc(1rem * 1.5) + 0.125rem + calc(1rem - 0.125rem))"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "formAssociated",
              "type": {
                "text": "boolean"
              },
              "static": true,
              "default": "true",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "shadowRoot",
              "type": {
                "text": "ShadowRoot"
              }
            },
            {
              "kind": "field",
              "name": "#internals",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string | undefined"
              },
              "description": "Accessible label text for the switch",
              "attribute": "label",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "showCheckIcon",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Flag to show if the switch has a check icon.",
              "attribute": "show-check-icon",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "checked",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Flag to show if the switch is checked.",
              "attribute": "checked",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Flag to show if the switch is disabled.",
              "attribute": "disabled",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "labels",
              "type": {
                "text": "NodeListOf<HTMLLabelElement>"
              },
              "readonly": true
            },
            {
              "kind": "method",
              "name": "formDisabledCallback",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "disabled",
                  "type": {
                    "text": "boolean"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "#onClick",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "Event"
                  }
                }
              ],
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "#onKeyup",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "KeyboardEvent"
                  }
                }
              ],
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "#onKeydown",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "KeyboardEvent"
                  }
                }
              ],
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "#toggle",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "#updateLabels",
              "privacy": "private"
            }
          ],
          "events": [
            {
              "name": "change",
              "type": {
                "text": "Event"
              },
              "description": "Fires when the switch selection changes."
            }
          ],
          "attributes": [
            {
              "name": "label",
              "type": {
                "text": "string | undefined"
              },
              "description": "Accessible label text for the switch",
              "fieldName": "label"
            },
            {
              "name": "show-check-icon",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Flag to show if the switch has a check icon.",
              "fieldName": "showCheckIcon"
            },
            {
              "name": "checked",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Flag to show if the switch is checked.",
              "fieldName": "checked"
            },
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Flag to show if the switch is disabled.",
              "fieldName": "disabled"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "pf-switch",
          "customElement": true,
          "demos": [
            {
              "url": "https://patternflyelements.org/components/switch/demo/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-switch/demo/pf-switch.html"
              }
            },
            {
              "url": "https://patternflyelements.org/components/switch/demo/checked/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-switch/demo/checked.html"
              }
            },
            {
              "url": "https://patternflyelements.org/components/switch/demo/disabled/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-switch/demo/disabled.html"
              }
            },
            {
              "url": "https://patternflyelements.org/components/switch/demo/nested-in-label/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-switch/demo/nested-in-label.html"
              }
            },
            {
              "url": "https://patternflyelements.org/components/switch/demo/reversed/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-switch/demo/reversed.html"
              }
            },
            {
              "url": "https://patternflyelements.org/components/switch/demo/without-label/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-switch/demo/without-label.html"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PfSwitch",
          "declaration": {
            "name": "PfSwitch",
            "module": "pf-switch/pf-switch.js"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "pf-switch",
          "declaration": {
            "name": "PfSwitch",
            "module": "pf-switch/pf-switch.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "pf-table/pf-caption.js",
      "declarations": [
        {
          "kind": "class",
          "description": "Caption",
          "name": "PfCaption",
          "slots": [
            {
              "description": "Place element content here",
              "name": ""
            }
          ],
          "members": [],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "pf-caption",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PfCaption",
          "declaration": {
            "name": "PfCaption",
            "module": "pf-table/pf-caption.js"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "pf-caption",
          "declaration": {
            "name": "PfCaption",
            "module": "pf-table/pf-caption.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "pf-table/pf-table.js",
      "declarations": [
        {
          "kind": "class",
          "description": "A **table** is used to display large data sets that can be easily laid out in a simple grid with column headers.",
          "name": "PfTable",
          "cssProperties": [
            {
              "type": {
                "text": "<color>"
              },
              "description": "Table background color",
              "name": "--pf-c-table--BackgroundColor",
              "default": "#fff"
            },
            {
              "type": {
                "text": "<color>"
              },
              "description": "Table border color",
              "name": "--pf-c-table--BorderColor",
              "default": "#d2d2d2"
            },
            {
              "type": {
                "text": "<dimension>"
              },
              "description": "Table border base width",
              "name": "--pf-c-table--border-width--base",
              "default": "1px"
            },
            {
              "type": {
                "text": "<dimension>"
              },
              "description": "Table caption font size",
              "name": "--pf-c-table-caption--FontSize",
              "default": "0.875rem"
            },
            {
              "type": {
                "text": "<color>"
              },
              "description": "Table caption color",
              "name": "--pf-c-table-caption--Color",
              "default": "#6a6e73"
            },
            {
              "type": {
                "text": "<dimension>"
              },
              "description": "Table caption top padding",
              "name": "--pf-c-table-caption--PaddingTop",
              "default": "1rem"
            },
            {
              "type": {
                "text": "<dimension>"
              },
              "description": "Table caption right padding",
              "name": "--pf-c-table-caption--PaddingRight",
              "default": "1.5rem"
            },
            {
              "type": {
                "text": "<dimension>"
              },
              "description": "Table caption bottom padding",
              "name": "--pf-c-table-caption--PaddingBottom",
              "default": "1rem"
            },
            {
              "type": {
                "text": "<dimension>"
              },
              "description": "Table caption left padding",
              "name": "--pf-c-table-caption--PaddingLeft",
              "default": "1.5rem"
            },
            {
              "type": {
                "text": "<length>"
              },
              "description": "Table XL caption right padding",
              "name": "--pf-c-table-caption--xl--PaddingRight",
              "default": "1rem"
            },
            {
              "type": {
                "text": "<dimension>"
              },
              "description": "Table XL caption left padding",
              "name": "--pf-c-table-caption--xl--PaddingLeft",
              "default": "1rem"
            },
            {
              "type": {
                "text": "<dimension>"
              },
              "description": "Table head cell font size",
              "name": "--pf-c-table--thead--cell--FontSize",
              "default": "0.875rem"
            },
            {
              "type": {
                "text": "<number>"
              },
              "description": "Table head cell font weight",
              "name": "--pf-c-table--thead--cell--FontWeight",
              "default": "700"
            },
            {
              "type": {
                "text": "<dimension>"
              },
              "description": "Table body cell padding top",
              "name": "--pf-c-table--tbody--cell--PaddingTop",
              "default": "1.5rem"
            },
            {
              "type": {
                "text": "<dimension>"
              },
              "description": "Table body cell padding bottom",
              "name": "--pf-c-table--tbody--cell--PaddingBottom",
              "default": "1.5rem"
            },
            {
              "type": {
                "text": "<color>"
              },
              "description": "Table row top base box shadow",
              "name": "--pf-c-table--tr--BoxShadow--top--base",
              "default": "0 -0.1875rem 0.25rem -0.125rem rgba(3,3,3,.08)"
            },
            {
              "type": {
                "text": "<dimension>"
              },
              "description": "Table cell base padding",
              "name": "--pf-c-table--cell--Padding--base",
              "default": "1rem"
            },
            {
              "type": {
                "text": "<dimension>"
              },
              "description": "Table cell font size",
              "name": "--pf-c-table--cell--FontSize",
              "default": "1rem"
            },
            {
              "type": {
                "text": "<number>"
              },
              "description": "Table cell font weight",
              "name": "--pf-c-table--cell--FontWeight",
              "default": "400"
            },
            {
              "type": {
                "text": "<color>"
              },
              "description": "Table cell color",
              "name": "--pf-c-table--cell--Color",
              "default": "#151515"
            },
            {
              "type": {
                "text": "<dimension>"
              },
              "description": "Table cell top padding",
              "name": "--pf-c-table--cell--PaddingTop",
              "default": "1rem"
            },
            {
              "type": {
                "text": "<dimension>"
              },
              "description": "Table cell right padding",
              "name": "--pf-c-table--cell--PaddingRight",
              "default": "1rem"
            },
            {
              "type": {
                "text": "<dimension>"
              },
              "description": "Table cell bottom padding",
              "name": "--pf-c-table--cell--PaddingBottom",
              "default": "1rem"
            },
            {
              "type": {
                "text": "<dimension>"
              },
              "description": "Table cell left padding",
              "name": "--pf-c-table--cell--PaddingLeft",
              "default": "1rem"
            },
            {
              "type": {
                "text": "<dimension>"
              },
              "description": "Table cell last child left padding",
              "name": "--pf-c-table--cell--first-last-child--PaddingLeft",
              "default": "1rem"
            },
            {
              "type": {
                "text": "<dimension>"
              },
              "description": "Table cell last child right padding",
              "name": "--pf-c-table--cell--first-last-child--PaddingRight",
              "default": "1rem"
            },
            {
              "type": {
                "text": "<dimension>"
              },
              "description": "Table XL cell last child left padding",
              "name": "--pf-c-table--cell--first-last-child--xl--PaddingLeft",
              "default": "1.5rem"
            },
            {
              "type": {
                "text": "<dimension>"
              },
              "description": "Table XL cell last child right padding",
              "name": "--pf-c-table--cell--first-last-child--xl--PaddingRight",
              "default": "1.5rem"
            },
            {
              "type": {
                "text": "<dimension>"
              },
              "description": "Table row first cell offset reset cell left padding",
              "name": "--pf-c-table--tr--m-first-cell-offset-reset--cell--PaddingLeft",
              "default": "1rem"
            },
            {
              "type": {
                "text": "<length>"
              },
              "description": "Table cell min width",
              "name": "--pf-c-table--cell--MinWidth",
              "default": "0"
            },
            {
              "type": {
                "text": "<length>"
              },
              "description": "Table cell max width",
              "name": "--pf-c-table--cell--MaxWidth",
              "default": "none"
            },
            {
              "type": {
                "text": "<length>"
              },
              "description": "Table cell width",
              "name": "--pf-c-table--cell--Width",
              "default": "auto"
            },
            {
              "type": {
                "text": "<overflow>"
              },
              "description": "Table cell overflow",
              "name": "--pf-c-table--cell--Overflow",
              "default": "visible"
            },
            {
              "type": {
                "text": "<>"
              },
              "description": "Table cell text overflow",
              "name": "--pf-c-table--cell--TextOverflow",
              "default": "clip"
            },
            {
              "type": {
                "text": "<>"
              },
              "description": "Table cell white space",
              "name": "--pf-c-table--cell--WhiteSpace",
              "default": "normal"
            },
            {
              "type": {
                "text": "<>"
              },
              "description": "Table cell word break",
              "name": "--pf-c-table--cell--WordBreak",
              "default": "normal"
            },
            {
              "type": {
                "text": "<length>"
              },
              "description": "Table cell before right border width",
              "name": "--pf-c-table--cell--m-border-right--before--BorderRightWidth",
              "default": "1px"
            },
            {
              "type": {
                "text": "<color>"
              },
              "description": "Table cell before right border color",
              "name": "--pf-c-table--cell--m-border-right--before--BorderRightColor",
              "default": "#d2d2d2"
            },
            {
              "type": {
                "text": "<length>"
              },
              "description": "Table cell before left border width",
              "name": "--pf-c-table--cell--m-border-left--before--BorderLeftWidth",
              "default": "1px"
            },
            {
              "type": {
                "text": "<color>"
              },
              "description": "Table cell before left border color",
              "name": "--pf-c-table--cell--m-border-left--before--BorderLeftColor",
              "default": "#d2d2d2"
            },
            {
              "type": {
                "text": "<length>"
              },
              "description": "Help cell minimum width",
              "name": "--pf-c-table--cell--m-help--MinWidth",
              "default": "11ch"
            },
            {
              "type": {
                "text": "<length>"
              },
              "description": "Help cell maximum width",
              "name": "--pf-c-table--m-truncate--cell--MaxWidth",
              "default": "1px"
            },
            {
              "type": {
                "text": "<calc-sum>"
              },
              "description": "Truncated cell minimum width",
              "name": "--pf-c-table--m-truncate--cell--MinWidth",
              "default": "calc(5ch + 1rem + 1rem)"
            },
            {
              "type": {
                "text": "<>"
              },
              "description": "Cell visible display",
              "name": "--pf-c-table--cell--hidden-visible--Display",
              "default": "grid"
            },
            {
              "type": {
                "text": "<calc-product>"
              },
              "description": "Toggle button top margin",
              "name": "--pf-c-table__toggle--c-button--MarginTop",
              "default": "calc(0.375rem * -1)"
            },
            {
              "type": {
                "text": "<calc-product>"
              },
              "description": "Toggle button bottom margin",
              "name": "--pf-c-table__toggle--c-button--MarginBottom",
              "default": "calc(0.375rem * -1)"
            },
            {
              "type": {
                "text": "<>"
              },
              "description": "Toggle button icon rotation",
              "name": "--pf-c-table__toggle--c-button__toggle-icon--Rotate",
              "default": "270deg"
            },
            {
              "type": {
                "text": "<>"
              },
              "description": "Toggle button icon transition",
              "name": "--pf-c-table__toggle--c-button__toggle-icon--Transition",
              "default": ".2s ease-in 0s"
            },
            {
              "type": {
                "text": "<>"
              },
              "description": "Expanded toggle button icon rotation",
              "name": "--pf-c-table__toggle--c-button--m-expanded__toggle-icon--Rotate",
              "default": "360deg"
            },
            {
              "type": {
                "text": "<color>"
              },
              "description": "Button background color",
              "name": "--pf-c-table__button--BackgroundColor",
              "default": "transparent"
            },
            {
              "type": {
                "text": "<color>"
              },
              "description": "Button color",
              "name": "--pf-c-table__button--Color",
              "default": "#151515"
            },
            {
              "type": {
                "text": "<color>"
              },
              "description": "Button hover color",
              "name": "--pf-c-table__button--hover--Color",
              "default": "#151515"
            },
            {
              "type": {
                "text": "<color>"
              },
              "description": "Button focus color",
              "name": "--pf-c-table__button--focus--Color",
              "default": "#151515"
            },
            {
              "type": {
                "text": "<color>"
              },
              "description": "Button active color",
              "name": "--pf-c-table__button--active--Color",
              "default": "#151515"
            },
            {
              "type": {
                "text": "<calc-sum>"
              },
              "description": "Button outline offset",
              "name": "--pf-c-table__button--OutlineOffset",
              "default": "calc(3px * -1)"
            },
            {
              "type": {
                "text": "<dimension>"
              },
              "description": "Compact toggle top padding",
              "name": "--pf-c-table--m-compact__toggle--PaddingTop",
              "default": "0"
            },
            {
              "type": {
                "text": "<dimension>"
              },
              "description": "Compacy toggle bottom padding",
              "name": "--pf-c-table--m-compact__toggle--PaddingBottom",
              "default": "0"
            },
            {
              "type": {
                "text": "<dimension>"
              },
              "description": "Check input top margin",
              "name": "--pf-c-table__check--input--MarginTop",
              "default": "0.25rem"
            },
            {
              "type": {
                "text": "<dimension>"
              },
              "description": "Check input font size",
              "name": "--pf-c-table__check--input--FontSize",
              "default": "1rem"
            },
            {
              "type": {
                "text": "<color>"
              },
              "description": "Favorite cell color",
              "name": "--pf-c-table--cell--m-favorite--Color",
              "default": "#d2d2d2"
            },
            {
              "type": {
                "text": "<color>"
              },
              "description": "Favorite button color",
              "name": "--pf-c-table__favorite--c-button--Color",
              "default": "#d2d2d2"
            },
            {
              "type": {
                "text": "<dimension>"
              },
              "description": "Favorite button font size",
              "name": "--pf-c-table__favorite--c-button--FontSize",
              "default": "0.875rem"
            },
            {
              "type": {
                "text": "<calc-product>"
              },
              "description": "Favorite button top margin",
              "name": "--pf-c-table__favorite--c-button--MarginTop",
              "default": "calc(0.375rem * -1)"
            },
            {
              "type": {
                "text": "<calc-product>"
              },
              "description": "Favorite button right margin",
              "name": "--pf-c-table__favorite--c-button--MarginRight",
              "default": "calc(1rem * -1)"
            },
            {
              "type": {
                "text": "<calc-product>"
              },
              "description": "Favorite button bottom margin",
              "name": "--pf-c-table__favorite--c-button--MarginBottom",
              "default": "calc(0.375rem * -1)"
            },
            {
              "type": {
                "text": "<calc-product>"
              },
              "description": "Favorite button left margin",
              "name": "--pf-c-table__favorite--c-button--MarginLeft",
              "default": "calc(1rem * -1)"
            },
            {
              "type": {
                "text": "<color>"
              },
              "description": "Favorited button color",
              "name": "--pf-c-table__favorite--m-favorited--c-button--Color",
              "default": "#f0ab00"
            },
            {
              "type": {
                "text": "<color>"
              },
              "description": "Favorite sort button text color",
              "name": "--pf-c-table__sort--m-favorite__button__text--Color",
              "default": "#6a6e73"
            },
            {
              "type": {
                "text": "<color>"
              },
              "description": "Favorite sort button hover text color",
              "name": "--pf-c-table__sort--m-favorite__button--hover__text--Color",
              "default": "#151515"
            },
            {
              "type": {
                "text": "<color>"
              },
              "description": "Favorite sort button focus text color",
              "name": "--pf-c-table__sort--m-favorite__button--focus__text--Color",
              "default": "#151515"
            },
            {
              "type": {
                "text": "<color>"
              },
              "description": "Favorite sort button active text color",
              "name": "--pf-c-table__sort--m-favorite__button--active__text--Color",
              "default": "#151515"
            },
            {
              "type": {
                "text": "<calc-product>"
              },
              "description": "Draggable button top margin",
              "name": "--pf-c-table__draggable--c-button--MarginTop",
              "default": "calc(0.375rem * -1)"
            },
            {
              "type": {
                "text": "<calc-product>"
              },
              "description": "Draggable button right margin",
              "name": "--pf-c-table__draggable--c-button--MarginRight",
              "default": "calc(1rem * -1)"
            },
            {
              "type": {
                "text": "<calc-product>"
              },
              "description": "Draggable button bottom margin",
              "name": "--pf-c-table__draggable--c-button--MarginBottom",
              "default": "calc(0.375rem * -1)"
            },
            {
              "type": {
                "text": "<calc-product>"
              },
              "description": "Draggable button left margin",
              "name": "--pf-c-table__draggable--c-button--MarginLeft",
              "default": "calc(1rem * -1)"
            },
            {
              "type": {
                "text": "<dimension>"
              },
              "description": "Ghost row opacity",
              "name": "--pf-c-table__tr--m-ghost-row--Opacity",
              "default": ".4"
            },
            {
              "type": {
                "text": "<color>"
              },
              "description": "Ghost row background color",
              "name": "--pf-c-table__tr--m-ghost-row--BackgroundColor",
              "default": "#fff"
            },
            {
              "type": {
                "text": "<dimension>"
              },
              "description": "Action top padding",
              "name": "--pf-c-table__action--PaddingTop",
              "default": "0"
            },
            {
              "type": {
                "text": "<dimension>"
              },
              "description": "Action right padding",
              "name": "--pf-c-table__action--PaddingRight",
              "default": "0"
            },
            {
              "type": {
                "text": "<dimension>"
              },
              "description": "Action bottom padding",
              "name": "--pf-c-table__action--PaddingBottom",
              "default": "0"
            },
            {
              "type": {
                "text": "<dimension>"
              },
              "description": "Action left padding",
              "name": "--pf-c-table__action--PaddingLeft",
              "default": "0"
            },
            {
              "type": {
                "text": "<dimension>"
              },
              "description": "Inline edit action top padding",
              "name": "--pf-c-table__inline-edit-action--PaddingTop",
              "default": "0"
            },
            {
              "type": {
                "text": "<dimension>"
              },
              "description": "Inline edit action right padding",
              "name": "--pf-c-table__inline-edit-action--PaddingRight",
              "default": "0"
            },
            {
              "type": {
                "text": "<dimension>"
              },
              "description": "Inline edit action bottom padding",
              "name": "--pf-c-table__inline-edit-action--PaddingBottom",
              "default": "0"
            },
            {
              "type": {
                "text": "<dimension>"
              },
              "description": "Inline edit action left padding",
              "name": "--pf-c-table__inline-edit-action--PaddingLeft",
              "default": "0"
            },
            {
              "type": {
                "text": "<>"
              },
              "description": "Expandable row transition",
              "name": "--pf-c-table__expandable-row--Transition",
              "default": "all 250ms cubic-bezier(.42, 0, .58, 1)"
            },
            {
              "type": {
                "text": "<length>"
              },
              "description": "Expandable row max height",
              "name": "--pf-c-table__expandable-row--MaxHeight",
              "default": "28.125rem"
            },
            {
              "type": {
                "text": "<>"
              },
              "description": "Expandable row content transition",
              "name": "--pf-c-table__expandable-row-content--Transition",
              "default": "all 250ms cubic-bezier(.42, 0, .58, 1)"
            },
            {
              "type": {
                "text": "<dimension>"
              },
              "description": "Expandable row content top padding",
              "name": "--pf-c-table__expandable-row-content--PaddingTop",
              "default": "1.5rem"
            },
            {
              "type": {
                "text": "<dimension>"
              },
              "description": "Expandable row content bottom padding",
              "name": "--pf-c-table__expandable-row-content--PaddingBottom",
              "default": "1.5rem"
            },
            {
              "type": {
                "text": "<calc-product>"
              },
              "description": "Expandable row after top",
              "name": "--pf-c-table__expandable-row--after--Top",
              "default": "calc(1px * -1)"
            },
            {
              "type": {
                "text": "<calc-product>"
              },
              "description": "Expandable row after bottom",
              "name": "--pf-c-table__expandable-row--after--Bottom",
              "default": "calc(1px * -1)"
            },
            {
              "type": {
                "text": "<length>"
              },
              "description": "Expandable row after base border width",
              "name": "--pf-c-table__expandable-row--after--border-width--base",
              "default": "3px"
            },
            {
              "type": {
                "text": "<length>"
              },
              "description": "Expandable row after left border width",
              "name": "--pf-c-table__expandable-row--after--BorderLeftWidth",
              "default": "0"
            },
            {
              "type": {
                "text": "<color>"
              },
              "description": "Expandable row after border color",
              "name": "--pf-c-table__expandable-row--after--BorderColor",
              "default": "#06c"
            },
            {
              "type": {
                "text": "<dimension>"
              },
              "description": "Inline icon right margin",
              "name": "--pf-c-table__icon-inline--MarginRight",
              "default": "0.5rem"
            },
            {
              "type": {
                "text": "<calc-sum>"
              },
              "description": "Sort button minimum width",
              "name": "--pf-c-table__sort--MinWidth",
              "default": "calc(6ch + 1rem + 1rem + 1rem)"
            },
            {
              "type": {
                "text": "<dimension>"
              },
              "description": "Sort button top padding",
              "name": "--pf-c-table__sort__button--PaddingTop",
              "default": "0.375rem"
            },
            {
              "type": {
                "text": "<dimension>"
              },
              "description": "Sort button right padding",
              "name": "--pf-c-table__sort__button--PaddingRight",
              "default": "0.5rem"
            },
            {
              "type": {
                "text": "<dimension>"
              },
              "description": "Sort button bottom padding",
              "name": "--pf-c-table__sort__button--PaddingBottom",
              "default": "0.375rem"
            },
            {
              "type": {
                "text": "<dimension>"
              },
              "description": "Sort button left padding",
              "name": "--pf-c-table__sort__button--PaddingLeft",
              "default": "0.5rem"
            },
            {
              "type": {
                "text": "<calc-product>"
              },
              "description": "Sort button top margin",
              "name": "--pf-c-table__sort__button--MarginTop",
              "default": "calc(0.375rem * -1)"
            },
            {
              "type": {
                "text": "<calc-product>"
              },
              "description": "Sort button bottom margin",
              "name": "--pf-c-table__sort__button--MarginBottom",
              "default": "calc(0.375rem * -1)"
            },
            {
              "type": {
                "text": "<calc-product>"
              },
              "description": "Sort button left margin",
              "name": "--pf-c-table__sort__button--MarginLeft",
              "default": "calc(0.5rem * -1)"
            },
            {
              "type": {
                "text": "<color>"
              },
              "description": "Sort button color",
              "name": "--pf-c-table__sort__button--Color",
              "default": "#151515"
            },
            {
              "type": {
                "text": "<color>"
              },
              "description": "Selected sort button color",
              "name": "--pf-c-table__sort--m-selected__button--Color",
              "default": "#06c"
            },
            {
              "type": {
                "text": "<length>"
              },
              "description": "Help button minimum width",
              "name": "--pf-c-table__sort--m-help--MinWidth",
              "default": "15ch"
            },
            {
              "type": {
                "text": "<color>"
              },
              "description": "Sort button text color",
              "name": "--pf-c-table__sort__button__text--Color",
              "default": "currentcolor"
            },
            {
              "type": {
                "text": "<color>"
              },
              "description": "Sort button hover text color",
              "name": "--pf-c-table__sort__button--hover__text--Color",
              "default": "currencolor"
            },
            {
              "type": {
                "text": "<color>"
              },
              "description": "Sort button focus text color",
              "name": "--pf-c-table__sort__button--focus__text--Color",
              "default": "currentcolor"
            },
            {
              "type": {
                "text": "<color>"
              },
              "description": "Sort button active text color",
              "name": "--pf-c-table__sort__button--active__text--Color",
              "default": "currentcolor"
            },
            {
              "type": {
                "text": "<color>"
              },
              "description": "Sort inidcator color",
              "name": "--pf-c-table__sort-indicator--Color",
              "default": "#d2d2d2"
            },
            {
              "type": {
                "text": "<calc-sum>"
              },
              "description": "Sort inidcator left margin",
              "name": "--pf-c-table__sort-indicator--MarginLeft",
              "default": "calc(6ch + 1rem + 1rem + 1rem)"
            },
            {
              "type": {
                "text": "<color>"
              },
              "description": "Selected sort inidcator color",
              "name": "--pf-c-table__sort--m-selected__sort-indicator--Color",
              "default": "#06c"
            },
            {
              "type": {
                "text": "<color>"
              },
              "description": "Sort button hover sort indicator color",
              "name": "--pf-c-table__sort__button--hover__sort-indicator--Color",
              "default": "#151515"
            },
            {
              "type": {
                "text": "<color>"
              },
              "description": "Sort button hover active sort indicator color",
              "name": "--pf-c-table__sort__button--active__sort-indicator--Color",
              "default": "#151515"
            },
            {
              "type": {
                "text": "<color>"
              },
              "description": "Sort button hover focus sort indicator color",
              "name": "--pf-c-table__sort__button--focus__sort-indicator--Color",
              "default": "#151515"
            },
            {
              "type": {
                "text": "<length>"
              },
              "description": "Header cell help minimum width",
              "name": "--pf-c-table--th--m-help--MinWidth",
              "default": "11ch"
            },
            {
              "type": {
                "text": "<dimension>"
              },
              "description": "Help column left magin",
              "name": "--pf-c-table__column-help--MarginLeft",
              "default": "0.25rem"
            },
            {
              "type": {
                "text": "<dimension>"
              },
              "description": "Help column translate y axis",
              "name": "--pf-c-table__column-help--TranslateY",
              "default": "0.125rem"
            },
            {
              "type": {
                "text": "<calc-product>"
              },
              "description": "Help column button top margin",
              "name": "--pf-c-table__column-help--c-button--MarginTop",
              "default": "calc(0.375rem * -1)"
            },
            {
              "type": {
                "text": "<calc-product>"
              },
              "description": "Help column button bottom margin",
              "name": "--pf-c-table__column-help--c-button--MarginBottom",
              "default": "calc(0.375rem * -1)"
            },
            {
              "type": {
                "text": "<dimension>"
              },
              "description": "Help column button right padding",
              "name": "--pf-c-table__column-help--c-button--PaddingRight",
              "default": "0.5rem"
            },
            {
              "type": {
                "text": "<dimension>"
              },
              "description": "Help column button left margin",
              "name": "--pf-c-table__column-help--c-button--PaddingLeft",
              "default": "0.5rem"
            },
            {
              "type": {
                "text": "<color>"
              },
              "description": "Compound expansion toggle button color",
              "name": "--pf-c-table__compound-expansion-toggle__button--Color",
              "default": "#06c"
            },
            {
              "type": {
                "text": "<color>"
              },
              "description": "Compound expansion hover toggle button color",
              "name": "--pf-c-table__compound-expansion-toggle__button--hover--Color",
              "default": "#004080"
            },
            {
              "type": {
                "text": "<color>"
              },
              "description": "Compound expansion focus toggle button color",
              "name": "--pf-c-table__compound-expansion-toggle__button--focus--Color",
              "default": "#004080"
            },
            {
              "type": {
                "text": "<color>"
              },
              "description": "Compound expansion active toggle button color",
              "name": "--pf-c-table__compound-expansion-toggle__button--active--Color",
              "default": "#004080"
            },
            {
              "type": {
                "text": "<length>"
              },
              "description": "Compound expansion toggle button before border width",
              "name": "--pf-c-table__compound-expansion-toggle__button--before--border-width--base",
              "default": "1px"
            },
            {
              "type": {
                "text": "<color>"
              },
              "description": "Compound expansion toggle button before border color",
              "name": "--pf-c-table__compound-expansion-toggle__button--before--BorderColor",
              "default": "#d2d2d2"
            },
            {
              "type": {
                "text": "<length>"
              },
              "description": "Compound expansion toggle button before right border width",
              "name": "--pf-c-table__compound-expansion-toggle__button--before--BorderRightWidth",
              "default": "0"
            },
            {
              "type": {
                "text": "<length>"
              },
              "description": "Compound expansion toggle button before left border width",
              "name": "--pf-c-table__compound-expansion-toggle__button--before--BorderLeftWidth",
              "default": "0"
            },
            {
              "type": {
                "text": "<calc-product>"
              },
              "description": "Compound expansion toggle button before bottom",
              "name": "--pf-c-table__compound-expansion-toggle__button--before--Bottom",
              "default": "calc(1px * -1)"
            },
            {
              "type": {
                "text": "<calc-product>"
              },
              "description": "Compound expansion toggle button before left",
              "name": "--pf-c-table__compound-expansion-toggle__button--before--Left",
              "default": "calc(1px * -1)"
            },
            {
              "type": {
                "text": "<length>"
              },
              "description": "Compound expansion toggle button after base border width",
              "name": "--pf-c-table__compound-expansion-toggle__button--after--border-width--base",
              "default": "3px"
            },
            {
              "type": {
                "text": "<color>"
              },
              "description": "Compound expansion toggle button after border color",
              "name": "--pf-c-table__compound-expansion-toggle__button--after--BorderColor",
              "default": "#06c"
            },
            {
              "type": {
                "text": "<length>"
              },
              "description": "Compound expansion toggle button after top border width",
              "name": "--pf-c-table__compound-expansion-toggle__button--after--BorderTopWidth",
              "default": "0"
            },
            {
              "type": {
                "text": "<calc-sum>"
              },
              "description": "Compound expansion toggle button after top",
              "name": "--pf-c-table__compound-expansion-toggle__button--after--Top",
              "default": "calc(1px * -1)"
            },
            {
              "type": {
                "text": "<calc-sum>"
              },
              "description": "Compound expansion toggle button after left",
              "name": "--pf-c-table__compound-expansion-toggle__button--after--Left",
              "default": "calc(1px * -1)"
            },
            {
              "type": {
                "text": "<calc-sum>"
              },
              "description": "Compact header cell top padding",
              "name": "--pf-c-table--m-compact-th--PaddingTop",
              "default": "calc(0.5rem + 0.25rem)"
            },
            {
              "type": {
                "text": "<dimension>"
              },
              "description": "Compact header cell bottom padding",
              "name": "--pf-c-table--m-compact-th--PaddingBottom",
              "default": "0.5rem"
            },
            {
              "type": {
                "text": "<dimension>"
              },
              "description": "Compact cell top padding",
              "name": "--pf-c-table--m-compact--cell--PaddingTop",
              "default": "0.5rem"
            },
            {
              "type": {
                "text": "<dimension>"
              },
              "description": "Compact cell right padding",
              "name": "--pf-c-table--m-compact--cell--PaddingRight",
              "default": "0.5rem"
            },
            {
              "type": {
                "text": "<dimension>"
              },
              "description": "Compact cell bottom padding",
              "name": "--pf-c-table--m-compact--cell--PaddingBottom",
              "default": "0.5rem"
            },
            {
              "type": {
                "text": "<dimension>"
              },
              "description": "Compact cell left padding",
              "name": "--pf-c-table--m-compact--cell--PaddingLeft",
              "default": "0.5rem"
            },
            {
              "type": {
                "text": "<dimension>"
              },
              "description": "Compact cell first child left padding",
              "name": "--pf-c-table--m-compact--cell--first-last-child--PaddingLeft",
              "default": "1rem"
            },
            {
              "type": {
                "text": "<dimension>"
              },
              "description": "Compact XLcell first child right padding",
              "name": "--pf-c-table--m-compact--cell--first-last-child--PaddingRight",
              "default": "1rem"
            },
            {
              "type": {
                "text": "<dimension>"
              },
              "description": "Compact cell first child XL left padding",
              "name": "--pf-c-table--m-compact--cell--first-last-child--xl--PaddingLeft",
              "default": "1.5rem"
            },
            {
              "type": {
                "text": "<dimension>"
              },
              "description": "Compact cell first child XL right padding",
              "name": "--pf-c-table--m-compact--cell--first-last-child--xl--PaddingRight",
              "default": "1.5rem"
            },
            {
              "type": {
                "text": "<dimension>"
              },
              "description": "Compact font size",
              "name": "--pf-c-table--m-compact--FontSize",
              "default": "0.875rem"
            },
            {
              "type": {
                "text": "<dimension>"
              },
              "description": "Compact expandable row content top padding",
              "name": "--pf-c-table--m-compact__expandable-row-content--PaddingTop",
              "default": "1.5rem"
            },
            {
              "type": {
                "text": "<dimension>"
              },
              "description": "Compact expandable row content right padding",
              "name": "--pf-c-table--m-compact__expandable-row-content--PaddingRight",
              "default": "1.5rem"
            },
            {
              "type": {
                "text": "<dimension>"
              },
              "description": "Compact expandable row content bottom padding",
              "name": "--pf-c-table--m-compact__expandable-row-content--PaddingBottom",
              "default": "1.5rem"
            },
            {
              "type": {
                "text": "<dimension>"
              },
              "description": "Compact expandable row content left padding",
              "name": "--pf-c-table--m-compact__expandable-row-content--PaddingLeft",
              "default": "1.5rem"
            },
            {
              "type": {
                "text": "<dimension>"
              },
              "description": "Nested first child right padding",
              "name": "--pf-c-table--nested--first-last-child--PaddingRight",
              "default": "1rem"
            },
            {
              "type": {
                "text": "<dimension>"
              },
              "description": "Nested first child left padding",
              "name": "--pf-c-table--nested--first-last-child--PaddingLeft",
              "default": "1rem"
            },
            {
              "type": {
                "text": "<color>"
              },
              "description": "Expandable row expanded bottom border color",
              "name": "--pf-c-table__expandable-row--m-expanded--BorderBottomColor",
              "default": "#d2d2d2"
            },
            {
              "type": {
                "text": "<color>"
              },
              "description": "Hoverable table row top box shadow",
              "name": "--pf-c-table--tr--m-hoverable--BoxShadow--top",
              "default": "0 -0.1875rem 0.25rem -0.125rem rgba(3,3,3,.08)"
            },
            {
              "type": {
                "text": "<dimension>"
              },
              "description": "Hoverable table row background color",
              "name": "--pf-c-table--tr--m-hoverable--BackgroundColor",
              "default": "transparent"
            },
            {
              "type": {
                "text": "<color>"
              },
              "description": "Hoverable table row box shadow",
              "name": "--pf-c-table--tr--m-hoverable--BoxShadow",
              "default": "0 -0.1875rem 0.25rem -0.125rem rgba(3,3,3,.08)"
            },
            {
              "type": {
                "text": "<calc-sum>"
              },
              "description": "Hoverable table row outline offset",
              "name": "--pf-c-table--tr--m-hoverable--OutlineOffset",
              "default": "calc(-1 * 0.25rem)"
            },
            {
              "type": {
                "text": "<color>"
              },
              "description": "Hoverable table row hover box shadow",
              "name": "--pf-c-table--tr--m-hoverable--hover--BoxShadow",
              "default": "0 -0.1875rem 0.25rem -0.125rem rgba(3,3,3,.08), 0 0.125rem 0.25rem -0.0625rem rgba(3, 3, 3, 0.16)"
            },
            {
              "type": {
                "text": "<color>"
              },
              "description": "Hoverable table row hover background color",
              "name": "--pf-c-table--tr--m-hoverable--hover--BackgroundColor",
              "default": "#fff"
            },
            {
              "type": {
                "text": "<color>"
              },
              "description": "Hoverable table row focus box shadow",
              "name": "--pf-c-table--tr--m-hoverable--focus--BoxShadow",
              "default": "0 -0.1875rem 0.25rem -0.125rem rgba(3,3,3,.08), 0 0.125rem 0.25rem -0.0625rem rgba(3, 3, 3, 0.16)"
            },
            {
              "type": {
                "text": "<color>"
              },
              "description": "Hoverable table row focus background color",
              "name": "--pf-c-table--tr--m-hoverable--focus--BackgroundColor",
              "default": "#fff"
            },
            {
              "type": {
                "text": "<color>"
              },
              "description": "Hoverable table row active box shadow",
              "name": "--pf-c-table--tr--m-hoverable--active--BoxShadow",
              "default": "0 -0.1875rem 0.25rem -0.125rem rgba(3,3,3,.08), 0 0.125rem 0.25rem -0.0625rem rgba(3, 3, 3, 0.16)"
            },
            {
              "type": {
                "text": "<color>"
              },
              "description": "Hoverable table row active background color",
              "name": "--pf-c-table--tr--m-hoverable--active--BackgroundColor",
              "default": "#fff"
            },
            {
              "type": {
                "text": "<color>"
              },
              "description": "Hoverable table row selected box shadow",
              "name": "--pf-c-table--tr--m-hoverable--m-selected--BoxShadow",
              "default": "0 0.125rem 0.25rem -0.0625rem rgba(3, 3, 3, 0.16) inset, 0 0.125rem 0.25rem -0.0625rem rgba(3, 3, 3, 0.16)"
            },
            {
              "type": {
                "text": "<color>"
              },
              "description": "Selected table row top box shadow",
              "name": "--pf-c-table--tr--m-selected--BoxShadow--top",
              "default": "0 -0.1875rem 0.25rem -0.125rem rgba(3,3,3,.08)"
            },
            {
              "type": {
                "text": "<color>"
              },
              "description": "Selected table row background color",
              "name": "--pf-c-table--tr--m-selected--BackgroundColor",
              "default": "#fff"
            },
            {
              "type": {
                "text": "<color>"
              },
              "description": "Selected table row box shadow",
              "name": "--pf-c-table--tr--m-selected--BoxShadow",
              "default": "0 -0.1875rem 0.25rem -0.125rem rgba(3,3,3,.08)"
            },
            {
              "type": {
                "text": "<calc-sum>"
              },
              "description": "Selected table row outline offset",
              "name": "--pf-c-table--tr--m-selected--OutlineOffset",
              "default": "calc(-1 * 0.25rem)"
            },
            {
              "type": {
                "text": "<length>"
              },
              "description": "Selected table row after left border width",
              "name": "--pf-c-table--tr--m-selected--after--BorderLeftWidth",
              "default": "3px"
            },
            {
              "type": {
                "text": "<color>"
              },
              "description": "Selected table row after left border color",
              "name": "--pf-c-table--tr--m-selected--after--BorderLeftColor",
              "default": "#06c"
            },
            {
              "type": {
                "text": "<color>"
              },
              "description": "Selected table row box shadow",
              "name": "--pf-c-table--tr--m-selected--m-selected--BoxShadow",
              "default": "0 0.125rem 0.25rem -0.0625rem rgba(3, 3, 3, 0.16)"
            },
            {
              "type": {
                "text": "<color>"
              },
              "description": "Selected table row hover box shadow",
              "name": "--pf-c-table--tr--m-selected--hover--m-selected--BoxShadow",
              "default": "0 0.125rem 0.25rem -0.0625rem rgba(3, 3, 3, 0.16) inset, 0 0.125rem 0.25rem -0.0625rem rgba(3, 3, 3, 0.16)"
            },
            {
              "type": {
                "text": "<color>"
              },
              "description": "Selected table row hover box shadow",
              "name": "--pf-c-table--tr--m-selected--tr--m-selected--hover--BoxShadow",
              "default": "0 -0.1875rem 0.25rem -0.125rem rgba(3,3,3,.08), 0 0.125rem 0.25rem -0.0625rem rgba(3, 3, 3, 0.16)"
            },
            {
              "type": {
                "text": "<color>"
              },
              "description": "Hoverable table body top box shadow",
              "name": "--pf-c-table--tbody--m-hoverable--BoxShadow--top",
              "default": "0 -0.1875rem 0.25rem -0.125rem rgba(3,3,3,.08)"
            },
            {
              "type": {
                "text": "<color>"
              },
              "description": "Hoverable table body box shadow",
              "name": "--pf-c-table--tbody--m-hoverable--BoxShadow",
              "default": "0 -0.1875rem 0.25rem -0.125rem rgba(3,3,3,.08)"
            },
            {
              "type": {
                "text": "<dimension>"
              },
              "description": "Hoverable table body background color",
              "name": "--pf-c-table--tbody--m-hoverable--BackgroundColor",
              "default": "transparent"
            },
            {
              "type": {
                "text": "<calc-sum>"
              },
              "description": "Hoverable table body outline offset",
              "name": "--pf-c-table--tbody--m-hoverable--OutlineOffset",
              "default": "calc(-1 * 0.25rem)"
            },
            {
              "type": {
                "text": "<color>"
              },
              "description": "Hoverable table body hover box shadow",
              "name": "--pf-c-table--tbody--m-hoverable--hover--BoxShadow",
              "default": "0 -0.1875rem 0.25rem -0.125rem rgba(3,3,3,.08), 0 0.125rem 0.25rem -0.0625rem rgba(3, 3, 3, 0.16)"
            },
            {
              "type": {
                "text": "<color>"
              },
              "description": "Hoverable table body hover background color",
              "name": "--pf-c-table--tbody--m-hoverable--hover--BackgroundColor",
              "default": "#fff"
            },
            {
              "type": {
                "text": "<color>"
              },
              "description": "Hoverable table body focus box shadow",
              "name": "--pf-c-table--tbody--m-hoverable--focus--BoxShadow",
              "default": "0 -0.1875rem 0.25rem -0.125rem rgba(3,3,3,.08), 0 0.125rem 0.25rem -0.0625rem rgba(3, 3, 3, 0.16)"
            },
            {
              "type": {
                "text": "<color>"
              },
              "description": "Hoverable table body focus background color",
              "name": "--pf-c-table--tbody--m-hoverable--focus--BackgroundColor",
              "default": "#fff"
            },
            {
              "type": {
                "text": "<color>"
              },
              "description": "Hoverable table body active box shadow",
              "name": "--pf-c-table--tbody--m-hoverable--active--BoxShadow",
              "default": "0 -0.1875rem 0.25rem -0.125rem rgba(3,3,3,.08), 0 0.125rem 0.25rem -0.0625rem rgba(3, 3, 3, 0.16)"
            },
            {
              "type": {
                "text": "<color>"
              },
              "description": "Hoverable table body active background color",
              "name": "--pf-c-table--tbody--m-hoverable--active--BackgroundColor",
              "default": "#fff"
            },
            {
              "type": {
                "text": "<color>"
              },
              "description": "Hoverable table body expanded border color",
              "name": "--pf-c-table--tbody--m-hoverable--m-expanded--BorderColor",
              "default": "#73bcf7"
            },
            {
              "type": {
                "text": "<color>"
              },
              "description": "Hoverable table body selected table row box shadow",
              "name": "--pf-c-table--tbody--m-hoverable--m-selected--hover--tr--BoxShadow",
              "default": "0 0.125rem 0.25rem -0.0625rem rgba(3, 3, 3, 0.16) inset, 0 0.125rem 0.25rem -0.0625rem rgba(3, 3, 3, 0.16)"
            },
            {
              "type": {
                "text": "<color>"
              },
              "description": "Selected table body background color",
              "name": "--pf-c-table--tbody--m-selected--BackgroundColor",
              "default": "#fff"
            },
            {
              "type": {
                "text": "<color>"
              },
              "description": "Selected table body top box shadow",
              "name": "--pf-c-table--tbody--m-selected--BoxShadow--top",
              "default": "0 -0.1875rem 0.25rem -0.125rem rgba(3,3,3,.08)"
            },
            {
              "type": {
                "text": "<color>"
              },
              "description": "Selected table body box shadow",
              "name": "--pf-c-table--tbody--m-selected--BoxShadow",
              "default": "0 -0.1875rem 0.25rem -0.125rem rgba(3,3,3,.08)"
            },
            {
              "type": {
                "text": "<calc-product>"
              },
              "description": "Selected table body outline offset",
              "name": "--pf-c-table--tbody--m-selected--OutlineOffset",
              "default": "calc(-1 * 0.25rem)"
            },
            {
              "type": {
                "text": "<length>"
              },
              "description": "Selected table body after left border width",
              "name": "--pf-c-table--tbody--m-selected--after--BorderLeftWidth",
              "default": "3px"
            },
            {
              "type": {
                "text": "<color>"
              },
              "description": "Selected table body after left border color",
              "name": "--pf-c-table--tbody--m-selected--after--BorderLeftColor",
              "default": "#06c"
            },
            {
              "type": {
                "text": "<color>"
              },
              "description": "Selected table body selected box shadow",
              "name": "--pf-c-table--tbody--m-selected--m-selected--BoxShadow",
              "default": "0 0.125rem 0.25rem -0.0625rem rgba(3, 3, 3, 0.16)"
            },
            {
              "type": {
                "text": "<color>"
              },
              "description": "Selected table body hover selected box shadow",
              "name": "--pf-c-table--tbody--m-selected--hover--tbody--m-selected--BoxShadow",
              "default": "0 0.125rem 0.25rem -0.0625rem rgba(3, 3, 3, 0.16) inset, 0 0.125rem 0.25rem -0.0625rem rgba(3, 3, 3, 0.16)"
            },
            {
              "type": {
                "text": "<color>"
              },
              "description": "Selected table body hover box shadow",
              "name": "--pf-c-table--tbody--m-selected--tbody--m-selected--hover--BoxShadow",
              "default": "0 -0.1875rem 0.25rem -0.125rem rgba(3,3,3,.08), 0 0.125rem 0.25rem -0.0625rem rgba(3, 3, 3, 0.16)"
            },
            {
              "type": {
                "text": "<dimension>"
              },
              "description": "Table head nested column header button outline offset",
              "name": "--pf-c-table--thead--m-nested-column-header--button--OutlineOffset",
              "default": "-0.1875rem"
            },
            {
              "type": {
                "text": "<dimension>"
              },
              "description": "Table head nested column header row top padding",
              "name": "--pf-c-table--thead--m-nested-column-header--tr--PaddingTop",
              "default": "0.25rem"
            },
            {
              "type": {
                "text": "<dimension>"
              },
              "description": "Table head nested column header row bottom padding",
              "name": "--pf-c-table--thead--m-nested-column-header--tr--PaddingBottom",
              "default": "0.25rem"
            },
            {
              "type": {
                "text": "<color>"
              },
              "description": "Subhead color",
              "name": "--pf-c-table__subhead--Color",
              "default": "#6a6e73"
            },
            {
              "type": {
                "text": "<color>"
              },
              "description": "Striped row background color",
              "name": "--pf-c-table--m-striped__tr--BackgroundColor",
              "default": "#fafafa"
            },
            {
              "type": {
                "text": "<dimension>"
              },
              "description": "Cell top padding",
              "name": "--pf-c-table--cell--PaddingTop",
              "default": "1rem"
            },
            {
              "type": {
                "text": "<dimension>"
              },
              "description": "Cell right padding",
              "name": "--pf-c-table--cell--PaddingRight",
              "default": "1rem"
            },
            {
              "type": {
                "text": "<dimension>"
              },
              "description": "Cell bottom padding",
              "name": "--pf-c-table--cell--PaddingBottom",
              "default": "1rem"
            },
            {
              "type": {
                "text": "<dimension>"
              },
              "description": "Cell left padding",
              "name": "--pf-c-table--cell--PaddingLeft",
              "default": "1rem"
            },
            {
              "type": {
                "text": "<calc-sum>"
              },
              "description": "Favorite button top margin",
              "name": "--pf-c-table__favorite--c-button--MarginTop",
              "default": "calc(0.375rem * -1)"
            },
            {
              "type": {
                "text": "<calc-sum>"
              },
              "description": "Favorite button right margin",
              "name": "--pf-c-table__favorite--c-button--MarginRight",
              "default": "calc(1rem * -1)"
            },
            {
              "type": {
                "text": "<calc-sum>"
              },
              "description": "Favorite button bottom margin",
              "name": "--pf-c-table__favorite--c-button--MarginBottom",
              "default": "calc(0.375rem * -1)"
            },
            {
              "type": {
                "text": "<calc-sum>"
              },
              "description": "Favorite button left margin",
              "name": "--pf-c-table__favorite--c-button--MarginLeft",
              "default": "calc(1rem * -1)"
            }
          ],
          "slots": [
            {
              "description": "The default slot can hold an optional `pf-caption` element and a combination of `pf-tr`, `pf-thead`, or `pf-tbody` elements."
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "rows",
              "type": {
                "text": "NodeListOf<PfTr>"
              },
              "readonly": true
            },
            {
              "kind": "field",
              "name": "columns",
              "type": {
                "text": "number"
              },
              "privacy": "private",
              "default": "0"
            },
            {
              "kind": "field",
              "name": "thRowContext",
              "type": {
                "text": "string"
              },
              "privacy": "private",
              "default": "'rowheader'"
            },
            {
              "kind": "method",
              "name": "#onRequestExpand",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "Event"
                  }
                }
              ],
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "#onSlotchange",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "#onRequestSort",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "Event"
                  }
                }
              ],
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "#performSort",
              "parameters": [
                {
                  "name": "header",
                  "type": {
                    "text": "PfTh"
                  }
                },
                {
                  "name": "direction",
                  "type": {
                    "text": "'asc' | 'desc'"
                  }
                }
              ],
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "getNodeContentForSort",
              "privacy": "private",
              "static": true,
              "parameters": [
                {
                  "name": "columnIndexToSort",
                  "type": {
                    "text": "number"
                  }
                },
                {
                  "name": "node",
                  "type": {
                    "text": "Element"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "sortByContent",
              "privacy": "private",
              "static": true,
              "parameters": [
                {
                  "name": "direction",
                  "type": {
                    "text": "'asc' | 'desc'"
                  }
                },
                {
                  "name": "a",
                  "type": {
                    "text": "{ content: string }"
                  }
                },
                {
                  "name": "b",
                  "type": {
                    "text": "{ content: string }"
                  }
                }
              ]
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "pf-table",
          "customElement": true,
          "demos": [
            {
              "url": "https://patternflyelements.org/components/table/demo/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-table/demo/pf-table.html"
              }
            },
            {
              "url": "https://patternflyelements.org/components/table/demo/expandable-rows-compound/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-table/demo/expandable-rows-compound.html"
              }
            },
            {
              "url": "https://patternflyelements.org/components/table/demo/expandable-rows/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-table/demo/expandable-rows.html"
              }
            },
            {
              "url": "https://patternflyelements.org/components/table/demo/sortable/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-table/demo/sortable.html"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./pf-caption.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./pf-thead.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./pf-tbody.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./pf-tr.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./pf-th.js"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./pf-td.js"
          }
        },
        {
          "kind": "js",
          "name": "PfTable",
          "declaration": {
            "name": "PfTable",
            "module": "pf-table/pf-table.js"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "pf-table",
          "declaration": {
            "name": "PfTable",
            "module": "pf-table/pf-table.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "pf-table/pf-tbody.js",
      "declarations": [
        {
          "kind": "class",
          "description": "Table body",
          "name": "PfTbody",
          "slots": [
            {
              "description": "Place element content here",
              "name": ""
            }
          ],
          "members": [],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "pf-tbody",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PfTbody",
          "declaration": {
            "name": "PfTbody",
            "module": "pf-table/pf-tbody.js"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "pf-tbody",
          "declaration": {
            "name": "PfTbody",
            "module": "pf-table/pf-tbody.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "pf-table/pf-td.js",
      "declarations": [
        {
          "kind": "class",
          "description": "Table data cell",
          "name": "PfTd",
          "slots": [
            {
              "description": "Place element content here",
              "name": ""
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "compoundExpand",
              "type": {
                "text": "string | undefined"
              },
              "attribute": "compound-expand"
            },
            {
              "kind": "field",
              "name": "expanded",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "expanded",
              "reflects": true
            },
            {
              "kind": "method",
              "name": "#onClick",
              "privacy": "private"
            }
          ],
          "attributes": [
            {
              "name": "compound-expand",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "compoundExpand"
            },
            {
              "name": "expanded",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "expanded"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "pf-td",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PfTd",
          "declaration": {
            "name": "PfTd",
            "module": "pf-table/pf-td.js"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "pf-td",
          "declaration": {
            "name": "PfTd",
            "module": "pf-table/pf-td.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "pf-table/pf-th.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "RequestSortEvent",
          "members": [
            {
              "kind": "field",
              "type": {
                "text": "string",
                "name": "string"
              },
              "name": "key",
              "privacy": "public"
            },
            {
              "kind": "field",
              "type": {
                "text": "'asc' | 'desc'",
                "name": "'asc' | 'desc'"
              },
              "name": "direction",
              "privacy": "public"
            }
          ],
          "superclass": {
            "name": "Event",
            "module": "global:"
          }
        },
        {
          "kind": "class",
          "description": "Table header cell",
          "name": "PfTh",
          "slots": [
            {
              "description": "Place element content here",
              "name": ""
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "sortable",
              "type": {
                "text": "boolean | undefined"
              },
              "default": "false",
              "attribute": "sortable",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "selected",
              "type": {
                "text": "boolean | undefined"
              },
              "default": "false",
              "attribute": "selected",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "sortDirection",
              "type": {
                "text": "'asc' | 'desc' | undefined"
              },
              "attribute": "sort-direction",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "key",
              "type": {
                "text": "string"
              },
              "attribute": "key"
            },
            {
              "kind": "field",
              "name": "contextualRole",
              "type": {
                "text": "'colheader' | 'rowheader'"
              },
              "privacy": "private",
              "default": "'rowheader'"
            },
            {
              "kind": "method",
              "name": "#onClick",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "sort",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            }
          ],
          "attributes": [
            {
              "name": "sortable",
              "type": {
                "text": "boolean | undefined"
              },
              "default": "false",
              "fieldName": "sortable"
            },
            {
              "name": "selected",
              "type": {
                "text": "boolean | undefined"
              },
              "default": "false",
              "fieldName": "selected"
            },
            {
              "name": "sort-direction",
              "type": {
                "text": "'asc' | 'desc' | undefined"
              },
              "fieldName": "sortDirection"
            },
            {
              "name": "key",
              "type": {
                "text": "string"
              },
              "fieldName": "key"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "pf-th",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "RequestSortEvent",
          "declaration": {
            "name": "RequestSortEvent",
            "module": "pf-table/pf-th.js"
          }
        },
        {
          "kind": "js",
          "name": "PfTh",
          "declaration": {
            "name": "PfTh",
            "module": "pf-table/pf-th.js"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "pf-th",
          "declaration": {
            "name": "PfTh",
            "module": "pf-table/pf-th.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "pf-table/pf-thead.js",
      "declarations": [
        {
          "kind": "class",
          "description": "Table head",
          "name": "PfThead",
          "slots": [
            {
              "description": "Place element content here",
              "name": ""
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "thRowContext",
              "type": {
                "text": "string"
              },
              "privacy": "private",
              "default": "'colheader'"
            },
            {
              "kind": "method",
              "name": "#onSlotchange",
              "privacy": "private"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "pf-thead",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PfThead",
          "declaration": {
            "name": "PfThead",
            "module": "pf-table/pf-thead.js"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "pf-thead",
          "declaration": {
            "name": "PfThead",
            "module": "pf-table/pf-thead.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "pf-table/pf-tr.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "RequestExpandEvent",
          "members": [
            {
              "kind": "field",
              "name": "compoundExpanded",
              "type": {
                "text": "string | boolean"
              },
              "privacy": "public",
              "default": "false",
              "description": "if provided, the slot name for the compound-expanded cell"
            },
            {
              "kind": "field",
              "name": "row",
              "type": {
                "text": "PfTr | undefined"
              },
              "privacy": "public",
              "description": "if compoundExpanded is provided, a reference to the row\nmust also be provided."
            }
          ],
          "superclass": {
            "name": "Event",
            "module": "global:"
          }
        },
        {
          "kind": "class",
          "description": "Table row",
          "name": "PfTr",
          "slots": [
            {
              "description": "Place element content here",
              "name": ""
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "expandable",
              "type": {
                "text": "boolean | 'compound'"
              },
              "default": "false",
              "attribute": "expandable",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "expanded",
              "type": {
                "text": "boolean | string"
              },
              "default": "false",
              "attribute": "expanded",
              "reflects": true
            },
            {
              "kind": "method",
              "name": "#expandedChanged",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "#expandableChanged",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "#onClick",
              "privacy": "private"
            }
          ],
          "attributes": [
            {
              "name": "expandable",
              "type": {
                "text": "boolean | 'compound'"
              },
              "default": "false",
              "fieldName": "expandable"
            },
            {
              "name": "expanded",
              "type": {
                "text": "boolean | string"
              },
              "default": "false",
              "fieldName": "expanded"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "pf-tr",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "RequestExpandEvent",
          "declaration": {
            "name": "RequestExpandEvent",
            "module": "pf-table/pf-tr.js"
          }
        },
        {
          "kind": "js",
          "name": "PfTr",
          "declaration": {
            "name": "PfTr",
            "module": "pf-table/pf-tr.js"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "pf-tr",
          "declaration": {
            "name": "PfTr",
            "module": "pf-table/pf-tr.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "pf-tabs/pf-tab-panel.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "PfTabPanel",
          "cssProperties": [
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-tab-content--m-light-300",
              "default": "#f0f0f0"
            }
          ],
          "cssParts": [
            {
              "description": "container for the panel content",
              "name": "container"
            }
          ],
          "slots": [
            {
              "description": "Tab panel content",
              "name": ""
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "ctx",
              "type": {
                "text": "PfTabsContext | undefined"
              },
              "privacy": "private"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "pf-tab-panel",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PfTabPanel",
          "declaration": {
            "name": "PfTabPanel",
            "module": "pf-tabs/pf-tab-panel.js"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "pf-tab-panel",
          "declaration": {
            "name": "PfTabPanel",
            "module": "pf-tabs/pf-tab-panel.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "pf-tabs/pf-tab.js",
      "declarations": [
        {
          "kind": "class",
          "description": "Tab",
          "name": "PfTab",
          "cssProperties": [
            {
              "type": {
                "text": "<length>"
              },
              "name": "--pf-c-tabs--m-box__item--m-current--first-child__link--before--BorderLeftWidth",
              "default": "1px"
            },
            {
              "type": {
                "text": "<length>"
              },
              "name": "--pf-c-tabs--m-box__item--m-current--last-child__link--before--BorderRightWidth",
              "default": "1px"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-tabs__link--BackgroundColor",
              "default": "#f0f0f0"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-tabs__link--disabled--BackgroundColor",
              "default": "#d2d2d2"
            },
            {
              "type": {
                "text": "<length>"
              },
              "name": "--pf-c-tabs__link--before--BorderTopWidth",
              "default": "1px"
            },
            {
              "type": {
                "text": "<length>"
              },
              "name": "--pf-c-tabs__link--before--BorderBottomWidth",
              "default": "1px"
            },
            {
              "type": {
                "text": "<length>"
              },
              "name": "--pf-c-tabs__link--before--BorderLeftWidth",
              "default": "0"
            },
            {
              "type": {
                "text": "<length>"
              },
              "name": "--pf-c-tabs__link--before--BorderRightWidth",
              "default": "1px"
            },
            {
              "type": {
                "text": "<length>"
              },
              "name": "--pf-c-tabs__link--disabled--before--BorderRightWidth",
              "default": "1px"
            },
            {
              "type": {
                "text": "<length>"
              },
              "name": "--pf-c-tabs__link--after--Top",
              "default": "auto"
            },
            {
              "type": {
                "text": "<length>"
              },
              "name": "--pf-c-tabs__link--after--Right",
              "default": "0"
            },
            {
              "type": {
                "text": "<length>"
              },
              "name": "--pf-c-tabs__link--after--Bottom",
              "default": "0"
            },
            {
              "type": {
                "text": "<length>"
              },
              "name": "--pf-c-tabs__link--before--Left",
              "default": "0"
            },
            {
              "type": {
                "text": "<length>"
              },
              "name": "--pf-c-tabs__link--PaddingTop",
              "default": "1rem"
            },
            {
              "type": {
                "text": "<length>"
              },
              "name": "--pf-c-tabs__link--PaddingBottom",
              "default": "1rem"
            },
            {
              "type": {
                "text": "<length>"
              },
              "name": "--pf-c-tabs__link--disabled--before--BorderBottomWidth",
              "default": "1px"
            },
            {
              "type": {
                "text": "<length>"
              },
              "name": "--pf-c-tabs__link--disabled--before--BorderLeftWidth",
              "default": "1px"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-tabs__link--before--BorderTopColor",
              "default": "#d2d2d2"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-tabs__link--before--BorderRightColor",
              "default": "#d2d2d2"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-tabs__link--before--BorderBottomColor",
              "default": "#d2d2d2"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-tabs__link--before--BorderLeftColor",
              "default": "#d2d2d2"
            },
            {
              "type": {
                "text": "<length>"
              },
              "name": "--pf-c-tabs__link--FontSize",
              "default": "1rem"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-tabs__link--Color",
              "default": "#6a6e73"
            },
            {
              "type": {
                "text": "<length>"
              },
              "name": "--pf-c-tabs__link--OutlineOffset",
              "default": "-0.375rem"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-tabs__link--after--BorderColor",
              "default": "#b8bbbe"
            },
            {
              "type": {
                "text": "<length>"
              },
              "name": "--pf-c-tabs__link--after--BorderTopWidth",
              "default": "0"
            },
            {
              "type": {
                "text": "<length>"
              },
              "name": "--pf-c-tabs__link--after--BorderRightWidth",
              "default": "0"
            },
            {
              "type": {
                "text": "<length>"
              },
              "name": "--pf-c-tabs__link--after--BorderBottomWidth",
              "default": "0"
            },
            {
              "type": {
                "text": "<length>"
              },
              "name": "--pf-c-tabs__link--after--BorderLeftWidth",
              "default": "0"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-tabs__item--m-current__link--Color",
              "default": "#151515"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-tabs__item--m-current__link--after--BorderColor",
              "default": "#06c"
            },
            {
              "type": {
                "text": "<length>"
              },
              "name": "--pf-c-tabs__item--m-current__link--after--BorderWidth",
              "default": "3px"
            },
            {
              "type": {
                "text": "<length>"
              },
              "name": "--pf-c-tabs__link--child--MarginRight",
              "default": "1rem"
            }
          ],
          "cssParts": [
            {
              "description": "button element",
              "name": "button"
            },
            {
              "description": "span container for the icon",
              "name": "icon"
            },
            {
              "description": "span container for the title text",
              "name": "text"
            }
          ],
          "slots": [
            {
              "description": "Can contain an `<svg>` or `<pf-icon>`",
              "name": "icon"
            },
            {
              "description": "Tab title text"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "icons",
              "type": {
                "text": "HTMLElement[] | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "active",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "active",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "disabled",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "ctx",
              "type": {
                "text": "PfTabsContext | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "#internals",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "#onClick",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "#onKeydown",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "KeyboardEvent"
                  }
                }
              ],
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "#onFocus",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "#activate",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "activeChanged",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "old",
                  "type": {
                    "text": "boolean"
                  }
                },
                {
                  "name": "active",
                  "type": {
                    "text": "boolean"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "disabledChanged",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            }
          ],
          "events": [
            {
              "type": {
                "text": "TabExpandEvent"
              },
              "description": "when a tab expands",
              "name": "expand"
            }
          ],
          "attributes": [
            {
              "name": "active",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "active"
            },
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "disabled"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "pf-tab",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PfTab",
          "declaration": {
            "name": "PfTab",
            "module": "pf-tabs/pf-tab.js"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "pf-tab",
          "declaration": {
            "name": "PfTab",
            "module": "pf-tabs/pf-tab.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "pf-tabs/pf-tabs.js",
      "declarations": [
        {
          "kind": "class",
          "description": "**Tabs** allow users to navigate between views within the same page or context.",
          "name": "PfTabs",
          "cssProperties": [
            {
              "type": {
                "text": "<length>"
              },
              "name": "--pf-c-tabs--Width",
              "default": "auto"
            },
            {
              "type": {
                "text": "<length>"
              },
              "name": "--pf-c-tabs--inset",
              "default": "0"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-tabs--before--BorderColor",
              "default": "#d2d2d2"
            },
            {
              "type": {
                "text": "<length>"
              },
              "name": "--pf-c-tabs--before--BorderTopWidth",
              "default": "0"
            },
            {
              "type": {
                "text": "<length>"
              },
              "name": "--pf-c-tabs--before--BorderRightWidth",
              "default": "0"
            },
            {
              "type": {
                "text": "<length>"
              },
              "name": "--pf-c-tabs--before--BorderBottomWidth",
              "default": "1px"
            },
            {
              "type": {
                "text": "<length>"
              },
              "name": "--pf-c-tabs--before---BorderLeftWidth",
              "default": "0"
            },
            {
              "type": {
                "text": "<length>"
              },
              "name": "--pf-c-tabs--m-vertical--MaxWidth",
              "default": "15.625rem"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-tabs--m-vertical__list--before--BorderColor",
              "default": "#d2d2d2"
            },
            {
              "type": {
                "text": "<length>"
              },
              "name": "--pf-c-tabs--m-vertical__list--before--BorderTopWidth",
              "default": "0"
            },
            {
              "type": {
                "text": "<length>"
              },
              "name": "--pf-c-tabs--m-vertical__list--before--BorderRightWidth",
              "default": "0"
            },
            {
              "type": {
                "text": "<length>"
              },
              "name": "--pf-c-tabs--m-vertical__list--before--BorderBottomWidth",
              "default": "0"
            },
            {
              "type": {
                "text": "<length>"
              },
              "name": "--pf-c-tabs--m-vertical__list--before--BorderLeftWidth",
              "default": "1px"
            },
            {
              "type": {
                "text": "<length>"
              },
              "name": "--pf-c-tabs--m-vertical--m-box--inset",
              "default": "2rem"
            },
            {
              "type": {
                "text": "<display>"
              },
              "name": "--pf-c-tabs__list--Display",
              "default": "flex"
            },
            {
              "type": {
                "text": "<length>"
              },
              "name": "--pf-c-tabs__scroll-button--Width",
              "default": "3rem"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-tabs__scroll-button--Color",
              "default": "#151515"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-tabs__scroll-button--BackgroundColor",
              "default": "#ffffff"
            },
            {
              "type": {
                "text": "<length>"
              },
              "name": "--pf-c-tabs__scroll-button--OutlineOffset",
              "default": "-0.25rem"
            },
            {
              "type": {
                "text": "<time>"
              },
              "name": "--pf-c-tabs__scroll-button--TransitionDuration--margin",
              "default": ".125s"
            },
            {
              "type": {
                "text": "<time>"
              },
              "name": "--pf-c-tabs__scroll-button--TransitionDuration--transform",
              "default": ".125s"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-tabs__scroll-button--hover--Color",
              "default": "#06c"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-tabs__scroll-button--before--BorderColor",
              "default": "#d2d2d2"
            },
            {
              "type": {
                "text": "<length>"
              },
              "name": "--pf-c-tabs__scroll-button--before--BorderRightWidth",
              "default": "0"
            },
            {
              "type": {
                "text": "<length>"
              },
              "name": "--pf-c-tabs__scroll-button--before--BorderBottomWidth",
              "default": "1px"
            },
            {
              "type": {
                "text": "<length>"
              },
              "name": "--pf-c-tabs__scroll-button--before--BorderLeftWidth",
              "default": "0"
            },
            {
              "type": {
                "text": "<length>"
              },
              "name": "--pf-c-tabs__scroll-button--before--border-width--base",
              "default": "1px"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-tabs__scroll-button--disabled--Color",
              "default": "#d2d2d2"
            }
          ],
          "cssParts": [
            {
              "description": "outer container",
              "name": "container"
            },
            {
              "description": "tabs container",
              "name": "tabs-container"
            },
            {
              "description": "tablist",
              "name": "tabs"
            },
            {
              "description": "panels",
              "name": "panels"
            }
          ],
          "slots": [
            {
              "description": "Must contain one or more `<pf-tab>`",
              "name": "tab"
            },
            {
              "description": "Must contain one or more `<pf-panel>`",
              "name": ""
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "scrollTimeoutDelay",
              "type": {
                "text": "number"
              },
              "privacy": "protected",
              "static": true,
              "default": "150",
              "readonly": true
            },
            {
              "kind": "method",
              "name": "isExpandEvent",
              "static": true,
              "return": {
                "type": {
                  "text": "event is TabExpandEvent<PfTab>"
                }
              },
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "labelScrollLeft",
              "type": {
                "text": "string"
              },
              "default": "'Scroll left'",
              "description": "Aria Label for the left scroll button",
              "attribute": "label-scroll-left"
            },
            {
              "kind": "field",
              "name": "labelScrollRight",
              "type": {
                "text": "string"
              },
              "default": "'Scroll left'",
              "description": "Aria Label for the right scroll button",
              "attribute": "label-scroll-right"
            },
            {
              "kind": "field",
              "name": "box",
              "type": {
                "text": "'light' | 'dark' | null"
              },
              "default": "null",
              "description": "Box styling on tabs. Defaults to null",
              "attribute": "box",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "vertical",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Set to true to enable vertical tab styling.",
              "attribute": "vertical",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "fill",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Set to true to enable filled tab styling.",
              "attribute": "fill",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "borderBottom",
              "type": {
                "text": "'true' | 'false'"
              },
              "default": "'true'",
              "description": "Border bottom tab styling on tabs. To remove the bottom border, set this prop to false.",
              "attribute": "border-bottom"
            },
            {
              "kind": "field",
              "name": "manual",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Set's the tabs to be manually activated. This means that the tabs will not automatically select\nunless a user clicks on them or uses the keyboard space or enter key to select them.  Roving\ntabindex will still update allowing user to keyboard navigate through the tabs with arrow keys.",
              "attribute": "manual",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "#activeIndex",
              "privacy": "private",
              "type": {
                "text": "number"
              },
              "default": "-1"
            },
            {
              "kind": "field",
              "name": "activeIndex",
              "description": "The index of the active tab",
              "attribute": "active-index",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "activeTab",
              "type": {
                "text": "PfTab | undefined"
              }
            },
            {
              "kind": "field",
              "name": "tabs",
              "type": {
                "text": "PfTab[]"
              },
              "readonly": true
            },
            {
              "kind": "field",
              "name": "tabsContainer",
              "type": {
                "text": "HTMLElement"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "#ctx",
              "privacy": "private",
              "type": {
                "text": "PfTabsContext"
              },
              "readonly": true
            },
            {
              "kind": "field",
              "name": "ctx",
              "type": {
                "text": "PfTabsContext"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "#overflow",
              "privacy": "private",
              "default": "new OverflowController(this, { scrollTimeoutDelay: 200 })"
            },
            {
              "kind": "field",
              "name": "#tabs",
              "privacy": "private",
              "default": "new TabsAriaController<PfTab, PfTabPanel>(this, {\n    isTab: (x): x is PfTab => (x as HTMLElement).localName === 'pf-tab',\n    isPanel: (x): x is PfTabPanel => (x as HTMLElement).localName === 'pf-tab-panel',\n    isActiveTab: x => x.active,\n  })"
            },
            {
              "kind": "field",
              "name": "#tabindex",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "#logger",
              "privacy": "private",
              "default": "new Logger(this)"
            },
            {
              "kind": "method",
              "name": "getUpdateComplete",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "Promise<boolean>"
                }
              }
            },
            {
              "kind": "method",
              "name": "activeTabChanged",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "old",
                  "optional": true,
                  "type": {
                    "text": "PfTab"
                  }
                },
                {
                  "name": "activeTab",
                  "optional": true,
                  "type": {
                    "text": "PfTab"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "#scrollLeft",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "#scrollRight",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "#onSlotChange",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "#onExpand",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "Event"
                  }
                }
              ],
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "select",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "tab",
                  "type": {
                    "text": "PfTab | number"
                  }
                }
              ]
            }
          ],
          "attributes": [
            {
              "name": "label-scroll-left",
              "type": {
                "text": "string"
              },
              "default": "'Scroll left'",
              "description": "Aria Label for the left scroll button",
              "fieldName": "labelScrollLeft"
            },
            {
              "name": "label-scroll-right",
              "type": {
                "text": "string"
              },
              "default": "'Scroll left'",
              "description": "Aria Label for the right scroll button",
              "fieldName": "labelScrollRight"
            },
            {
              "name": "box",
              "type": {
                "text": "'light' | 'dark' | null"
              },
              "default": "null",
              "description": "Box styling on tabs. Defaults to null",
              "fieldName": "box"
            },
            {
              "name": "vertical",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Set to true to enable vertical tab styling.",
              "fieldName": "vertical"
            },
            {
              "name": "fill",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Set to true to enable filled tab styling.",
              "fieldName": "fill"
            },
            {
              "name": "border-bottom",
              "type": {
                "text": "'true' | 'false'"
              },
              "default": "'true'",
              "description": "Border bottom tab styling on tabs. To remove the bottom border, set this prop to false.",
              "fieldName": "borderBottom"
            },
            {
              "name": "manual",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Set's the tabs to be manually activated. This means that the tabs will not automatically select\nunless a user clicks on them or uses the keyboard space or enter key to select them.  Roving\ntabindex will still update allowing user to keyboard navigate through the tabs with arrow keys.",
              "fieldName": "manual"
            },
            {
              "name": "active-index",
              "description": "The index of the active tab",
              "fieldName": "activeIndex"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "pf-tabs",
          "customElement": true,
          "demos": [
            {
              "url": "https://patternflyelements.org/components/tabs/demo/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-tabs/demo/pf-tabs.html"
              }
            },
            {
              "url": "https://patternflyelements.org/components/tabs/demo/active-tab-disabled/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-tabs/demo/active-tab-disabled.html"
              }
            },
            {
              "url": "https://patternflyelements.org/components/tabs/demo/active-tab-is-disabled/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-tabs/demo/active-tab-is-disabled.html"
              }
            },
            {
              "url": "https://patternflyelements.org/components/tabs/demo/box/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-tabs/demo/box.html"
              }
            },
            {
              "url": "https://patternflyelements.org/components/tabs/demo/dynamic-tabs/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-tabs/demo/dynamic-tabs.html"
              }
            },
            {
              "url": "https://patternflyelements.org/components/tabs/demo/filled-with-icons/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-tabs/demo/filled-with-icons.html"
              }
            },
            {
              "url": "https://patternflyelements.org/components/tabs/demo/filled/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-tabs/demo/filled.html"
              }
            },
            {
              "url": "https://patternflyelements.org/components/tabs/demo/icons-and-text/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-tabs/demo/icons-and-text.html"
              }
            },
            {
              "url": "https://patternflyelements.org/components/tabs/demo/inset/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-tabs/demo/inset.html"
              }
            },
            {
              "url": "https://patternflyelements.org/components/tabs/demo/manual-activation/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-tabs/demo/manual-activation.html"
              }
            },
            {
              "url": "https://patternflyelements.org/components/tabs/demo/nested/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-tabs/demo/nested.html"
              }
            },
            {
              "url": "https://patternflyelements.org/components/tabs/demo/overflow/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-tabs/demo/overflow.html"
              }
            },
            {
              "url": "https://patternflyelements.org/components/tabs/demo/tabs-first-in-markup/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-tabs/demo/tabs-first-in-markup.html"
              }
            },
            {
              "url": "https://patternflyelements.org/components/tabs/demo/vertical/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-tabs/demo/vertical.html"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PfTabs",
          "declaration": {
            "name": "PfTabs",
            "module": "pf-tabs/pf-tabs.js"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "pf-tabs",
          "declaration": {
            "name": "PfTabs",
            "module": "pf-tabs/pf-tabs.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "pf-text-area/pf-text-area.js",
      "declarations": [
        {
          "kind": "class",
          "description": "A **text area** component is used for entering a paragraph of text that is longer than one line.",
          "name": "PfTextArea",
          "cssProperties": [
            {
              "description": "-",
              "name": "--pf-c-form-control--Color",
              "default": "var(--pf-global--Color--100, #151515)"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--FontSize",
              "default": "var(--pf-global--FontSize--md, 1rem)"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--LineHeight",
              "default": "var(--pf-global--LineHeight--md, 1.5)"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--BorderWidth",
              "default": "var(--pf-global--BorderWidth--sm, 1px)"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--BorderTopColor",
              "default": "var(--pf-global--BorderColor--300, #f0f0f0)"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--BorderRightColor",
              "default": "var(--pf-global--BorderColor--300, #f0f0f0)"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--BorderBottomColor",
              "default": "var(--pf-global--BorderColor--200, #8a8d90)"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--BorderLeftColor",
              "default": "var(--pf-global--BorderColor--300, #f0f0f0)"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--BorderRadius",
              "default": "0"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--BackgroundColor",
              "default": "var(--pf-global--BackgroundColor--100, #fff)"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--Width",
              "default": "100"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--Height",
              "default": "calc(var(--pf-c-form-control--FontSize) * var(--pf-c-form-control--LineHeight) + var(--pf-c-form-control--BorderWidth) * 2 + var(--pf-c-form-control--PaddingTop) + var(--pf-c-form-control--PaddingBottom))"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--inset--base",
              "default": "var(--pf-global--spacer--sm, 0.5rem)"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--PaddingTop",
              "default": "calc(var(--pf-global--spacer--form-element, 0.375rem) - var(--pf-global--BorderWidth--sm, 1px))"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--PaddingBottom",
              "default": "calc(var(--pf-global--spacer--form-element, 0.375rem) - var(--pf-global--BorderWidth--sm, 1px))"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--PaddingRight",
              "default": "var(--pf-c-form-control--inset--base)"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--PaddingLeft",
              "default": "var(--pf-c-form-control--inset--base)"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--hover--BorderBottomColor",
              "default": "var(--pf-global--primary-color--100, #06c)"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--focus--BorderBottomWidth",
              "default": "var(--pf-global--BorderWidth--md, 2px)"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--focus--PaddingBottom",
              "default": "calc(var(--pf-global--spacer--form-element, 0.375rem) - var(--pf-c-form-control--focus--BorderBottomWidth))"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--focus--BorderBottomColor",
              "default": "var(--pf-global--primary-color--100, #06c)"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--m-expanded--BorderBottomWidth",
              "default": "var(--pf-global--BorderWidth--md, 2px)"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--m-expanded--PaddingBottom",
              "default": "calc(var(--pf-global--spacer--form-element, 0.375rem) - var(--pf-c-form-control--focus--BorderBottomWidth))"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--m-expanded--BorderBottomColor",
              "default": "var(--pf-global--primary-color--100, #06c)"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--placeholder--Color",
              "default": "var(--pf-global--Color--dark-200, #6a6e73)"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--placeholder--child--Color",
              "default": "var(--pf-global--Color--100, #151515)"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--disabled--Color",
              "default": "var(--pf-global--disabled-color--100, #6a6e73)"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--disabled--BackgroundColor",
              "default": "var(--pf-global--disabled-color--300, #f0f0f0)"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--disabled--BorderColor",
              "default": "transparent"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--readonly--BackgroundColor",
              "default": "var(--pf-global--disabled-color--300, #f0f0f0)"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--readonly--hover--BorderBottomColor",
              "default": "var(--pf-global--BorderColor--200, #8a8d90)"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--readonly--focus--PaddingBottom",
              "default": "calc(var(--pf-global--spacer--form-element, 0.375rem) - var(--pf-global--BorderWidth--sm, 1px))"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--readonly--focus--BorderBottomWidth",
              "default": "var(--pf-global--BorderWidth--sm, 1px)"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--readonly--focus--BorderBottomColor",
              "default": "var(--pf-global--BorderColor--200, #8a8d90)"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--readonly--m-plain--BackgroundColor",
              "default": "transparent"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--readonly--m-plain--inset--base",
              "default": "0"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--success--BorderBottomWidth",
              "default": "var(--pf-global--BorderWidth--md, 2px)"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--success--PaddingBottom",
              "default": "calc(var(--pf-global--spacer--form-element, 0.375rem) - var(--pf-c-form-control--success--BorderBottomWidth))"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--success--BorderBottomColor",
              "default": "var(--pf-global--success-color--100, #3e8635)"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--success--PaddingRight",
              "default": "var(--pf-global--spacer--xl, 2rem)"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--success--BackgroundPositionX",
              "default": "calc(100 - var(--pf-c-form-control--PaddingLeft))"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--success--BackgroundPositionY",
              "default": "center"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--success--BackgroundPosition",
              "default": "var(--pf-c-form-control--success--BackgroundPositionX) var(--pf-c-form-control--success--BackgroundPositionY)"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--success--BackgroundSizeX",
              "default": "var(--pf-c-form-control--FontSize)"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--success--BackgroundSizeY",
              "default": "var(--pf-c-form-control--FontSize)"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--success--BackgroundSize",
              "default": "var(--pf-c-form-control--success--BackgroundSizeX) var(--pf-c-form-control--success--BackgroundSizeY)"
            },
            {
              "name": "--pf-c-form-control--success--BackgroundUrl"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--m-warning--BorderBottomWidth",
              "default": "var(--pf-global--BorderWidth--md, 2px)"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--m-warning--PaddingBottom",
              "default": "calc(var(--pf-global--spacer--form-element, 0.375rem) - var(--pf-c-form-control--m-warning--BorderBottomWidth))"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--m-warning--BorderBottomColor",
              "default": "var(--pf-global--warning-color--100, #f0ab00)"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--m-warning--PaddingRight",
              "default": "var(--pf-global--spacer--xl, 2rem)"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--m-warning--BackgroundPositionX",
              "default": "calc(100 - calc(var(--pf-c-form-control--PaddingLeft) - 0.0625rem))"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--m-warning--BackgroundPositionY",
              "default": "center"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--m-warning--BackgroundPosition",
              "default": "var(--pf-c-form-control--m-warning--BackgroundPositionX) var(--pf-c-form-control--m-warning--BackgroundPositionY)"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--m-warning--BackgroundSizeX",
              "default": "1.25rem"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--m-warning--BackgroundSizeY",
              "default": "var(--pf-c-form-control--FontSize)"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--m-warning--BackgroundSize",
              "default": "var(--pf-c-form-control--m-warning--BackgroundSizeX) var(--pf-c-form-control--m-warning--BackgroundSizeY)"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--m-warning--BackgroundUrl"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--invalid--BorderBottomWidth",
              "default": "var(--pf-global--BorderWidth--md, 2px)"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--invalid--PaddingBottom",
              "default": "calc(var(--pf-global--spacer--form-element, 0.375rem) - var(--pf-c-form-control--invalid--BorderBottomWidth))"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--invalid--BorderBottomColor",
              "default": "var(--pf-global--danger-color--100, #c9190b)"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--invalid--PaddingRight",
              "default": "var(--pf-global--spacer--xl, 2rem)"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--invalid--BackgroundPositionX",
              "default": "calc(100 - var(--pf-c-form-control--PaddingLeft))"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--invalid--BackgroundPositionY",
              "default": "center"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--invalid--BackgroundPosition",
              "default": "var(--pf-c-form-control--invalid--BackgroundPositionX) var(--pf-c-form-control--invalid--BackgroundPositionY)"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--invalid--BackgroundSizeX",
              "default": "var(--pf-c-form-control--FontSize)"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--invalid--BackgroundSizeY",
              "default": "var(--pf-c-form-control--FontSize)"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--invalid--BackgroundSize",
              "default": "var(--pf-c-form-control--invalid--BackgroundSizeX) var(--pf-c-form-control--invalid--BackgroundSizeY)"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--invalid--BackgroundUrl"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--invalid--exclamation--Background",
              "default": "var(--pf-c-form-control--invalid--BackgroundUrl) var(--pf-c-form-control--invalid--BackgroundPosition) / var(--pf-c-form-control--invalid--BackgroundSize) no-repeat"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--invalid--Background",
              "default": "var(--pf-c-form-control--BackgroundColor) var(--pf-c-form-control--invalid--exclamation--Background)"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--m-search--PaddingLeft",
              "default": "var(--pf-global--spacer--xl, 2rem)"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--m-search--BackgroundPosition",
              "default": "var(--pf-c-form-control--PaddingRight)"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--m-search--BackgroundSize",
              "default": "var(--pf-c-form-control--FontSize) var(--pf-c-form-control--FontSize)"
            },
            {},
            {
              "description": "-",
              "name": "--pf-c-form-control--m-icon--PaddingRight",
              "default": "calc(var(--pf-c-form-control--inset--base) + var(--pf-c-form-control--m-icon--BackgroundSizeX) + var(--pf-c-form-control--m-icon--icon--spacer))"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--m-icon--BackgroundUrl",
              "default": "none"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--m-icon--BackgroundPositionX",
              "default": "calc(100 - var(--pf-c-form-control--inset--base))"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--m-icon--BackgroundPositionY",
              "default": "center"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--m-icon--BackgroundSizeX",
              "default": "var(--pf-c-form-control--FontSize)"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--m-icon--BackgroundSizeY",
              "default": "var(--pf-c-form-control--FontSize)"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--m-icon--icon--spacer",
              "default": "var(--pf-global--spacer--sm, 0.5rem)"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--m-icon--icon--PaddingRight",
              "default": "calc(var(--pf-c-form-control--inset--base) + var(--pf-c-form-control--invalid--BackgroundSizeX) + var(--pf-c-form-control--m-icon--icon--spacer) + var(--pf-c-form-control--m-icon--BackgroundSizeX) + var(--pf-c-form-control--m-icon--icon--spacer))"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--m-icon--icon--BackgroundPositionX",
              "default": "calc(var(--pf-c-form-control--m-icon--BackgroundPositionX) - var(--pf-c-form-control--m-icon--icon--spacer) - var(--pf-c-form-control--invalid--BackgroundSizeX))"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--m-icon--invalid--BackgroundUrl",
              "default": "var(--pf-c-form-control--invalid--BackgroundUrl), var(--pf-c-form-control--m-icon--BackgroundUrl)"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--m-icon--invalid--BackgroundPosition",
              "default": "var(--pf-c-form-control--invalid--BackgroundPosition), var(--pf-c-form-control--m-icon--icon--BackgroundPositionX) var(--pf-c-form-control--m-icon--BackgroundPositionY)"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--m-icon--invalid--BackgroundSize",
              "default": "var(--pf-c-form-control--invalid--BackgroundSize), var(--pf-c-form-control--m-icon--BackgroundSizeX) var(--pf-c-form-control--m-icon--BackgroundSizeY)"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--m-icon--success--BackgroundUrl",
              "default": "var(--pf-c-form-control--success--BackgroundUrl), var(--pf-c-form-control--m-icon--BackgroundUrl)"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--m-icon--success--BackgroundPosition",
              "default": "var(--pf-c-form-control--success--BackgroundPosition), var(--pf-c-form-control--m-icon--icon--BackgroundPositionX) var(--pf-c-form-control--m-icon--BackgroundPositionY)"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--m-icon--success--BackgroundSize",
              "default": "var(--pf-c-form-control--success--BackgroundSize), var(--pf-c-form-control--m-icon--BackgroundSizeX) var(--pf-c-form-control--m-icon--BackgroundSizeY)"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--m-icon--m-warning--BackgroundUrl",
              "default": "var(--pf-c-form-control--m-warning--BackgroundUrl), var(--pf-c-form-control--m-icon--BackgroundUrl)"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--m-icon--m-warning--BackgroundPosition",
              "default": "var(--pf-c-form-control--m-warning--BackgroundPosition), var(--pf-c-form-control--m-icon--icon--BackgroundPositionX) var(--pf-c-form-control--m-icon--BackgroundPositionY)"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--m-icon--m-warning--BackgroundSize",
              "default": "var(--pf-c-form-control--m-warning--BackgroundSize), var(--pf-c-form-control--m-icon--BackgroundSizeX) var(--pf-c-form-control--m-icon--BackgroundSizeY)"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--m-calendar--BackgroundUrl"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--m-clock--BackgroundUrl"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control__select--PaddingRight",
              "default": "calc(var(--pf-global--spacer--lg, 1.5rem) + var(--pf-c-form-control--BorderWidth) + var(--pf-c-form-control--BorderWidth))"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control__select--PaddingLeft",
              "default": "calc(var(--pf-global--spacer--sm, 0.5rem) - var(--pf-c-form-control--BorderWidth))"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control__select--BackgroundUrl"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control__select--BackgroundSize",
              "default": ".625em"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control__select--BackgroundPositionX",
              "default": "calc(100 - var(--pf-global--spacer--md, 1rem) + 1px)"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control__select--BackgroundPositionY",
              "default": "center"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control__select--BackgroundPosition",
              "default": "var(--pf-c-form-control__select--BackgroundPositionX) var(--pf-c-form-control__select--BackgroundPositionY)"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control__select--success--PaddingRight",
              "default": "var(--pf-global--spacer--3xl, 4rem)"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control__select--success--BackgroundPosition",
              "default": "calc(var(--pf-c-form-control__select--BackgroundPositionX) - var(--pf-global--spacer--lg, 1.5rem))"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control__select--m-warning--PaddingRight",
              "default": "var(--pf-global--spacer--3xl, 4rem)"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control__select--m-warning--BackgroundPosition",
              "default": "calc(var(--pf-c-form-control__select--BackgroundPositionX) - var(--pf-global--spacer--lg, 1.5rem) + 0.0625rem)"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control__select--invalid--PaddingRight",
              "default": "var(--pf-global--spacer--3xl, 4rem)"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control__select--invalid--BackgroundPosition",
              "default": "calc(var(--pf-c-form-control__select--BackgroundPositionX) - var(--pf-global--spacer--lg, 1.5rem))"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--textarea--Width",
              "default": "var(--pf-c-form-control--Width)"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--textarea--Height",
              "default": "auto"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--textarea--success--BackgroundPositionY",
              "default": "var(--pf-c-form-control--PaddingLeft)"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--textarea--m-warning--BackgroundPositionY",
              "default": "var(--pf-c-form-control--PaddingLeft)"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--textarea--invalid--BackgroundPositionY",
              "default": "var(--pf-c-form-control--PaddingLeft)"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--m-icon-sprite--success--BackgroundUrl"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--m-icon-sprite--m-warning--BackgroundUrl"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--m-icon-sprite--invalid--BackgroundUrl"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--m-icon-sprite__select--BackgroundUrl"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--m-icon-sprite--m-search--BackgroundUrl"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--m-icon-sprite--m-calendar--BackgroundUrl"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--m-icon-sprite--m-clock--BackgroundUrl"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--m-icon-sprite__select--BackgroundSize",
              "default": "var(--pf-c-form-control--FontSize)"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--m-icon-sprite__select--BackgroundPositionX",
              "default": "calc(100 - var(--pf-global--spacer--md, 1rem) + 7px)"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--m-icon-sprite__select--success--BackgroundPosition",
              "default": "calc(100 - var(--pf-global--spacer--md, 1rem) + 1px - var(--pf-global--spacer--lg, 1.5rem))"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--m-icon-sprite__select--m-warning--BackgroundPosition",
              "default": "calc(100 - var(--pf-global--spacer--md, 1rem) - var(--pf-global--spacer--lg, 1.5rem) + 0.0625rem)"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--m-icon-sprite__select--invalid--BackgroundPosition",
              "default": "calc(100 - var(--pf-global--spacer--md, 1rem) - var(--pf-global--spacer--lg, 1.5rem))"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "formAssociated",
              "type": {
                "text": "boolean"
              },
              "static": true,
              "default": "true",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "shadowRootOptions",
              "type": {
                "text": "ShadowRootInit"
              },
              "static": true,
              "default": "{\n    ...LitElement.shadowRootOptions,\n    delegatesFocus: true,\n  }",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "accessibleLabel",
              "type": {
                "text": "string | undefined"
              },
              "description": "Accessible label for the input when no `<label>` element is provided.",
              "attribute": "accessible-label",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "validated",
              "type": {
                "text": "'success' | 'warning' | undefined"
              },
              "description": "Value to indicate if the input is modified to show that validation state.\nIf set to success, input will be modified to indicate valid state.\nIf set to warning,  input will be modified to indicate warning state.\nInvalid inputs will display an error state",
              "attribute": "validated",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Flag to show if the input is disabled.",
              "attribute": "disabled",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Flag to show if the text area is required.",
              "attribute": "required",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "readonly",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Flag to show if the input is read only.",
              "attribute": "readonly",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "placeholder",
              "type": {
                "text": "string | undefined"
              },
              "description": "Input placeholder.",
              "attribute": "placeholder"
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Value of the input.",
              "attribute": "value"
            },
            {
              "kind": "field",
              "name": "resize",
              "type": {
                "text": "'horizontal' | 'vertical' | 'both' | undefined"
              },
              "description": "Sets the orientation to limit the resize to",
              "attribute": "resize"
            },
            {
              "kind": "field",
              "name": "autoResize",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Flag to modify height based on contents.",
              "attribute": "auto-resize"
            },
            {
              "kind": "field",
              "name": "#logger",
              "privacy": "private",
              "default": "new Logger(this)"
            },
            {
              "kind": "field",
              "name": "#internals",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "#derivedLabel",
              "privacy": "private",
              "type": {
                "text": "string"
              },
              "default": "''"
            },
            {
              "kind": "field",
              "name": "#disabled",
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "#input",
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "method",
              "name": "#onInput",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "Event"
                  }
                }
              ],
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "#autoSetHeight",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "#setValidityFromInput",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "formDisabledCallback",
              "return": {
                "type": {
                  "text": "Promise<void>"
                }
              }
            },
            {
              "kind": "method",
              "name": "setCustomValidity",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "message",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "checkValidity",
              "return": {
                "type": {
                  "text": "boolean"
                }
              }
            },
            {
              "kind": "method",
              "name": "reportValidity",
              "return": {
                "type": {
                  "text": "boolean"
                }
              }
            }
          ],
          "attributes": [
            {
              "name": "accessible-label",
              "type": {
                "text": "string | undefined"
              },
              "description": "Accessible label for the input when no `<label>` element is provided.",
              "fieldName": "accessibleLabel"
            },
            {
              "name": "validated",
              "type": {
                "text": "'success' | 'warning' | undefined"
              },
              "description": "Value to indicate if the input is modified to show that validation state.\nIf set to success, input will be modified to indicate valid state.\nIf set to warning,  input will be modified to indicate warning state.\nInvalid inputs will display an error state",
              "fieldName": "validated"
            },
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Flag to show if the input is disabled.",
              "fieldName": "disabled"
            },
            {
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Flag to show if the text area is required.",
              "fieldName": "required"
            },
            {
              "name": "readonly",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Flag to show if the input is read only.",
              "fieldName": "readonly"
            },
            {
              "name": "placeholder",
              "type": {
                "text": "string | undefined"
              },
              "description": "Input placeholder.",
              "fieldName": "placeholder"
            },
            {
              "name": "value",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Value of the input.",
              "fieldName": "value"
            },
            {
              "name": "resize",
              "type": {
                "text": "'horizontal' | 'vertical' | 'both' | undefined"
              },
              "description": "Sets the orientation to limit the resize to",
              "fieldName": "resize"
            },
            {
              "name": "auto-resize",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Flag to modify height based on contents.",
              "fieldName": "autoResize"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "pf-text-area",
          "customElement": true,
          "demos": [
            {
              "url": "https://patternflyelements.org/components/text-area/demo/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-text-area/demo/pf-text-area.html"
              }
            },
            {
              "url": "https://patternflyelements.org/components/text-area/demo/auto-resizing/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-text-area/demo/auto-resizing.html"
              }
            },
            {
              "url": "https://patternflyelements.org/components/text-area/demo/disabled/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-text-area/demo/disabled.html"
              }
            },
            {
              "url": "https://patternflyelements.org/components/text-area/demo/horizontally-resizable/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-text-area/demo/horizontally-resizable.html"
              }
            },
            {
              "url": "https://patternflyelements.org/components/text-area/demo/invalid/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-text-area/demo/invalid.html"
              }
            },
            {
              "url": "https://patternflyelements.org/components/text-area/demo/readonly/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-text-area/demo/readonly.html"
              }
            },
            {
              "url": "https://patternflyelements.org/components/text-area/demo/validated/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-text-area/demo/validated.html"
              }
            },
            {
              "url": "https://patternflyelements.org/components/text-area/demo/vertically-resizable/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-text-area/demo/vertically-resizable.html"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PfTextArea",
          "declaration": {
            "name": "PfTextArea",
            "module": "pf-text-area/pf-text-area.js"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "pf-text-area",
          "declaration": {
            "name": "PfTextArea",
            "module": "pf-text-area/pf-text-area.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "pf-text-input/pf-text-input.js",
      "declarations": [
        {
          "kind": "class",
          "description": "A **text input** is used to gather free-form text from a user.",
          "name": "PfTextInput",
          "cssProperties": [
            {
              "description": "-",
              "name": "--pf-c-form-control--Color",
              "default": "var(--pf-global--Color--100, #151515)"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--FontSize",
              "default": "var(--pf-global--FontSize--md, 1rem)"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--LineHeight",
              "default": "var(--pf-global--LineHeight--md, 1.5)"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--BorderWidth",
              "default": "var(--pf-global--BorderWidth--sm, 1px)"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--BorderTopColor",
              "default": "var(--pf-global--BorderColor--300, #f0f0f0)"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--BorderRightColor",
              "default": "var(--pf-global--BorderColor--300, #f0f0f0)"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--BorderBottomColor",
              "default": "var(--pf-global--BorderColor--200, #8a8d90)"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--BorderLeftColor",
              "default": "var(--pf-global--BorderColor--300, #f0f0f0)"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--BorderRadius",
              "default": "0"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--BackgroundColor",
              "default": "var(--pf-global--BackgroundColor--100, #fff)"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--Width",
              "default": "100"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--Height",
              "default": "calc(var(--pf-c-form-control--FontSize) * var(--pf-c-form-control--LineHeight) + var(--pf-c-form-control--BorderWidth) * 2 + var(--pf-c-form-control--PaddingTop) + var(--pf-c-form-control--PaddingBottom))"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--inset--base",
              "default": "var(--pf-global--spacer--sm, 0.5rem)"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--PaddingTop",
              "default": "calc(var(--pf-global--spacer--form-element, 0.375rem) - var(--pf-global--BorderWidth--sm, 1px))"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--PaddingBottom",
              "default": "calc(var(--pf-global--spacer--form-element, 0.375rem) - var(--pf-global--BorderWidth--sm, 1px))"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--PaddingRight",
              "default": "var(--pf-c-form-control--inset--base)"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--PaddingLeft",
              "default": "var(--pf-c-form-control--inset--base)"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--hover--BorderBottomColor",
              "default": "var(--pf-global--primary-color--100, #06c)"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--focus--BorderBottomWidth",
              "default": "var(--pf-global--BorderWidth--md, 2px)"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--focus--PaddingBottom",
              "default": "calc(var(--pf-global--spacer--form-element, 0.375rem) - var(--pf-c-form-control--focus--BorderBottomWidth))"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--focus--BorderBottomColor",
              "default": "var(--pf-global--primary-color--100, #06c)"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--m-expanded--BorderBottomWidth",
              "default": "var(--pf-global--BorderWidth--md, 2px)"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--m-expanded--PaddingBottom",
              "default": "calc(var(--pf-global--spacer--form-element, 0.375rem) - var(--pf-c-form-control--focus--BorderBottomWidth))"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--m-expanded--BorderBottomColor",
              "default": "var(--pf-global--primary-color--100, #06c)"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--placeholder--Color",
              "default": "var(--pf-global--Color--dark-200, #6a6e73)"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--placeholder--child--Color",
              "default": "var(--pf-global--Color--100, #151515)"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--disabled--Color",
              "default": "var(--pf-global--disabled-color--100, #6a6e73)"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--disabled--BackgroundColor",
              "default": "var(--pf-global--disabled-color--300, #f0f0f0)"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--disabled--BorderColor",
              "default": "transparent"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--readonly--BackgroundColor",
              "default": "var(--pf-global--disabled-color--300, #f0f0f0)"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--readonly--hover--BorderBottomColor",
              "default": "var(--pf-global--BorderColor--200, #8a8d90)"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--readonly--focus--PaddingBottom",
              "default": "calc(var(--pf-global--spacer--form-element, 0.375rem) - var(--pf-global--BorderWidth--sm, 1px))"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--readonly--focus--BorderBottomWidth",
              "default": "var(--pf-global--BorderWidth--sm, 1px)"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--readonly--focus--BorderBottomColor",
              "default": "var(--pf-global--BorderColor--200, #8a8d90)"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--readonly--m-plain--BackgroundColor",
              "default": "transparent"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--readonly--m-plain--inset--base",
              "default": "0"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--success--BorderBottomWidth",
              "default": "var(--pf-global--BorderWidth--md, 2px)"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--success--PaddingBottom",
              "default": "calc(var(--pf-global--spacer--form-element, 0.375rem) - var(--pf-c-form-control--success--BorderBottomWidth))"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--success--BorderBottomColor",
              "default": "var(--pf-global--success-color--100, #3e8635)"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--success--PaddingRight",
              "default": "var(--pf-global--spacer--xl, 2rem)"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--success--BackgroundPositionX",
              "default": "calc(100 - var(--pf-c-form-control--PaddingLeft))"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--success--BackgroundPositionY",
              "default": "center"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--success--BackgroundPosition",
              "default": "var(--pf-c-form-control--success--BackgroundPositionX) var(--pf-c-form-control--success--BackgroundPositionY)"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--success--BackgroundSizeX",
              "default": "var(--pf-c-form-control--FontSize)"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--success--BackgroundSizeY",
              "default": "var(--pf-c-form-control--FontSize)"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--success--BackgroundSize",
              "default": "var(--pf-c-form-control--success--BackgroundSizeX) var(--pf-c-form-control--success--BackgroundSizeY)"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--success--BackgroundUrl"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--m-warning--BorderBottomWidth",
              "default": "var(--pf-global--BorderWidth--md, 2px)"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--m-warning--PaddingBottom",
              "default": "calc(var(--pf-global--spacer--form-element, 0.375rem) - var(--pf-c-form-control--m-warning--BorderBottomWidth))"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--m-warning--BorderBottomColor",
              "default": "var(--pf-global--warning-color--100, #f0ab00)"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--m-warning--PaddingRight",
              "default": "var(--pf-global--spacer--xl, 2rem)"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--m-warning--BackgroundPositionX",
              "default": "calc(100 - calc(var(--pf-c-form-control--PaddingLeft) - 0.0625rem))"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--m-warning--BackgroundPositionY",
              "default": "center"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--m-warning--BackgroundPosition",
              "default": "var(--pf-c-form-control--m-warning--BackgroundPositionX) var(--pf-c-form-control--m-warning--BackgroundPositionY)"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--m-warning--BackgroundSizeX",
              "default": "1.25rem"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--m-warning--BackgroundSizeY",
              "default": "var(--pf-c-form-control--FontSize)"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--m-warning--BackgroundSize",
              "default": "var(--pf-c-form-control--m-warning--BackgroundSizeX) var(--pf-c-form-control--m-warning--BackgroundSizeY)"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--m-warning--BackgroundUrl"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--invalid--BorderBottomWidth",
              "default": "var(--pf-global--BorderWidth--md, 2px)"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--invalid--PaddingBottom",
              "default": "calc(var(--pf-global--spacer--form-element, 0.375rem) - var(--pf-c-form-control--invalid--BorderBottomWidth))"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--invalid--BorderBottomColor",
              "default": "var(--pf-global--danger-color--100, #c9190b)"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--invalid--PaddingRight",
              "default": "var(--pf-global--spacer--xl, 2rem)"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--invalid--BackgroundPositionX",
              "default": "calc(100 - var(--pf-c-form-control--PaddingLeft))"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--invalid--BackgroundPositionY",
              "default": "center"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--invalid--BackgroundPosition",
              "default": "var(--pf-c-form-control--invalid--BackgroundPositionX) var(--pf-c-form-control--invalid--BackgroundPositionY)"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--invalid--BackgroundSizeX",
              "default": "var(--pf-c-form-control--FontSize)"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--invalid--BackgroundSizeY",
              "default": "var(--pf-c-form-control--FontSize)"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--invalid--BackgroundSize",
              "default": "var(--pf-c-form-control--invalid--BackgroundSizeX) var(--pf-c-form-control--invalid--BackgroundSizeY)"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--invalid--BackgroundUrl"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--invalid--exclamation--Background",
              "default": "var(--pf-c-form-control--invalid--BackgroundUrl) var(--pf-c-form-control--invalid--BackgroundPosition) / var(--pf-c-form-control--invalid--BackgroundSize) no-repeat"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--invalid--Background",
              "default": "var(--pf-c-form-control--BackgroundColor) var(--pf-c-form-control--invalid--exclamation--Background)"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--m-search--PaddingLeft",
              "default": "var(--pf-global--spacer--xl, 2rem)"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--m-search--BackgroundPosition",
              "default": "var(--pf-c-form-control--PaddingRight)"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--m-search--BackgroundSize",
              "default": "var(--pf-c-form-control--FontSize) var(--pf-c-form-control--FontSize)"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--m-search--BackgroundUrl"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--m-icon--PaddingRight",
              "default": "calc(var(--pf-c-form-control--inset--base) + var(--pf-c-form-control--m-icon--BackgroundSizeX) + var(--pf-c-form-control--m-icon--icon--spacer))"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--m-icon--BackgroundUrl",
              "default": "none"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--m-icon--BackgroundPositionX",
              "default": "calc(100 - var(--pf-c-form-control--inset--base))"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--m-icon--BackgroundPositionY",
              "default": "center"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--m-icon--BackgroundSizeX",
              "default": "var(--pf-c-form-control--FontSize)"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--m-icon--BackgroundSizeY",
              "default": "var(--pf-c-form-control--FontSize)"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--m-icon--icon--spacer",
              "default": "var(--pf-global--spacer--sm, 0.5rem)"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--m-icon--icon--PaddingRight",
              "default": "calc(var(--pf-c-form-control--inset--base) + var(--pf-c-form-control--invalid--BackgroundSizeX) + var(--pf-c-form-control--m-icon--icon--spacer) + var(--pf-c-form-control--m-icon--BackgroundSizeX) + var(--pf-c-form-control--m-icon--icon--spacer))"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--m-icon--icon--BackgroundPositionX",
              "default": "calc(var(--pf-c-form-control--m-icon--BackgroundPositionX) - var(--pf-c-form-control--m-icon--icon--spacer) - var(--pf-c-form-control--invalid--BackgroundSizeX))"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--m-icon--invalid--BackgroundUrl",
              "default": "var(--pf-c-form-control--invalid--BackgroundUrl), var(--pf-c-form-control--m-icon--BackgroundUrl)"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--m-icon--invalid--BackgroundPosition",
              "default": "var(--pf-c-form-control--invalid--BackgroundPosition), var(--pf-c-form-control--m-icon--icon--BackgroundPositionX) var(--pf-c-form-control--m-icon--BackgroundPositionY)"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--m-icon--invalid--BackgroundSize",
              "default": "var(--pf-c-form-control--invalid--BackgroundSize), var(--pf-c-form-control--m-icon--BackgroundSizeX) var(--pf-c-form-control--m-icon--BackgroundSizeY)"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--m-icon--success--BackgroundUrl",
              "default": "var(--pf-c-form-control--success--BackgroundUrl), var(--pf-c-form-control--m-icon--BackgroundUrl)"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--m-icon--success--BackgroundPosition",
              "default": "var(--pf-c-form-control--success--BackgroundPosition), var(--pf-c-form-control--m-icon--icon--BackgroundPositionX) var(--pf-c-form-control--m-icon--BackgroundPositionY)"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--m-icon--success--BackgroundSize",
              "default": "var(--pf-c-form-control--success--BackgroundSize), var(--pf-c-form-control--m-icon--BackgroundSizeX) var(--pf-c-form-control--m-icon--BackgroundSizeY)"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--m-icon--m-warning--BackgroundUrl",
              "default": "var(--pf-c-form-control--m-warning--BackgroundUrl), var(--pf-c-form-control--m-icon--BackgroundUrl)"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--m-icon--m-warning--BackgroundPosition",
              "default": "var(--pf-c-form-control--m-warning--BackgroundPosition), var(--pf-c-form-control--m-icon--icon--BackgroundPositionX) var(--pf-c-form-control--m-icon--BackgroundPositionY)"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--m-icon--m-warning--BackgroundSize",
              "default": "var(--pf-c-form-control--m-warning--BackgroundSize), var(--pf-c-form-control--m-icon--BackgroundSizeX) var(--pf-c-form-control--m-icon--BackgroundSizeY)"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--m-calendar--BackgroundUrl"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--m-clock--BackgroundUrl"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control__select--PaddingRight",
              "default": "calc(var(--pf-global--spacer--lg, 1.5rem) + var(--pf-c-form-control--BorderWidth) + var(--pf-c-form-control--BorderWidth))"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control__select--PaddingLeft",
              "default": "calc(var(--pf-global--spacer--sm, 0.5rem) - var(--pf-c-form-control--BorderWidth))"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control__select--BackgroundUrl"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control__select--BackgroundSize",
              "default": ".625em"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control__select--BackgroundPositionX",
              "default": "calc(100 - var(--pf-global--spacer--md, 1rem) + 1px)"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control__select--BackgroundPositionY",
              "default": "center"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control__select--BackgroundPosition",
              "default": "var(--pf-c-form-control__select--BackgroundPositionX) var(--pf-c-form-control__select--BackgroundPositionY)"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control__select--success--PaddingRight",
              "default": "var(--pf-global--spacer--3xl, 4rem)"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control__select--success--BackgroundPosition",
              "default": "calc(var(--pf-c-form-control__select--BackgroundPositionX) - var(--pf-global--spacer--lg, 1.5rem))"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control__select--m-warning--PaddingRight",
              "default": "var(--pf-global--spacer--3xl, 4rem)"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control__select--m-warning--BackgroundPosition",
              "default": "calc(var(--pf-c-form-control__select--BackgroundPositionX) - var(--pf-global--spacer--lg, 1.5rem) + 0.0625rem)"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control__select--invalid--PaddingRight",
              "default": "var(--pf-global--spacer--3xl, 4rem)"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control__select--invalid--BackgroundPosition",
              "default": "calc(var(--pf-c-form-control__select--BackgroundPositionX) - var(--pf-global--spacer--lg, 1.5rem))"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--textarea--Width",
              "default": "var(--pf-c-form-control--Width)"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--textarea--Height",
              "default": "auto"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--textarea--success--BackgroundPositionY",
              "default": "var(--pf-c-form-control--PaddingLeft)"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--textarea--m-warning--BackgroundPositionY",
              "default": "var(--pf-c-form-control--PaddingLeft)"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--textarea--invalid--BackgroundPositionY",
              "default": "var(--pf-c-form-control--PaddingLeft)"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--m-icon-sprite--success--BackgroundUrl"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--m-icon-sprite--m-warning--BackgroundUrl"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--m-icon-sprite--invalid--BackgroundUrl"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--m-icon-sprite__select--BackgroundUrl"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--m-icon-sprite--m-search--BackgroundUrl"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--m-icon-sprite--m-calendar--BackgroundUrl"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--m-icon-sprite--m-clock--BackgroundUrl",
              "default": "url(/v4/images/status-icon-sprite.4fee9fefc3971799d2dd4de0a15617f0.svg#clock)"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--m-icon-sprite__select--BackgroundSize",
              "default": "var(--pf-c-form-control--FontSize)"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--m-icon-sprite__select--BackgroundPositionX",
              "default": "calc(100 - var(--pf-global--spacer--md, 1rem) + 7px)"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--m-icon-sprite__select--success--BackgroundPosition",
              "default": "calc(100 - var(--pf-global--spacer--md, 1rem) + 1px - var(--pf-global--spacer--lg, 1.5rem))"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--m-icon-sprite__select--m-warning--BackgroundPosition",
              "default": "calc(100 - var(--pf-global--spacer--md, 1rem) - var(--pf-global--spacer--lg, 1.5rem) + 0.0625rem)"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control--m-icon-sprite__select--invalid--BackgroundPosition",
              "default": "calc(100 - var(--pf-global--spacer--md, 1rem) - var(--pf-global--spacer--lg, 1.5rem))"
            },
            {
              "description": "-",
              "name": "--pf-c-form-control__error-text--m-status--Color",
              "default": "var(--pf-global--danger-color--100, #c9190b)"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "formAssociated",
              "type": {
                "text": "boolean"
              },
              "static": true,
              "default": "true",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "shadowRootOptions",
              "type": {
                "text": "ShadowRootInit"
              },
              "static": true,
              "default": "{\n    ...LitElement.shadowRootOptions,\n    delegatesFocus: true,\n  }",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "leftTruncated",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Trim text on left",
              "attribute": "left-truncated",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "validated",
              "type": {
                "text": "'success' | 'warning' | undefined"
              },
              "description": "Value to indicate if the input is modified to show that validation state.\nIf set to success, input will be modified to indicate valid state.\nIf set to warning,  input will be modified to indicate warning state.\nInvalid inputs will display an error state",
              "attribute": "validated",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "icon",
              "type": {
                "text": "'calendar' | 'clock' | 'search' | undefined"
              },
              "description": "icon variant",
              "attribute": "icon",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "accessibleLabel",
              "type": {
                "text": "string | undefined"
              },
              "description": "Accessible label for the input when no `<label>` element is provided.",
              "attribute": "accessible-label",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "customIconUrl",
              "type": {
                "text": "string | undefined"
              },
              "description": "Custom icon url to set as the text input's background-image",
              "attribute": "custom-icon-url",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "customIconDimensions",
              "type": {
                "text": "string | undefined"
              },
              "description": "Dimensions for the custom icon set as the text input's background-size",
              "attribute": "custom-icon-dimensions",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "plain",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "plain",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "type",
              "type": {
                "text": "| 'text'\n    | 'date'\n    | 'datetime-local'\n    | 'email'\n    | 'month'\n    | 'number'\n    | 'password'\n    | 'search'\n    | 'tel'\n    | 'time'\n    | 'url' | undefined"
              },
              "description": "Type that the input accepts.",
              "attribute": "type",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Flag to show if the input is disabled.",
              "attribute": "disabled",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Flag to show if the input is required.",
              "attribute": "required",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "pattern",
              "type": {
                "text": "string | undefined"
              },
              "description": "Validation pattern, like `<input>`",
              "attribute": "pattern"
            },
            {
              "kind": "field",
              "name": "readonly",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Flag to show if the input is read only.",
              "attribute": "readonly",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "helperText",
              "type": {
                "text": "string | undefined"
              },
              "description": "Helper text is text below a form field that helps a user provide the right information, like \"Enter a unique name\".",
              "attribute": "helper-text"
            },
            {
              "kind": "field",
              "name": "validateOn",
              "type": {
                "text": "'blur' | undefined"
              },
              "description": "If set to 'blur', will validate when focus leaves the input",
              "attribute": "validate-on"
            },
            {
              "kind": "field",
              "name": "errorText",
              "type": {
                "text": "string | undefined"
              },
              "description": "Displayed when validation fails",
              "attribute": "error-text"
            },
            {
              "kind": "field",
              "name": "placeholder",
              "type": {
                "text": "string | undefined"
              },
              "description": "Input placeholder.",
              "attribute": "placeholder"
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Value of the input.",
              "attribute": "value"
            },
            {
              "kind": "field",
              "name": "#internals",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "#derivedLabel",
              "privacy": "private",
              "type": {
                "text": "string"
              },
              "default": "''"
            },
            {
              "kind": "field",
              "name": "#touched",
              "privacy": "private",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "field",
              "name": "#disabled",
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "#input",
              "privacy": "private",
              "readonly": true
            },
            {
              "kind": "method",
              "name": "#onInput",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "Event & { target: HTMLInputElement }"
                  }
                }
              ],
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "#onKeydown",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "Event"
                  }
                }
              ],
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "#onBlur",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "#setValidityFromInput",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "formStateRestoreCallback",
              "return": {
                "type": {
                  "text": "Promise<void>"
                }
              },
              "parameters": [
                {
                  "name": "state",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "mode",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "formDisabledCallback",
              "return": {
                "type": {
                  "text": "Promise<void>"
                }
              }
            },
            {
              "kind": "method",
              "name": "setCustomValidity",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "message",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "checkValidity",
              "return": {
                "type": {
                  "text": "boolean"
                }
              }
            },
            {
              "kind": "method",
              "name": "reportValidity",
              "return": {
                "type": {
                  "text": "boolean"
                }
              }
            }
          ],
          "attributes": [
            {
              "name": "left-truncated",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Trim text on left",
              "fieldName": "leftTruncated"
            },
            {
              "name": "validated",
              "type": {
                "text": "'success' | 'warning' | undefined"
              },
              "description": "Value to indicate if the input is modified to show that validation state.\nIf set to success, input will be modified to indicate valid state.\nIf set to warning,  input will be modified to indicate warning state.\nInvalid inputs will display an error state",
              "fieldName": "validated"
            },
            {
              "name": "icon",
              "type": {
                "text": "'calendar' | 'clock' | 'search' | undefined"
              },
              "description": "icon variant",
              "fieldName": "icon"
            },
            {
              "name": "accessible-label",
              "type": {
                "text": "string | undefined"
              },
              "description": "Accessible label for the input when no `<label>` element is provided.",
              "fieldName": "accessibleLabel"
            },
            {
              "name": "custom-icon-url",
              "type": {
                "text": "string | undefined"
              },
              "description": "Custom icon url to set as the text input's background-image",
              "fieldName": "customIconUrl"
            },
            {
              "name": "custom-icon-dimensions",
              "type": {
                "text": "string | undefined"
              },
              "description": "Dimensions for the custom icon set as the text input's background-size",
              "fieldName": "customIconDimensions"
            },
            {
              "name": "plain",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "plain"
            },
            {
              "name": "type",
              "type": {
                "text": "| 'text'\n    | 'date'\n    | 'datetime-local'\n    | 'email'\n    | 'month'\n    | 'number'\n    | 'password'\n    | 'search'\n    | 'tel'\n    | 'time'\n    | 'url' | undefined"
              },
              "description": "Type that the input accepts.",
              "fieldName": "type"
            },
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Flag to show if the input is disabled.",
              "fieldName": "disabled"
            },
            {
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Flag to show if the input is required.",
              "fieldName": "required"
            },
            {
              "name": "pattern",
              "type": {
                "text": "string | undefined"
              },
              "description": "Validation pattern, like `<input>`",
              "fieldName": "pattern"
            },
            {
              "name": "readonly",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "Flag to show if the input is read only.",
              "fieldName": "readonly"
            },
            {
              "name": "helper-text",
              "type": {
                "text": "string | undefined"
              },
              "description": "Helper text is text below a form field that helps a user provide the right information, like \"Enter a unique name\".",
              "fieldName": "helperText"
            },
            {
              "name": "validate-on",
              "type": {
                "text": "'blur' | undefined"
              },
              "description": "If set to 'blur', will validate when focus leaves the input",
              "fieldName": "validateOn"
            },
            {
              "name": "error-text",
              "type": {
                "text": "string | undefined"
              },
              "description": "Displayed when validation fails",
              "fieldName": "errorText"
            },
            {
              "name": "placeholder",
              "type": {
                "text": "string | undefined"
              },
              "description": "Input placeholder.",
              "fieldName": "placeholder"
            },
            {
              "name": "value",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Value of the input.",
              "fieldName": "value"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "pf-text-input",
          "customElement": true,
          "demos": [
            {
              "url": "https://patternflyelements.org/components/text-input/demo/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-text-input/demo/pf-text-input.html"
              }
            },
            {
              "url": "https://patternflyelements.org/components/text-input/demo/disabled/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-text-input/demo/disabled.html"
              }
            },
            {
              "url": "https://patternflyelements.org/components/text-input/demo/form-submission/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-text-input/demo/form-submission.html"
              }
            },
            {
              "url": "https://patternflyelements.org/components/text-input/demo/icon-variants/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-text-input/demo/icon-variants.html"
              }
            },
            {
              "url": "https://patternflyelements.org/components/text-input/demo/invalid/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-text-input/demo/invalid.html"
              }
            },
            {
              "url": "https://patternflyelements.org/components/text-input/demo/kitchen-sink/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-text-input/demo/kitchen-sink.html"
              }
            },
            {
              "url": "https://patternflyelements.org/components/text-input/demo/left-truncated/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-text-input/demo/left-truncated.html"
              }
            },
            {
              "url": "https://patternflyelements.org/components/text-input/demo/read-only/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-text-input/demo/read-only.html"
              }
            },
            {
              "url": "https://patternflyelements.org/components/text-input/demo/validation/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-text-input/demo/validation.html"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PfTextInput",
          "declaration": {
            "name": "PfTextInput",
            "module": "pf-text-input/pf-text-input.js"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "pf-text-input",
          "declaration": {
            "name": "PfTextInput",
            "module": "pf-text-input/pf-text-input.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "pf-tile/pf-tile.js",
      "declarations": [
        {
          "kind": "class",
          "description": "A **tile** component is a form of selection that can be used in place of a\nradio button and is commonly used in forms. A tile appears visually similar to a\n[selectable card](../card/). However, tiles are used specifically when the user is selecting\na static option, whereas a selectable card triggers an action or opens a quickstart\nor sidebar to provide additional information.",
          "name": "PfTile",
          "cssProperties": [
            {
              "type": {
                "text": "<length>"
              },
              "name": "--pf-c-tile--PaddingTop",
              "default": "1.5rem"
            },
            {
              "type": {
                "text": "<length>"
              },
              "name": "--pf-c-tile--PaddingRight",
              "default": "1.5rem"
            },
            {
              "type": {
                "text": "<length>"
              },
              "name": "--pf-c-tile--PaddingBottom",
              "default": "1.5rem"
            },
            {
              "type": {
                "text": "<length>"
              },
              "name": "--pf-c-tile--PaddingLeft",
              "default": "1.5rem"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-tile--BackgroundColor",
              "default": "#FFFFFF"
            },
            {
              "name": "--pf-c-tile--Transition",
              "default": "none"
            },
            {
              "name": "--pf-c-tile--TranslateY",
              "default": "0"
            },
            {
              "type": {
                "text": "<length>"
              },
              "name": "--pf-c-tile--before--BorderWidth",
              "default": "1px"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-tile--before--BorderColor",
              "default": "#444548"
            },
            {
              "type": {
                "text": "<length>"
              },
              "name": "--pf-c-tile--after--Height",
              "default": "3px"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-tile--after--BackgroundColor",
              "default": "transparent"
            },
            {
              "name": "--pf-c-tile--after--Transition",
              "default": "none"
            },
            {
              "name": "--pf-c-tile--after--ScaleY",
              "default": "1"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-tile__title--Color",
              "default": "#06c"
            },
            {
              "type": {
                "text": "<color>"
              },
              "name": "--pf-c-tile__icon--Color",
              "default": "#06c"
            },
            {
              "type": {
                "text": "<length>"
              },
              "name": "--pf-c-tile__icon--MarginRight",
              "default": "0"
            },
            {
              "type": {
                "text": "<length>"
              },
              "name": "--pf-c-tile__icon--FontSize",
              "default": "1.5rem"
            },
            {
              "type": {
                "text": "<length>"
              },
              "name": "--pf-c-tile__header--m-stacked__icon--MarginBottom",
              "default": "0.25rem"
            }
          ],
          "cssParts": [
            {
              "description": "container for the icon",
              "name": "icon"
            },
            {
              "description": "container for the title",
              "name": "title"
            },
            {
              "description": "container for the body content",
              "name": "body"
            }
          ],
          "slots": [
            {
              "description": "Icon expects a `<pf-icon>` or `<svg>`",
              "name": "icon"
            },
            {
              "description": "the title of the tile should be a heading",
              "name": "title"
            },
            {
              "description": "The content should be a paragraph",
              "name": ""
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "selected",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "attribute": "selected",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "stacked",
              "type": {
                "text": "StackedSize | undefined"
              },
              "attribute": "stacked",
              "reflects": true
            }
          ],
          "attributes": [
            {
              "type": {
                "text": "boolean"
              },
              "description": "selected variant",
              "name": "selected",
              "default": "false",
              "fieldName": "selected"
            },
            {
              "type": {
                "text": "StackedSize | undefined"
              },
              "description": "stacked variant",
              "name": "stacked",
              "fieldName": "stacked"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "pf-tile",
          "customElement": true,
          "demos": [
            {
              "url": "https://patternflyelements.org/components/tile/demo/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-tile/demo/pf-tile.html"
              }
            },
            {
              "url": "https://patternflyelements.org/components/tile/demo/extra-content/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-tile/demo/extra-content.html"
              }
            },
            {
              "url": "https://patternflyelements.org/components/tile/demo/icon/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-tile/demo/icon.html"
              }
            },
            {
              "url": "https://patternflyelements.org/components/tile/demo/keyboard-interaction/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-tile/demo/keyboard-interaction.html"
              }
            },
            {
              "url": "https://patternflyelements.org/components/tile/demo/stacked-icon/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-tile/demo/stacked-icon.html"
              }
            },
            {
              "url": "https://patternflyelements.org/components/tile/demo/stacked-large-icon/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-tile/demo/stacked-large-icon.html"
              }
            },
            {
              "url": "https://patternflyelements.org/components/tile/demo/subtext/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-tile/demo/subtext.html"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PfTile",
          "declaration": {
            "name": "PfTile",
            "module": "pf-tile/pf-tile.js"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "pf-tile",
          "declaration": {
            "name": "PfTile",
            "module": "pf-tile/pf-tile.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "pf-timestamp/pf-timestamp.js",
      "declarations": [
        {
          "kind": "class",
          "description": "A **timestamp** provides consistent formats for displaying date and time values.",
          "name": "PfTimestamp",
          "members": [
            {
              "kind": "field",
              "name": "dateFormat",
              "type": {
                "text": "DateTimeFormat | undefined"
              },
              "attribute": "date-format",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "timeFormat",
              "type": {
                "text": "DateTimeFormat | undefined"
              },
              "attribute": "time-format",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "customFormat",
              "type": {
                "text": "object | undefined"
              }
            },
            {
              "kind": "field",
              "name": "displaySuffix",
              "type": {
                "text": "string | undefined"
              },
              "attribute": "display-suffix",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "locale",
              "type": {
                "text": "string | undefined"
              },
              "attribute": "locale",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "relative",
              "type": {
                "text": "boolean | undefined"
              },
              "attribute": "relative",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "utc",
              "type": {
                "text": "boolean | undefined"
              },
              "attribute": "utc",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "hour12",
              "type": {
                "text": "boolean | undefined"
              },
              "attribute": "hour-12",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "date",
              "type": {
                "text": "string"
              },
              "attribute": "date",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "isoString",
              "type": {
                "text": "string"
              },
              "readonly": true
            },
            {
              "kind": "field",
              "name": "time",
              "type": {
                "text": "string"
              },
              "readonly": true
            },
            {
              "kind": "field",
              "name": "#timestamp",
              "privacy": "private",
              "default": "new TimestampController(this)"
            }
          ],
          "attributes": [
            {
              "name": "date-format",
              "type": {
                "text": "DateTimeFormat | undefined"
              },
              "fieldName": "dateFormat"
            },
            {
              "name": "time-format",
              "type": {
                "text": "DateTimeFormat | undefined"
              },
              "fieldName": "timeFormat"
            },
            {
              "name": "display-suffix",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "displaySuffix"
            },
            {
              "name": "locale",
              "type": {
                "text": "string | undefined"
              },
              "fieldName": "locale"
            },
            {
              "name": "relative",
              "type": {
                "text": "boolean | undefined"
              },
              "fieldName": "relative"
            },
            {
              "name": "utc",
              "type": {
                "text": "boolean | undefined"
              },
              "fieldName": "utc"
            },
            {
              "name": "hour-12",
              "type": {
                "text": "boolean | undefined"
              },
              "fieldName": "hour12"
            },
            {
              "name": "date",
              "type": {
                "text": "string"
              },
              "fieldName": "date"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "pf-timestamp",
          "customElement": true,
          "demos": [
            {
              "url": "https://patternflyelements.org/components/timestamp/demo/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-timestamp/demo/pf-timestamp.html"
              }
            },
            {
              "url": "https://patternflyelements.org/components/timestamp/demo/basic-formats/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-timestamp/demo/basic-formats.html"
              }
            },
            {
              "url": "https://patternflyelements.org/components/timestamp/demo/custom-format/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-timestamp/demo/custom-format.html"
              }
            },
            {
              "url": "https://patternflyelements.org/components/timestamp/demo/custom-tooltip/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-timestamp/demo/custom-tooltip.html"
              }
            },
            {
              "url": "https://patternflyelements.org/components/timestamp/demo/relative-format-with-tooltip/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-timestamp/demo/relative-format-with-tooltip.html"
              }
            },
            {
              "url": "https://patternflyelements.org/components/timestamp/demo/relative-format/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-timestamp/demo/relative-format.html"
              }
            },
            {
              "url": "https://patternflyelements.org/components/timestamp/demo/tooltip/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-timestamp/demo/tooltip.html"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PfTimestamp",
          "declaration": {
            "name": "PfTimestamp",
            "module": "pf-timestamp/pf-timestamp.js"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "pf-timestamp",
          "declaration": {
            "name": "PfTimestamp",
            "module": "pf-timestamp/pf-timestamp.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "pf-tooltip/pf-tooltip.js",
      "declarations": [
        {
          "kind": "class",
          "description": "A **tooltip** is in-app messaging used to identify elements on a page with short,\nclarifying text.",
          "name": "PfTooltip",
          "cssProperties": [
            {
              "type": {
                "text": "<color>"
              },
              "description": "Sets the background color for the tooltip content.",
              "name": "--pf-c-tooltip__content--BackgroundColor",
              "default": "#1b1d21"
            },
            {
              "type": {
                "text": "<color>"
              },
              "description": "Sets the font color for the tooltip content.",
              "name": "--pf-c-tooltip__content--Color",
              "default": "#e0e0e0"
            },
            {
              "type": {
                "text": "<number>"
              },
              "description": "Sets the font color for the tooltip content.",
              "name": "--pf-c-tooltip--line-height",
              "default": "1.5"
            },
            {
              "type": {
                "text": "<length>"
              },
              "description": "Maximum width for the tooltip.",
              "name": "--pf-c-tooltip--MaxWidth",
              "default": "18.75rem"
            },
            {
              "description": "Box shadow for the tooltip.",
              "name": "--pf-c-tooltip--BoxShadow",
              "default": "0 0.25rem 0.5rem 0rem rgba(3, 3, 3, 0.12), 0 0 0.25rem 0 rgba(3, 3, 3, 0.06)"
            },
            {
              "type": {
                "text": "<length>"
              },
              "description": "Top padding for the tooltip.",
              "name": "--pf-c-tooltip__content--PaddingTop",
              "default": "0.5rem"
            },
            {
              "type": {
                "text": "<length>"
              },
              "description": "Right padding for the tooltip.",
              "name": "--pf-c-tooltip__content--PaddingRight",
              "default": "0.5rem"
            },
            {
              "type": {
                "text": "<length>"
              },
              "description": "Bottom padding for the tooltip.",
              "name": "--pf-c-tooltip__content--PaddingBottom",
              "default": "0.5rem"
            },
            {
              "type": {
                "text": "<length>"
              },
              "description": "Left Padding for the tooltip.",
              "name": "--pf-c-tooltip__content--PaddingLeft",
              "default": "0.5rem"
            },
            {
              "description": "Font size for the tooltip content.",
              "name": "--pf-c-tooltip__content--FontSize",
              "default": "0.875rem"
            },
            {
              "type": {
                "text": "<length>"
              },
              "description": "Tooltip arrow width.",
              "name": "--pf-c-tooltip__arrow--Width",
              "default": "0.5rem"
            },
            {
              "type": {
                "text": "<length>"
              },
              "description": "Tooltip arrow height.",
              "name": "--pf-c-tooltip__arrow--Height",
              "default": "0.5rem"
            },
            {
              "description": "Positions the tooltip arrow along the x axis for `top` positioned arrows.",
              "name": "--pf-c-tooltip__arrow--m-top--TranslateX",
              "default": "-50"
            },
            {
              "description": "Positions the tooltip arrow along the y axis for `top` positioned arrows.",
              "name": "--pf-c-tooltip__arrow--m-top--TranslateY",
              "default": "50"
            },
            {
              "description": "Rotates the tooltip arrow based on degrees of movement for `top` positioned arrows.",
              "name": "--pf-c-tooltip__arrow--m-top--Rotate",
              "default": "45deg"
            },
            {
              "description": "Positions the tooltip arrow along the x axis for `right` positioned arrows.",
              "name": "--pf-c-tooltip__arrow--m-right--TranslateX",
              "default": "-50"
            },
            {
              "description": "Positions the tooltip arrow along the y axis for `right` positioned arrows.",
              "name": "--pf-c-tooltip__arrow--m-right--TranslateY",
              "default": "-50"
            },
            {
              "description": "Rotates the tooltip arrow based on degrees of movement for `right` positioned arrows.",
              "name": "--pf-c-tooltip__arrow--m-right--Rotate",
              "default": "45deg"
            },
            {
              "description": "Positions the tooltip arrow along the x axis for `bottom` positioned arrows.",
              "name": "--pf-c-tooltip__arrow--m-bottom--TranslateX",
              "default": "-50"
            },
            {
              "description": "Positions the tooltip arrow along the y axis for `bottom` positioned arrows.",
              "name": "--pf-c-tooltip__arrow--m-bottom--TranslateY",
              "default": "-50"
            },
            {
              "description": "Rotates the tooltip arrow based on degrees of movement for `bottom` positioned arrows.",
              "name": "--pf-c-tooltip__arrow--m-bottom--Rotate",
              "default": "45deg"
            },
            {
              "description": "Positions the tooltip arrow along the x axis for `left` positioned arrows.",
              "name": "--pf-c-tooltip__arrow--m-left--TranslateX",
              "default": "50"
            },
            {
              "description": "Positions the tooltip arrow along the y axis for `left` positioned arrows.",
              "name": "--pf-c-tooltip__arrow--m-left--TranslateY",
              "default": "-50"
            },
            {
              "description": "Rotates the tooltip arrow based on degrees of movement for `left` positioned arrows.",
              "name": "--pf-c-tooltip__arrow--m-left--Rotate",
              "default": "45deg"
            }
          ],
          "slots": [
            {
              "description": "This slot wraps around the element that should be used to invoke the tooltip content to display.\nTypically this would be an icon, button, or other small sized element."
            },
            {
              "description": "This slot renders the content that will be displayed inside of the tooltip.\nTypically this would include a string of text without any additional elements.\nThis element is wrapped with a div inside of the component to give it the stylings and background colors.",
              "name": "content"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "position",
              "type": {
                "text": "Placement"
              },
              "default": "'top'",
              "description": "The position of the tooltip, relative to the invoking content",
              "attribute": "position"
            },
            {
              "kind": "field",
              "name": "content",
              "type": {
                "text": "string | undefined"
              },
              "description": "Tooltip content. Overridden by the content slot",
              "attribute": "content"
            },
            {
              "kind": "field",
              "name": "noFlip",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "If false, prevents the tooltip from trying to remain in view by flipping itself when necessary",
              "attribute": "no-flip"
            },
            {
              "kind": "field",
              "name": "trigger",
              "type": {
                "text": "string | Element | undefined"
              },
              "attribute": "trigger"
            },
            {
              "kind": "field",
              "name": "flipBehavior",
              "type": {
                "text": "Placement[] | undefined"
              },
              "description": "The flip order when flip is enabled and the initial position is not possible.\nThere are 12 options: `top`, `bottom`, `left`, `right`, `top-start`, `top-end`,\n`bottom-start`, `bottom-end`, `left-start`, `left-end`,`right-start`, `right-end`.\nThe default is [oppositePlacement], where only the opposite placement is tried.",
              "attribute": "flip-behavior"
            },
            {
              "kind": "field",
              "name": "#invoker",
              "privacy": "private",
              "type": {
                "text": "HTMLSlotElement | null"
              },
              "readonly": true
            },
            {
              "kind": "field",
              "name": "#content",
              "privacy": "private",
              "type": {
                "text": "HTMLElement | null"
              },
              "readonly": true
            },
            {
              "kind": "field",
              "name": "#referenceTrigger",
              "privacy": "private",
              "type": {
                "text": "HTMLElement | null | undefined"
              }
            },
            {
              "kind": "field",
              "name": "#float",
              "privacy": "private",
              "default": "new FloatingDOMController(this, {\n    content: (): HTMLElement | null | undefined => this.#content,\n    invoker: (): HTMLElement | null | undefined => {\n      if (this.#referenceTrigger) {\n        return this.#referenceTrigger;\n      } else if (this.#invoker instanceof HTMLSlotElement\n              && this.#invoker.assignedElements().length > 0) {\n        return this.#invoker.assignedElements().at(0) as HTMLElement;\n      } else {\n        return this.#invoker;\n      }\n    },\n  })"
            },
            {
              "kind": "method",
              "name": "#invokerChanged",
              "description": "the invoker slot should render at block level if it only has text nodes",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "#getReferenceTrigger",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "#updateTrigger",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "show",
              "return": {
                "type": {
                  "text": "Promise<void>"
                }
              }
            },
            {
              "kind": "method",
              "name": "hide",
              "return": {
                "type": {
                  "text": "Promise<void>"
                }
              }
            }
          ],
          "attributes": [
            {
              "name": "position",
              "type": {
                "text": "Placement"
              },
              "default": "'top'",
              "description": "The position of the tooltip, relative to the invoking content",
              "fieldName": "position"
            },
            {
              "name": "content",
              "type": {
                "text": "string | undefined"
              },
              "description": "Tooltip content. Overridden by the content slot",
              "fieldName": "content"
            },
            {
              "name": "no-flip",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "description": "If false, prevents the tooltip from trying to remain in view by flipping itself when necessary",
              "fieldName": "noFlip"
            },
            {
              "name": "trigger",
              "type": {
                "text": "string | Element | undefined"
              },
              "fieldName": "trigger"
            },
            {
              "name": "flip-behavior",
              "type": {
                "text": "Placement[] | undefined"
              },
              "description": "The flip order when flip is enabled and the initial position is not possible.\nThere are 12 options: `top`, `bottom`, `left`, `right`, `top-start`, `top-end`,\n`bottom-start`, `bottom-end`, `left-start`, `left-end`,`right-start`, `right-end`.\nThe default is [oppositePlacement], where only the opposite placement is tried.",
              "fieldName": "flipBehavior"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "summary": "Toggle the visibility of helpful or contextual information.",
          "tagName": "pf-tooltip",
          "customElement": true,
          "demos": [
            {
              "url": "https://patternflyelements.org/components/tooltip/demo/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-tooltip/demo/pf-tooltip.html"
              }
            },
            {
              "url": "https://patternflyelements.org/components/tooltip/demo/block-triggers/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-tooltip/demo/block-triggers.html"
              }
            },
            {
              "url": "https://patternflyelements.org/components/tooltip/demo/custom-styles/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-tooltip/demo/custom-styles.html"
              }
            },
            {
              "url": "https://patternflyelements.org/components/tooltip/demo/flip/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-tooltip/demo/flip.html"
              }
            },
            {
              "url": "https://patternflyelements.org/components/tooltip/demo/performance/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-tooltip/demo/performance.html"
              }
            },
            {
              "url": "https://patternflyelements.org/components/tooltip/demo/placement/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-tooltip/demo/placement.html"
              }
            },
            {
              "url": "https://patternflyelements.org/components/tooltip/demo/slotted-content/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-tooltip/demo/slotted-content.html"
              }
            },
            {
              "url": "https://patternflyelements.org/components/tooltip/demo/trigger/",
              "source": {
                "href": "https://github.com/patternfly/patternfly-elements/tree/main/elements/pf-tooltip/demo/trigger.html"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PfTooltip",
          "declaration": {
            "name": "PfTooltip",
            "module": "pf-tooltip/pf-tooltip.js"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "pf-tooltip",
          "declaration": {
            "name": "PfTooltip",
            "module": "pf-tooltip/pf-tooltip.js"
          }
        }
      ]
    }
  ]
}
