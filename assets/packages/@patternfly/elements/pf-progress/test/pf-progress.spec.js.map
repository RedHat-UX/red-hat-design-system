{"version":3,"file":"pf-progress.spec.js","sourceRoot":"","sources":["pf-progress.spec.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE,MAAM,kBAAkB,CAAC;AACzD,OAAO,EAAE,UAAU,EAAE,MAAM,iDAAiD,CAAC;AAE7E,QAAQ,CAAC,eAAe,EAAE;IACxB,IAAI,OAAmB,CAAC;IAExB,UAAU,CAAC,KAAK;QACd,OAAO,GAAG,MAAM,OAAO,CAAa,IAAI,CAAA;;;;;KAKvC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,gBAAgB,EAAE,KAAK;QACxB,MAAM,KAAK,GAAG,cAAc,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;QAChD,MAAM,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;IACjF,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,sBAAsB,EAAE,KAAK;QAC9B,MAAM,MAAM,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC,UAAU,EAAE,CAAC;IACrD,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,kDAAkD,EAAE,KAAK;QAC1D,MAAM,OAAO,GAAG,MAAM,OAAO,CAAa,IAAI,CAAA;;;KAG7C,CAAC,CAAC;QACH,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;IACrC,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,kDAAkD,EAAE,KAAK;QAC1D,MAAM,OAAO,GAAG,MAAM,OAAO,CAAa,IAAI,CAAA;;;KAG7C,CAAC,CAAC;QACH,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,gBAAgB,CAAC,CAAC;IACnD,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,sDAAsD,EAAE,KAAK;QAC9D,MAAM,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,GAAG,CAAC,CAAC;QAC5C,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;QAEhD,MAAM,OAAO,GAAG,MAAM,OAAO,CAAa,IAAI,CAAA;4BACtB,KAAK,UAAU,GAAG;;KAEzC,CAAC,CAAC;QACH,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QACtC,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IACpC,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import { expect, html, fixture } from '@open-wc/testing';\nimport { PfProgress } from '@patternfly/elements/pf-progress/pf-progress.js';\n\ndescribe('<pf-progress>', function() {\n  let element: PfProgress;\n\n  beforeEach(async function() {\n    element = await fixture<PfProgress>(html`\n      <pf-progress value=\"33\"\n                  title=\"Progress title\"\n                  label=\"Progress label\">\n      </pf-progress>\n    `);\n  });\n\n  it('should upgrade', async function() {\n    const klass = customElements.get('pf-progress');\n    expect(element).to.be.an.instanceOf(klass).and.to.be.an.instanceOf(PfProgress);\n  });\n\n  it('should be accessible', async function() {\n    await expect(element).shadowDom.to.be.accessible();\n  });\n\n  it('should set the correct value on the progress bar', async function() {\n    const element = await fixture<PfProgress>(html`\n      <pf-progress value=\"33\">\n      </pf-progress>\n    `);\n    expect(element.value).to.equal(33);\n  });\n\n  it('should set the correct title on the progress bar', async function() {\n    const element = await fixture<PfProgress>(html`\n      <pf-progress title=\"Progress title\">\n      </pf-progress>\n    `);\n    expect(element.title).to.equal('Progress title');\n  });\n\n  it('should have the correct value with the max value set', async function() {\n    const max = Math.floor(Math.random() * 100);\n    const value = Math.floor(Math.random() * (max));\n\n    const element = await fixture<PfProgress>(html`\n      <pf-progress value=\"${value}\" max=\"${max}\">\n      </pf-progress>\n    `);\n    expect(element.value).to.equal(value);\n    expect(element.max).to.equal(max);\n  });\n});\n"]}