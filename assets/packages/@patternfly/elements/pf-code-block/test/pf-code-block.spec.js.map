{"version":3,"file":"pf-code-block.spec.js","sourceRoot":"","sources":["pf-code-block.spec.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,MAAM,EAAE,IAAI,EAAE,SAAS,EAAE,MAAM,kBAAkB,CAAC;AAC3D,OAAO,EAAE,aAAa,EAAE,MAAM,8CAA8C,CAAC;AAC7E,OAAO,EAAE,WAAW,EAAE,MAAM,qDAAqD,CAAC;AAElF,MAAM,OAAO,GAAG,IAAI,CAAA;;;;;;;;;;;;;CAanB,CAAC;AAEF,MAAM,aAAa,GAAG,IAAI,CAAA;;;;;;;;;;;;;CAazB,CAAC;AAEF,MAAM,sBAAsB,GAAG,IAAI,CAAA;;;;;;;;;;;;;CAalC,CAAC;AAEF,QAAQ,CAAC,iBAAiB,EAAE;IAC1B,EAAE,CAAC,2BAA2B,EAAE;QAC9B,MAAM,CAAC,QAAQ,CAAC,aAAa,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC;IACnF,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,gBAAgB,EAAE,KAAK;QACxB,MAAM,EAAE,GAAG,MAAM,aAAa,CAAe,OAAO,CAAC,CAAC;QACtD,MAAM,KAAK,GAAG,cAAc,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;QAClD,MAAM,CAAC,EAAE,CAAC;aACL,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,UAAU,CAAC,KAAK,CAAC;aAC1B,GAAG;aACH,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC;IACxC,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,iDAAiD,EAAE,KAAK;QACzD,MAAM,EAAE,GAAG,MAAM,aAAa,CAAe,OAAO,CAAC,CAAC;QACtD,MAAM,MAAM,GAAG,EAAE,CAAC,UAAU,EAAE,aAAa,CAAC,QAAQ,CAAC,CAAC;QACtD,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC;IACpC,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,oFAAoF,EAAE,KAAK;QAC5F,MAAM,QAAQ,GAAG,MAAM,aAAa,CAAc,aAAa,CAAC,CAAC;QACjE,MAAM,YAAY,GAAG,QAAQ,CAAC,UAAU,EAAE,aAAa,CAAC,QAAQ,CAAC,CAAC;QAClE,MAAM,CAAC,YAAY,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC;IACtC,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,qEAAqE,EAAE,KAAK;QAC7E,MAAM,QAAQ,GAAG,MAAM,aAAa,CAAc,aAAa,CAAC,CAAC;QACjE,MAAM,YAAY,GAAG,QAAQ,CAAC,UAAU,EAAE,aAAa,CAAC,QAAQ,CAAC,CAAC;QAClE,YAAY,EAAE,KAAK,EAAE,CAAC;QACtB,MAAM,SAAS,EAAE,CAAC;QAClB,MAAM,CAAC,QAAQ,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC;QACrD,MAAM,CAAC,YAAY,EAAE,YAAY,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;IACvE,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,qFAAqF,EAAE,KAAK;QAC7F,MAAM,QAAQ,GAAG,MAAM,aAAa,CAAc,aAAa,CAAC,CAAC;QACjE,MAAM,YAAY,GAAG,QAAQ,CAAC,UAAU,EAAE,aAAa,CAAC,QAAQ,CAAC,CAAC;QAClE,YAAY,EAAE,KAAK,EAAE,CAAC;QACtB,MAAM,SAAS,EAAE,CAAC;QAClB,MAAM,CAAC,YAAY,EAAE,WAAW,EAAE,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;IAClE,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,8EAA8E,EAAE,KAAK;QACtF,MAAM,iBAAiB,GAAG,MAAM,aAAa,CAAc,sBAAsB,CAAC,CAAC;QACnF,MAAM,YAAY,GAAG,iBAAiB,CAAC,UAAU,EAAE,aAAa,CAAC,QAAQ,CAAC,CAAC;QAC3E,MAAM,CAAC,YAAY,EAAE,WAAW,EAAE,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;IAClE,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import { expect, html, nextFrame } from '@open-wc/testing';\nimport { createFixture } from '@patternfly/pfe-tools/test/create-fixture.js';\nimport { PfCodeBlock } from '@patternfly/elements/pf-code-block/pf-code-block.js';\n\nconst element = html`\n  <pf-code-block id=\"code\">\n    <script type=\"application/openshift\">\n      apiVersion: helm.openshift.io/v1beta1/\n      kind: HelmChartRepository\n      metadata:\n      name: azure-sample-repo0oooo00ooo\n      spec:\n      connectionConfig:\n      url: https://raw.githubusercontent.com/Azure-Samples/helm-charts/master/docs\n    </script>\n    <pf-clipboard-copy slot=\"actions\" copy-from=\"#code\"></pf-clipboard-copy>\n  </pf-code-block>\n`;\n\nconst expandElement = html`\n  <pf-code-block id=\"expandable-code\">\n    <script type=\"application/openshift\">\n      apiVersion: helm.openshift.io/v1beta1/\n      kind: HelmChartRepository\n      metadata:\n      name: azure-sample-repo</script><script type=\"application/openshift\" data-expand>\n      spec:\n      connectionConfig:\n      url: https://raw.githubusercontent.com/Azure-Samples/helm-charts/master/docs\n    </script>\n    <pf-clipboard-copy slot=\"actions\" copy-from=\"#expandable-code\"></pf-clipboard-copy>\n  </pf-code-block>\n`;\n\nconst expandElementByDefault = html`\n  <pf-code-block id=\"expandable-code-expanded\" expanded>\n    <script type=\"application/openshift\">\n      apiVersion: helm.openshift.io/v1beta1/\n      kind: HelmChartRepository\n      metadata:\n      name: azure-sample-repo</script><script type=\"application/openshift\" data-expand>\n      spec:\n      connectionConfig:\n      url: https://raw.githubusercontent.com/Azure-Samples/helm-charts/master/docs\n    </script>\n    <pf-clipboard-copy slot=\"actions\" copy-from=\"#expandable-code-expanded\"></pf-clipboard-copy>\n  </pf-code-block>\n`;\n\ndescribe('<pf-code-block>', function() {\n  it('imperatively instantiates', function() {\n    expect(document.createElement('pf-code-block')).to.be.an.instanceof(PfCodeBlock);\n  });\n\n  it('should upgrade', async function() {\n    const el = await createFixture <PfCodeBlock>(element);\n    const klass = customElements.get('pf-code-block');\n    expect(el)\n        .to.be.an.instanceOf(klass)\n        .and\n        .to.be.an.instanceOf(PfCodeBlock);\n  });\n\n  it('should not show a \"Show more\" button by default', async function() {\n    const el = await createFixture <PfCodeBlock>(element);\n    const button = el.shadowRoot?.querySelector('button');\n    expect(button?.hidden).to.be.true;\n  });\n\n  it('should show a \"Show more\" button if content is present in the expandable-code slot', async function() {\n    const expandEl = await createFixture<PfCodeBlock>(expandElement);\n    const expandButton = expandEl.shadowRoot?.querySelector('button');\n    expect(expandButton).to.not.be.null;\n  });\n\n  it('should expand the code block when the \"Show more\" button is clicked', async function() {\n    const expandEl = await createFixture<PfCodeBlock>(expandElement);\n    const expandButton = expandEl.shadowRoot?.querySelector('button');\n    expandButton?.click();\n    await nextFrame();\n    expect(expandEl.hasAttribute('expanded')).to.be.true;\n    expect(expandButton?.getAttribute('aria-expanded')).to.equal('true');\n  });\n\n  it('should toggle the \"Show more\" button text to \"Show less\" when the button is clicked', async function() {\n    const expandEl = await createFixture<PfCodeBlock>(expandElement);\n    const expandButton = expandEl.shadowRoot?.querySelector('button');\n    expandButton?.click();\n    await nextFrame();\n    expect(expandButton?.textContent?.trim()).to.equal('Show less');\n  });\n\n  it('should be expanded by default if the expanded attribute is present on render', async function() {\n    const expandByDefaultEl = await createFixture<PfCodeBlock>(expandElementByDefault);\n    const expandButton = expandByDefaultEl.shadowRoot?.querySelector('button');\n    expect(expandButton?.textContent?.trim()).to.equal('Show less');\n  });\n});\n"]}