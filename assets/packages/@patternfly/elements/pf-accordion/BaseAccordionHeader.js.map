{"version":3,"file":"BaseAccordionHeader.js","sourceRoot":"","sources":["BaseAccordionHeader.ts"],"names":[],"mappings":"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","sourcesContent":["import type { TemplateResult } from 'lit';\n\nimport { LitElement, html } from 'lit';\nimport { property } from 'lit/decorators/property.js';\nimport { unsafeStatic, html as staticH } from 'lit/static-html.js';\n\nimport { BaseAccordion } from './BaseAccordion.js';\nimport { ComposedEvent } from '@patternfly/pfe-core';\nimport { getRandomId } from '@patternfly/pfe-core/functions/random.js';\nimport { Logger } from '@patternfly/pfe-core/controllers/logger.js';\n\nimport style from './BaseAccordionHeader.css';\n\nconst isPorHeader =\n  (el: Node): el is HTMLElement =>\n    el instanceof HTMLElement && !!el.tagName.match(/P|^H[1-6]/);\n\nexport class AccordionHeaderChangeEvent extends ComposedEvent {\n  constructor(\n    public expanded: boolean,\n    public toggle: BaseAccordionHeader,\n    public accordion: BaseAccordion\n  ) {\n    super('change');\n  }\n}\n\nexport abstract class BaseAccordionHeader extends LitElement {\n  static readonly styles = [style];\n\n  static override readonly shadowRootOptions = { ...LitElement.shadowRootOptions, delegatesFocus: true };\n\n  @property({ type: Boolean, reflect: true }) expanded = false;\n\n  @property({ reflect: true, attribute: 'heading-text' }) headingText = '';\n\n  @property({ reflect: true, attribute: 'heading-tag' }) headingTag = 'h3';\n\n  #generatedHtag?: HTMLHeadingElement;\n\n  #logger = new Logger(this);\n\n  override connectedCallback() {\n    super.connectedCallback();\n    this.addEventListener('click', this.#onClick);\n    this.hidden = true;\n    this.id ||= getRandomId(this.localName);\n    this.#initHeader();\n  }\n\n  async #initHeader() {\n    const header = this.#getOrCreateHeader();\n\n    // prevent double-logging\n    if (header !== this.#generatedHtag) {\n      this.#generatedHtag = undefined;\n    }\n\n    this.headingTag = header?.tagName.toLowerCase() ?? 'h3';\n    this.headingText = header?.textContent?.trim() ?? '';\n\n    do {\n      await this.updateComplete;\n    } while (!await this.updateComplete);\n\n    // Remove the hidden attribute after upgrade\n    this.hidden = false;\n  }\n\n  /** Template hook: before </button> */\n  renderAfterButton?(): TemplateResult;\n\n  override render(): TemplateResult {\n    const tag = unsafeStatic(this.headingTag);\n    const ariaExpandedState = String(!!this.expanded) as 'true'|'false';\n    return staticH`\n      <${tag} id=\"heading\">\n        <button id=\"button\"\n                class=\"toggle\"\n                aria-expanded=\"${ariaExpandedState}\">\n          <span part=\"text\">${this.headingText || html`\n            <slot></slot>`}\n          </span>\n          ${this.renderAfterButton?.()}\n        </button>\n      </${tag}>\n    `;\n  }\n\n  #getOrCreateHeader(): HTMLElement|undefined {\n    // Check if there is no nested element or nested textNodes\n    if (!this.firstElementChild && !this.firstChild) {\n      return void this.#logger.warn('No header content provided');\n    } else if (this.firstElementChild) {\n      const [heading, ...otherContent] = Array.from(this.children)\n        .filter((x): x is HTMLElement => !x.hasAttribute('slot') && isPorHeader(x));\n\n      // If there is no content inside the slot, return empty with a warning\n      // else, if there is more than 1 element in the slot, capture the first h-tag\n      if (!heading) {\n        return void this.#logger.warn('No heading information was provided.');\n      } else if (otherContent.length) {\n        this.#logger.warn('Heading currently only supports 1 tag; extra tags will be ignored.');\n      }\n      return heading;\n    } else {\n      if (!this.#generatedHtag) {\n        this.#logger.warn('Header should contain at least 1 heading tag for correct semantics.');\n      }\n      this.#generatedHtag = document.createElement('h3');\n\n      // If a text node was provided but no semantics, default to an h3\n      // otherwise, incorrect semantics were used, create an H3 and try to capture the content\n      if (this.firstChild?.nodeType === Node.TEXT_NODE) {\n        this.#generatedHtag.textContent = this.firstChild.textContent;\n      } else {\n        this.#generatedHtag.textContent = this.textContent;\n      }\n\n      return this.#generatedHtag;\n    }\n  }\n\n  #onClick(event: MouseEvent) {\n    const expanded = !this.expanded;\n    const acc = event.composedPath().find(BaseAccordion.isAccordion);\n    if (acc) {\n      this.dispatchEvent(new AccordionHeaderChangeEvent(expanded, this, acc));\n    }\n  }\n}\n"]}