{"version":3,"file":"pf-chip-group.spec.js","sourceRoot":"","sources":["pf-chip-group.spec.ts"],"names":[],"mappings":"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","sourcesContent":["import { expect, html } from '@open-wc/testing';\nimport { createFixture } from '@patternfly/pfe-tools/test/create-fixture.js';\nimport { a11ySnapshot, type A11yTreeSnapshot } from '@patternfly/pfe-tools/test/a11y-snapshot.js';\nimport { PfChipGroup } from '../pf-chip-group.js';\nimport { PfChip } from '../pf-chip.js';\nimport { sendKeys } from '@web/test-runner-commands';\n\nfunction press(key: string) {\n  return async function() {\n    await sendKeys({ press: key });\n  };\n}\n\ndescribe('<pf-chip-group>', async function() {\n  let element: PfChipGroup;\n\n  describe('simply instantiating', function() {\n    it('imperatively instantiates', function() {\n      expect(document.createElement('pf-chip-group')).to.be.an.instanceof(PfChipGroup);\n    });\n\n    it('should upgrade', async function() {\n      element = await createFixture<PfChipGroup>(html`<pf-chip-group></pf-chip-group>`);\n      const klass = customElements.get('pf-chip-group');\n      expect(element)\n          .to.be.an.instanceOf(klass)\n          .and\n          .to.be.an.instanceOf(PfChipGroup);\n    });\n  });\n\n  describe('with 3 chips', function() {\n    let element: PfChipGroup;\n    const updateComplete = () => element.updateComplete;\n\n    beforeEach(async function() {\n      element = await createFixture<PfChipGroup>(html`\n        <pf-chip-group>\n          <pf-chip>Chip 1</pf-chip>\n          <pf-chip>Chip 2</pf-chip>\n          <pf-chip>Chip 3</pf-chip>\n          <pf-chip>Chip 4</pf-chip>\n        </pf-chip-group>\n      `);\n    });\n\n    it('only 3 chips and an overflow should be visible', async function() {\n      const snapshot = await a11ySnapshot();\n      expect(snapshot.children?.filter(x => x.name.startsWith('Chip'))?.length).to.equal(3);\n      expect(snapshot.children?.filter(x => x.role === 'button')?.length).to.equal(4);\n    });\n\n    describe('clicking overflow chip', function() {\n      beforeEach(() => element.focus());\n      beforeEach(press('ArrowLeft'));\n      beforeEach(press('Enter'));\n      beforeEach(updateComplete);\n      it('should show all chips', async function() {\n        const snapshot = await a11ySnapshot();\n        expect(snapshot.children?.filter(x => x.name.startsWith('Chip'))?.length).to.equal(4);\n      });\n      it('should show collapse button', async function() {\n        const snapshot = await a11ySnapshot();\n        expect(snapshot.children?.filter(x => x.role === 'button')?.length).to.equal(5);\n      });\n      it('should focus collapse button', async function() {\n        const snapshot = await a11ySnapshot();\n        expect(snapshot.children?.find(x => x.focused)?.name).to.equal('show less');\n      });\n    });\n  });\n\n  describe('with 4 chips and `closeable` attribute', function() {\n    let element: PfChipGroup;\n    const updateComplete = () => element.updateComplete;\n    beforeEach(async function() {\n      element = await createFixture<PfChipGroup>(html`\n        <pf-chip-group closeable>\n          <pf-chip>Chip 1</pf-chip>\n          <pf-chip>Chip 2</pf-chip>\n          <pf-chip>Chip 3</pf-chip>\n          <pf-chip>Chip 4</pf-chip>\n        </pf-chip-group>\n      `);\n    });\n\n    beforeEach(updateComplete);\n    it('should have close button', async function() {\n      const snapshot = await a11ySnapshot();\n      const last = snapshot.children?.at(-1);\n      expect(last?.name).to.equal('Close');\n      expect(last?.role).to.equal('button');\n      expect(last?.description).to.not.be.ok;\n    });\n\n    describe('clicking close button', function() {\n      beforeEach(() => element.focus());\n      beforeEach(press('ArrowLeft'));\n      beforeEach(press('Enter'));\n      beforeEach(updateComplete);\n      it('should remove element', async function() {\n        const snapshot = await a11ySnapshot();\n        expect(snapshot.children).to.be.undefined;\n      });\n    });\n  });\n\n  describe('with 4 chips and `collapsed-text`, `expanded-text`, and `label` attributes', async function() {\n    let chip1: PfChip;\n    let chip2: PfChip;\n    let element: PfChipGroup;\n    let snapshot: A11yTreeSnapshot;\n    const updateComplete = () => element.updateComplete;\n\n    beforeEach(async function() {\n      element = await createFixture<PfChipGroup>(html`\n        <pf-chip-group collapsed-text=\"show $\\{remaining} more\"\n                       expanded-text=\"show fewer\"\n                       accessible-label=\"My Chip Group\">\n          <pf-chip>Chip 1</pf-chip>\n          <pf-chip>Chip 2</pf-chip>\n          <pf-chip>Chip 3</pf-chip>\n          <pf-chip>Chip 4</pf-chip>\n        </pf-chip-group>\n      `);\n      [chip1, chip2] = document.querySelectorAll('pf-chip');\n      snapshot = await a11ySnapshot();\n    });\n\n    it('has accessible label', function() {\n      const [offscreen] = snapshot.children!;\n      expect(offscreen?.name).to.equal('My Chip Group');\n    });\n\n    it('is accessible', async function() {\n      await expect(element).to.be.accessible();\n    });\n\n    describe('pressing `Tab`', function() {\n      beforeEach(press('Tab'));\n      beforeEach(updateComplete);\n      it('should focus', function() {\n        expect(document.activeElement).to.equal(chip1);\n      });\n    });\n\n    describe('pressing `ArrowRight`', function() {\n      beforeEach(() => chip1.focus());\n      beforeEach(press('ArrowRight'));\n      beforeEach(updateComplete);\n      it('should move to chip2', function() {\n        expect(document.activeElement).to.equal(chip2);\n      });\n    });\n  });\n\n  describe('with 4 chips and `num-chips=\"2\"` attribute', function() {\n    beforeEach(async function() {\n      await createFixture<PfChipGroup>(html`\n        <pf-chip-group num-chips=\"2\">\n          <pf-chip>Chip 1</pf-chip>\n          <pf-chip>Chip 2</pf-chip>\n          <pf-chip>Chip 3</pf-chip>\n          <pf-chip>Chip 4</pf-chip>\n        </pf-chip-group>\n      `);\n    });\n    it('only 2 chips should be visible', async function() {\n      const snapshot = await a11ySnapshot();\n      expect(snapshot.children?.filter(x => x.name.startsWith('Chip'))?.length).to.equal(2);\n    });\n  });\n\n  describe('with 4 chips and `num-chips=\"4\"` attribute', function() {\n    let element: PfChipGroup;\n    const updateComplete = () => element.updateComplete;\n\n    beforeEach(async function() {\n      element = await createFixture<PfChipGroup>(html`\n        <pf-chip-group num-chips=\"4\">\n          <pf-chip>Chip 1</pf-chip>\n          <pf-chip>Chip 2</pf-chip>\n          <pf-chip>Chip 3</pf-chip>\n          <pf-chip>Chip 4</pf-chip>\n        </pf-chip-group>\n      `);\n    });\n\n    it('all 4 chips should be visible', async function() {\n      const snapshot = await a11ySnapshot();\n      expect(snapshot.children?.filter(x => x.name.startsWith('Chip'))?.length).to.equal(4);\n    });\n\n    describe('keyboard navigating with arrow keys to third chip and pressing enter', function() {\n      beforeEach(press('Tab'));\n      beforeEach(press('ArrowRight'));\n      beforeEach(press('ArrowRight'));\n      beforeEach(press('Enter'));\n      beforeEach(updateComplete);\n\n      it('should remove third chip', async function() {\n        const snapshot = await a11ySnapshot();\n        expect(snapshot.children?.find(x => x.name === 'Chip 3')).to.not.be.ok;\n      });\n\n      it('should focus on close button', async function() {\n        const snapshot = await a11ySnapshot();\n        expect(snapshot.children?.find(x => x.focused)?.name).to.equal('Close');\n      });\n    });\n  });\n});\n"]}