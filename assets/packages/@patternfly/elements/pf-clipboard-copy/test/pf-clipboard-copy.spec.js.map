{"version":3,"file":"pf-clipboard-copy.spec.js","sourceRoot":"","sources":["pf-clipboard-copy.spec.ts"],"names":[],"mappings":"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","sourcesContent":["import type { SinonStub } from 'sinon';\n\nimport { sendKeys } from '@web/test-runner-commands';\nimport { expect, html } from '@open-wc/testing';\nimport { createFixture } from '@patternfly/pfe-tools/test/create-fixture.js';\nimport { PfClipboardCopy } from '@patternfly/elements/pf-clipboard-copy/pf-clipboard-copy.js';\n\nimport { stub } from 'sinon';\n\ndescribe('<pf-clipboard-copy>', function() {\n  let element: PfClipboardCopy;\n  beforeEach(function stubCopy() {\n    stub(navigator.clipboard, 'writeText');\n  });\n\n  afterEach(function restoreCopy() {\n    (navigator.clipboard.writeText as SinonStub).restore();\n  });\n\n  beforeEach(async function() {\n    element = await createFixture<PfClipboardCopy>(html`\n      <pf-clipboard-copy></pf-clipboard-copy>\n    `);\n  });\n\n  it('imperatively instantiates', function() {\n    expect(document.createElement('pf-clipboard-copy')).to.be.an.instanceof(PfClipboardCopy);\n  });\n\n  it('should upgrade', async function() {\n    const klass = customElements.get('pf-clipboard-copy');\n    expect(element)\n        .to.be.an.instanceOf(klass)\n        .and\n        .to.be.an.instanceOf(PfClipboardCopy);\n  });\n\n  describe('setting value attribute', function() {\n    const VALUE = 'another copy item!';\n    beforeEach(async function() {\n      element.setAttribute('value', VALUE);\n      await element.updateComplete;\n    });\n    describe('then calling copy()', function() {\n      beforeEach(async function() {\n        await element.copy();\n      });\n      it('should copy the new value.', function() {\n        expect(navigator.clipboard.writeText).to.have.been.calledWith(VALUE);\n      });\n    });\n  });\n\n  describe('setting readonly attribute', function() {\n    const VALUE = 'HI';\n    beforeEach(async function() {\n      element.toggleAttribute('readonly', true);\n      await element.updateComplete;\n    });\n    describe('then focusing the element and typing', function() {\n      beforeEach(async function() {\n        element.focus();\n        await sendKeys({ type: VALUE });\n      });\n      describe('then calling copy', function() {\n        beforeEach(async function() {\n          await element.copy();\n        });\n        it('should not include the new value', async function() {\n          expect(navigator.clipboard.writeText).to.not.have.been.calledWith(VALUE);\n        });\n      });\n    });\n  });\n\n  describe('setting expandable value', function() {\n    let initialHeight: number;\n    let initialFocus: Element;\n    const VALUE = 'Hello!';\n    beforeEach(async function() {\n      element.toggleAttribute('expandable', true);\n      await element.updateComplete;\n      initialHeight = element.getBoundingClientRect().height;\n    });\n    describe('then focusing the element and pressing SPACE', function() {\n      beforeEach(async function() {\n        element.focus();\n        initialFocus = element.shadowRoot!.activeElement!;\n        await sendKeys({ press: ' ' });\n      });\n      it('it should be expanded', async function() {\n        expect(element.getBoundingClientRect().height).to.be.greaterThan(initialHeight);\n      });\n      describe('then focusing the textarea', function() {\n        beforeEach(async function() {\n          await sendKeys({ press: 'Tab' });\n          await sendKeys({ press: 'Tab' });\n        });\n        it('focuses a different element', function() {\n          expect(element.shadowRoot?.activeElement).to.not.equal(initialFocus);\n        });\n        describe('then typing', function() {\n          beforeEach(async function() {\n            await sendKeys({ type: VALUE });\n          });\n          it('updates the value property', function() {\n            expect(element.value).to.equal(VALUE);\n          });\n        });\n      });\n    });\n  });\n});\n"]}