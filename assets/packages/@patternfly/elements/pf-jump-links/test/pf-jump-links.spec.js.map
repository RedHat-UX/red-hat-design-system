{"version":3,"file":"pf-jump-links.spec.js","sourceRoot":"","sources":["pf-jump-links.spec.ts"],"names":[],"mappings":"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","sourcesContent":["import { expect, html, nextFrame } from '@open-wc/testing';\nimport { createFixture } from '@patternfly/pfe-tools/test/create-fixture.js';\nimport { sendKeys } from '@web/test-runner-commands';\n\nimport { PfJumpLinks } from '../pf-jump-links.js';\nimport { PfJumpLinksItem } from '../pf-jump-links-item.js';\nimport { PfJumpLinksList } from '../pf-jump-links-list.js';\n\nimport '@patternfly/pfe-tools/test/stub-logger.js';\nimport { allUpdates } from '@patternfly/pfe-tools/test/utils.js';\n\ndescribe('<pf-jump-links>', function() {\n  let element: PfJumpLinks;\n  let firstItem: PfJumpLinksItem;\n  let secondItem: PfJumpLinksItem;\n\n  beforeEach(async function() {\n    element = await createFixture<PfJumpLinks>(html`\n      <pf-jump-links>\n        <pf-jump-links-item id=\"first\">Inactive section</pf-jump-links-item>\n        <pf-jump-links-item id=\"second\" active>Active section</pf-jump-links-item>\n        <pf-jump-links-item id=\"third\">Inactive section</pf-jump-links-item>\n      </pf-jump-links>\n    `);\n    await allUpdates(element);\n    [firstItem, secondItem] = element.querySelectorAll<PfJumpLinksItem>('pf-jump-links-item');\n  });\n\n  it('imperatively instantiates', function() {\n    expect(document.createElement('pf-jump-links')).to.be.an.instanceof(PfJumpLinks);\n    expect(document.createElement('pf-jump-links-item')).to.be.an.instanceof(PfJumpLinksItem);\n    expect(document.createElement('pf-jump-links-list')).to.be.an.instanceof(PfJumpLinksList);\n  });\n\n  describe('tabbing to first item', function() {\n    let initialActiveElement: Element | null;\n    beforeEach(async function() {\n      initialActiveElement = document.activeElement;\n      await sendKeys({ press: 'Tab' });\n      await nextFrame();\n    });\n\n    it('should focus the first jump-links-item', function() {\n      expect(document.activeElement).to.equal(firstItem);\n    });\n\n    describe('pressing right arrow key', function() {\n      beforeEach(async function() {\n        await sendKeys({ press: 'ArrowRight' });\n        await allUpdates(element);\n        await nextFrame();\n      });\n      it('should focus a jump-links-item', function() {\n        expect(document.activeElement).to.be.an.instanceof(PfJumpLinksItem);\n      });\n      it('should change focus when keyboard navigation is used', function() {\n        expect(document.activeElement).to.not.equal(initialActiveElement);\n      });\n      it('should focus the second jump links item', function() {\n        expect(document.activeElement).to.equal(secondItem);\n      });\n    });\n  });\n});\n\ndescribe('<pf-jump-links-item>', function() {\n  let element: PfJumpLinksItem;\n\n  beforeEach(async function() {\n    element = await createFixture<PfJumpLinksItem>(html`\n      <pf-jump-links-item></pf-jump-links-item>\n    `);\n  });\n\n  it('should upgrade', async function() {\n    expect(element)\n        .to.be.an.instanceof(customElements.get('pf-jump-links-item'))\n        .and\n        .to.be.an.instanceof(PfJumpLinksItem);\n  });\n});\n\ndescribe('<pf-jump-links-list>', function() {\n  let element: PfJumpLinksList;\n\n  beforeEach(async function() {\n    element = await createFixture<PfJumpLinks>(html`\n      <pf-jump-links-list></pf-jump-links-list>\n    `);\n  });\n\n  it('should upgrade', async function() {\n    expect(element)\n        .to.be.an.instanceof(customElements.get('pf-jump-links-list'))\n        .and\n        .to.be.an.instanceof(PfJumpLinksList);\n  });\n});\n"]}