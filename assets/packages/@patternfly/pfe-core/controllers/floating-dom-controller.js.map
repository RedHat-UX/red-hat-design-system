{"version":3,"file":"floating-dom-controller.js","sourceRoot":"","sources":["floating-dom-controller.ts"],"names":[],"mappings":"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","sourcesContent":["import type { Placement } from '@floating-ui/dom';\nimport type { ReactiveController, ReactiveElement } from 'lit';\nimport type { StyleInfo } from 'lit/directives/style-map.js';\nimport type { Options as Offset } from '@floating-ui/core/src/middleware/offset';\n\n\nexport { Placement };\n\nimport {\n  autoUpdate,\n  computePosition,\n  offset as offsetMiddleware,\n  shift as shiftMiddleware,\n  flip as flipMiddleware,\n} from '@floating-ui/dom';\n\ntype Lazy<T> = T|(() => T|null|undefined);\n\ninterface FloatingDOMControllerOptions {\n  content: Lazy<HTMLElement>;\n  invoker?: Lazy<HTMLElement>;\n  arrow?: boolean;\n  flip?: boolean;\n  shift?: boolean;\n  padding?: number;\n}\n\ninterface ShowOptions {\n  offset?: Offset;\n  placement?: Placement;\n}\n\nexport type Anchor = ''|'top'|'left'|'bottom'|'right';\nexport type Alignment = 'center'|'start'|'end';\n\n/**\n * Controls floating DOM within a web component, e.g. tooltips and popovers\n */\nexport class FloatingDOMController implements ReactiveController {\n  #open = false;\n  #opening = false;\n  #cleanup?: () => void;\n  #anchor?: Anchor;\n  #alignment?: Alignment;\n  #styles?: StyleInfo;\n  #placement?: Placement;\n  #options: Required<FloatingDOMControllerOptions>;\n\n  get #invoker() {\n    const { invoker } = this.#options;\n    return typeof invoker === 'function' ? invoker() : invoker;\n  }\n\n  get #content() {\n    const { content } = this.#options;\n    return typeof content === 'function' ? content() : content;\n  }\n\n  /** The crosswise alignment of the invoker on which to display the floating DOM */\n  get alignment() {\n    return this.#alignment ?? 'center';\n  }\n\n  /** The side of the invoker on which to display the floating DOM */\n  get anchor() {\n    return this.#anchor ?? '';\n  }\n\n  /**\n   * When true, the floating DOM is visible\n   */\n  get open() {\n    return this.#open;\n  }\n\n  /** The computed placement of the floating DOM */\n  get placement(): Placement {\n    return this.#placement ?? 'top';\n  }\n\n  /**\n   * Styles to apply to your element's container\n   *\n   * - `--_floating-content-translate`: translate to apply to floating content.\n   */\n  get styles(): StyleInfo {\n    return this.#styles ?? {};\n  }\n\n  constructor(\n    private host: ReactiveElement,\n    options: FloatingDOMControllerOptions\n  ) {\n    host.addController(this);\n    this.#options = options as Required<FloatingDOMControllerOptions>;\n    this.#options.invoker ??= host;\n    this.#options.arrow ??= false;\n    this.#options.flip ??= true;\n    this.#options.shift ??= true;\n  }\n\n  hostDisconnected() {\n    this.#cleanup?.();\n  }\n\n  async #update(placement: Placement = 'top', offset?: Offset) {\n    const { flip, padding, shift } = this.#options;\n\n    const invoker = this.#invoker;\n    const content = this.#content;\n    if (!invoker || !content) {\n      return;\n    }\n    const { x, y, placement: _placement } = await computePosition(invoker, content, {\n      strategy: 'absolute',\n      placement,\n      middleware: [\n        offsetMiddleware(offset),\n        shift && shiftMiddleware({ padding }),\n        flip && flipMiddleware({ padding }),\n      ].filter(Boolean)\n    });\n\n    this.#placement = _placement;\n    [this.#anchor, this.#alignment] = (this.#placement.split('-') ?? []) as [Anchor, Alignment];\n    this.#styles = {\n      '--_floating-content-translate': `${x}px ${y}px`,\n    };\n    this.host.requestUpdate();\n  }\n\n  /** Show the floating DOM */\n  async show({ offset, placement }: ShowOptions = {}) {\n    const invoker = this.#invoker;\n    const content = this.#content;\n    if (!invoker || !content) {\n      return;\n    }\n    if (!this.#opening) {\n      this.#opening = true;\n      const p = this.#update(placement, offset);\n      this.#cleanup ??= autoUpdate(invoker, content, () =>\n        this.#update(placement, offset));\n      await p;\n      this.#opening = false;\n    }\n    this.#open = true;\n    this.host.requestUpdate();\n  }\n\n  /** Hide the floating DOM */\n  async hide() {\n    await this.host.updateComplete;\n    while (this.#opening && !this.open) {\n      await new Promise(requestAnimationFrame);\n    }\n    this.#open = false;\n    this.#cleanup?.();\n    this.host.requestUpdate();\n    await this.host.updateComplete;\n  }\n}\n"]}