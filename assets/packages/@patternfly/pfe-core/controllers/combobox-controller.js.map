{"version":3,"file":"combobox-controller.js","sourceRoot":"","sources":["combobox-controller.ts"],"names":[],"mappings":"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","sourcesContent":["import { nothing, type ReactiveController, type ReactiveControllerHost } from 'lit';\nimport type { ActivedescendantControllerOptions } from './activedescendant-controller.js';\nimport type { RovingTabindexControllerOptions } from './roving-tabindex-controller.js';\nimport type { ATFocusController } from './at-focus-controller';\nimport type { ListboxControllerOptions } from './listbox-controller.js';\n\nimport { ListboxController, isItem, isItemDisabled } from './listbox-controller.js';\nimport { RovingTabindexController } from './roving-tabindex-controller.js';\nimport { ActivedescendantController } from './activedescendant-controller.js';\nimport { InternalsController } from './internals-controller.js';\nimport { getRandomId } from '../functions/random.js';\nimport type { RequireProps } from '../core.js';\n\ntype AllOptions<Item extends HTMLElement> =\n    ActivedescendantControllerOptions<Item>\n  & ListboxControllerOptions<Item>\n  & RovingTabindexControllerOptions<Item>;\n\ntype Lang = typeof ComboboxController['langs'][number];\n\nfunction deepClosest(element: Element | null, selector: string) {\n  let closest = element?.closest(selector);\n  let root = element?.getRootNode();\n  let count = 0;\n  while (count < 500 && !closest && element) {\n    count++;\n    root = element.getRootNode();\n    if (root instanceof ShadowRoot) {\n      element = root.host;\n    } else if (root instanceof Document) {\n      element = document.documentElement;\n    } else {\n      return null;\n    }\n    closest = element.closest(selector);\n  }\n  return closest;\n}\n\nfunction getItemValue<Item extends HTMLElement>(item: Item): string {\n  if ('value' in item && typeof item.value === 'string') {\n    return item.value;\n  } else {\n    return '';\n  }\n}\n\nfunction isItemFiltered<Item extends HTMLElement>(item: Item, value: string): boolean {\n  return !getItemValue(item)\n      .toLowerCase()\n      .startsWith(value.toLowerCase());\n}\n\nfunction setItemHidden(item: HTMLElement, hidden: boolean) {\n  item.hidden = hidden;\n}\n\nfunction setComboboxValue(item: HTMLElement, value: string): void {\n  if (!('value' in item)) {\n    // eslint-disable-next-line no-console\n    return console.warn(`Cannot set value on combobox element ${item.localName}`);\n  } else {\n    item.value = value;\n  }\n}\n\nfunction getComboboxValue(combobox: HTMLElement): string {\n  if ('value' in combobox && typeof combobox.value === 'string') {\n    return combobox.value;\n  } else {\n    // eslint-disable-next-line no-console\n    return console.warn(`Cannot get value from combobox element ${combobox.localName}`), '';\n  }\n}\n\nexport interface ComboboxControllerOptions<Item extends HTMLElement> extends\n  Omit<AllOptions<Item>,\n    | 'getATFocusedItem'\n    | 'getControlsElements'\n    | 'getActiveDescendantContainer'\n    | 'getItemsContainer'> {\n  /**\n   * Predicate which establishes whether the listbox is expanded\n   * e.g. `isExpanded: () => this.expanded`, if the host's `expanded` property\n   * should correspond to the listbox expanded state.\n   */\n  isExpanded(): boolean;\n  /**\n   * Callback which the host must implement to change the expanded state to true.\n   * Return or resolve false to prevent the change.\n   */\n  requestShowListbox(): void | boolean | Promise<boolean> | Promise<void>;\n  /**\n   * Callback which the host must implement to change the expanded to false.\n   * Return or resolve false to prevent the default.\n   */\n  requestHideListbox(): void | boolean | Promise<boolean> | Promise<void>;\n  /**\n   * Returns the listbox container element\n   */\n  getListboxElement(): HTMLElement | null;\n  /**\n   * Returns the toggle button, if it exists\n   */\n  getToggleButton(): HTMLElement | null;\n  /**\n   * Returns the combobox input, if it exists\n   */\n  getComboboxInput(): HTMLElement | null;\n  /**\n   * Returns the label for the toggle button, combobox input, and listbox.\n   * when `ariaLabelledByElements` is supported, the label elements associated with\n   * the host element are used instead, and this value is ignored.\n   */\n  getFallbackLabel(): string;\n  /**\n   * Called on an item to retrieve it's value string. By default, returns the `value` property\n   * of the item, as if it implemented the `<option>` element's interface.\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLOptionElement\n   */\n  getItemValue?(item: Item): string;\n  /**\n   * Optional callback, called on the combobox input element to set its value.\n   * by default, returns the element's `value` DOM property.\n   */\n  getComboboxValue?(combobox: HTMLElement): string;\n  /**\n   * Optional callback, called on the combobox input element to set its value.\n   * by default, sets the element's `value` DOM property.\n   */\n  setComboboxValue?(item: HTMLElement, value: string): void;\n  /**\n   * Called on each item, with the combobox input, to determine if the item should be shown in the\n   * listbox or filtered out. Return false to hide the item. By default, checks whether the item's\n   * value starts with the input value (when both are lowercased).\n   */\n  isItemFiltered?(item: Item, value: string): boolean;\n  /**\n   * Called on each item when the filter changes.\n   * By default, toggles the `hidden` attribute on the item\n   */\n  setItemHidden?(item: Item, hidden: boolean): void;\n}\n\n/**\n * @summary Implements the WAI-ARIA pattern [Editable Combobox with Both List and Inline Autocomplete].\n *\n * Combobox with keyboard and pointer navigation, using the aria-activedescendant pattern.\n *\n * WARNING: Safari VoiceOver does not support aria-activedescendant, so Safari users\n * rely on the combobox input value being announced when navigating the listbox with the keyboard.\n * We have erred on the side that it may be less-broken to avoid announcing disabled items in that\n * case, rather than announcing the disabled items value without indicating that it is disabled.\n * @see (https://bugs.webkit.org/show_bug.cgi?id=269026)\n *\n * [pattern]: https://www.w3.org/WAI/ARIA/apg/patterns/combobox/examples/combobox-autocomplete-both/\n */\nexport class ComboboxController<\n  Item extends HTMLElement\n> implements ReactiveController {\n  public static of<T extends HTMLElement>(\n    host: ReactiveControllerHost,\n    options: ComboboxControllerOptions<T>,\n  ): ComboboxController<T> {\n    return new ComboboxController(host, options);\n  }\n\n  /**\n   * Whether the `ariaActiveDescendantElement` IDL attribute is supported for cross-root ARIA.\n   */\n  public static get supportsCrossRootActiveDescendant(): boolean {\n    return ActivedescendantController.supportsCrossRootActiveDescendant;\n  }\n\n  static #alert?: HTMLElement;\n\n  static #alertTemplate = document.createElement('template');\n\n  private static langs = [\n    'en',\n    'es',\n    'de',\n    'fr',\n    'it',\n    'ja',\n    'zh',\n  ] as const;\n\n  private static langsRE = new RegExp(ComboboxController.langs.join('|'));\n\n  static {\n    // apply visually-hidden styles\n    this.#alertTemplate.innerHTML = `\n      <div role=\"alert\" style=\"\n         border: 0;\n         clip: rect(0, 0, 0, 0);\n         block-size: 1px;\n         margin: -1px;\n         overflow: hidden;\n         padding: 0;\n         position: absolute;\n         white-space: nowrap;\n         inline-size: 1px;\n        \"></div>\n      `;\n  }\n\n  private options: RequireProps<ComboboxControllerOptions<Item>,\n    | 'isItemDisabled'\n    | 'isItem'\n    | 'isItemFiltered'\n    | 'getItemValue'\n    | 'getOrientation'\n    | 'getComboboxValue'\n    | 'setComboboxValue'\n    | 'setItemHidden'\n  >;\n\n  #lb: ListboxController<Item>;\n  #fc?: ATFocusController<Item>;\n  #preventListboxGainingFocus = false;\n  #input: HTMLElement | null = null;\n  #button: HTMLElement | null = null;\n  #listbox: HTMLElement | null = null;\n  #buttonInitialRole: string | null = null;\n  #mo = new MutationObserver(() => this.#initItems());\n  #microcopy = new Map<string, Record<Lang, string>>(Object.entries({\n    dimmed: {\n      en: 'dimmed',\n      es: 'atenuada',\n      de: 'gedimmt',\n      it: 'oscurato',\n      fr: 'atténué',\n      ja: '暗くなった',\n      zh: '变暗',\n    },\n    selected: {\n      en: 'selected',\n      es: 'seleccionado',\n      de: 'ausgewählt',\n      fr: 'choisie',\n      it: 'selezionato',\n      ja: '選ばれた',\n      zh: '选',\n    },\n    of: {\n      en: 'of',\n      es: 'de',\n      de: 'von',\n      fr: 'sur',\n      it: 'di',\n      ja: '件目',\n      zh: '的',\n    },\n  }));\n\n  /** All items */\n  get items(): Item[] {\n    return this.#lb.items;\n  }\n\n  set items(value: Item[]) {\n    this.#lb.items = value;\n  }\n\n  /** Whether the combobox is disabled */\n  get disabled() {\n    return this.#lb.disabled;\n  }\n\n  set disabled(value: boolean) {\n    this.#lb.disabled = value;\n  }\n\n  /** Whether multiselect is enabled */\n  get multi() {\n    return this.#lb.multi;\n  }\n\n  set multi(value: boolean) {\n    this.#lb.multi = value;\n  }\n\n  /** The current selection: a list of items */\n  get selected() {\n    return this.#lb.selected;\n  }\n\n  set selected(value: Item[]) {\n    this.#lb.selected = value;\n  }\n\n  get #hasTextInput() {\n    return this.options.getComboboxInput();\n  }\n\n  get #focusedItem() {\n    return this.#fc?.items.at(Math.max(this.#fc?.atFocusedItemIndex ?? -1, 0)) ?? null;\n  }\n\n  get #element() {\n    if (this.host instanceof HTMLElement) {\n      return this.host;\n    } else if (this.options.getListboxElement() instanceof HTMLElement) {\n      return this.options.getListboxElement();\n    }\n  }\n\n  private constructor(\n    public host: ReactiveControllerHost,\n    options: ComboboxControllerOptions<Item>,\n  ) {\n    host.addController(this);\n    this.options = {\n      isItem,\n      getItemValue,\n      isItemFiltered,\n      isItemDisabled,\n      getComboboxValue,\n      setComboboxValue,\n      setItemHidden,\n      getOrientation: () => 'vertical',\n      ...options,\n    };\n    this.#lb = ListboxController.of(host, {\n      isItem: this.options.isItem,\n      getItemsContainer: this.options.getListboxElement,\n      getControlsElements: () => [\n        this.options.getToggleButton(),\n        this.options.getComboboxInput(),\n      ].filter(x => !!x),\n      getATFocusedItem: () => this.items[this.#fc?.atFocusedItemIndex ?? -1] ?? null,\n      isItemDisabled: this.options.isItemDisabled,\n      setItemSelected: this.options.setItemSelected,\n    });\n  }\n\n  async hostConnected(): Promise<void> {\n    await this.host.updateComplete;\n    this.hostUpdated();\n  }\n\n  hostUpdated(): void {\n    if (!this.#fc) {\n      this.#init();\n    }\n    const expanded = this.options.isExpanded();\n    this.#button?.setAttribute('aria-expanded', String(expanded));\n    this.#input?.setAttribute('aria-expanded', String(expanded));\n    if (this.#hasTextInput) {\n      this.#button?.setAttribute('tabindex', '-1');\n    } else {\n      this.#button?.removeAttribute('tabindex');\n    }\n    this.#initLabels();\n  }\n\n  hostDisconnected(): void {\n    this.#fc?.hostDisconnected();\n  }\n\n  /**\n   * Order of operations is important\n   */\n  async #init() {\n    await this.host.updateComplete;\n    this.#initListbox();\n    this.#initItems();\n    this.#initButton();\n    this.#initInput();\n    this.#initLabels();\n    this.#initController();\n  }\n\n  #initListbox() {\n    this.#mo.disconnect();\n    this.#listbox?.removeEventListener('focusout', this.#onFocusoutListbox);\n    this.#listbox?.removeEventListener('keydown', this.#onKeydownListbox);\n    this.#listbox?.removeEventListener('click', this.#onClickListbox);\n    this.#listbox = this.options.getListboxElement();\n    if (!this.#listbox) {\n      throw new Error('ComboboxController getListboxElement() option must return an element');\n    }\n    this.#listbox.addEventListener('focusout', this.#onFocusoutListbox);\n    this.#listbox.addEventListener('keydown', this.#onKeydownListbox);\n    this.#listbox.addEventListener('click', this.#onClickListbox);\n    this.#listbox.id ??= getRandomId();\n    this.#mo.observe(this.#listbox, { childList: true });\n  }\n\n  #initButton() {\n    this.#button?.removeEventListener('click', this.#onClickButton);\n    this.#button?.removeEventListener('keydown', this.#onKeydownButton);\n    this.#button = this.options.getToggleButton();\n    if (!this.#button) {\n      throw new Error('ComboboxController getToggleButton() option must return an element');\n    }\n    this.#buttonInitialRole = this.#button.role;\n    this.#button.role = 'combobox';\n    this.#button.setAttribute('aria-controls', this.#listbox?.id ?? '');\n    this.#button.addEventListener('click', this.#onClickButton);\n    this.#button.addEventListener('keydown', this.#onKeydownButton);\n  }\n\n  #initInput() {\n    this.#input?.removeEventListener('click', this.#onClickButton);\n    this.#input?.removeEventListener('keyup', this.#onKeyupInput);\n    this.#input?.removeEventListener('keydown', this.#onKeydownInput);\n\n    this.#input = this.options.getComboboxInput();\n    if (this.#input && !('value' in this.#input)) {\n      throw new Error(`ComboboxController getToggleInput() option must return an element with a value property`);\n    } else if (this.#input) {\n      this.#input.role = 'combobox';\n      this.#button!.role = this.#buttonInitialRole;\n      this.#input.setAttribute('aria-autocomplete', 'both');\n      this.#input.setAttribute('aria-controls', this.#listbox?.id ?? '');\n      this.#input.addEventListener('click', this.#onClickButton);\n      this.#input.addEventListener('keyup', this.#onKeyupInput);\n      this.#input.addEventListener('keydown', this.#onKeydownInput);\n    }\n  }\n\n  #initLabels() {\n    const labels = InternalsController.getLabels(this.host)\n                ?? this.#element?.ariaLabelledByElements\n                ?? [];\n    const label = this.options.getFallbackLabel()\n                  || this.#element?.ariaLabelledByElements?.map(x => x.textContent).join('')\n                  || null;\n\n    for (const element of [this.#button, this.#listbox, this.#input].filter(x => !!x)) {\n      if ('ariaLabelledByElements' in HTMLElement.prototype && labels.filter(x => !!x).length) {\n        element.ariaLabelledByElements = [...labels ?? []];\n      } else {\n        element.ariaLabel = label;\n      }\n    }\n  }\n\n  #initController() {\n    this.#fc?.hostDisconnected();\n    const { getOrientation } = this.options;\n    const getItems = () => this.items;\n    const getItemsContainer = () => this.#listbox;\n    if (this.#hasTextInput) {\n      this.#fc = ActivedescendantController.of(this.host, {\n        getItems, getItemsContainer, getOrientation,\n        getActiveDescendantContainer: () => this.#input,\n        getControlsElements: () => [\n          this.options.getToggleButton(),\n          this.options.getComboboxInput(),\n        ].filter(x => !!x),\n        setItemActive: this.options.setItemActive,\n      });\n    } else {\n      this.#fc = RovingTabindexController.of(this.host, {\n        getItems, getItemsContainer, getOrientation,\n        getControlsElements: () => [\n          this.options.getToggleButton(),\n        ].filter(x => !!x),\n      });\n    }\n  }\n\n  #initItems() {\n    if (this.#listbox) {\n      this.items = this.options.getItems();\n    }\n  }\n\n  async #show(): Promise<void> {\n    const success = await this.options.requestShowListbox();\n    this.#filterItems();\n    if (success !== false && !this.#hasTextInput) {\n      if (!this.#preventListboxGainingFocus) {\n        (this.#focusedItem ?? this.#fc?.items.at(0))?.focus();\n        this.#preventListboxGainingFocus = false;\n      }\n    }\n  }\n\n  async #hide(): Promise<void> {\n    await this.options.requestHideListbox();\n  }\n\n  async #toggle() {\n    if (this.options.isExpanded()) {\n      return this.#hide();\n    } else {\n      return this.#show();\n    }\n  }\n\n  #translate(key: string, lang: Lang) {\n    const strings = this.#microcopy.get(key);\n    return strings?.[lang] ?? key;\n  }\n\n  // TODO(bennypowers): perhaps move this to ActivedescendantController\n  #announce(item: Item) {\n    const value = this.options.getItemValue(item);\n    ComboboxController.#alert?.remove();\n    const fragment = ComboboxController.#alertTemplate.content.cloneNode(true) as DocumentFragment;\n    ComboboxController.#alert = fragment.firstElementChild as HTMLElement;\n    let text = value;\n    const lang = deepClosest(this.#listbox, '[lang]')?.getAttribute('lang') ?? 'en';\n    const langKey = lang?.match(ComboboxController.langsRE)?.at(0) as Lang ?? 'en';\n    if (this.options.isItemDisabled(item)) {\n      text += ` (${this.#translate('dimmed', langKey)})`;\n    }\n    if (this.#lb.isSelected(item)) {\n      text += `, (${this.#translate('selected', langKey)})`;\n    }\n    if (item.hasAttribute('aria-setsize') && item.hasAttribute('aria-posinset')) {\n      if (langKey === 'ja') {\n        text += `, (${item.getAttribute('aria-setsize')} 件中 ${item.getAttribute('aria-posinset')} 件目)`;\n      } else {\n        text += `, (${item.getAttribute('aria-posinset')} ${this.#translate('of', langKey)} ${item.getAttribute('aria-setsize')})`;\n      }\n    }\n    ComboboxController.#alert.lang = lang;\n    ComboboxController.#alert.innerText = text;\n    document.body.append(ComboboxController.#alert);\n  }\n\n  #filterItems() {\n    if (this.#input) {\n      let value: string;\n      for (const item of this.items) {\n        const hidden =\n          !!this.options.isExpanded()\n            && !!(value = this.options.getComboboxValue(this.#input))\n            && this.options.isItemFiltered?.(item, value)\n            || false;\n        this.options.setItemHidden(item, hidden);\n      }\n    }\n  }\n\n  #onClickButton = () => {\n    if (!this.options.isExpanded()) {\n      this.#show();\n    } else {\n      this.#hide();\n    }\n  };\n\n  #onClickListbox = (event: MouseEvent) => {\n    if (!this.multi && event.composedPath().some(this.options.isItem)) {\n      this.#hide();\n    }\n  };\n\n  /**\n   * Handle keypresses on the input\n   * ## `Down Arrow`\n   * - If the textbox is not empty and the listbox is displayed,\n   *   moves visual focus to the first suggested value.\n   * - If the textbox is empty and the listbox is not displayed,\n   *   opens the listbox and moves visual focus to the first option.\n   * - In both cases DOM focus remains on the textbox.\n   *\n   * ## `Alt + Down Arrow`\n   * Opens the listbox without moving focus or changing selection.\n   *\n   * ## `Up Arrow`\n   * - If the textbox is not empty and the listbox is displayed,\n   *   moves visual focus to the last suggested value.\n   * - If the textbox is empty, first opens the listbox if it is not already displayed\n   *   and then moves visual focus to the last option.\n   * - In both cases DOM focus remains on the textbox.\n   *\n   * ## `Enter`\n   * Closes the listbox if it is displayed.\n   *\n   * ## `Escape`\n   * - If the listbox is displayed, closes it.\n   * - If the listbox is not displayed, clears the textbox.\n   *\n   * ## Standard single line text editing keys\n   * - Keys used for cursor movement and text manipulation,\n   *   such as `Delete` and `Shift + Right Arrow`.\n   * - An HTML `input` with `type=\"text\"` is used for the textbox so the browser will provide\n   *   platform-specific editing keys.\n   *\n   * @see https://www.w3.org/WAI/ARIA/apg/patterns/combobox/examples/combobox-autocomplete-list\n   * @param event keydown event\n   */\n  #onKeydownInput = (event: KeyboardEvent) => {\n    if (event.ctrlKey || event.shiftKey || !this.#input) {\n      return;\n    }\n    switch (event.key) {\n      case 'ArrowDown':\n      case 'ArrowUp':\n        if (!this.options.isExpanded()) {\n          this.#preventListboxGainingFocus = event.altKey;\n          this.#show();\n        }\n        break;\n      case 'Enter':\n        if (!this.multi) {\n          this.#hide();\n        }\n        break;\n      case 'Escape':\n        if (!this.options.isExpanded()) {\n          this.options.setComboboxValue(this.#input, '');\n          this.host.requestUpdate();\n        }\n        this.#hide();\n        break;\n      case 'Alt':\n      case 'AltGraph':\n      case 'Shift':\n      case 'Control':\n      case 'Fn':\n      case 'Symbol':\n      case 'Hyper':\n      case 'Super':\n      case 'Meta':\n      case 'CapsLock':\n      case 'FnLock':\n      case 'NumLock':\n      case 'Tab':\n      case 'ScrollLock':\n      case 'SymbolLock':\n      case ' ':\n        break;\n      default:\n        if (!this.options.isExpanded()) {\n          this.#show();\n        }\n    }\n  };\n\n  /**\n   * Populates the combobox input with the focused value when navigating the listbox,\n   * and filters the items when typing.\n   * @param event keyup event\n   */\n  #onKeyupInput = (event: KeyboardEvent) => {\n    if (!this.#input) {\n      return;\n    }\n    switch (event.key) {\n      case 'ArrowUp':\n      case 'ArrowDown':\n        /**\n         * Safari VoiceOver does not support aria-activedescendant, so we must.\n         * approximate the correct behaviour by constructing a visually-hidden alert role\n         * @see (https://bugs.webkit.org/show_bug.cgi?id=269026)\n         */\n        if (this.#focusedItem\n            && this.options.getComboboxInput()\n            && InternalsController.isSafari) {\n          this.#announce(this.#focusedItem);\n        }\n        break;\n      default:\n        this.#filterItems();\n    }\n  };\n\n  #onKeydownButton = (event: KeyboardEvent) => {\n    if (this.#hasTextInput) {\n      return this.#onKeydownInput(event);\n    } else {\n      return this.#onKeydownToggleButton(event);\n    }\n  };\n\n  #onKeydownListbox = (event: KeyboardEvent) => {\n    if (!this.#hasTextInput) {\n      switch (event.key) {\n        case 'Home':\n        case 'End':\n          this.#onKeydownToggleButton(event);\n          break;\n        case 'Escape':\n          this.#hide();\n          this.#button?.focus();\n          break;\n        case 'Enter':\n        case ' ': {\n          const eventItem = event.composedPath().find(this.options.isItem);\n          if (eventItem\n              && !this.multi\n              && this.options.isExpanded()\n              && !this.options.isItemDisabled(eventItem)\n          ) {\n            this.#hide();\n            this.#button?.focus();\n          }\n        }\n      }\n    }\n  };\n\n  #onFocusoutListbox = (event: FocusEvent) => {\n    if (!this.#hasTextInput && this.options.isExpanded()) {\n      const root = this.#element?.getRootNode();\n      if ((root instanceof ShadowRoot || root instanceof Document)\n          && !this.items.includes(event.relatedTarget as Item)\n      ) {\n        this.#hide();\n      }\n    }\n  };\n\n  #onKeydownToggleButton = async (event: KeyboardEvent) => {\n    switch (event.key) {\n      case 'ArrowDown':\n      case 'ArrowUp':\n        if (!this.options.isExpanded()) {\n          this.#show();\n        }\n        break;\n      case 'Home':\n        if (!this.options.isExpanded()) {\n          await this.#show();\n        }\n        if (this.#fc) {\n          this.#fc.atFocusedItemIndex = 0;\n        }\n        break;\n      case 'End':\n        if (!this.options.isExpanded()) {\n          await this.#show();\n        }\n        if (this.#fc) {\n          this.#fc.atFocusedItemIndex = this.items.length - 1;\n        }\n        break;\n      case ' ':\n      case 'Enter':\n        // prevent scroll\n        event.preventDefault();\n        await this.#toggle();\n        await this.host.updateComplete;\n        if (!this.options.isExpanded()) {\n          this.#button?.focus();\n        }\n        break;\n    }\n  };\n\n  /**\n   * For Browsers which do not support `ariaActiveDescendantElement`, we must clone\n   * the listbox items into the same root as the combobox input\n   * Call this method to return either an array of (cloned) list box items, to be placed in your\n   * shadow template, or nothing in the case the browser supports cross-root aria.\n   */\n  public renderItemsToShadowRoot(): Node[] | typeof nothing {\n    if (this.#fc instanceof ActivedescendantController) {\n      return this.#fc.renderItemsToShadowRoot();\n    } else {\n      return nothing;\n    }\n  }\n}\n"]}