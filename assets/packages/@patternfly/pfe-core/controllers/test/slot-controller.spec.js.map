{"version":3,"file":"slot-controller.spec.js","sourceRoot":"","sources":["slot-controller.spec.ts"],"names":[],"mappings":"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","sourcesContent":["import { expect, fixture } from '@open-wc/testing';\n\nimport { customElement } from 'lit/decorators/custom-element.js';\nimport { LitElement, html, type TemplateResult } from 'lit';\n\nimport { SlotController } from '../slot-controller.js';\nimport { SlotController as SlotControllerServer } from '../slot-controller-server.js';\n\n@customElement('test-slot-controller')\nclass TestSlotController extends LitElement {\n  controller = new SlotController(this, 'a', null);\n  render(): TemplateResult {\n    return html`\n      <slot name=\"a\"></slot>\n      <slot></slot>\n    `;\n  }\n}\n\n@customElement('test-slot-controller-server')\nclass TestSlotControllerServer extends LitElement {\n  controller = new SlotControllerServer(this, 'a', null);\n  render(): TemplateResult {\n    return html`\n      <slot name=\"a\"></slot>\n      <slot></slot>\n    `;\n  }\n}\n\ndescribe('SlotController', function() {\n  describe('with named and anonymous slots', function() {\n    describe('with no content', function() {\n      let element: TestSlotController;\n      beforeEach(async function() {\n        element = await fixture(html`\n          <test-slot-controller></test-slot-controller>\n        `);\n      });\n      it('reports empty named slots', function() {\n        expect(element.controller.hasSlotted('a')).to.be.false;\n        expect(element.controller.isEmpty('a')).to.be.true;\n      });\n      it('reports empty default slot', function() {\n        expect(element.controller.hasSlotted(null)).to.be.false;\n        expect(element.controller.isEmpty(null)).to.be.true;\n      });\n      it('reports empty default slot with no arguments', function() {\n        expect(element.controller.hasSlotted()).to.be.false;\n        expect(element.controller.isEmpty()).to.be.true;\n      });\n      it('returns empty list for getSlotted(\"a\")', function() {\n        expect(element.controller.getSlotted('a')).to.be.empty;\n      });\n      it('returns empty list for getSlotted(null)', function() {\n        expect(element.controller.getSlotted(null)).to.be.empty;\n      });\n      it('returns empty list for getSlotted()', function() {\n        expect(element.controller.getSlotted()).to.be.empty;\n      });\n    });\n\n    describe('with element content in default slot', function() {\n      let element: TestSlotController;\n      beforeEach(async function() {\n        element = await fixture(html`\n          <test-slot-controller>\n            <p>element</p>\n          </test-slot-controller>\n        `);\n      });\n      it('reports empty named slots', function() {\n        expect(element.controller.hasSlotted('a')).to.be.false;\n        expect(element.controller.isEmpty('a')).to.be.true;\n      });\n      it('reports non-empty default slot', function() {\n        expect(element.controller.hasSlotted(null)).to.be.true;\n        expect(element.controller.isEmpty(null)).to.be.false;\n      });\n      it('reports non-empty default slot with no arguments', function() {\n        expect(element.controller.hasSlotted()).to.be.true;\n        expect(element.controller.isEmpty()).to.be.false;\n      });\n      it('returns empty list for getSlotted(\"a\")', function() {\n        expect(element.controller.getSlotted('a')).to.be.empty;\n      });\n      it('returns lengthy list for getSlotted(null)', function() {\n        expect(element.controller.getSlotted(null)).to.not.be.empty;\n      });\n      it('returns lengthy list for getSlotted()', function() {\n        expect(element.controller.getSlotted()).to.not.be.empty;\n      });\n    });\n\n    describe('with element content in named slot', function() {\n      let element: TestSlotController;\n      beforeEach(async function() {\n        element = await fixture(html`\n          <test-slot-controller>\n            <p slot=\"a\">element</p>\n          </test-slot-controller>\n        `);\n      });\n      it('reports non-empty named slots', function() {\n        expect(element.controller.hasSlotted('a')).to.be.true;\n        expect(element.controller.isEmpty('a')).to.be.false;\n      });\n      it('reports empty default slot', function() {\n        expect(element.controller.hasSlotted(null)).to.be.false;\n        expect(element.controller.isEmpty(null)).to.be.true;\n      });\n      it('reports empty default slot with no arguments', function() {\n        expect(element.controller.hasSlotted()).to.be.false;\n        expect(element.controller.isEmpty()).to.be.true;\n      });\n      it('returns lengthy list for getSlotted(\"a\")', function() {\n        expect(element.controller.getSlotted('a')).to.not.be.empty;\n      });\n      it('returns empty list for getSlotted(null)', function() {\n        expect(element.controller.getSlotted(null)).to.be.empty;\n      });\n      it('returns empty list for getSlotted()', function() {\n        expect(element.controller.getSlotted()).to.be.empty;\n      });\n    });\n\n    describe('with text content in default slot', function() {\n      let element: TestSlotController;\n      beforeEach(async function() {\n        element = await fixture(html`\n          <test-slot-controller>\n            text\n          </test-slot-controller>\n        `);\n      });\n      it('reports empty named slots', function() {\n        expect(element.controller.hasSlotted('a')).to.be.false;\n        expect(element.controller.isEmpty('a')).to.be.true;\n      });\n      it('reports non-empty default slot', function() {\n        expect(element.controller.hasSlotted(null)).to.be.true;\n        expect(element.controller.isEmpty(null)).to.be.false;\n      });\n      it('reports non-empty default slot with no arguments', function() {\n        expect(element.controller.hasSlotted()).to.be.true;\n        expect(element.controller.isEmpty()).to.be.false;\n      });\n      it('returns empty list for getSlotted(\"a\")', function() {\n        expect(element.controller.getSlotted('a')).to.be.empty;\n      });\n      it('returns empty list for getSlotted(null)', function() {\n        expect(element.controller.getSlotted(null)).to.be.empty;\n      });\n      it('returns empty list for getSlotted()', function() {\n        expect(element.controller.getSlotted()).to.be.empty;\n      });\n    });\n\n    describe('with white space in default slot', function() {\n      let element: TestSlotController;\n      beforeEach(async function() {\n        element = await fixture(html`\n          <test-slot-controller-server>\n\n          </test-slot-controller-server>\n        `);\n      });\n      it('reports empty named slots', function() {\n        expect(element.controller.hasSlotted('a')).to.be.false;\n        expect(element.controller.isEmpty('a')).to.be.true;\n      });\n      it('reports empty default slot', function() {\n        expect(element.controller.hasSlotted(null)).to.be.false;\n        expect(element.controller.isEmpty(null)).to.be.true;\n      });\n      it('reports empty default slot with no arguments', function() {\n        expect(element.controller.hasSlotted()).to.be.false;\n        expect(element.controller.isEmpty()).to.be.true;\n      });\n      it('returns empty list for getSlotted(\"a\")', function() {\n        expect(element.controller.getSlotted('a')).to.be.empty;\n      });\n      it('returns empty list for getSlotted(null)', function() {\n        expect(element.controller.getSlotted(null)).to.be.empty;\n      });\n      it('returns empty list for getSlotted()', function() {\n        expect(element.controller.getSlotted()).to.be.empty;\n      });\n    });\n  });\n});\n\ndescribe('SlotController (server)', function() {\n  describe('with named and anonymous slots', function() {\n    describe('with no ssr hint attrs', function() {\n      let element: TestSlotControllerServer;\n      beforeEach(async function() {\n        element = await fixture(html`\n          <test-slot-controller-server></test-slot-controller-server>\n        `);\n      });\n      it('reports empty named slots', function() {\n        expect(element.controller.hasSlotted('a')).to.be.false;\n        expect(element.controller.isEmpty('a')).to.be.true;\n      });\n      it('reports empty default slot', function() {\n        expect(element.controller.hasSlotted(null)).to.be.false;\n        expect(element.controller.isEmpty(null)).to.be.true;\n      });\n      it('reports empty default slot with no arguments', function() {\n        expect(element.controller.hasSlotted()).to.be.false;\n        expect(element.controller.isEmpty()).to.be.true;\n      });\n      it('returns empty list for getSlotted(\"a\")', function() {\n        expect(element.controller.getSlotted('a')).to.be.empty;\n      });\n      it('returns empty list for getSlotted(null)', function() {\n        expect(element.controller.getSlotted(null)).to.be.empty;\n      });\n      it('returns empty list for getSlotted()', function() {\n        expect(element.controller.getSlotted()).to.be.empty;\n      });\n    });\n\n    describe('with ssr-hint-has-slotted-default attr', function() {\n      let element: TestSlotController;\n      beforeEach(async function() {\n        element = await fixture(html`\n          <test-slot-controller-server ssr-hint-has-slotted-default>\n            <p>element</p>\n          </test-slot-controller-server>\n        `);\n      });\n      it('reports empty named slots', function() {\n        expect(element.controller.hasSlotted('a')).to.be.false;\n        expect(element.controller.isEmpty('a')).to.be.true;\n      });\n      it('reports non-empty default slot', function() {\n        expect(element.controller.hasSlotted(null)).to.be.true;\n        expect(element.controller.isEmpty(null)).to.be.false;\n      });\n      it('reports non-empty default slot with no arguments', function() {\n        expect(element.controller.hasSlotted()).to.be.true;\n        expect(element.controller.isEmpty()).to.be.false;\n      });\n      it('returns empty list for getSlotted(\"a\")', function() {\n        expect(element.controller.getSlotted('a')).to.be.empty;\n      });\n      it('returns empty list for getSlotted(null)', function() {\n        expect(element.controller.getSlotted(null)).to.be.empty;\n      });\n      it('returns empty list for getSlotted()', function() {\n        expect(element.controller.getSlotted()).to.be.empty;\n      });\n    });\n\n    describe('with ssr-hint-has-slotted=\"a\" attr', function() {\n      let element: TestSlotController;\n      beforeEach(async function() {\n        element = await fixture(html`\n          <test-slot-controller-server ssr-hint-has-slotted=\"a\">\n            <p slot=\"a\">element</p>\n          </test-slot-controller-server>\n        `);\n      });\n      it('reports non-empty named slots', function() {\n        expect(element.controller.hasSlotted('a')).to.be.true;\n        expect(element.controller.isEmpty('a')).to.be.false;\n      });\n      it('reports empty default slot', function() {\n        expect(element.controller.hasSlotted(null)).to.be.false;\n        expect(element.controller.isEmpty(null)).to.be.true;\n      });\n      it('reports empty default slot with no arguments', function() {\n        expect(element.controller.hasSlotted()).to.be.false;\n        expect(element.controller.isEmpty()).to.be.true;\n      });\n      it('returns empty list for getSlotted(\"a\")', function() {\n        expect(element.controller.getSlotted('a')).to.be.empty;\n      });\n      it('returns empty list for getSlotted(null)', function() {\n        expect(element.controller.getSlotted(null)).to.be.empty;\n      });\n      it('returns empty list for getSlotted()', function() {\n        expect(element.controller.getSlotted()).to.be.empty;\n      });\n    });\n\n    describe('with ssr-hint-has-slotted-default attr (text node)', function() {\n      let element: TestSlotController;\n      beforeEach(async function() {\n        element = await fixture(html`\n          <test-slot-controller-server ssr-hint-has-slotted-default>\n            text\n          </test-slot-controller-server>\n        `);\n      });\n      it('reports empty named slots', function() {\n        expect(element.controller.hasSlotted('a')).to.be.false;\n        expect(element.controller.isEmpty('a')).to.be.true;\n      });\n      it('reports non-empty default slot', function() {\n        expect(element.controller.hasSlotted(null)).to.be.true;\n        expect(element.controller.isEmpty(null)).to.be.false;\n      });\n      it('reports non-empty default slot with no arguments', function() {\n        expect(element.controller.hasSlotted()).to.be.true;\n        expect(element.controller.isEmpty()).to.be.false;\n      });\n      it('returns empty list for getSlotted(\"a\")', function() {\n        expect(element.controller.getSlotted('a')).to.be.empty;\n      });\n      it('returns empty list for getSlotted(null)', function() {\n        expect(element.controller.getSlotted(null)).to.be.empty;\n      });\n      it('returns empty list for getSlotted()', function() {\n        expect(element.controller.getSlotted()).to.be.empty;\n      });\n    });\n\n    describe('with no ssr hint attrs (white space text node)', function() {\n      let element: TestSlotController;\n      beforeEach(async function() {\n        element = await fixture(html`\n          <test-slot-controller-server>\n\n          </test-slot-controller-server>\n        `);\n      });\n      it('reports empty named slots', function() {\n        expect(element.controller.hasSlotted('a')).to.be.false;\n        expect(element.controller.isEmpty('a')).to.be.true;\n      });\n      it('reports empty default slot', function() {\n        expect(element.controller.hasSlotted(null)).to.be.false;\n        expect(element.controller.isEmpty(null)).to.be.true;\n      });\n      it('reports empty default slot with no arguments', function() {\n        expect(element.controller.hasSlotted()).to.be.false;\n        expect(element.controller.isEmpty()).to.be.true;\n      });\n      it('returns empty list for getSlotted(\"a\")', function() {\n        expect(element.controller.getSlotted('a')).to.be.empty;\n      });\n      it('returns empty list for getSlotted(null)', function() {\n        expect(element.controller.getSlotted(null)).to.be.empty;\n      });\n      it('returns empty list for getSlotted()', function() {\n        expect(element.controller.getSlotted()).to.be.empty;\n      });\n    });\n  });\n});\n"]}