{"version":3,"file":"roving-tabindex-controller.js","sourceRoot":"","sources":["roving-tabindex-controller.ts"],"names":[],"mappings":"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","sourcesContent":["import type { ReactiveController, ReactiveControllerHost } from 'lit';\nimport type { RequireProps } from '../core.js';\n\nconst isFocusableElement = (el: Element): el is HTMLElement =>\n  !!el &&\n  !el.ariaHidden &&\n  !el.hasAttribute('hidden');\n\nexport interface RovingTabindexControllerOptions<Item extends HTMLElement> {\n  /** @deprecated use getHTMLElement */\n  getElement?: () => Element | null;\n  getHTMLElement?: () => HTMLElement | null;\n  getItems?: () => Item[];\n  getItemContainer?: () => HTMLElement;\n}\n\n/**\n * Implements roving tabindex, as described in WAI-ARIA practices, [Managing Focus Within\n * Components Using a Roving tabindex][rti]\n *\n * [rti]: https://www.w3.org/WAI/ARIA/apg/practices/keyboard-interface/#kbd_roving_tabindex\n */\nexport class RovingTabindexController<\n  Item extends HTMLElement = HTMLElement,\n> implements ReactiveController {\n  private static hosts = new WeakMap<ReactiveControllerHost, RovingTabindexController>();\n\n  static of<Item extends HTMLElement>(\n    host: ReactiveControllerHost,\n    options: RovingTabindexControllerOptions<Item> & { getItems(): Item[] },\n  ) {\n    return new RovingTabindexController(host, options);\n  }\n\n  /** @internal */\n  static elements = new WeakMap<Element, RovingTabindexController>();\n\n  /** active focusable element */\n  #activeItem?: Item;\n\n  /** closest ancestor containing items */\n  #itemsContainer?: Element;\n\n  /** array of all focusable elements */\n  #items: Item[] = [];\n\n  /** flags whether the host's element has gained focus at least once */\n  #gainedInitialFocus = false;\n\n  /**\n   * finds focusable items from a group of items\n   */\n  get #focusableItems(): Item[] {\n    return this.#items.filter(isFocusableElement);\n  }\n\n  /**\n   * index of active item in array of focusable items\n   */\n  get #activeIndex(): number {\n    return !!this.#focusableItems && !!this.activeItem ? this.#focusableItems.indexOf(this.activeItem) : -1;\n  }\n\n  /**\n   * index of active item in array of items\n   */\n  get #itemIndex(): number {\n    return this.activeItem ? this.#items.indexOf(this.activeItem) : -1;\n  }\n\n  /**\n   * active item of array of items\n   */\n  get activeItem(): Item | undefined {\n    return this.#activeItem;\n  }\n\n  /**\n   * all items from array\n   */\n  get items() {\n    return this.#items;\n  }\n\n  /**\n   * all focusable items from array\n   */\n  get focusableItems() {\n    return this.#focusableItems;\n  }\n\n  /**\n   * first item in array of focusable items\n   */\n  get firstItem(): Item | undefined {\n    return this.#focusableItems[0];\n  }\n\n  /**\n   * last item in array of focusable items\n   */\n  get lastItem(): Item | undefined {\n    return this.#focusableItems.at(-1);\n  }\n\n  /**\n   * next item  after active item in array of focusable items\n   */\n  get nextItem(): Item | undefined {\n    return (\n      this.#activeIndex >= this.#focusableItems.length - 1 ? this.firstItem\n        : this.#focusableItems[this.#activeIndex + 1]\n    );\n  }\n\n  /**\n   * previous item  after active item in array of focusable items\n   */\n  get prevItem(): Item | undefined {\n    return (\n      this.#activeIndex > 0 ? this.#focusableItems[this.#activeIndex - 1]\n        : this.lastItem\n    );\n  }\n\n  #options: RequireProps<RovingTabindexControllerOptions<Item>, 'getHTMLElement'>;\n\n  constructor(\n    public host: ReactiveControllerHost,\n    options?: RovingTabindexControllerOptions<Item>,\n  ) {\n    this.#options = {\n      getHTMLElement: options?.getHTMLElement ??\n        (options?.getElement as (() => HTMLElement | null)) ??\n        (() => host instanceof HTMLElement ? host : null),\n      getItems: options?.getItems,\n      getItemContainer: options?.getItemContainer,\n    };\n    const instance = RovingTabindexController.hosts.get(host);\n    if (instance) {\n      return instance as RovingTabindexController<Item>;\n    }\n    RovingTabindexController.hosts.set(host, this);\n    this.host.addController(this);\n    this.updateItems();\n  }\n\n  hostUpdated() {\n    const oldContainer = this.#itemsContainer;\n    const newContainer = this.#options.getHTMLElement();\n    if (oldContainer !== newContainer) {\n      oldContainer?.removeEventListener('keydown', this.#onKeydown);\n      RovingTabindexController.elements.delete(oldContainer!);\n      this.updateItems();\n    }\n    if (newContainer) {\n      this.#initContainer(newContainer);\n    }\n  }\n\n  /**\n   * removes event listeners from items container\n   */\n  hostDisconnected() {\n    this.#itemsContainer?.removeEventListener('keydown', this.#onKeydown);\n    this.#itemsContainer = undefined;\n    this.#gainedInitialFocus = false;\n  }\n\n  #initContainer(container: Element) {\n    RovingTabindexController.elements.set(container, this);\n    this.#itemsContainer = container;\n    this.#itemsContainer.addEventListener('keydown', this.#onKeydown);\n    this.#itemsContainer.addEventListener('focusin', () => {\n      this.#gainedInitialFocus = true;\n    }, { once: true });\n  }\n\n  /**\n   * handles keyboard navigation\n   */\n  #onKeydown = (event: Event) => {\n    if (!(event instanceof KeyboardEvent) ||\n        event.ctrlKey ||\n        event.altKey ||\n        event.metaKey ||\n        !this.#focusableItems.length ||\n        !event.composedPath().some(x =>\n          this.#focusableItems.includes(x as Item))) {\n      return;\n    }\n\n    const orientation = this.#options.getHTMLElement()?.getAttribute('aria-orientation');\n\n    const item = this.activeItem;\n    let shouldPreventDefault = false;\n    const horizontalOnly =\n      !item ? false\n        : item.tagName === 'SELECT' ||\n        item.getAttribute('role') === 'spinbutton' || orientation === 'horizontal';\n    const verticalOnly = orientation === 'vertical';\n    switch (event.key) {\n      case 'ArrowLeft':\n        if (verticalOnly) {\n          return;\n        }\n        this.setActiveItem(this.prevItem);\n        shouldPreventDefault = true;\n        break;\n      case 'ArrowRight':\n        if (verticalOnly) {\n          return;\n        }\n\n        this.setActiveItem(this.nextItem);\n        shouldPreventDefault = true;\n        break;\n      case 'ArrowUp':\n        if (horizontalOnly) {\n          return;\n        }\n        this.setActiveItem(this.prevItem);\n        shouldPreventDefault = true;\n        break;\n      case 'ArrowDown':\n        if (horizontalOnly) {\n          return;\n        }\n        this.setActiveItem(this.nextItem);\n        shouldPreventDefault = true;\n        break;\n      case 'Home':\n        this.setActiveItem(this.firstItem);\n        shouldPreventDefault = true;\n        break;\n      case 'End':\n        this.setActiveItem(this.lastItem);\n        shouldPreventDefault = true;\n        break;\n      default:\n        break;\n    }\n\n    if (shouldPreventDefault) {\n      event.stopPropagation();\n      event.preventDefault();\n    }\n  };\n\n  /**\n   * Sets the active item and focuses it\n   */\n  setActiveItem(item?: Item): void {\n    this.#activeItem = item;\n    for (const item of this.#focusableItems) {\n      item.tabIndex = this.#activeItem === item ? 0 : -1;\n    }\n    this.host.requestUpdate();\n    if (this.#gainedInitialFocus) {\n      this.#activeItem?.focus();\n    }\n  }\n\n  /**\n   * Focuses next focusable item\n   */\n  updateItems(items: Item[] = this.#options.getItems?.() ?? []) {\n    this.#items = items;\n    const sequence = [...this.#items.slice(this.#itemIndex - 1), ...this.#items.slice(0, this.#itemIndex - 1)];\n    const first = sequence.find(item => this.#focusableItems.includes(item));\n    const [focusableItem] = this.#focusableItems;\n    const activeItem = focusableItem ?? first ?? this.firstItem;\n    this.setActiveItem(activeItem);\n  }\n\n  /** @deprecated use setActiveItem */\n  focusOnItem(item?: Item): void {\n    this.setActiveItem(item);\n  }\n\n  /**\n   * from array of HTML items, and sets active items\n   * @deprecated: use getItems and getItemContainer option functions\n   */\n  initItems(items: Item[], itemsContainer?: Element) {\n    const element = itemsContainer ?? this.#options?.getItemContainer?.() ?? this.#options.getHTMLElement();\n    if (element) {\n      this.#initContainer(element);\n    }\n    this.updateItems(items);\n  }\n}\n"]}