{"version":3,"file":"roving-tabindex-controller.js","sourceRoot":"","sources":["roving-tabindex-controller.ts"],"names":[],"mappings":"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","sourcesContent":["import type { ReactiveController, ReactiveControllerHost } from 'lit';\n\nconst isFocusableElement = (el: Element): el is HTMLElement =>\n  !!el &&\n  !el.hasAttribute('disabled') &&\n  !el.ariaHidden &&\n  !el.hasAttribute('hidden');\n\n/**\n * Implements roving tabindex, as described in WAI-ARIA practices, [Managing Focus Within\n * Components Using a Roving\n * tabindex](https://www.w3.org/WAI/ARIA/apg/practices/keyboard-interface/#kbd_roving_tabindex)\n */\nexport class RovingTabindexController<\n  ItemType extends HTMLElement = HTMLElement,\n> implements ReactiveController {\n  /** active focusable element */\n  #activeItem?: ItemType;\n\n  /** closest ancestor containing items */\n  #itemsContainer?: HTMLElement;\n\n  /** array of all focusable elements */\n  #items: ItemType[] = [];\n\n  /**\n   * finds focusable items from a group of items\n   */\n  get #focusableItems(): ItemType[] {\n    return this.#items.filter(isFocusableElement);\n  }\n\n  /**\n   * index of active item in array of focusable items\n   */\n  get #activeIndex(): number {\n    return !!this.#focusableItems && !!this.activeItem ? this.#focusableItems.indexOf(this.activeItem) : -1;\n  }\n\n  /**\n   * index of active item in array of items\n   */\n  get #itemIndex(): number {\n    return this.activeItem ? this.#items.indexOf(this.activeItem) : -1;\n  }\n\n  /**\n   * active item of array of items\n   */\n  get activeItem(): ItemType | undefined {\n    return this.#activeItem;\n  }\n\n  /**\n   * first item in array of focusable items\n   */\n  get firstItem(): ItemType | undefined {\n    return this.#focusableItems[0];\n  }\n\n  /**\n   * last item in array of focusable items\n   */\n  get lastItem(): ItemType | undefined {\n    return this.#focusableItems.at(-1);\n  }\n\n  /**\n   * next item  after active item in array of focusable items\n   */\n  get nextItem(): ItemType | undefined {\n    return (\n        this.#activeIndex >= this.#focusableItems.length - 1 ? this.firstItem\n      : this.#focusableItems[this.#activeIndex + 1]\n    );\n  }\n\n  /**\n   * previous item  after active item in array of focusable items\n   */\n  get prevItem(): ItemType | undefined {\n    return (\n        this.#activeIndex > 0 ? this.#focusableItems[this.#activeIndex - 1]\n      : this.lastItem\n    );\n  }\n\n  constructor(public host: ReactiveControllerHost & HTMLElement) {\n    this.host.addController(this);\n  }\n\n  /**\n   * handles keyboard navigation\n   */\n  #onKeydown = (event: KeyboardEvent) => {\n    if (event.ctrlKey || event.altKey || event.metaKey || this.#focusableItems.length < 1) {\n      return;\n    }\n\n    const item = this.activeItem;\n    let shouldPreventDefault = false;\n    const horizontalOnly =\n        !item ? false\n      : item.tagName === 'SELECT' ||\n        item.getAttribute('role') === 'spinbutton';\n\n\n    switch (event.key) {\n      case 'ArrowLeft':\n        this.focusOnItem(this.prevItem);\n        shouldPreventDefault = true;\n        break;\n      case 'ArrowRight':\n        this.focusOnItem(this.nextItem);\n        shouldPreventDefault = true;\n        break;\n      case 'ArrowUp':\n        if (horizontalOnly) {\n          return;\n        }\n        this.focusOnItem(this.prevItem);\n        shouldPreventDefault = true;\n        break;\n      case 'ArrowDown':\n        if (horizontalOnly) {\n          return;\n        }\n        this.focusOnItem(this.nextItem);\n        shouldPreventDefault = true;\n        break;\n      case 'Home':\n        this.focusOnItem(this.firstItem);\n        shouldPreventDefault = true;\n        break;\n      case 'PageUp':\n        if (horizontalOnly) {\n          return;\n        }\n        this.focusOnItem(this.firstItem);\n        shouldPreventDefault = true;\n        break;\n      case 'End':\n        this.focusOnItem(this.lastItem);\n        shouldPreventDefault = true;\n        break;\n      case 'PageDown':\n        if (horizontalOnly) {\n          return;\n        }\n        this.focusOnItem(this.lastItem);\n        shouldPreventDefault = true;\n        break;\n      default:\n        break;\n    }\n\n    if (shouldPreventDefault) {\n      event.stopPropagation();\n      event.preventDefault();\n    }\n  };\n\n  /**\n   * sets tabindex of item based on whether or not it is active\n   */\n  updateActiveItem(item?: ItemType): void {\n    if (item) {\n      if (!!this.#activeItem && item !== this.#activeItem) {\n        this.#activeItem.tabIndex = -1;\n      }\n      item.tabIndex = 0;\n      this.#activeItem = item;\n    }\n  }\n\n  /**\n   * focuses on an item and sets it as active\n   */\n  focusOnItem(item?: ItemType): void {\n    this.updateActiveItem(item || this.firstItem);\n    this.#activeItem?.focus();\n    this.host.requestUpdate();\n  }\n\n  /**\n   * Focuses next focusable item\n   */\n  updateItems(items: ItemType[]) {\n    const sequence = [...items.slice(this.#itemIndex), ...items.slice(0, this.#itemIndex)];\n    const first = sequence.find(item => this.#focusableItems.includes(item));\n    this.focusOnItem(first || this.firstItem);\n  }\n\n  /**\n   * from array of HTML items, and sets active items\n   */\n  initItems(items: ItemType[], itemsContainer: HTMLElement = this.host) {\n    this.#items = items ?? [];\n    const focusableItems = this.#focusableItems;\n    const [focusableItem] = focusableItems;\n    this.#activeItem = focusableItem;\n    for (const item of focusableItems) {\n      item.tabIndex = this.#activeItem === item ? 0 : -1;\n    }\n    /**\n     * removes listener on previous contained and applies it to new container\n     */\n    if (!this.#itemsContainer || itemsContainer !== this.#itemsContainer) {\n      this.#itemsContainer?.removeEventListener('keydown', this.#onKeydown);\n      this.#itemsContainer = itemsContainer;\n      this.hostConnected();\n    }\n  }\n\n  /**\n   * adds event listeners to items container\n   */\n  hostConnected() {\n    this.#itemsContainer?.addEventListener('keydown', this.#onKeydown);\n  }\n\n  /**\n   * removes event listeners from items container\n   */\n  hostDisconnected() {\n    this.#itemsContainer?.removeEventListener('keydown', this.#onKeydown);\n  }\n}\n"]}