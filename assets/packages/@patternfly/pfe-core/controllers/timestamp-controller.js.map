{"version":3,"file":"timestamp-controller.js","sourceRoot":"","sources":["timestamp-controller.ts"],"names":[],"mappings":"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","sourcesContent":["import type { ReactiveController, ReactiveControllerHost } from 'lit';\n\nexport type DateTimeFormat = 'full' | 'long' | 'medium' | 'short';\n\nexport interface TimestampOptions {\n  dateFormat?: DateTimeFormat;\n  timeFormat?: DateTimeFormat;\n  customFormat?: Intl.DateTimeFormatOptions;\n  displaySuffix: string;\n  locale: Intl.LocalesArgument;\n  relative: boolean;\n  utc: boolean;\n  hour12: boolean;\n}\n\nconst defaults = {\n  dateFormat: undefined,\n  timeFormat: undefined,\n  customFormat: undefined,\n  displaySuffix: '',\n  locale: undefined,\n  relative: false,\n  utc: false,\n  hour12: false,\n} as const;\n\nexport class TimestampController implements ReactiveController {\n  static #isTimestampOptionKey(prop: PropertyKey): prop is keyof TimestampOptions {\n    return prop in defaults;\n  }\n\n  #date = new Date();\n\n  #options: TimestampOptions = {} as TimestampOptions;\n\n  #host: ReactiveControllerHost;\n\n  get localeString() {\n    return this.#date.toLocaleString(this.#options.locale);\n  }\n\n  get date() {\n    return this.#date;\n  }\n\n  set date(string) {\n    this.#date = new Date(string);\n  }\n\n  get isoString() {\n    return this.#date.toISOString();\n  }\n\n  get time() {\n    if (this.#options.relative) {\n      return this.#getTimeRelative();\n    } else {\n      let { displaySuffix, locale } = this.#options;\n      if (this.#options.utc) {\n        displaySuffix ||= 'UTC';\n      }\n      const localeString = this.#date.toLocaleString(locale, this.#options.customFormat ?? {\n        hour12: this.#options.hour12,\n        timeStyle: this.#options.timeFormat,\n        dateStyle: this.#options.dateFormat,\n        ...this.#options.utc && { timeZone: 'UTC' },\n      });\n\n      return `${localeString} ${displaySuffix ?? ''}`.trim();\n    }\n  }\n\n  constructor(host: ReactiveControllerHost, options?: Partial<TimestampOptions>) {\n    this.#host = host;\n    host.addController(this);\n    for (const [name, value] of Object.entries(this.#options)) {\n      // @ts-expect-error: seems typescript compiler isn't up to the task here\n      this.#options[name] = options?.[name] ?? value;\n    }\n  }\n\n  hostConnected?(): void\n\n  /**\n   * Based off of Github Relative Time\n   * https://github.com/github/time-elements/blob/master/src/relative-time.js\n   */\n  #getTimeRelative() {\n    const date = this.#date;\n    const { locale } = this.#options;\n    const rtf = new Intl.RelativeTimeFormat(locale as string, { localeMatcher: 'best fit', numeric: 'auto', style: 'long' });\n    const ms: number = date.getTime() - Date.now();\n    const tense = ms > 0 ? 1 : -1;\n    let qty = 0;\n    let units: Intl.RelativeTimeFormatUnit | undefined;\n    const s = Math.round(Math.abs(ms) / 1000);\n    const min = Math.round(s / 60);\n    const h = Math.round(min / 60);\n    const d = Math.round(h / 24);\n    const m = Math.round(d / 30);\n    const y = Math.round(m / 12);\n    if (m >= 12) {\n      qty = y;\n      units = 'year';\n    } else if (d >= 30) {\n      qty = m;\n      units = 'month';\n    } else if (h >= 24) {\n      qty = d;\n      units = 'day';\n    } else if (min >= 45) {\n      qty = h;\n      units = 'hour';\n    } else if (s >= 45) {\n      qty = min;\n      units = 'minute';\n    } else if (s >= 10) {\n      qty = s;\n      units = 'second';\n    }\n\n    return typeof (units) !== 'undefined' ? rtf.format(tense * qty, units) : 'just now';\n  }\n\n  set(prop: PropertyKey, value: unknown) {\n    if (TimestampController.#isTimestampOptionKey(prop)) {\n      // @ts-expect-error: seems typescript compiler isn't up to the task here\n      this.#options[prop] = value;\n      this.#host.requestUpdate();\n    }\n  }\n}\n"]}