{"version":3,"file":"time.js","sourceRoot":"","sources":["time.ts"],"names":[],"mappings":"AAAA;;GAEG;AACH,MAAM,UAAU,IAAI,CAAC,GAAY;IAC/B,OAAO,UAAS,CAAU,EAAE,GAAW,EAAE,UAA8B;QACrE,MAAM,EAAE,KAAK,EAAE,CAAC,EAAE,GAAG,UAAU,IAAI,EAAE,CAAC;QAEtC,IAAI,CAAC,CAAC,OAAO,CAAC,KAAK,UAAU,CAAC,EAAE;YAC9B,MAAM,IAAI,KAAK,CAAC,yCAAyC,CAAC,CAAC;SAC5D;QAED,UAAU,CAAC,KAAK,GAAG,UAAS,GAAG,IAAW;YACxC,MAAM,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,IAAI,GAAG,EAAE,CAAC;YACrD,MAAM,SAAS,GAAG,SAAS,GAAG,EAAE,CAAC;YACjC,MAAM,OAAO,GAAG,OAAO,GAAG,EAAE,CAAC;YAE7B,IAAI,MAAM,CAAC,SAAS,CAAC,gBAAgB,EAAE;gBACrC,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;aAC7B;YAED,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,IAAI,CAAC,CAAC;YAEhC,MAAM,GAAG,GAAG,GAAG,EAAE;gBACf,IAAI,MAAM,CAAC,SAAS,CAAC,gBAAgB,EAAE;oBACrC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;oBAC1B,WAAW,CAAC,OAAO,CAAC,GAAG,EAAE,SAAS,EAAE,OAAO,CAAC,CAAC;oBAC7C,sCAAsC;oBACtC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC;iBAClE;gBACD,OAAO,CAAC,CAAC;YACX,CAAC,CAAC;YAEF,IAAI,CAAC,YAAY,OAAO,EAAE;gBACxB,OAAO,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;aACpB;iBAAM;gBACL,OAAO,GAAG,EAAE,CAAC;aACd;QACH,CAAC,CAAC;IACJ,CAAC,CAAC;AACJ,CAAC","sourcesContent":["/**\n * Tracks the time a method takes to complete using the [performance API](https://developer.mozilla.org/en-US/docs/Web/API/Performance)\n */\nexport function time(tag?: string) {\n  return function(_: unknown, key: string, descriptor: PropertyDescriptor) {\n    const { value: f } = descriptor ?? {};\n\n    if (!(typeof f === 'function')) {\n      throw new Error('@time() may only decorate class methods');\n    }\n\n    descriptor.value = function(...args: any[]) {\n      const TAG = tag ?? `${this.constructor.name}-${key}`;\n      const START_TAG = `start-${TAG}`;\n      const END_TAG = `end-${TAG}`;\n\n      if (window.PfeConfig.trackPerformance) {\n        performance.mark(START_TAG);\n      }\n\n      const x = f.call(this, ...args);\n\n      const ret = () => {\n        if (window.PfeConfig.trackPerformance) {\n          performance.mark(END_TAG);\n          performance.measure(TAG, START_TAG, END_TAG);\n          // eslint-disable-next-line no-console\n          console.log(Array.from(performance.getEntriesByName(TAG)).pop());\n        }\n        return x;\n      };\n\n      if (x instanceof Promise) {\n        return x.then(ret);\n      } else {\n        return ret();\n      }\n    };\n  };\n}\n"]}