var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __name = (target, value) => __defProp(target, "name", { value, configurable: true });
var __esm = (fn2, res) => function __init() {
  return fn2 && (res = (0, fn2[__getOwnPropNames(fn2)[0]])(fn2 = 0)), res;
};
var __commonJS = (cb, mod) => function __require() {
  return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;
};
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
  mod
));

// node_modules/tslib/tslib.js
var require_tslib = __commonJS({
  "node_modules/tslib/tslib.js"(exports, module) {
    var __extends2;
    var __assign2;
    var __rest2;
    var __decorate2;
    var __param2;
    var __metadata2;
    var __awaiter2;
    var __generator2;
    var __exportStar2;
    var __values2;
    var __read2;
    var __spread2;
    var __spreadArrays2;
    var __spreadArray2;
    var __await2;
    var __asyncGenerator2;
    var __asyncDelegator2;
    var __asyncValues2;
    var __makeTemplateObject2;
    var __importStar2;
    var __importDefault2;
    var __classPrivateFieldGet2;
    var __classPrivateFieldSet2;
    var __classPrivateFieldIn2;
    var __createBinding2;
    (function(factory) {
      var root = typeof global === "object" ? global : typeof self === "object" ? self : typeof this === "object" ? this : {};
      if (typeof define === "function" && define.amd) {
        define("tslib", ["exports"], function(exports2) {
          factory(createExporter(root, createExporter(exports2)));
        });
      } else if (typeof module === "object" && typeof module.exports === "object") {
        factory(createExporter(root, createExporter(module.exports)));
      } else {
        factory(createExporter(root));
      }
      function createExporter(exports2, previous) {
        if (exports2 !== root) {
          if (typeof Object.create === "function") {
            Object.defineProperty(exports2, "__esModule", { value: true });
          } else {
            exports2.__esModule = true;
          }
        }
        return function(id, v12) {
          return exports2[id] = previous ? previous(id, v12) : v12;
        };
      }
      __name(createExporter, "createExporter");
    })(function(exporter) {
      var extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d13, b12) {
        d13.__proto__ = b12;
      } || function(d13, b12) {
        for (var p22 in b12)
          if (Object.prototype.hasOwnProperty.call(b12, p22))
            d13[p22] = b12[p22];
      };
      __extends2 = /* @__PURE__ */ __name(function(d13, b12) {
        if (typeof b12 !== "function" && b12 !== null)
          throw new TypeError("Class extends value " + String(b12) + " is not a constructor or null");
        extendStatics(d13, b12);
        function __() {
          this.constructor = d13;
        }
        __name(__, "__");
        d13.prototype = b12 === null ? Object.create(b12) : (__.prototype = b12.prototype, new __());
      }, "__extends");
      __assign2 = Object.assign || function(t15) {
        for (var s23, i22 = 1, n24 = arguments.length; i22 < n24; i22++) {
          s23 = arguments[i22];
          for (var p22 in s23)
            if (Object.prototype.hasOwnProperty.call(s23, p22))
              t15[p22] = s23[p22];
        }
        return t15;
      };
      __rest2 = /* @__PURE__ */ __name(function(s23, e24) {
        var t15 = {};
        for (var p22 in s23)
          if (Object.prototype.hasOwnProperty.call(s23, p22) && e24.indexOf(p22) < 0)
            t15[p22] = s23[p22];
        if (s23 != null && typeof Object.getOwnPropertySymbols === "function")
          for (var i22 = 0, p22 = Object.getOwnPropertySymbols(s23); i22 < p22.length; i22++) {
            if (e24.indexOf(p22[i22]) < 0 && Object.prototype.propertyIsEnumerable.call(s23, p22[i22]))
              t15[p22[i22]] = s23[p22[i22]];
          }
        return t15;
      }, "__rest");
      __decorate2 = /* @__PURE__ */ __name(function(decorators, target, key, desc) {
        var c21 = arguments.length, r21 = c21 < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d13;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
          r21 = Reflect.decorate(decorators, target, key, desc);
        else
          for (var i22 = decorators.length - 1; i22 >= 0; i22--)
            if (d13 = decorators[i22])
              r21 = (c21 < 3 ? d13(r21) : c21 > 3 ? d13(target, key, r21) : d13(target, key)) || r21;
        return c21 > 3 && r21 && Object.defineProperty(target, key, r21), r21;
      }, "__decorate");
      __param2 = /* @__PURE__ */ __name(function(paramIndex, decorator) {
        return function(target, key) {
          decorator(target, key, paramIndex);
        };
      }, "__param");
      __metadata2 = /* @__PURE__ */ __name(function(metadataKey, metadataValue) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
          return Reflect.metadata(metadataKey, metadataValue);
      }, "__metadata");
      __awaiter2 = /* @__PURE__ */ __name(function(thisArg, _arguments, P4, generator) {
        function adopt(value) {
          return value instanceof P4 ? value : new P4(function(resolve) {
            resolve(value);
          });
        }
        __name(adopt, "adopt");
        return new (P4 || (P4 = Promise))(function(resolve, reject) {
          function fulfilled(value) {
            try {
              step(generator.next(value));
            } catch (e24) {
              reject(e24);
            }
          }
          __name(fulfilled, "fulfilled");
          function rejected(value) {
            try {
              step(generator["throw"](value));
            } catch (e24) {
              reject(e24);
            }
          }
          __name(rejected, "rejected");
          function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
          }
          __name(step, "step");
          step((generator = generator.apply(thisArg, _arguments || [])).next());
        });
      }, "__awaiter");
      __generator2 = /* @__PURE__ */ __name(function(thisArg, body) {
        var _7 = { label: 0, sent: function() {
          if (t15[0] & 1)
            throw t15[1];
          return t15[1];
        }, trys: [], ops: [] }, f18, y11, t15, g12;
        return g12 = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g12[Symbol.iterator] = function() {
          return this;
        }), g12;
        function verb(n24) {
          return function(v12) {
            return step([n24, v12]);
          };
        }
        __name(verb, "verb");
        function step(op) {
          if (f18)
            throw new TypeError("Generator is already executing.");
          while (_7)
            try {
              if (f18 = 1, y11 && (t15 = op[0] & 2 ? y11["return"] : op[0] ? y11["throw"] || ((t15 = y11["return"]) && t15.call(y11), 0) : y11.next) && !(t15 = t15.call(y11, op[1])).done)
                return t15;
              if (y11 = 0, t15)
                op = [op[0] & 2, t15.value];
              switch (op[0]) {
                case 0:
                case 1:
                  t15 = op;
                  break;
                case 4:
                  _7.label++;
                  return { value: op[1], done: false };
                case 5:
                  _7.label++;
                  y11 = op[1];
                  op = [0];
                  continue;
                case 7:
                  op = _7.ops.pop();
                  _7.trys.pop();
                  continue;
                default:
                  if (!(t15 = _7.trys, t15 = t15.length > 0 && t15[t15.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                    _7 = 0;
                    continue;
                  }
                  if (op[0] === 3 && (!t15 || op[1] > t15[0] && op[1] < t15[3])) {
                    _7.label = op[1];
                    break;
                  }
                  if (op[0] === 6 && _7.label < t15[1]) {
                    _7.label = t15[1];
                    t15 = op;
                    break;
                  }
                  if (t15 && _7.label < t15[2]) {
                    _7.label = t15[2];
                    _7.ops.push(op);
                    break;
                  }
                  if (t15[2])
                    _7.ops.pop();
                  _7.trys.pop();
                  continue;
              }
              op = body.call(thisArg, _7);
            } catch (e24) {
              op = [6, e24];
              y11 = 0;
            } finally {
              f18 = t15 = 0;
            }
          if (op[0] & 5)
            throw op[1];
          return { value: op[0] ? op[1] : void 0, done: true };
        }
        __name(step, "step");
      }, "__generator");
      __exportStar2 = /* @__PURE__ */ __name(function(m24, o24) {
        for (var p22 in m24)
          if (p22 !== "default" && !Object.prototype.hasOwnProperty.call(o24, p22))
            __createBinding2(o24, m24, p22);
      }, "__exportStar");
      __createBinding2 = Object.create ? function(o24, m24, k7, k22) {
        if (k22 === void 0)
          k22 = k7;
        var desc = Object.getOwnPropertyDescriptor(m24, k7);
        if (!desc || ("get" in desc ? !m24.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m24[k7];
          } };
        }
        Object.defineProperty(o24, k22, desc);
      } : function(o24, m24, k7, k22) {
        if (k22 === void 0)
          k22 = k7;
        o24[k22] = m24[k7];
      };
      __values2 = /* @__PURE__ */ __name(function(o24) {
        var s23 = typeof Symbol === "function" && Symbol.iterator, m24 = s23 && o24[s23], i22 = 0;
        if (m24)
          return m24.call(o24);
        if (o24 && typeof o24.length === "number")
          return {
            next: function() {
              if (o24 && i22 >= o24.length)
                o24 = void 0;
              return { value: o24 && o24[i22++], done: !o24 };
            }
          };
        throw new TypeError(s23 ? "Object is not iterable." : "Symbol.iterator is not defined.");
      }, "__values");
      __read2 = /* @__PURE__ */ __name(function(o24, n24) {
        var m24 = typeof Symbol === "function" && o24[Symbol.iterator];
        if (!m24)
          return o24;
        var i22 = m24.call(o24), r21, ar = [], e24;
        try {
          while ((n24 === void 0 || n24-- > 0) && !(r21 = i22.next()).done)
            ar.push(r21.value);
        } catch (error) {
          e24 = { error };
        } finally {
          try {
            if (r21 && !r21.done && (m24 = i22["return"]))
              m24.call(i22);
          } finally {
            if (e24)
              throw e24.error;
          }
        }
        return ar;
      }, "__read");
      __spread2 = /* @__PURE__ */ __name(function() {
        for (var ar = [], i22 = 0; i22 < arguments.length; i22++)
          ar = ar.concat(__read2(arguments[i22]));
        return ar;
      }, "__spread");
      __spreadArrays2 = /* @__PURE__ */ __name(function() {
        for (var s23 = 0, i22 = 0, il = arguments.length; i22 < il; i22++)
          s23 += arguments[i22].length;
        for (var r21 = Array(s23), k7 = 0, i22 = 0; i22 < il; i22++)
          for (var a20 = arguments[i22], j3 = 0, jl = a20.length; j3 < jl; j3++, k7++)
            r21[k7] = a20[j3];
        return r21;
      }, "__spreadArrays");
      __spreadArray2 = /* @__PURE__ */ __name(function(to, from, pack) {
        if (pack || arguments.length === 2)
          for (var i22 = 0, l23 = from.length, ar; i22 < l23; i22++) {
            if (ar || !(i22 in from)) {
              if (!ar)
                ar = Array.prototype.slice.call(from, 0, i22);
              ar[i22] = from[i22];
            }
          }
        return to.concat(ar || Array.prototype.slice.call(from));
      }, "__spreadArray");
      __await2 = /* @__PURE__ */ __name(function(v12) {
        return this instanceof __await2 ? (this.v = v12, this) : new __await2(v12);
      }, "__await");
      __asyncGenerator2 = /* @__PURE__ */ __name(function(thisArg, _arguments, generator) {
        if (!Symbol.asyncIterator)
          throw new TypeError("Symbol.asyncIterator is not defined.");
        var g12 = generator.apply(thisArg, _arguments || []), i22, q = [];
        return i22 = {}, verb("next"), verb("throw"), verb("return"), i22[Symbol.asyncIterator] = function() {
          return this;
        }, i22;
        function verb(n24) {
          if (g12[n24])
            i22[n24] = function(v12) {
              return new Promise(function(a20, b12) {
                q.push([n24, v12, a20, b12]) > 1 || resume(n24, v12);
              });
            };
        }
        __name(verb, "verb");
        function resume(n24, v12) {
          try {
            step(g12[n24](v12));
          } catch (e24) {
            settle(q[0][3], e24);
          }
        }
        __name(resume, "resume");
        function step(r21) {
          r21.value instanceof __await2 ? Promise.resolve(r21.value.v).then(fulfill, reject) : settle(q[0][2], r21);
        }
        __name(step, "step");
        function fulfill(value) {
          resume("next", value);
        }
        __name(fulfill, "fulfill");
        function reject(value) {
          resume("throw", value);
        }
        __name(reject, "reject");
        function settle(f18, v12) {
          if (f18(v12), q.shift(), q.length)
            resume(q[0][0], q[0][1]);
        }
        __name(settle, "settle");
      }, "__asyncGenerator");
      __asyncDelegator2 = /* @__PURE__ */ __name(function(o24) {
        var i22, p22;
        return i22 = {}, verb("next"), verb("throw", function(e24) {
          throw e24;
        }), verb("return"), i22[Symbol.iterator] = function() {
          return this;
        }, i22;
        function verb(n24, f18) {
          i22[n24] = o24[n24] ? function(v12) {
            return (p22 = !p22) ? { value: __await2(o24[n24](v12)), done: n24 === "return" } : f18 ? f18(v12) : v12;
          } : f18;
        }
        __name(verb, "verb");
      }, "__asyncDelegator");
      __asyncValues2 = /* @__PURE__ */ __name(function(o24) {
        if (!Symbol.asyncIterator)
          throw new TypeError("Symbol.asyncIterator is not defined.");
        var m24 = o24[Symbol.asyncIterator], i22;
        return m24 ? m24.call(o24) : (o24 = typeof __values2 === "function" ? __values2(o24) : o24[Symbol.iterator](), i22 = {}, verb("next"), verb("throw"), verb("return"), i22[Symbol.asyncIterator] = function() {
          return this;
        }, i22);
        function verb(n24) {
          i22[n24] = o24[n24] && function(v12) {
            return new Promise(function(resolve, reject) {
              v12 = o24[n24](v12), settle(resolve, reject, v12.done, v12.value);
            });
          };
        }
        __name(verb, "verb");
        function settle(resolve, reject, d13, v12) {
          Promise.resolve(v12).then(function(v13) {
            resolve({ value: v13, done: d13 });
          }, reject);
        }
        __name(settle, "settle");
      }, "__asyncValues");
      __makeTemplateObject2 = /* @__PURE__ */ __name(function(cooked, raw) {
        if (Object.defineProperty) {
          Object.defineProperty(cooked, "raw", { value: raw });
        } else {
          cooked.raw = raw;
        }
        return cooked;
      }, "__makeTemplateObject");
      var __setModuleDefault = Object.create ? function(o24, v12) {
        Object.defineProperty(o24, "default", { enumerable: true, value: v12 });
      } : function(o24, v12) {
        o24["default"] = v12;
      };
      __importStar2 = /* @__PURE__ */ __name(function(mod) {
        if (mod && mod.__esModule)
          return mod;
        var result = {};
        if (mod != null) {
          for (var k7 in mod)
            if (k7 !== "default" && Object.prototype.hasOwnProperty.call(mod, k7))
              __createBinding2(result, mod, k7);
        }
        __setModuleDefault(result, mod);
        return result;
      }, "__importStar");
      __importDefault2 = /* @__PURE__ */ __name(function(mod) {
        return mod && mod.__esModule ? mod : { "default": mod };
      }, "__importDefault");
      __classPrivateFieldGet2 = /* @__PURE__ */ __name(function(receiver, state, kind, f18) {
        if (kind === "a" && !f18)
          throw new TypeError("Private accessor was defined without a getter");
        if (typeof state === "function" ? receiver !== state || !f18 : !state.has(receiver))
          throw new TypeError("Cannot read private member from an object whose class did not declare it");
        return kind === "m" ? f18 : kind === "a" ? f18.call(receiver) : f18 ? f18.value : state.get(receiver);
      }, "__classPrivateFieldGet");
      __classPrivateFieldSet2 = /* @__PURE__ */ __name(function(receiver, state, value, kind, f18) {
        if (kind === "m")
          throw new TypeError("Private method is not writable");
        if (kind === "a" && !f18)
          throw new TypeError("Private accessor was defined without a setter");
        if (typeof state === "function" ? receiver !== state || !f18 : !state.has(receiver))
          throw new TypeError("Cannot write private member to an object whose class did not declare it");
        return kind === "a" ? f18.call(receiver, value) : f18 ? f18.value = value : state.set(receiver, value), value;
      }, "__classPrivateFieldSet");
      __classPrivateFieldIn2 = /* @__PURE__ */ __name(function(state, receiver) {
        if (receiver === null || typeof receiver !== "object" && typeof receiver !== "function")
          throw new TypeError("Cannot use 'in' operator on non-object");
        return typeof state === "function" ? receiver === state : state.has(receiver);
      }, "__classPrivateFieldIn");
      exporter("__extends", __extends2);
      exporter("__assign", __assign2);
      exporter("__rest", __rest2);
      exporter("__decorate", __decorate2);
      exporter("__param", __param2);
      exporter("__metadata", __metadata2);
      exporter("__awaiter", __awaiter2);
      exporter("__generator", __generator2);
      exporter("__exportStar", __exportStar2);
      exporter("__createBinding", __createBinding2);
      exporter("__values", __values2);
      exporter("__read", __read2);
      exporter("__spread", __spread2);
      exporter("__spreadArrays", __spreadArrays2);
      exporter("__spreadArray", __spreadArray2);
      exporter("__await", __await2);
      exporter("__asyncGenerator", __asyncGenerator2);
      exporter("__asyncDelegator", __asyncDelegator2);
      exporter("__asyncValues", __asyncValues2);
      exporter("__makeTemplateObject", __makeTemplateObject2);
      exporter("__importStar", __importStar2);
      exporter("__importDefault", __importDefault2);
      exporter("__classPrivateFieldGet", __classPrivateFieldGet2);
      exporter("__classPrivateFieldSet", __classPrivateFieldSet2);
      exporter("__classPrivateFieldIn", __classPrivateFieldIn2);
    });
  }
});

// node_modules/@lit/reactive-element/css-tag.js
var t, e, s, n, o, r, i, S, c;
var init_css_tag = __esm({
  "node_modules/@lit/reactive-element/css-tag.js"() {
    t = window;
    e = t.ShadowRoot && (void 0 === t.ShadyCSS || t.ShadyCSS.nativeShadow) && "adoptedStyleSheets" in Document.prototype && "replace" in CSSStyleSheet.prototype;
    s = Symbol();
    n = /* @__PURE__ */ new WeakMap();
    o = class {
      constructor(t15, e24, n24) {
        if (this._$cssResult$ = true, n24 !== s)
          throw Error("CSSResult is not constructable. Use `unsafeCSS` or `css` instead.");
        this.cssText = t15, this.t = e24;
      }
      get styleSheet() {
        let t15 = this.o;
        const s23 = this.t;
        if (e && void 0 === t15) {
          const e24 = void 0 !== s23 && 1 === s23.length;
          e24 && (t15 = n.get(s23)), void 0 === t15 && ((this.o = t15 = new CSSStyleSheet()).replaceSync(this.cssText), e24 && n.set(s23, t15));
        }
        return t15;
      }
      toString() {
        return this.cssText;
      }
    };
    __name(o, "o");
    r = /* @__PURE__ */ __name((t15) => new o("string" == typeof t15 ? t15 : t15 + "", void 0, s), "r");
    i = /* @__PURE__ */ __name((t15, ...e24) => {
      const n24 = 1 === t15.length ? t15[0] : e24.reduce((e25, s23, n25) => e25 + ((t16) => {
        if (true === t16._$cssResult$)
          return t16.cssText;
        if ("number" == typeof t16)
          return t16;
        throw Error("Value passed to 'css' function must be a 'css' function result: " + t16 + ". Use 'unsafeCSS' to pass non-literal values, but take care to ensure page security.");
      })(s23) + t15[n25 + 1], t15[0]);
      return new o(n24, t15, s);
    }, "i");
    S = /* @__PURE__ */ __name((s23, n24) => {
      e ? s23.adoptedStyleSheets = n24.map((t15) => t15 instanceof CSSStyleSheet ? t15 : t15.styleSheet) : n24.forEach((e24) => {
        const n25 = document.createElement("style"), o24 = t.litNonce;
        void 0 !== o24 && n25.setAttribute("nonce", o24), n25.textContent = e24.cssText, s23.appendChild(n25);
      });
    }, "S");
    c = e ? (t15) => t15 : (t15) => t15 instanceof CSSStyleSheet ? ((t16) => {
      let e24 = "";
      for (const s23 of t16.cssRules)
        e24 += s23.cssText;
      return r(e24);
    })(t15) : t15;
  }
});

// node_modules/@lit/reactive-element/reactive-element.js
var s2, e2, r2, h, o2, n2, a, l, d;
var init_reactive_element = __esm({
  "node_modules/@lit/reactive-element/reactive-element.js"() {
    init_css_tag();
    init_css_tag();
    e2 = window;
    r2 = e2.trustedTypes;
    h = r2 ? r2.emptyScript : "";
    o2 = e2.reactiveElementPolyfillSupport;
    n2 = { toAttribute(t15, i22) {
      switch (i22) {
        case Boolean:
          t15 = t15 ? h : null;
          break;
        case Object:
        case Array:
          t15 = null == t15 ? t15 : JSON.stringify(t15);
      }
      return t15;
    }, fromAttribute(t15, i22) {
      let s23 = t15;
      switch (i22) {
        case Boolean:
          s23 = null !== t15;
          break;
        case Number:
          s23 = null === t15 ? null : Number(t15);
          break;
        case Object:
        case Array:
          try {
            s23 = JSON.parse(t15);
          } catch (t16) {
            s23 = null;
          }
      }
      return s23;
    } };
    a = /* @__PURE__ */ __name((t15, i22) => i22 !== t15 && (i22 == i22 || t15 == t15), "a");
    l = { attribute: true, type: String, converter: n2, reflect: false, hasChanged: a };
    d = class extends HTMLElement {
      constructor() {
        super(), this._$Ei = /* @__PURE__ */ new Map(), this.isUpdatePending = false, this.hasUpdated = false, this._$El = null, this.u();
      }
      static addInitializer(t15) {
        var i22;
        null !== (i22 = this.h) && void 0 !== i22 || (this.h = []), this.h.push(t15);
      }
      static get observedAttributes() {
        this.finalize();
        const t15 = [];
        return this.elementProperties.forEach((i22, s23) => {
          const e24 = this._$Ep(s23, i22);
          void 0 !== e24 && (this._$Ev.set(e24, s23), t15.push(e24));
        }), t15;
      }
      static createProperty(t15, i22 = l) {
        if (i22.state && (i22.attribute = false), this.finalize(), this.elementProperties.set(t15, i22), !i22.noAccessor && !this.prototype.hasOwnProperty(t15)) {
          const s23 = "symbol" == typeof t15 ? Symbol() : "__" + t15, e24 = this.getPropertyDescriptor(t15, s23, i22);
          void 0 !== e24 && Object.defineProperty(this.prototype, t15, e24);
        }
      }
      static getPropertyDescriptor(t15, i22, s23) {
        return { get() {
          return this[i22];
        }, set(e24) {
          const r21 = this[t15];
          this[i22] = e24, this.requestUpdate(t15, r21, s23);
        }, configurable: true, enumerable: true };
      }
      static getPropertyOptions(t15) {
        return this.elementProperties.get(t15) || l;
      }
      static finalize() {
        if (this.hasOwnProperty("finalized"))
          return false;
        this.finalized = true;
        const t15 = Object.getPrototypeOf(this);
        if (t15.finalize(), this.elementProperties = new Map(t15.elementProperties), this._$Ev = /* @__PURE__ */ new Map(), this.hasOwnProperty("properties")) {
          const t16 = this.properties, i22 = [...Object.getOwnPropertyNames(t16), ...Object.getOwnPropertySymbols(t16)];
          for (const s23 of i22)
            this.createProperty(s23, t16[s23]);
        }
        return this.elementStyles = this.finalizeStyles(this.styles), true;
      }
      static finalizeStyles(i22) {
        const s23 = [];
        if (Array.isArray(i22)) {
          const e24 = new Set(i22.flat(1 / 0).reverse());
          for (const i23 of e24)
            s23.unshift(c(i23));
        } else
          void 0 !== i22 && s23.push(c(i22));
        return s23;
      }
      static _$Ep(t15, i22) {
        const s23 = i22.attribute;
        return false === s23 ? void 0 : "string" == typeof s23 ? s23 : "string" == typeof t15 ? t15.toLowerCase() : void 0;
      }
      u() {
        var t15;
        this._$E_ = new Promise((t16) => this.enableUpdating = t16), this._$AL = /* @__PURE__ */ new Map(), this._$Eg(), this.requestUpdate(), null === (t15 = this.constructor.h) || void 0 === t15 || t15.forEach((t16) => t16(this));
      }
      addController(t15) {
        var i22, s23;
        (null !== (i22 = this._$ES) && void 0 !== i22 ? i22 : this._$ES = []).push(t15), void 0 !== this.renderRoot && this.isConnected && (null === (s23 = t15.hostConnected) || void 0 === s23 || s23.call(t15));
      }
      removeController(t15) {
        var i22;
        null === (i22 = this._$ES) || void 0 === i22 || i22.splice(this._$ES.indexOf(t15) >>> 0, 1);
      }
      _$Eg() {
        this.constructor.elementProperties.forEach((t15, i22) => {
          this.hasOwnProperty(i22) && (this._$Ei.set(i22, this[i22]), delete this[i22]);
        });
      }
      createRenderRoot() {
        var t15;
        const s23 = null !== (t15 = this.shadowRoot) && void 0 !== t15 ? t15 : this.attachShadow(this.constructor.shadowRootOptions);
        return S(s23, this.constructor.elementStyles), s23;
      }
      connectedCallback() {
        var t15;
        void 0 === this.renderRoot && (this.renderRoot = this.createRenderRoot()), this.enableUpdating(true), null === (t15 = this._$ES) || void 0 === t15 || t15.forEach((t16) => {
          var i22;
          return null === (i22 = t16.hostConnected) || void 0 === i22 ? void 0 : i22.call(t16);
        });
      }
      enableUpdating(t15) {
      }
      disconnectedCallback() {
        var t15;
        null === (t15 = this._$ES) || void 0 === t15 || t15.forEach((t16) => {
          var i22;
          return null === (i22 = t16.hostDisconnected) || void 0 === i22 ? void 0 : i22.call(t16);
        });
      }
      attributeChangedCallback(t15, i22, s23) {
        this._$AK(t15, s23);
      }
      _$EO(t15, i22, s23 = l) {
        var e24;
        const r21 = this.constructor._$Ep(t15, s23);
        if (void 0 !== r21 && true === s23.reflect) {
          const h21 = (void 0 !== (null === (e24 = s23.converter) || void 0 === e24 ? void 0 : e24.toAttribute) ? s23.converter : n2).toAttribute(i22, s23.type);
          this._$El = t15, null == h21 ? this.removeAttribute(r21) : this.setAttribute(r21, h21), this._$El = null;
        }
      }
      _$AK(t15, i22) {
        var s23;
        const e24 = this.constructor, r21 = e24._$Ev.get(t15);
        if (void 0 !== r21 && this._$El !== r21) {
          const t16 = e24.getPropertyOptions(r21), h21 = "function" == typeof t16.converter ? { fromAttribute: t16.converter } : void 0 !== (null === (s23 = t16.converter) || void 0 === s23 ? void 0 : s23.fromAttribute) ? t16.converter : n2;
          this._$El = r21, this[r21] = h21.fromAttribute(i22, t16.type), this._$El = null;
        }
      }
      requestUpdate(t15, i22, s23) {
        let e24 = true;
        void 0 !== t15 && (((s23 = s23 || this.constructor.getPropertyOptions(t15)).hasChanged || a)(this[t15], i22) ? (this._$AL.has(t15) || this._$AL.set(t15, i22), true === s23.reflect && this._$El !== t15 && (void 0 === this._$EC && (this._$EC = /* @__PURE__ */ new Map()), this._$EC.set(t15, s23))) : e24 = false), !this.isUpdatePending && e24 && (this._$E_ = this._$Ej());
      }
      async _$Ej() {
        this.isUpdatePending = true;
        try {
          await this._$E_;
        } catch (t16) {
          Promise.reject(t16);
        }
        const t15 = this.scheduleUpdate();
        return null != t15 && await t15, !this.isUpdatePending;
      }
      scheduleUpdate() {
        return this.performUpdate();
      }
      performUpdate() {
        var t15;
        if (!this.isUpdatePending)
          return;
        this.hasUpdated, this._$Ei && (this._$Ei.forEach((t16, i23) => this[i23] = t16), this._$Ei = void 0);
        let i22 = false;
        const s23 = this._$AL;
        try {
          i22 = this.shouldUpdate(s23), i22 ? (this.willUpdate(s23), null === (t15 = this._$ES) || void 0 === t15 || t15.forEach((t16) => {
            var i23;
            return null === (i23 = t16.hostUpdate) || void 0 === i23 ? void 0 : i23.call(t16);
          }), this.update(s23)) : this._$Ek();
        } catch (t16) {
          throw i22 = false, this._$Ek(), t16;
        }
        i22 && this._$AE(s23);
      }
      willUpdate(t15) {
      }
      _$AE(t15) {
        var i22;
        null === (i22 = this._$ES) || void 0 === i22 || i22.forEach((t16) => {
          var i23;
          return null === (i23 = t16.hostUpdated) || void 0 === i23 ? void 0 : i23.call(t16);
        }), this.hasUpdated || (this.hasUpdated = true, this.firstUpdated(t15)), this.updated(t15);
      }
      _$Ek() {
        this._$AL = /* @__PURE__ */ new Map(), this.isUpdatePending = false;
      }
      get updateComplete() {
        return this.getUpdateComplete();
      }
      getUpdateComplete() {
        return this._$E_;
      }
      shouldUpdate(t15) {
        return true;
      }
      update(t15) {
        void 0 !== this._$EC && (this._$EC.forEach((t16, i22) => this._$EO(i22, this[i22], t16)), this._$EC = void 0), this._$Ek();
      }
      updated(t15) {
      }
      firstUpdated(t15) {
      }
    };
    __name(d, "d");
    d.finalized = true, d.elementProperties = /* @__PURE__ */ new Map(), d.elementStyles = [], d.shadowRootOptions = { mode: "open" }, null == o2 || o2({ ReactiveElement: d }), (null !== (s2 = e2.reactiveElementVersions) && void 0 !== s2 ? s2 : e2.reactiveElementVersions = []).push("1.4.1");
  }
});

// node_modules/lit-html/lit-html.js
function V(t15, i22, s23 = t15, e24) {
  var o24, n24, l23, h21;
  if (i22 === x)
    return i22;
  let r21 = void 0 !== e24 ? null === (o24 = s23._$Cl) || void 0 === o24 ? void 0 : o24[e24] : s23._$Cu;
  const u19 = d2(i22) ? void 0 : i22._$litDirective$;
  return (null == r21 ? void 0 : r21.constructor) !== u19 && (null === (n24 = null == r21 ? void 0 : r21._$AO) || void 0 === n24 || n24.call(r21, false), void 0 === u19 ? r21 = void 0 : (r21 = new u19(t15), r21._$AT(t15, s23, e24)), void 0 !== e24 ? (null !== (l23 = (h21 = s23)._$Cl) && void 0 !== l23 ? l23 : h21._$Cl = [])[e24] = r21 : s23._$Cu = r21), void 0 !== r21 && (i22 = V(t15, r21._$AS(t15, i22.values), r21, e24)), i22;
}
var t2, i2, s3, e3, o3, n3, l2, h2, r3, d2, u, c2, v, a2, f, _, m, p, $, g, y, w, x, b, T, A, E, C, P, N, S2, M, R, k, H, I, L, z, Z;
var init_lit_html = __esm({
  "node_modules/lit-html/lit-html.js"() {
    i2 = window;
    s3 = i2.trustedTypes;
    e3 = s3 ? s3.createPolicy("lit-html", { createHTML: (t15) => t15 }) : void 0;
    o3 = `lit$${(Math.random() + "").slice(9)}$`;
    n3 = "?" + o3;
    l2 = `<${n3}>`;
    h2 = document;
    r3 = /* @__PURE__ */ __name((t15 = "") => h2.createComment(t15), "r");
    d2 = /* @__PURE__ */ __name((t15) => null === t15 || "object" != typeof t15 && "function" != typeof t15, "d");
    u = Array.isArray;
    c2 = /* @__PURE__ */ __name((t15) => u(t15) || "function" == typeof (null == t15 ? void 0 : t15[Symbol.iterator]), "c");
    v = /<(?:(!--|\/[^a-zA-Z])|(\/?[a-zA-Z][^>\s]*)|(\/?$))/g;
    a2 = /-->/g;
    f = />/g;
    _ = RegExp(`>|[ 	
\f\r](?:([^\\s"'>=/]+)([ 	
\f\r]*=[ 	
\f\r]*(?:[^ 	
\f\r"'\`<>=]|("|')|))|$)`, "g");
    m = /'/g;
    p = /"/g;
    $ = /^(?:script|style|textarea|title)$/i;
    g = /* @__PURE__ */ __name((t15) => (i22, ...s23) => ({ _$litType$: t15, strings: i22, values: s23 }), "g");
    y = g(1);
    w = g(2);
    x = Symbol.for("lit-noChange");
    b = Symbol.for("lit-nothing");
    T = /* @__PURE__ */ new WeakMap();
    A = /* @__PURE__ */ __name((t15, i22, s23) => {
      var e24, o24;
      const n24 = null !== (e24 = null == s23 ? void 0 : s23.renderBefore) && void 0 !== e24 ? e24 : i22;
      let l23 = n24._$litPart$;
      if (void 0 === l23) {
        const t16 = null !== (o24 = null == s23 ? void 0 : s23.renderBefore) && void 0 !== o24 ? o24 : null;
        n24._$litPart$ = l23 = new S2(i22.insertBefore(r3(), t16), t16, void 0, null != s23 ? s23 : {});
      }
      return l23._$AI(t15), l23;
    }, "A");
    E = h2.createTreeWalker(h2, 129, null, false);
    C = /* @__PURE__ */ __name((t15, i22) => {
      const s23 = t15.length - 1, n24 = [];
      let h21, r21 = 2 === i22 ? "<svg>" : "", d13 = v;
      for (let i23 = 0; i23 < s23; i23++) {
        const s24 = t15[i23];
        let e24, u20, c21 = -1, g12 = 0;
        for (; g12 < s24.length && (d13.lastIndex = g12, u20 = d13.exec(s24), null !== u20); )
          g12 = d13.lastIndex, d13 === v ? "!--" === u20[1] ? d13 = a2 : void 0 !== u20[1] ? d13 = f : void 0 !== u20[2] ? ($.test(u20[2]) && (h21 = RegExp("</" + u20[2], "g")), d13 = _) : void 0 !== u20[3] && (d13 = _) : d13 === _ ? ">" === u20[0] ? (d13 = null != h21 ? h21 : v, c21 = -1) : void 0 === u20[1] ? c21 = -2 : (c21 = d13.lastIndex - u20[2].length, e24 = u20[1], d13 = void 0 === u20[3] ? _ : '"' === u20[3] ? p : m) : d13 === p || d13 === m ? d13 = _ : d13 === a2 || d13 === f ? d13 = v : (d13 = _, h21 = void 0);
        const y11 = d13 === _ && t15[i23 + 1].startsWith("/>") ? " " : "";
        r21 += d13 === v ? s24 + l2 : c21 >= 0 ? (n24.push(e24), s24.slice(0, c21) + "$lit$" + s24.slice(c21) + o3 + y11) : s24 + o3 + (-2 === c21 ? (n24.push(void 0), i23) : y11);
      }
      const u19 = r21 + (t15[s23] || "<?>") + (2 === i22 ? "</svg>" : "");
      if (!Array.isArray(t15) || !t15.hasOwnProperty("raw"))
        throw Error("invalid template strings array");
      return [void 0 !== e3 ? e3.createHTML(u19) : u19, n24];
    }, "C");
    P = class {
      constructor({ strings: t15, _$litType$: i22 }, e24) {
        let l23;
        this.parts = [];
        let h21 = 0, d13 = 0;
        const u19 = t15.length - 1, c21 = this.parts, [v12, a20] = C(t15, i22);
        if (this.el = P.createElement(v12, e24), E.currentNode = this.el.content, 2 === i22) {
          const t16 = this.el.content, i23 = t16.firstChild;
          i23.remove(), t16.append(...i23.childNodes);
        }
        for (; null !== (l23 = E.nextNode()) && c21.length < u19; ) {
          if (1 === l23.nodeType) {
            if (l23.hasAttributes()) {
              const t16 = [];
              for (const i23 of l23.getAttributeNames())
                if (i23.endsWith("$lit$") || i23.startsWith(o3)) {
                  const s23 = a20[d13++];
                  if (t16.push(i23), void 0 !== s23) {
                    const t17 = l23.getAttribute(s23.toLowerCase() + "$lit$").split(o3), i24 = /([.?@])?(.*)/.exec(s23);
                    c21.push({ type: 1, index: h21, name: i24[2], strings: t17, ctor: "." === i24[1] ? R : "?" === i24[1] ? H : "@" === i24[1] ? I : M });
                  } else
                    c21.push({ type: 6, index: h21 });
                }
              for (const i23 of t16)
                l23.removeAttribute(i23);
            }
            if ($.test(l23.tagName)) {
              const t16 = l23.textContent.split(o3), i23 = t16.length - 1;
              if (i23 > 0) {
                l23.textContent = s3 ? s3.emptyScript : "";
                for (let s23 = 0; s23 < i23; s23++)
                  l23.append(t16[s23], r3()), E.nextNode(), c21.push({ type: 2, index: ++h21 });
                l23.append(t16[i23], r3());
              }
            }
          } else if (8 === l23.nodeType)
            if (l23.data === n3)
              c21.push({ type: 2, index: h21 });
            else {
              let t16 = -1;
              for (; -1 !== (t16 = l23.data.indexOf(o3, t16 + 1)); )
                c21.push({ type: 7, index: h21 }), t16 += o3.length - 1;
            }
          h21++;
        }
      }
      static createElement(t15, i22) {
        const s23 = h2.createElement("template");
        return s23.innerHTML = t15, s23;
      }
    };
    __name(P, "P");
    __name(V, "V");
    N = class {
      constructor(t15, i22) {
        this.v = [], this._$AN = void 0, this._$AD = t15, this._$AM = i22;
      }
      get parentNode() {
        return this._$AM.parentNode;
      }
      get _$AU() {
        return this._$AM._$AU;
      }
      p(t15) {
        var i22;
        const { el: { content: s23 }, parts: e24 } = this._$AD, o24 = (null !== (i22 = null == t15 ? void 0 : t15.creationScope) && void 0 !== i22 ? i22 : h2).importNode(s23, true);
        E.currentNode = o24;
        let n24 = E.nextNode(), l23 = 0, r21 = 0, d13 = e24[0];
        for (; void 0 !== d13; ) {
          if (l23 === d13.index) {
            let i23;
            2 === d13.type ? i23 = new S2(n24, n24.nextSibling, this, t15) : 1 === d13.type ? i23 = new d13.ctor(n24, d13.name, d13.strings, this, t15) : 6 === d13.type && (i23 = new L(n24, this, t15)), this.v.push(i23), d13 = e24[++r21];
          }
          l23 !== (null == d13 ? void 0 : d13.index) && (n24 = E.nextNode(), l23++);
        }
        return o24;
      }
      m(t15) {
        let i22 = 0;
        for (const s23 of this.v)
          void 0 !== s23 && (void 0 !== s23.strings ? (s23._$AI(t15, s23, i22), i22 += s23.strings.length - 2) : s23._$AI(t15[i22])), i22++;
      }
    };
    __name(N, "N");
    S2 = class {
      constructor(t15, i22, s23, e24) {
        var o24;
        this.type = 2, this._$AH = b, this._$AN = void 0, this._$AA = t15, this._$AB = i22, this._$AM = s23, this.options = e24, this._$C_ = null === (o24 = null == e24 ? void 0 : e24.isConnected) || void 0 === o24 || o24;
      }
      get _$AU() {
        var t15, i22;
        return null !== (i22 = null === (t15 = this._$AM) || void 0 === t15 ? void 0 : t15._$AU) && void 0 !== i22 ? i22 : this._$C_;
      }
      get parentNode() {
        let t15 = this._$AA.parentNode;
        const i22 = this._$AM;
        return void 0 !== i22 && 11 === t15.nodeType && (t15 = i22.parentNode), t15;
      }
      get startNode() {
        return this._$AA;
      }
      get endNode() {
        return this._$AB;
      }
      _$AI(t15, i22 = this) {
        t15 = V(this, t15, i22), d2(t15) ? t15 === b || null == t15 || "" === t15 ? (this._$AH !== b && this._$AR(), this._$AH = b) : t15 !== this._$AH && t15 !== x && this.$(t15) : void 0 !== t15._$litType$ ? this.T(t15) : void 0 !== t15.nodeType ? this.k(t15) : c2(t15) ? this.O(t15) : this.$(t15);
      }
      S(t15, i22 = this._$AB) {
        return this._$AA.parentNode.insertBefore(t15, i22);
      }
      k(t15) {
        this._$AH !== t15 && (this._$AR(), this._$AH = this.S(t15));
      }
      $(t15) {
        this._$AH !== b && d2(this._$AH) ? this._$AA.nextSibling.data = t15 : this.k(h2.createTextNode(t15)), this._$AH = t15;
      }
      T(t15) {
        var i22;
        const { values: s23, _$litType$: e24 } = t15, o24 = "number" == typeof e24 ? this._$AC(t15) : (void 0 === e24.el && (e24.el = P.createElement(e24.h, this.options)), e24);
        if ((null === (i22 = this._$AH) || void 0 === i22 ? void 0 : i22._$AD) === o24)
          this._$AH.m(s23);
        else {
          const t16 = new N(o24, this), i23 = t16.p(this.options);
          t16.m(s23), this.k(i23), this._$AH = t16;
        }
      }
      _$AC(t15) {
        let i22 = T.get(t15.strings);
        return void 0 === i22 && T.set(t15.strings, i22 = new P(t15)), i22;
      }
      O(t15) {
        u(this._$AH) || (this._$AH = [], this._$AR());
        const i22 = this._$AH;
        let s23, e24 = 0;
        for (const o24 of t15)
          e24 === i22.length ? i22.push(s23 = new S2(this.S(r3()), this.S(r3()), this, this.options)) : s23 = i22[e24], s23._$AI(o24), e24++;
        e24 < i22.length && (this._$AR(s23 && s23._$AB.nextSibling, e24), i22.length = e24);
      }
      _$AR(t15 = this._$AA.nextSibling, i22) {
        var s23;
        for (null === (s23 = this._$AP) || void 0 === s23 || s23.call(this, false, true, i22); t15 && t15 !== this._$AB; ) {
          const i23 = t15.nextSibling;
          t15.remove(), t15 = i23;
        }
      }
      setConnected(t15) {
        var i22;
        void 0 === this._$AM && (this._$C_ = t15, null === (i22 = this._$AP) || void 0 === i22 || i22.call(this, t15));
      }
    };
    __name(S2, "S");
    M = class {
      constructor(t15, i22, s23, e24, o24) {
        this.type = 1, this._$AH = b, this._$AN = void 0, this.element = t15, this.name = i22, this._$AM = e24, this.options = o24, s23.length > 2 || "" !== s23[0] || "" !== s23[1] ? (this._$AH = Array(s23.length - 1).fill(new String()), this.strings = s23) : this._$AH = b;
      }
      get tagName() {
        return this.element.tagName;
      }
      get _$AU() {
        return this._$AM._$AU;
      }
      _$AI(t15, i22 = this, s23, e24) {
        const o24 = this.strings;
        let n24 = false;
        if (void 0 === o24)
          t15 = V(this, t15, i22, 0), n24 = !d2(t15) || t15 !== this._$AH && t15 !== x, n24 && (this._$AH = t15);
        else {
          const e25 = t15;
          let l23, h21;
          for (t15 = o24[0], l23 = 0; l23 < o24.length - 1; l23++)
            h21 = V(this, e25[s23 + l23], i22, l23), h21 === x && (h21 = this._$AH[l23]), n24 || (n24 = !d2(h21) || h21 !== this._$AH[l23]), h21 === b ? t15 = b : t15 !== b && (t15 += (null != h21 ? h21 : "") + o24[l23 + 1]), this._$AH[l23] = h21;
        }
        n24 && !e24 && this.P(t15);
      }
      P(t15) {
        t15 === b ? this.element.removeAttribute(this.name) : this.element.setAttribute(this.name, null != t15 ? t15 : "");
      }
    };
    __name(M, "M");
    R = class extends M {
      constructor() {
        super(...arguments), this.type = 3;
      }
      P(t15) {
        this.element[this.name] = t15 === b ? void 0 : t15;
      }
    };
    __name(R, "R");
    k = s3 ? s3.emptyScript : "";
    H = class extends M {
      constructor() {
        super(...arguments), this.type = 4;
      }
      P(t15) {
        t15 && t15 !== b ? this.element.setAttribute(this.name, k) : this.element.removeAttribute(this.name);
      }
    };
    __name(H, "H");
    I = class extends M {
      constructor(t15, i22, s23, e24, o24) {
        super(t15, i22, s23, e24, o24), this.type = 5;
      }
      _$AI(t15, i22 = this) {
        var s23;
        if ((t15 = null !== (s23 = V(this, t15, i22, 0)) && void 0 !== s23 ? s23 : b) === x)
          return;
        const e24 = this._$AH, o24 = t15 === b && e24 !== b || t15.capture !== e24.capture || t15.once !== e24.once || t15.passive !== e24.passive, n24 = t15 !== b && (e24 === b || o24);
        o24 && this.element.removeEventListener(this.name, this, e24), n24 && this.element.addEventListener(this.name, this, t15), this._$AH = t15;
      }
      handleEvent(t15) {
        var i22, s23;
        "function" == typeof this._$AH ? this._$AH.call(null !== (s23 = null === (i22 = this.options) || void 0 === i22 ? void 0 : i22.host) && void 0 !== s23 ? s23 : this.element, t15) : this._$AH.handleEvent(t15);
      }
    };
    __name(I, "I");
    L = class {
      constructor(t15, i22, s23) {
        this.element = t15, this.type = 6, this._$AN = void 0, this._$AM = i22, this.options = s23;
      }
      get _$AU() {
        return this._$AM._$AU;
      }
      _$AI(t15) {
        V(this, t15);
      }
    };
    __name(L, "L");
    z = { A: "$lit$", M: o3, C: n3, L: 1, R: C, D: N, V: c2, I: V, H: S2, N: M, U: H, B: I, F: R, W: L };
    Z = i2.litHtmlPolyfillSupport;
    null == Z || Z(P, S2), (null !== (t2 = i2.litHtmlVersions) && void 0 !== t2 ? t2 : i2.litHtmlVersions = []).push("2.3.1");
  }
});

// node_modules/lit-element/lit-element.js
var l3, o4, r4, s4, n4, h3;
var init_lit_element = __esm({
  "node_modules/lit-element/lit-element.js"() {
    init_reactive_element();
    init_reactive_element();
    init_lit_html();
    init_lit_html();
    r4 = d;
    s4 = class extends d {
      constructor() {
        super(...arguments), this.renderOptions = { host: this }, this._$Dt = void 0;
      }
      createRenderRoot() {
        var t15, e24;
        const i22 = super.createRenderRoot();
        return null !== (t15 = (e24 = this.renderOptions).renderBefore) && void 0 !== t15 || (e24.renderBefore = i22.firstChild), i22;
      }
      update(t15) {
        const i22 = this.render();
        this.hasUpdated || (this.renderOptions.isConnected = this.isConnected), super.update(t15), this._$Dt = A(i22, this.renderRoot, this.renderOptions);
      }
      connectedCallback() {
        var t15;
        super.connectedCallback(), null === (t15 = this._$Dt) || void 0 === t15 || t15.setConnected(true);
      }
      disconnectedCallback() {
        var t15;
        super.disconnectedCallback(), null === (t15 = this._$Dt) || void 0 === t15 || t15.setConnected(false);
      }
      render() {
        return x;
      }
    };
    __name(s4, "s");
    s4.finalized = true, s4._$litElement$ = true, null === (l3 = globalThis.litElementHydrateSupport) || void 0 === l3 || l3.call(globalThis, { LitElement: s4 });
    n4 = globalThis.litElementPolyfillSupport;
    null == n4 || n4({ LitElement: s4 });
    h3 = { _$AK: (t15, e24, i22) => {
      t15._$AK(e24, i22);
    }, _$AL: (t15) => t15._$AL };
    (null !== (o4 = globalThis.litElementVersions) && void 0 !== o4 ? o4 : globalThis.litElementVersions = []).push("3.2.0");
  }
});

// node_modules/lit/index.js
var init_lit = __esm({
  "node_modules/lit/index.js"() {
    init_reactive_element();
    init_lit_html();
    init_lit_element();
  }
});

// node_modules/@lit/reactive-element/decorators/custom-element.js
var e4;
var init_custom_element = __esm({
  "node_modules/@lit/reactive-element/decorators/custom-element.js"() {
    e4 = /* @__PURE__ */ __name((e24) => (n24) => "function" == typeof n24 ? ((e25, n25) => (customElements.define(e25, n25), n25))(e24, n24) : ((e25, n25) => {
      const { kind: t15, elements: s23 } = n25;
      return { kind: t15, elements: s23, finisher(n26) {
        customElements.define(e25, n26);
      } };
    })(e24, n24), "e");
  }
});

// node_modules/@lit/reactive-element/decorators/property.js
function e5(e24) {
  return (n24, t15) => void 0 !== t15 ? ((i22, e25, n25) => {
    e25.constructor.createProperty(n25, i22);
  })(e24, n24, t15) : i3(e24, n24);
}
var i3;
var init_property = __esm({
  "node_modules/@lit/reactive-element/decorators/property.js"() {
    i3 = /* @__PURE__ */ __name((i22, e24) => "method" === e24.kind && e24.descriptor && !("value" in e24.descriptor) ? { ...e24, finisher(n24) {
      n24.createProperty(e24.key, i22);
    } } : { kind: "field", key: Symbol(), placement: "own", descriptor: {}, originalKey: e24.key, initializer() {
      "function" == typeof e24.initializer && (this[e24.key] = e24.initializer.call(this));
    }, finisher(n24) {
      n24.createProperty(e24.key, i22);
    } }, "i");
    __name(e5, "e");
  }
});

// node_modules/@lit/reactive-element/decorators/state.js
function t3(t15) {
  return e5({ ...t15, state: true });
}
var init_state = __esm({
  "node_modules/@lit/reactive-element/decorators/state.js"() {
    init_property();
    __name(t3, "t");
  }
});

// node_modules/@lit/reactive-element/decorators/base.js
var o5;
var init_base = __esm({
  "node_modules/@lit/reactive-element/decorators/base.js"() {
    o5 = /* @__PURE__ */ __name(({ finisher: e24, descriptor: t15 }) => (o24, n24) => {
      var r21;
      if (void 0 === n24) {
        const n25 = null !== (r21 = o24.originalKey) && void 0 !== r21 ? r21 : o24.key, i22 = null != t15 ? { kind: "method", placement: "prototype", key: n25, descriptor: t15(o24.key) } : { ...o24, key: n25 };
        return null != e24 && (i22.finisher = function(t16) {
          e24(t16, n25);
        }), i22;
      }
      {
        const r22 = o24.constructor;
        void 0 !== t15 && Object.defineProperty(o24, n24, t15(n24)), null == e24 || e24(r22, n24);
      }
    }, "o");
  }
});

// node_modules/@lit/reactive-element/decorators/event-options.js
var init_event_options = __esm({
  "node_modules/@lit/reactive-element/decorators/event-options.js"() {
    init_base();
  }
});

// node_modules/@lit/reactive-element/decorators/query.js
function i4(i22, n24) {
  return o5({ descriptor: (o24) => {
    const t15 = { get() {
      var o25, n25;
      return null !== (n25 = null === (o25 = this.renderRoot) || void 0 === o25 ? void 0 : o25.querySelector(i22)) && void 0 !== n25 ? n25 : null;
    }, enumerable: true, configurable: true };
    if (n24) {
      const n25 = "symbol" == typeof o24 ? Symbol() : "__" + o24;
      t15.get = function() {
        var o25, t16;
        return void 0 === this[n25] && (this[n25] = null !== (t16 = null === (o25 = this.renderRoot) || void 0 === o25 ? void 0 : o25.querySelector(i22)) && void 0 !== t16 ? t16 : null), this[n25];
      };
    }
    return t15;
  } });
}
var init_query = __esm({
  "node_modules/@lit/reactive-element/decorators/query.js"() {
    init_base();
    __name(i4, "i");
  }
});

// node_modules/@lit/reactive-element/decorators/query-all.js
var init_query_all = __esm({
  "node_modules/@lit/reactive-element/decorators/query-all.js"() {
    init_base();
  }
});

// node_modules/@lit/reactive-element/decorators/query-async.js
var init_query_async = __esm({
  "node_modules/@lit/reactive-element/decorators/query-async.js"() {
    init_base();
  }
});

// node_modules/@lit/reactive-element/decorators/query-assigned-elements.js
var n5, e6;
var init_query_assigned_elements = __esm({
  "node_modules/@lit/reactive-element/decorators/query-assigned-elements.js"() {
    init_base();
    e6 = null != (null === (n5 = window.HTMLSlotElement) || void 0 === n5 ? void 0 : n5.prototype.assignedElements) ? (o24, n24) => o24.assignedElements(n24) : (o24, n24) => o24.assignedNodes(n24).filter((o25) => o25.nodeType === Node.ELEMENT_NODE);
  }
});

// node_modules/@lit/reactive-element/decorators/query-assigned-nodes.js
var init_query_assigned_nodes = __esm({
  "node_modules/@lit/reactive-element/decorators/query-assigned-nodes.js"() {
    init_base();
    init_query_assigned_elements();
  }
});

// node_modules/lit/decorators.js
var init_decorators = __esm({
  "node_modules/lit/decorators.js"() {
    init_custom_element();
    init_property();
    init_state();
    init_event_options();
    init_query();
    init_query_all();
    init_query_async();
    init_query_assigned_elements();
    init_query_assigned_nodes();
  }
});

// node_modules/@patternfly/pfe-core/decorators/bound.js
function o6(n24, e24, t15) {
  if (typeof t15?.value != "function")
    throw new TypeError(`Only methods can be decorated with @bound. <${e24 ?? n24.name}> is not a method!`);
  return { configurable: true, get() {
    let r21 = t15.value.bind(this);
    return Object.defineProperty(this, e24, { value: r21, configurable: true, writable: true }), r21;
  } };
}
var init_bound = __esm({
  "node_modules/@patternfly/pfe-core/decorators/bound.js"() {
    __name(o6, "o");
  }
});

// node_modules/@patternfly/pfe-core/functions/debounce.js
function a3(t15, l23, o24 = false) {
  let n24;
  return function(...e24) {
    let u19 = this, c21 = /* @__PURE__ */ __name(function() {
      n24 = null, o24 || t15.apply(u19, e24);
    }, "c"), i22 = o24 && !n24;
    clearTimeout(n24), n24 = window.setTimeout(c21, l23), i22 && t15.apply(u19, e24);
  };
}
var init_debounce = __esm({
  "node_modules/@patternfly/pfe-core/functions/debounce.js"() {
    __name(a3, "a");
  }
});

// node_modules/@patternfly/pfe-core/controllers/logger.js
var e7, n6;
var init_logger = __esm({
  "node_modules/@patternfly/pfe-core/controllers/logger.js"() {
    e7 = /* @__PURE__ */ __name(class {
      constructor(t15) {
        this.host = t15;
        if (e7.instances.get(t15))
          return e7.instances.get(t15);
        t15.addController(this), e7.instances.set(t15, this);
      }
      get prefix() {
        return `[${this.host.localName}${this.host.id ? `#${this.host.id}` : ""}]`;
      }
      static debugLog(t15 = null) {
        try {
          return t15 !== null && (e7.logDebug = !!t15, localStorage.pfeLog = !!t15), localStorage.pfeLog === "true";
        } catch {
          return e7.logDebug;
        }
      }
      static log(...t15) {
        e7.debugLog() && console.log(...t15);
      }
      static warn(...t15) {
        console.warn(...t15);
      }
      static error(...t15) {
        console.error([...t15].join(" "));
      }
      log(...t15) {
        e7.log(this.prefix, ...t15);
      }
      warn(...t15) {
        e7.warn(this.prefix, ...t15);
      }
      error(...t15) {
        e7.error(this.prefix, ...t15);
      }
      hostConnected() {
        this.log("connected");
      }
    }, "e");
    n6 = e7;
    n6.instances = /* @__PURE__ */ new WeakMap();
  }
});

// node_modules/@patternfly/pfe-core/controllers/cascade-controller.js
var p2, l5, h4, n7, c3;
var init_cascade_controller = __esm({
  "node_modules/@patternfly/pfe-core/controllers/cascade-controller.js"() {
    init_bound();
    init_debounce();
    init_logger();
    p2 = Object.defineProperty;
    l5 = Object.getOwnPropertyDescriptor;
    h4 = /* @__PURE__ */ __name((a20, t15, e24, s23) => {
      for (var i22 = s23 > 1 ? void 0 : s23 ? l5(t15, e24) : t15, o24 = a20.length - 1, r21; o24 >= 0; o24--)
        (r21 = a20[o24]) && (i22 = (s23 ? r21(t15, e24, i22) : r21(i22)) || i22);
      return s23 && i22 && p2(t15, e24, i22), i22;
    }, "h");
    n7 = /* @__PURE__ */ __name(class {
      constructor(t15, e24) {
        this.host = t15;
        this.options = e24;
        this.mo = new MutationObserver(this.parse);
        this.cache = /* @__PURE__ */ new Map();
        this.class = t15.constructor, this.logger = new n6(this.host), n7.instances.set(t15, this);
        let s23 = this.options?.properties ?? {};
        for (let [i22, o24] of Object.entries(s23))
          this.initProp(i22, o24);
        t15.addController(this), this.cascadeProperties = a3(this.cascadeProperties, 1);
      }
      hostUpdated() {
        this.cascadeProperties();
      }
      hostConnected() {
        this.mo.observe(this.host, { attributes: true, childList: true }), this.cascadeProperties();
      }
      hostDisconnected() {
        this.mo.disconnect();
      }
      cascadeProperties(t15 = this.host.children) {
        if (this.host.isConnected) {
          let e24 = this.cache.keys();
          if (!t15)
            return this._cascadeAttributes(e24, this.cache);
          for (let s23 of t15)
            if (s23 instanceof Element) {
              for (let i22 of e24)
                if (s23.matches(i22)) {
                  let o24 = this.cache.get(i22);
                  for (let r21 of o24 ?? [])
                    this._copyAttribute(r21, s23);
                }
            }
        }
      }
      initProp(t15, e24) {
        for (let s23 of [e24].flat(1 / 0).filter(Boolean)) {
          let { attribute: i22 } = this.class.getPropertyOptions(t15), o24 = typeof i22 == "string" ? i22 : t15.toLowerCase();
          this.cache.get(s23) ? this.cache.get(s23)?.push(o24) : this.cache.set(s23, [o24]);
        }
      }
      parse(t15) {
        for (let e24 of t15 ?? [])
          e24.type === "childList" && e24.addedNodes.length ? this.cascadeProperties(e24.addedNodes) : e24.type === "attributes" && this._cascadeAttributes(this.cache.keys(), this.cache);
      }
      async _copyAttribute(t15, e24) {
        this.logger.log(`copying ${t15} to ${e24}`);
        let s23 = this.host.getAttribute(t15);
        e24.isConnected && (s23 == null ? e24.removeAttribute(t15) : e24.setAttribute(t15, s23));
      }
      _cascadeAttributes(t15, e24) {
        for (let s23 of t15)
          for (let i22 of e24.get(s23) ?? [])
            this._cascadeAttribute(i22, s23);
      }
      _cascadeAttribute(t15, e24) {
        let s23 = [...this.host.querySelectorAll(e24), ...this.host.shadowRoot?.querySelectorAll(e24) ?? []];
        for (let i22 of s23)
          this._copyAttribute(t15, i22);
      }
    }, "n");
    c3 = n7;
    c3.instances = /* @__PURE__ */ new WeakMap(), h4([o6], c3.prototype, "parse", 1);
  }
});

// node_modules/@patternfly/pfe-core/decorators/cascades.js
function s5(...n24) {
  return function(r21, i22) {
    r21.constructor.addInitializer((o24) => {
      let e24 = o24;
      c3.instances.has(e24) || c3.instances.set(e24, new c3(e24)), c3.instances.get(e24)?.initProp(i22, n24);
    });
  };
}
var init_cascades = __esm({
  "node_modules/@patternfly/pfe-core/decorators/cascades.js"() {
    init_cascade_controller();
    __name(s5, "s");
  }
});

// node_modules/@patternfly/pfe-core/context.js
function r5(e24, t15) {
  return { name: e24, initialValue: t15 };
}
var n8;
var init_context = __esm({
  "node_modules/@patternfly/pfe-core/context.js"() {
    __name(r5, "r");
    n8 = /* @__PURE__ */ __name(class extends Event {
      constructor(o24, l23, x13) {
        super("context-request", { bubbles: true, composed: true });
        this.context = o24;
        this.callback = l23;
        this.multiple = x13;
      }
    }, "n");
  }
});

// node_modules/@patternfly/pfe-core/controllers/style-controller.js
var l6;
var init_style_controller = __esm({
  "node_modules/@patternfly/pfe-core/controllers/style-controller.js"() {
    init_lit();
    l6 = /* @__PURE__ */ __name(class {
      constructor(t15, e24) {
        this.host = t15;
        this.styles = e24;
        this.stylesAdopted = false;
        t15.addController(this);
      }
      hostConnected() {
        if (this.stylesAdopted || !(this.host.renderRoot instanceof ShadowRoot))
          return;
        let t15 = [this.styles].flatMap((e24) => c(e24)).filter((e24) => !!e24);
        e ? this.host.renderRoot.adoptedStyleSheets = [...t15.map((e24) => e24 instanceof CSSStyleSheet ? e24 : e24.styleSheet), ...this.host.renderRoot.adoptedStyleSheets ?? []] : t15.forEach((e24) => {
          let s23 = document.createElement("style"), o24 = window.litNonce;
          o24 !== void 0 && s23.setAttribute("nonce", o24), s23.textContent = e24.cssText, this.host.renderRoot.appendChild(s23);
        }), this.stylesAdopted = true;
      }
    }, "l");
  }
});

// node_modules/@patternfly/pfe-core/controllers/color-context.js
var u2, m2, i5, k2, f2, h5, c4, n9, l7;
var init_color_context = __esm({
  "node_modules/@patternfly/pfe-core/controllers/color-context.js"() {
    init_lit();
    init_context();
    init_bound();
    init_logger();
    init_style_controller();
    init_lit();
    u2 = Object.defineProperty;
    m2 = Object.getOwnPropertyDescriptor;
    i5 = /* @__PURE__ */ __name((a20, o24, e24, t15) => {
      for (var r21 = t15 > 1 ? void 0 : t15 ? m2(o24, e24) : o24, d13 = a20.length - 1, p22; d13 >= 0; d13--)
        (p22 = a20[d13]) && (r21 = (t15 ? p22(o24, e24, r21) : p22(r21)) || r21);
      return t15 && r21 && u2(o24, e24, r21), r21;
    }, "i");
    k2 = i`:host(:is([on=dark])){--context:dark}:host(:is([on=light])){--context:light}:host(:is([on=saturated])){--context:saturated}:host(:is([color-palette=darker],[color-palette=darkest])){--context:dark;--pfe-broadcasted--text:var(--pfe-theme--color--text--on-dark, #fff);--pfe-broadcasted--text--muted:var(--pfe-theme--color--text--muted--on-dark, #d2d2d2);--pfe-broadcasted--link:var(--pfe-theme--color--link--on-dark, #73bcf7);--pfe-broadcasted--link--hover:var(--pfe-theme--color--link--hover--on-dark, #bee1f4);--pfe-broadcasted--link--focus:var(--pfe-theme--color--link--focus--on-dark, #bee1f4);--pfe-broadcasted--link--visited:var(--pfe-theme--color--link--visited--on-dark, #bee1f4);--pfe-broadcasted--link-decoration:var(--pfe-theme--link-decoration--on-dark, none);--pfe-broadcasted--link-decoration--hover:var(--pfe-theme--link-decoration--hover--on-dark, underline);--pfe-broadcasted--link-decoration--focus:var(--pfe-theme--link-decoration--focus--on-dark, underline);--pfe-broadcasted--link-decoration--visited:var(--pfe-theme--link-decoration--visited--on-dark, none)}:host(:is([color-palette=lighter],[color-palette=lightest],[color-palette=base])){--context:light;--pfe-broadcasted--text:var(--pfe-theme--color--text, #151515);--pfe-broadcasted--text--muted:var(--pfe-theme--color--text--muted, #6a6e73);--pfe-broadcasted--link:var(--pfe-theme--color--link, #06c);--pfe-broadcasted--link--hover:var(--pfe-theme--color--link--hover, #004080);--pfe-broadcasted--link--focus:var(--pfe-theme--color--link--focus, #004080);--pfe-broadcasted--link--visited:var(--pfe-theme--color--link--visited, #6753ac);--pfe-broadcasted--link-decoration:var(--pfe-theme--link-decoration, none);--pfe-broadcasted--link-decoration--hover:var(--pfe-theme--link-decoration--hover, underline);--pfe-broadcasted--link-decoration--focus:var(--pfe-theme--link-decoration--focus, underline);--pfe-broadcasted--link-decoration--visited:var(--pfe-theme--link-decoration--visited, none)}:host(:is([color-palette=accent],[color-palette=complement],[color-palette=saturated])){--context:saturated;--pfe-broadcasted--text:var(--pfe-theme--color--text--on-saturated, #fff);--pfe-broadcasted--text--muted:var(--pfe-theme--color--text--muted--on-saturated, #d2d2d2);--pfe-broadcasted--link:var(--pfe-theme--color--link--on-saturated, #fff);--pfe-broadcasted--link--hover:var(--pfe-theme--color--link--hover--on-saturated, #fafafa);--pfe-broadcasted--link--focus:var(--pfe-theme--color--link--focus--on-saturated, #fafafa);--pfe-broadcasted--link--visited:var(--pfe-theme--color--link--visited--on-saturated, #d2d2d2);--pfe-broadcasted--link-decoration:var(--pfe-theme--link-decoration--on-saturated, underline);--pfe-broadcasted--link-decoration--hover:var(--pfe-theme--link-decoration--hover--on-saturated, underline);--pfe-broadcasted--link-decoration--focus:var(--pfe-theme--link-decoration--focus--on-saturated, underline);--pfe-broadcasted--link-decoration--visited:var(--pfe-theme--link-decoration--visited--on-saturated, underline)}:host(:is([color-palette=lightest])){--pfe-context-background-color:var(--pfe-theme--color--surface--lightest, #fff)}:host(:is([color-palette=lighter])){--pfe-context-background-color:var(--pfe-theme--color--surface--lighter, #ededed)}:host(:is([color-palette=base])){--pfe-context-background-color:var(--pfe-theme--color--surface--base, #ededed)}:host(:is([color-palette=darker])){--pfe-context-background-color:var(--pfe-theme--color--surface--darker, #393f44)}:host(:is([color-palette=darkest])){--pfe-context-background-color:var(--pfe-theme--color--surface--darkest, #292e34)}:host(:is([color-palette=complement])){--pfe-context-background-color:var(--pfe-theme--color--surface--complement, #004368)}:host(:is([color-palette=accent])){--pfe-context-background-color:var(--pfe-theme--color--surface--accent, #00659c)}:host(:is([color-palette])){background-color:var(--pfe-context-background-color,var(--pfe-theme--color--surface--base))}`;
    f2 = k2;
    h5 = /* @__PURE__ */ new Map();
    c4 = /* @__PURE__ */ __name(class {
      constructor(o24, e24) {
        this.host = o24;
        this.prefix = "pfe-";
        this.last = null;
        this.prefix = e24?.prefix ?? "pfe-", this.context = r5(`${this.prefix}-color-context`), this.logger = new n6(o24), this.styleController = new l6(o24, f2), o24.addController(this);
      }
    }, "c");
    n9 = /* @__PURE__ */ __name(class extends c4 {
      constructor(e24, t15) {
        super(e24, t15);
        this.callbacks = /* @__PURE__ */ new Set();
        this.mo = new MutationObserver(() => this.update(this.contextVariable));
        this.style = window.getComputedStyle(e24), this.attribute = t15?.attribute ?? "color-palette";
      }
      get contextVariable() {
        return this.style.getPropertyValue("--context").trim() || null;
      }
      hostConnected() {
        this.host.addEventListener("context-request", this.onChildContextEvent), this.mo.observe(this.host, { attributes: true, attributeFilter: [this.attribute, "on"] }), this.update(this.contextVariable);
        for (let [e24, t15] of h5)
          e24.dispatchEvent(t15);
      }
      hostDisconnected() {
        this.callbacks.forEach((e24) => this.callbacks.delete(e24)), this.mo.disconnect();
      }
      isColorContextEvent(e24) {
        return e24.target !== this.host && e24.context.name === `${this.prefix}-color-context`;
      }
      onChildContextEvent(e24) {
        this.isColorContextEvent(e24) && (e24.stopPropagation(), e24.callback(this.contextVariable), e24.multiple && this.callbacks.add(e24.callback));
      }
      update(e24) {
        for (let t15 of this.callbacks)
          t15(e24);
      }
    }, "n");
    i5([o6], n9.prototype, "onChildContextEvent", 1), i5([o6], n9.prototype, "update", 1);
    l7 = /* @__PURE__ */ __name(class extends c4 {
      constructor(e24, t15) {
        super(e24, t15);
        this.override = null;
        this.attribute ?? (this.attribute = "on");
      }
      hostConnected() {
        let e24 = new n8(this.context, this.contextCallback, true);
        this.override = this.host.getAttribute(this.attribute), this.host.dispatchEvent(e24), h5.set(this.host, e24);
      }
      hostDisconnected() {
        this.dispose?.(), this.dispose = void 0, h5.delete(this.host);
      }
      contextCallback(e24, t15) {
        t15 && t15 !== this.dispose && (this.dispose?.(), this.dispose = t15), this.update(e24);
      }
      update(e24) {
        !this.override && e24 !== this.last && (this.last = e24, this.logger.log(`setting context from ${this.host.getAttribute(this.attribute)} to ${e24}`), e24 == null ? this.host.removeAttribute(this.attribute) : this.host.setAttribute(this.attribute, e24));
      }
    }, "l");
    i5([o6], l7.prototype, "contextCallback", 1), i5([o6], l7.prototype, "update", 1);
  }
});

// node_modules/@patternfly/pfe-core/decorators/color-context.js
function c5(o24) {
  return function(e24, n24) {
    e24.constructor.addInitializer((t15) => {
      t15.__colorContextProvider = new n9(t15, o24);
    });
  };
}
function x2(o24) {
  return function(e24, n24) {
    e24.constructor.addInitializer((t15) => {
      t15.__colorContextConsumer = new l7(t15, o24);
    });
  };
}
var init_color_context2 = __esm({
  "node_modules/@patternfly/pfe-core/decorators/color-context.js"() {
    init_color_context();
    __name(c5, "c");
    __name(x2, "x");
  }
});

// node_modules/@patternfly/pfe-core/decorators/deprecation.js
function d3(r21) {
  return function(e24, t15) {
    let { alias: a20, ...n24 } = r21, o24 = e24.constructor, l23 = o24.getPropertyOptions(a20);
    o24.createProperty(t15, { ...l23, ...n24 }), o24.addInitializer((s23) => {
      s23.addController(new i6(s23, r21, t15));
    });
  };
}
var i6;
var init_deprecation = __esm({
  "node_modules/@patternfly/pfe-core/decorators/deprecation.js"() {
    init_logger();
    __name(d3, "d");
    i6 = /* @__PURE__ */ __name(class {
      constructor(e24, t15, a20) {
        this.host = e24;
        this.options = t15;
        this.deprecatedKey = a20;
        this.logged = false;
        this.logger = new n6(e24);
      }
      hostUpdate() {
        let { deprecatedKey: e24, options: { alias: t15 } } = this;
        this.host[e24] && this.host[t15] !== this.host[e24] && (this.logged || (this.logger.warn(`${e24} is deprecated, use ${t15} instead`), this.logged = true), this.host[t15] = this.host[e24]);
      }
    }, "i");
  }
});

// node_modules/@patternfly/pfe-core/controllers/light-dom-controller.js
var i7;
var init_light_dom_controller = __esm({
  "node_modules/@patternfly/pfe-core/controllers/light-dom-controller.js"() {
    init_logger();
    i7 = /* @__PURE__ */ __name(class {
      constructor(t15, e24, s23) {
        this.host = t15;
        this.options = s23;
        this.initializer = e24.bind(t15), this.mo = new MutationObserver(this.initializer), this.logger = new n6(this.host), t15.addController(this);
      }
      hostConnected() {
        this.hasLightDOM() ? this.initializer() : this.options?.emptyWarning && this.logger.warn(this.options?.emptyWarning), this.initObserver();
      }
      hostDisconnected() {
        this.mo.disconnect();
      }
      initObserver() {
        (this.options?.observe ?? true) && this.mo.observe(this.host, typeof this.options?.observe != "object" ? { childList: true } : this.options?.observe);
      }
      hasLightDOM() {
        return this.host.children.length > 0 || (this.host.textContent ?? "").trim().length > 0;
      }
    }, "i");
  }
});

// node_modules/@patternfly/pfe-core/decorators/initializer.js
function c6(n24) {
  return function(t15, o24) {
    t15.constructor.addInitializer((e24) => {
      let i22 = t15[o24], r21 = new i7(e24, i22, n24);
      e24.isConnected && r21.hostConnected();
    });
  };
}
var init_initializer = __esm({
  "node_modules/@patternfly/pfe-core/decorators/initializer.js"() {
    init_light_dom_controller();
    __name(c6, "c");
  }
});

// node_modules/@patternfly/pfe-core/controllers/property-observer-controller.js
var l8, t4, a4;
var init_property_observer_controller = __esm({
  "node_modules/@patternfly/pfe-core/controllers/property-observer-controller.js"() {
    l8 = Symbol("observed properties controller");
    t4 = /* @__PURE__ */ __name(class {
      constructor(e24) {
        this.host = e24;
        this.values = /* @__PURE__ */ new Map();
        if (t4.hosts.get(e24))
          return t4.hosts.get(e24);
        e24.addController(this), e24[l8] = this;
      }
      delete(e24) {
        this.values.delete(e24);
      }
      hostUpdate() {
        for (let [e24, [o24, [r21, s23]]] of this.values)
          this.host[o24]?.(r21, s23), this.delete(e24);
      }
      hostUpdated() {
        this.host.removeController(this);
      }
      cache(e24, o24, ...r21) {
        this.values.set(e24, [o24, r21]);
      }
    }, "t");
    a4 = t4;
    a4.hosts = /* @__PURE__ */ new WeakMap();
  }
});

// node_modules/@patternfly/pfe-core/decorators/observed.js
function p3(...o24) {
  if (o24.length === 1) {
    let [e24] = o24;
    return function(t15, r21) {
      t15.constructor.addInitializer((n24) => new a4(n24)), c7(t15, r21, e24);
    };
  } else {
    let [e24, t15] = o24;
    e24.constructor.addInitializer((r21) => new a4(r21)), c7(e24, t15);
  }
}
function c7(o24, e24, t15) {
  let r21 = Object.getOwnPropertyDescriptor(o24, e24);
  Object.defineProperty(o24, e24, { ...r21, configurable: true, set(n24) {
    let i22 = this[e24];
    if (r21?.set?.call(this, n24), typeof t15 == "function")
      t15.call(this, i22, n24);
    else {
      let s23 = t15 || `_${e24}Changed`;
      this.hasUpdated ? this[s23]?.(i22, n24) : this[l8].cache(e24, s23, i22, n24);
    }
  } });
}
var init_observed = __esm({
  "node_modules/@patternfly/pfe-core/decorators/observed.js"() {
    init_property_observer_controller();
    __name(p3, "p");
    __name(c7, "c");
  }
});

// node_modules/@patternfly/pfe-core/core.js
function r6(e24) {
  return document.head.querySelector(`meta[name="${e24}"]`)?.content;
}
function l9(e24 = o7) {
  return e24 !== o7 && (window.PfeConfig.trackPerformance = !!e24), window.PfeConfig.trackPerformance;
}
var o7, i8, n10, a5;
var init_core = __esm({
  "node_modules/@patternfly/pfe-core/core.js"() {
    o7 = Symbol();
    __name(r6, "r");
    __name(l9, "l");
    i8 = { fromAttribute(e24) {
      return typeof e24 != "string" ? null : e24.split(",").map((t15) => t15.trim()).map((t15) => parseInt(t15, 10));
    }, toAttribute(e24) {
      return e24.join(",");
    } };
    n10 = /* @__PURE__ */ __name(class extends Event {
      constructor(t15, f18) {
        super(t15, { bubbles: true, composed: true, ...f18 });
      }
    }, "n");
    a5 = document.body.hasAttribute("no-auto-reveal");
    window.PfeConfig = Object.assign(window.PfeConfig ?? {}, { trackPerformance: window.PfeConfig?.trackPerformance ?? r6("pfe-track-performance") === "true", autoReveal: window.PfeConfig?.autoReveal ?? (a5 ? !a5 : r6("pfe-auto-reveal") === "true"), get log() {
      return !!localStorage.pfeLog;
    }, set log(e24) {
      e24 ? localStorage.setItem("pfeLog", `${true}`) : localStorage.removeItem("pfeLog");
    } });
  }
});

// node_modules/@patternfly/pfe-core/functions/random.js
function n11(t15 = "pfe") {
  return `${t15}-${Math.random().toString(36).substr(2, 9)}`;
}
var init_random = __esm({
  "node_modules/@patternfly/pfe-core/functions/random.js"() {
    __name(n11, "n");
  }
});

// node_modules/@patternfly/pfe-core/controllers/perf-controller.js
var r7;
var init_perf_controller = __esm({
  "node_modules/@patternfly/pfe-core/controllers/perf-controller.js"() {
    init_random();
    r7 = /* @__PURE__ */ __name(class {
      constructor(e24) {
        this.host = e24;
        this.hasMeasured = false;
        e24.addController(this), e24.id ? e24.id.startsWith("pfe-") && !e24.id.startsWith(e24.localName) ? this.markId = e24.id.replace("pfe", e24.localName) : this.markId = `${e24.localName}-${e24.id}` : this.markId = n11(e24.localName), performance.mark(`${this.markId}-defined`);
      }
      hostUpdate() {
        this.hasMeasured || this.measure();
      }
      measure() {
        this.hasMeasured = true, performance.mark(`${this.markId}-rendered`), performance.measure(`${this.markId}-from-navigation-to-first-render`, void 0, `${this.markId}-rendered`), performance.measure(`${this.markId}-from-defined-to-first-render`, `${this.markId}-defined`, `${this.markId}-rendered`), this.host.removeController(this);
      }
    }, "r");
  }
});

// node_modules/@patternfly/pfe-core/decorators/pfelement.js
function m3(e24) {
  return typeof e24.addInitializer == "function";
}
async function f3(e24) {
  if (i9.add(e24), !a6) {
    for (a6 = true; i9.size; ) {
      let n24 = [];
      for (let o24 of i9)
        n24.push(o24.updateComplete), i9.delete(o24);
      await Promise.all(n24);
    }
    document.body.removeAttribute("unresolved");
  }
}
function d4(e24) {
  let n24 = e24?.attribute ?? "pfelement", o24 = e24?.className ?? "PFElement";
  return function(r21) {
    if (!m3(r21))
      throw new Error(`@pfelement may only decorate ReactiveElements. ${r21.name} is does not implement ReactiveElement.`);
    r21.addInitializer((t15) => {
      window.PfeConfig.autoReveal && f3(t15), t15.addController({ hostConnected() {
        t15.setAttribute(n24, ""), t15.classList.add(o24);
      } }), l9() && new r7(t15);
    });
  };
}
var a6, i9;
var init_pfelement = __esm({
  "node_modules/@patternfly/pfe-core/decorators/pfelement.js"() {
    init_core();
    init_perf_controller();
    __name(m3, "m");
    a6 = false;
    i9 = /* @__PURE__ */ new Set();
    __name(f3, "f");
    __name(d4, "d");
  }
});

// node_modules/@patternfly/pfe-core/decorators/time.js
var init_time = __esm({
  "node_modules/@patternfly/pfe-core/decorators/time.js"() {
  }
});

// node_modules/@patternfly/pfe-core/decorators/trace.js
var init_trace = __esm({
  "node_modules/@patternfly/pfe-core/decorators/trace.js"() {
  }
});

// node_modules/@patternfly/pfe-core/decorators.js
var init_decorators2 = __esm({
  "node_modules/@patternfly/pfe-core/decorators.js"() {
    init_bound();
    init_cascades();
    init_color_context2();
    init_deprecation();
    init_initializer();
    init_observed();
    init_pfelement();
    init_time();
    init_trace();
  }
});

// node_modules/lit-html/directive.js
var t5, e8, i10;
var init_directive = __esm({
  "node_modules/lit-html/directive.js"() {
    t5 = { ATTRIBUTE: 1, CHILD: 2, PROPERTY: 3, BOOLEAN_ATTRIBUTE: 4, EVENT: 5, ELEMENT: 6 };
    e8 = /* @__PURE__ */ __name((t15) => (...e24) => ({ _$litDirective$: t15, values: e24 }), "e");
    i10 = class {
      constructor(t15) {
      }
      get _$AU() {
        return this._$AM._$AU;
      }
      _$AT(t15, e24, i22) {
        this._$Ct = t15, this._$AM = e24, this._$Ci = i22;
      }
      _$AS(t15, e24) {
        return this.update(t15, e24);
      }
      update(t15, e24) {
        return this.render(...e24);
      }
    };
    __name(i10, "i");
  }
});

// node_modules/lit-html/directives/style-map.js
var i11;
var init_style_map = __esm({
  "node_modules/lit-html/directives/style-map.js"() {
    init_lit_html();
    init_directive();
    i11 = e8(class extends i10 {
      constructor(t15) {
        var e24;
        if (super(t15), t15.type !== t5.ATTRIBUTE || "style" !== t15.name || (null === (e24 = t15.strings) || void 0 === e24 ? void 0 : e24.length) > 2)
          throw Error("The `styleMap` directive must be used in the `style` attribute and must be the only part in the attribute.");
      }
      render(t15) {
        return Object.keys(t15).reduce((e24, r21) => {
          const s23 = t15[r21];
          return null == s23 ? e24 : e24 + `${r21 = r21.replace(/(?:^(webkit|moz|ms|o)|)(?=[A-Z])/g, "-$&").toLowerCase()}:${s23};`;
        }, "");
      }
      update(e24, [r21]) {
        const { style: s23 } = e24.element;
        if (void 0 === this.vt) {
          this.vt = /* @__PURE__ */ new Set();
          for (const t15 in r21)
            this.vt.add(t15);
          return this.render(r21);
        }
        this.vt.forEach((t15) => {
          null == r21[t15] && (this.vt.delete(t15), t15.includes("-") ? s23.removeProperty(t15) : s23[t15] = "");
        });
        for (const t15 in r21) {
          const e25 = r21[t15];
          null != e25 && (this.vt.add(t15), t15.includes("-") ? s23.setProperty(t15, e25) : s23[t15] = e25);
        }
        return x;
      }
    });
  }
});

// node_modules/lit/directives/style-map.js
var init_style_map2 = __esm({
  "node_modules/lit/directives/style-map.js"() {
    init_style_map();
  }
});

// node_modules/@patternfly/pfe-icon/icon-set.js
var r8;
var init_icon_set = __esm({
  "node_modules/@patternfly/pfe-icon/icon-set.js"() {
    r8 = /* @__PURE__ */ __name(class {
      constructor(e24, n24, s23) {
        this.name = e24;
        this.path = n24;
        this._resolveIconName = s23;
      }
      resolveIconName(e24) {
        return this._resolveIconName(e24, this.name, this.path);
      }
      get resolver() {
        return this._resolveIconName;
      }
    }, "r");
  }
});

// node_modules/@patternfly/pfe-icon/builtin-icon-sets.js
function i12({ PfeIcon: n24, config: e24 = window.PfeConfig }) {
  if (e24.IconSets ?? (e24.IconSets = r9), !!e24.IconSets?.length)
    for (let { name: t15, path: c21, resolveIconName: o24 } of e24.IconSets) {
      let s23 = typeof o24 == "function" ? o24 : a7;
      n24.addIconSet(t15, c21, s23);
    }
}
var r9, a7;
var init_builtin_icon_sets = __esm({
  "node_modules/@patternfly/pfe-icon/builtin-icon-sets.js"() {
    r9 = [{ name: "web", path: "https://access.redhat.com/webassets/avalon/j/lib/rh-iconfont-svgs" }, { name: "rh", path: "https://access.redhat.com/webassets/avalon/j/lib/rh-iconfont-svgs" }];
    a7 = /* @__PURE__ */ __name((n24, e24, t15) => {
      let c21 = new RegExp(`^${e24}(-icon)?-(.*)`), [, , o24] = c21.exec(n24) ?? [], s23 = `${e24}-icon-${o24}`;
      return `${t15}/${s23}.svg`;
    }, "a");
    __name(i12, "i");
  }
});

// node_modules/@patternfly/pfe-icon/pfe-icon.js
function $2(n24) {
  window.PfeConfig ?? (window.PfeConfig = {}), i12({ PfeIcon: n24, config: window.PfeConfig }), document.body.addEventListener("pfe-icon:add-icon-set", () => {
    for (let l23 of d5)
      l23.updateIcon();
  });
}
var m4, g2, r10, k3, p4, d5, o9;
var init_pfe_icon = __esm({
  "node_modules/@patternfly/pfe-icon/pfe-icon.js"() {
    init_lit();
    init_decorators();
    init_style_map2();
    init_decorators2();
    init_random();
    init_logger();
    init_icon_set();
    init_builtin_icon_sets();
    init_lit();
    init_core();
    m4 = Object.defineProperty;
    g2 = Object.getOwnPropertyDescriptor;
    r10 = /* @__PURE__ */ __name((n24, l23, e24, i22) => {
      for (var t15 = i22 > 1 ? void 0 : i22 ? g2(l23, e24) : l23, c21 = n24.length - 1, a20; c21 >= 0; c21--)
        (a20 = n24[c21]) && (t15 = (i22 ? a20(l23, e24, t15) : a20(t15)) || t15);
      return i22 && t15 && m4(l23, e24, t15), t15;
    }, "r");
    k3 = i`:host{--context:var(--pfe-icon--context, light);position:relative;display:inline-block;box-sizing:content-box!important;width:fit-content!important;height:fit-content!important;line-height:0;max-width:var(--pfe-icon--size,var(--pfe-theme--icon-size,1em));max-height:var(--pfe-icon--size,var(--pfe-theme--icon-size,1em))}:host svg{width:var(--pfe-icon--size,var(--pfe-theme--icon-size,1em));height:var(--pfe-icon--size,var(--pfe-theme--icon-size,1em))}:host([block]){display:block;margin-bottom:var(--pfe-icon--spacing,var(--pfe-theme--container-spacer,1rem));margin-top:var(--pfe-icon--spacing,var(--pfe-theme--container-spacer,1rem))}:host([block]):first-child{margin-top:0}:host(:not(.load-failed)){vertical-align:middle;border-radius:50%;background-color:var(--pfe-icon--BackgroundColor,transparent);border:var(--pfe-icon--BorderWidth,var(--pfe-theme--ui--border-width,1px)) var(--pfe-theme--ui--border-style,solid) var(--pfe-icon--BorderColor,var(--pfe-icon--BackgroundColor,transparent));padding:var(--pfe-icon--Padding,0)}:host(:not(.load-failed)) filter feFlood{flood-color:var(--pfe-icon--color,var(--pfe-icon--Color,var(--pfe-broadcasted--text,#3c3f42)))}:host(:not(.load-failed)) .pfe-icon--fallback{display:none}:host([size="2x"]){max-width:var(--pfe-icon--size,2em);max-height:var(--pfe-icon--size,2em)}:host([size="2x"]) svg{width:var(--pfe-icon--size,2em);height:var(--pfe-icon--size,2em)}:host([size="3x"]){max-width:var(--pfe-icon--size,3em);max-height:var(--pfe-icon--size,3em)}:host([size="3x"]) svg{width:var(--pfe-icon--size,3em);height:var(--pfe-icon--size,3em)}:host([size="4x"]){max-width:var(--pfe-icon--size,4em);max-height:var(--pfe-icon--size,4em)}:host([size="4x"]) svg{width:var(--pfe-icon--size,4em);height:var(--pfe-icon--size,4em)}:host([size=xl]){max-width:var(--pfe-icon--size,100px);max-height:var(--pfe-icon--size,100px)}:host([size=xl]) svg{width:var(--pfe-icon--size,100px);height:var(--pfe-icon--size,100px)}:host([size=lg]){max-width:var(--pfe-icon--size,64px);max-height:var(--pfe-icon--size,64px)}:host([size=lg]) svg{width:var(--pfe-icon--size,64px);height:var(--pfe-icon--size,64px)}:host([size=md]){max-width:var(--pfe-icon--size,32px);max-height:var(--pfe-icon--size,32px)}:host([size=md]) svg{width:var(--pfe-icon--size,32px);height:var(--pfe-icon--size,32px)}:host([size=sm]){max-width:var(--pfe-icon--size,14px);max-height:var(--pfe-icon--size,14px)}:host([size=sm]) svg{width:var(--pfe-icon--size,14px);height:var(--pfe-icon--size,14px)}:host([circled]:not([circled=false])){padding:var(--pfe-icon--Padding,.5em);background-color:var(--pfe-icon--BackgroundColor,var(--pfe-theme--color--surface--lightest,#fff));border-color:var(--pfe-icon--BorderColor,var(--pfe-icon--BackgroundColor,var(--pfe-theme--color--surface--border,#d2d2d2)))}:host([color=critical]:not([circled])) filter feFlood,:host([color=critical][circled=false]) filter feFlood{flood-color:var(--pfe-icon--color,var(--pfe-icon--Color,var(--pfe-theme--color--feedback--critical,#a30000)))}:host([color=critical][circled]:not([circled=false])){background-color:var(--pfe-icon--BackgroundColor,var(--pfe-theme--color--feedback--critical,#a30000));border-color:var(--pfe-icon--BorderColor,var(--pfe-icon--BackgroundColor,var(--pfe-theme--color--feedback--critical,#a30000)));--pfe-icon--context:dark}:host([color=important]:not([circled])) filter feFlood,:host([color=important][circled=false]) filter feFlood{flood-color:var(--pfe-icon--color,var(--pfe-icon--Color,var(--pfe-theme--color--feedback--important,#c9190b)))}:host([color=important][circled]:not([circled=false])){background-color:var(--pfe-icon--BackgroundColor,var(--pfe-theme--color--feedback--important,#c9190b));border-color:var(--pfe-icon--BorderColor,var(--pfe-icon--BackgroundColor,var(--pfe-theme--color--feedback--important,#c9190b)));--pfe-icon--context:dark}:host([color=moderate]:not([circled])) filter feFlood,:host([color=moderate][circled=false]) filter feFlood{flood-color:var(--pfe-icon--color,var(--pfe-icon--Color,var(--pfe-theme--color--feedback--moderate,#f0ab00)))}:host([color=moderate][circled]:not([circled=false])){background-color:var(--pfe-icon--BackgroundColor,var(--pfe-theme--color--feedback--moderate,#f0ab00));border-color:var(--pfe-icon--BorderColor,var(--pfe-icon--BackgroundColor,var(--pfe-theme--color--feedback--moderate,#f0ab00)))}:host([color=success]:not([circled])) filter feFlood,:host([color=success][circled=false]) filter feFlood{flood-color:var(--pfe-icon--color,var(--pfe-icon--Color,var(--pfe-theme--color--feedback--success,#3e8635)))}:host([color=success][circled]:not([circled=false])){background-color:var(--pfe-icon--BackgroundColor,var(--pfe-theme--color--feedback--success,#3e8635));border-color:var(--pfe-icon--BorderColor,var(--pfe-icon--BackgroundColor,var(--pfe-theme--color--feedback--success,#3e8635)));--pfe-icon--context:dark}:host([color=info]:not([circled])) filter feFlood,:host([color=info][circled=false]) filter feFlood{flood-color:var(--pfe-icon--color,var(--pfe-icon--Color,var(--pfe-theme--color--feedback--info,#06c)))}:host([color=info][circled]:not([circled=false])){background-color:var(--pfe-icon--BackgroundColor,var(--pfe-theme--color--feedback--info,#06c));border-color:var(--pfe-icon--BorderColor,var(--pfe-icon--BackgroundColor,var(--pfe-theme--color--feedback--info,#06c)));--pfe-icon--context:dark}:host([color=default]:not([circled])) filter feFlood,:host([color=default][circled=false]) filter feFlood{flood-color:var(--pfe-icon--color,var(--pfe-icon--Color,var(--pfe-theme--color--feedback--default,#4f5255)))}:host([color=default][circled]:not([circled=false])){background-color:var(--pfe-icon--BackgroundColor,var(--pfe-theme--color--feedback--default,#4f5255));border-color:var(--pfe-icon--BorderColor,var(--pfe-icon--BackgroundColor,var(--pfe-theme--color--feedback--default,#4f5255)));--pfe-icon--context:dark}:host([color=lightest]:not([circled])) filter feFlood,:host([color=lightest][circled=false]) filter feFlood{flood-color:var(--pfe-icon--color,var(--pfe-icon--Color,var(--pfe-theme--color--surface--lightest,#fff)))}:host([color=lightest][circled]){--pfe-icon--color:white}:host([color=lightest][circled]:not([circled=false])){--pfe-icon--context:var(--pfe-theme--color--surface--lightest--context, light);background-color:var(--pfe-icon--BackgroundColor,var(--pfe-theme--color--surface--lightest,#fff));border-color:var(--pfe-icon--BorderColor,var(--pfe-icon--BackgroundColor,var(--pfe-theme--color--surface--lightest,#fff)))}:host([color=base]:not([circled])) filter feFlood,:host([color=base][circled=false]) filter feFlood{flood-color:var(--pfe-icon--color,var(--pfe-icon--Color,var(--pfe-theme--color--surface--base,#f0f0f0)))}:host([color=base][circled]){--pfe-icon--color:white}:host([color=base][circled]:not([circled=false])){--pfe-icon--context:var(--pfe-theme--color--surface--base--context, light);background-color:var(--pfe-icon--BackgroundColor,var(--pfe-theme--color--surface--base,#f0f0f0));border-color:var(--pfe-icon--BorderColor,var(--pfe-icon--BackgroundColor,var(--pfe-theme--color--surface--base,#f0f0f0)))}:host([color=darker]:not([circled])) filter feFlood,:host([color=darker][circled=false]) filter feFlood{flood-color:var(--pfe-icon--color,var(--pfe-icon--Color,var(--pfe-theme--color--surface--darker,#3c3f42)))}:host([color=darker][circled]){--pfe-icon--color:white}:host([color=darker][circled]:not([circled=false])){--pfe-icon--context:var(--pfe-theme--color--surface--darker--context, dark);background-color:var(--pfe-icon--BackgroundColor,var(--pfe-theme--color--surface--darker,#3c3f42));border-color:var(--pfe-icon--BorderColor,var(--pfe-icon--BackgroundColor,var(--pfe-theme--color--surface--darker,#3c3f42)))}:host([color=darkest]:not([circled])) filter feFlood,:host([color=darkest][circled=false]) filter feFlood{flood-color:var(--pfe-icon--color,var(--pfe-icon--Color,var(--pfe-theme--color--surface--darkest,#151515)))}:host([color=darkest][circled]){--pfe-icon--color:white}:host([color=darkest][circled]:not([circled=false])){--pfe-icon--context:var(--pfe-theme--color--surface--darkest--context, dark);background-color:var(--pfe-icon--BackgroundColor,var(--pfe-theme--color--surface--darkest,#151515));border-color:var(--pfe-icon--BorderColor,var(--pfe-icon--BackgroundColor,var(--pfe-theme--color--surface--darkest,#151515)))}:host([color=complement]:not([circled])) filter feFlood,:host([color=complement][circled=false]) filter feFlood{flood-color:var(--pfe-icon--color,var(--pfe-icon--Color,var(--pfe-theme--color--surface--complement,#002952)))}:host([color=complement][circled]){--pfe-icon--color:white}:host([color=complement][circled]:not([circled=false])){--pfe-icon--context:var(--pfe-theme--color--surface--complement--context, saturated);background-color:var(--pfe-icon--BackgroundColor,var(--pfe-theme--color--surface--complement,#002952));border-color:var(--pfe-icon--BorderColor,var(--pfe-icon--BackgroundColor,var(--pfe-theme--color--surface--complement,#002952)))}:host([color=accent]:not([circled])) filter feFlood,:host([color=accent][circled=false]) filter feFlood{flood-color:var(--pfe-icon--color,var(--pfe-icon--Color,var(--pfe-theme--color--surface--accent,#004080)))}:host([color=accent][circled]){--pfe-icon--color:white}:host([color=accent][circled]:not([circled=false])){--pfe-icon--context:var(--pfe-theme--color--surface--accent--context, saturated);background-color:var(--pfe-icon--BackgroundColor,var(--pfe-theme--color--surface--accent,#004080));border-color:var(--pfe-icon--BorderColor,var(--pfe-icon--BackgroundColor,var(--pfe-theme--color--surface--accent,#004080)))}:host(.load-failed) svg image,:host(.load-failed.has-fallback) svg,:host(.load-failed[on-fail=collapse]) svg{display:none}:host(.load-failed[on-fail=collapse]){max-width:var(--pfe-icon--size,0);max-height:var(--pfe-icon--size,0)}:host(.load-failed[on-fail=collapse]) svg{width:var(--pfe-icon--size,0);height:var(--pfe-icon--size,0)}`;
    p4 = k3;
    d5 = /* @__PURE__ */ new Set();
    __name($2, "$");
    o9 = /* @__PURE__ */ __name(class extends s4 {
      constructor() {
        super(...arguments);
        this.icon = "";
        this.size = "xl";
        this.circled = false;
        this.block = false;
        this._iconHref = "";
      }
      static getIconSet(e24) {
        e24 ?? (e24 = "");
        let [i22] = e24.split("-");
        return { set: this._iconSets.get(i22) };
      }
      static addIconSet(e24, i22, t15) {
        let c21 = t15, a20 = this._iconSets.get(e24);
        if (!c21 && a20 && typeof a20?.resolver == "function")
          c21 = a20.resolver;
        else {
          if (c21 && typeof c21 != "function")
            return n6.warn("[pfe-icon]: The third input to addIconSet should be a function that parses and returns the icon's filename.");
          if (!c21)
            return n6.warn(`[pfe-icon]: The set ${e24} needs a resolve function for the icon names.`);
        }
        this._iconSets.set(e24, new r8(e24, i22, c21)), document.body.dispatchEvent(new CustomEvent("pfe-icon:add-icon-set", { bubbles: false, detail: { set: this._iconSets.get(e24) } }));
      }
      get upgraded() {
        return this.image?.hasAttribute("href") ?? false;
      }
      connectedCallback() {
        super.connectedCallback(), d5.add(this);
      }
      render() {
        return y`<div class="pfe-icon--fallback"><slot></slot></div>${w`<svg xmlns="http://www.w3.org/2000/svg" height="20" width="20"><filter id="${this._filterId}" color-interpolation-filters="sRGB" x="0" y="0" height="100%" width="100%"><feFlood result="COLOR"/><feComposite operator="in" in="COLOR" in2="SourceAlpha"/></filter><image href="${this._iconHref}" width="100%" height="100%" @load="${this._iconLoad}" @error="${this._iconLoadError}" style="${i11({ filter: this._filterId && `url(#${this._filterId})` })}"></image></svg>`}`;
      }
      disconnectedCallback() {
        super.disconnectedCallback(), d5.delete(this);
      }
      _iconLoad() {
        this.classList.remove("load-failed");
      }
      _iconLoadError() {
        this.classList.add("load-failed"), this.classList.toggle("has-fallback", !!(this.children.length || this.textContent?.trim().length));
      }
      _iconChanged() {
        this.updateIcon();
      }
      updateIcon() {
        let { set: e24 } = o9.getIconSet(this.icon);
        e24 && (this._iconHref = e24.resolveIconName(this.icon), this._filterId = n11("filter"));
      }
    }, "o");
    o9.version = "2.0.0-next.3", o9.styles = [p4], o9._iconSets = /* @__PURE__ */ new Map(), r10([p3, e5({ type: String, reflect: true })], o9.prototype, "icon", 2), r10([e5({ type: String, reflect: true })], o9.prototype, "size", 2), r10([e5({ type: String, reflect: true })], o9.prototype, "color", 2), r10([e5({ type: String, reflect: true, attribute: "on-fail" })], o9.prototype, "onFail", 2), r10([e5({ type: Boolean, reflect: true })], o9.prototype, "circled", 2), r10([e5({ type: Boolean, reflect: true })], o9.prototype, "block", 2), r10([x2(), e5({ reflect: true })], o9.prototype, "on", 2), r10([t3()], o9.prototype, "_iconHref", 2), r10([t3()], o9.prototype, "_filterId", 2), r10([i4("svg image")], o9.prototype, "image", 2), r10([o6], o9.prototype, "_iconLoad", 1), r10([o6], o9.prototype, "_iconLoadError", 1), r10([o6], o9.prototype, "updateIcon", 1), o9 = r10([e4("pfe-icon"), $2, d4()], o9);
  }
});

// node_modules/@patternfly/pfe-core/functions/deprecatedCustomEvent.js
function n12(e24, t15) {
  return new CustomEvent(e24, { bubbles: true, composed: true, detail: t15 });
}
var init_deprecatedCustomEvent = __esm({
  "node_modules/@patternfly/pfe-core/functions/deprecatedCustomEvent.js"() {
    __name(n12, "n");
  }
});

// node_modules/lit-html/static.js
var e9, l10, o10, s6, a8, n13, u3;
var init_static = __esm({
  "node_modules/lit-html/static.js"() {
    init_lit_html();
    e9 = Symbol.for("");
    l10 = /* @__PURE__ */ __name((t15) => {
      if ((null == t15 ? void 0 : t15.r) === e9)
        return null == t15 ? void 0 : t15._$litStatic$;
    }, "l");
    o10 = /* @__PURE__ */ __name((t15) => ({ _$litStatic$: t15, r: e9 }), "o");
    s6 = /* @__PURE__ */ new Map();
    a8 = /* @__PURE__ */ __name((t15) => (r21, ...e24) => {
      const o24 = e24.length;
      let i22, a20;
      const n24 = [], u19 = [];
      let c21, $4 = 0, f18 = false;
      for (; $4 < o24; ) {
        for (c21 = r21[$4]; $4 < o24 && void 0 !== (a20 = e24[$4], i22 = l10(a20)); )
          c21 += i22 + r21[++$4], f18 = true;
        u19.push(a20), n24.push(c21), $4++;
      }
      if ($4 === o24 && n24.push(r21[o24]), f18) {
        const t16 = n24.join("$$lit$$");
        void 0 === (r21 = s6.get(t16)) && (n24.raw = n24, s6.set(t16, r21 = n24)), e24 = u19;
      }
      return t15(r21, ...e24);
    }, "a");
    n13 = a8(y);
    u3 = a8(w);
  }
});

// node_modules/lit/static-html.js
var init_static_html = __esm({
  "node_modules/lit/static-html.js"() {
    init_static();
  }
});

// node_modules/@patternfly/pfe-core/controllers/slot-controller.js
function u4(i22) {
  return i22.length === 1 && typeof i22[0] == "object" && i22[0] !== null;
}
var c8, m5, a9, p5, d6, l11;
var init_slot_controller = __esm({
  "node_modules/@patternfly/pfe-core/controllers/slot-controller.js"() {
    init_bound();
    init_logger();
    c8 = Object.defineProperty;
    m5 = Object.getOwnPropertyDescriptor;
    a9 = /* @__PURE__ */ __name((i22, t15, e24, o24) => {
      for (var s23 = o24 > 1 ? void 0 : o24 ? m5(t15, e24) : t15, n24 = i22.length - 1, r21; n24 >= 0; n24--)
        (r21 = i22[n24]) && (s23 = (o24 ? r21(t15, e24, s23) : r21(s23)) || s23);
      return o24 && s23 && c8(t15, e24, s23), s23;
    }, "a");
    __name(u4, "u");
    p5 = /* @__PURE__ */ __name((i22) => (t15) => i22 === l11.anonymous ? !t15.hasAttribute("slot") : t15.getAttribute("slot") === i22, "p");
    d6 = /* @__PURE__ */ __name(class {
      constructor(t15, ...e24) {
        this.host = t15;
        this.nodes = /* @__PURE__ */ new Map();
        this.firstUpdated = false;
        this.mo = new MutationObserver(this.onMutation);
        this.deprecations = {};
        if (this.logger = new n6(this.host), u4(e24)) {
          let [{ slots: o24, deprecations: s23 }] = e24;
          this.slotNames = o24, this.deprecations = s23 ?? {};
        } else
          e24.length >= 1 ? (this.slotNames = e24, this.deprecations = {}) : this.slotNames = [null];
        t15.addController(this);
      }
      hostConnected() {
        this.host.addEventListener("slotchange", this.onSlotChange), this.firstUpdated = false, this.mo.observe(this.host, { childList: true }), this.init();
      }
      hostUpdated() {
        this.firstUpdated || (this.slotNames.forEach(this.initSlot), this.firstUpdated = true);
      }
      hostDisconnected() {
        this.mo.disconnect();
      }
      hasSlotted(...t15) {
        return t15.length ? t15.some((e24) => this.nodes.get(e24)?.hasContent ?? false) : (this.logger.warn("Please provide at least one slot name for which to search."), false);
      }
      getSlotted(...t15) {
        return t15.length ? t15.flatMap((e24) => this.nodes.get(e24)?.elements ?? []) : this.nodes.get(d6.anonymous)?.elements ?? [];
      }
      onSlotChange(t15) {
        let e24 = t15.target.name;
        this.initSlot(e24), this.host.requestUpdate();
      }
      async onMutation(t15) {
        let e24 = [];
        for (let { addedNodes: o24, removedNodes: s23 } of t15)
          for (let n24 of [...o24, ...s23])
            n24 instanceof HTMLElement && n24.slot && (this.initSlot(n24.slot), e24.push(n24.slot));
        e24.length && this.host.requestUpdate();
      }
      getChildrenForSlot(t15) {
        return Array.from(this.host.children).filter(p5(t15));
      }
      initSlot(t15) {
        let e24 = t15 || d6.anonymous, o24 = this.nodes.get(e24)?.slot?.assignedElements?.() ?? this.getChildrenForSlot(e24), s23 = t15 ? `slot[name="${t15}"]` : "slot:not([name])", n24 = this.host.shadowRoot?.querySelector?.(s23) ?? null, r21 = !!o24.length;
        this.nodes.set(e24, { elements: o24, name: t15 ?? "", hasContent: r21, slot: n24 }), this.logger.log(t15, r21);
      }
      init() {
        this.nodes.clear(), this.slotNames.forEach(this.initSlot), Object.values(this.deprecations).forEach(this.initSlot), this.host.requestUpdate();
      }
    }, "d");
    l11 = d6;
    l11.anonymous = Symbol("anonymous slot"), a9([o6], l11.prototype, "onSlotChange", 1), a9([o6], l11.prototype, "onMutation", 1), a9([o6], l11.prototype, "initSlot", 1), a9([o6], l11.prototype, "init", 1);
  }
});

// node_modules/@patternfly/pfe-accordion/pfe-accordion-header.js
var v2, m6, t6, u5, f4, M2, l12, o11;
var init_pfe_accordion_header = __esm({
  "node_modules/@patternfly/pfe-accordion/pfe-accordion-header.js"() {
    init_lit();
    init_decorators();
    init_static_html();
    init_core();
    init_decorators2();
    init_random();
    init_deprecatedCustomEvent();
    init_slot_controller();
    init_logger();
    init_lit();
    init_pfe_icon();
    v2 = Object.defineProperty;
    m6 = Object.getOwnPropertyDescriptor;
    t6 = /* @__PURE__ */ __name((a20, n24, e24, r21) => {
      for (var c21 = r21 > 1 ? void 0 : r21 ? m6(n24, e24) : n24, d13 = a20.length - 1, p22; d13 >= 0; d13--)
        (p22 = a20[d13]) && (c21 = (r21 ? p22(n24, e24, c21) : p22(c21)) || c21);
      return r21 && c21 && v2(n24, e24, c21), c21;
    }, "t");
    u5 = i`:host{transition-property:box-shadow,border;transition-timing-function:var(--pfe-theme--animation-timing,cubic-bezier(0.465,0.183,0.153,0.946));transition-duration:calc(var(--pfe-theme--animation-speed, .3s) / 2)}:host(.animating),:host([expanded]){background-color:var(--pfe-accordion--BackgroundColor--expanded,var(--pfe-theme--color--surface--lightest,#fff));--pfe-accordion--Color:var(--pfe-accordion--Color--expanded, var(--pfe-broadcasted--text, #3c3f42));--pfe-accordion--accent:var(--pfe-accordion--accent--expanded, var(--pfe-theme--color--ui-accent, #06c))}:host([expanded]:not(.animating)){--pfe-accordion--BoxShadow:var(--pfe-accordion--BoxShadow--expanded, 0 5px 4px rgba(140, 140, 140, 0.35))}:host([on=dark].animating),:host([on=dark][expanded]){background-color:var(--pfe-accordion--BackgroundColor--expanded,rgba(247,247,249,.1));--pfe-accordion--Color:var(--pfe-accordion--Color--expanded, var(--pfe-broadcasted--text--on-dark, #fff));--pfe-accordion--accent:var(--pfe-accordion--accent--expanded, var(--pfe-theme--color--ui-accent--on-dark, #73bcf7))}:host([expanded]:not(.animating)){--pfe-accordion--BoxShadow:var(--pfe-accordion--BoxShadow--expanded, none)}:host([on=saturated].animating),:host([on=saturated][expanded]){background-color:var(--pfe-accordion--BackgroundColor--expanded,rgba(0,0,0,.2));--pfe-accordion--Color:var(--pfe-accordion--Color--expanded, var(--pfe-broadcasted--text--on-saturated, #fff));--pfe-accordion--accent:var(--pfe-accordion--accent--expanded, var(--pfe-theme--color--ui-accent--on-saturated, #fff))}:host([expanded]:not(.animating)){--pfe-accordion--BoxShadow:var(--pfe-accordion--BoxShadow--expanded, none)}:host{position:relative;display:block;outline:0;box-sizing:border-box;color:var(--pfe-accordion--Color,var(--pfe-broadcasted--text,#3c3f42));box-shadow:var(--pfe-accordion--BoxShadow,0 5px 4px transparent);--pfe-icon--color:var(--pfe-accordion--Color, var(--pfe-broadcasted--text, #3c3f42));--pfe-icon--size:14px}:host([hidden]){display:none}:host *,:host ::after,:host ::before{box-sizing:border-box}#heading{margin:0}.pf-c-accordion__toggle{cursor:pointer;outline:0;position:relative;width:100%;margin:0;display:flex;align-items:center;justify-content:flex-start;gap:calc(var(--pfe-theme--container-padding,1rem) * 1.5);padding:var(--pfe-accordion--Padding,var(--pfe-theme--container-padding,1rem) calc(var(--pfe-theme--container-padding,1rem) * 1.5));background-color:transparent;color:var(--pfe-accordion--Color,var(--pfe-broadcasted--text,#3c3f42));text-align:left;font-family:var(--pfe-theme--font-family--heading, "Red Hat Display", "RedHatDisplay", "Overpass", Overpass, Arial, sans-serif);font-size:var(--pfe-accordion--FontSize--header, var(--pf-global--FontSize--xl, 1.25rem));font-weight:var(--pfe-accordion--FontWeight--header,var(--pfe-theme--font-weight--normal,400));text-align:var(--pfe-accordion--TextAlign,left);line-height:var(--pfe-theme--line-height, 1.5);--_typography-offset:calc((1em * var(--pfe-theme--line-height, 1.5) - 1em) / 2);border-style:var(--pfe-theme--surface--border-style,solid);border-width:var(--pfe-accordion--BorderWidth,var(--pfe-theme--surface--border-width,1px));border-color:var(--pfe-accordion--BorderColor,var(--pfe-theme--color--surface--border,#d2d2d2));border-right-color:transparent;border-left-color:transparent}.pf-c-accordion__toggle::before{position:absolute;content:"";top:-2px;left:-2px;width:calc(100% + var(--pfe-theme--ui--border-width--active,3px));height:calc(100% + var(--pfe-theme--ui--border-width--active,3px));border-radius:var(--pfe-theme--ui--border-radius,2px);border:var(--pfe-theme--ui--border-width--md,2px) var(--pfe-theme--ui--border-style,solid) transparent}.pf-c-accordion__toggle:focus::before{border-color:#6b9ff0}.pf-c-accordion__toggle:focus:not(:focus-visible)::before{border:unset}.pf-c-accordion__toggle .pf-c-accordion__toggle-icon{--_typography-offset:calc((1em * var(--pfe-theme--line-height, 1.5) - var(--pfe-icon--size, 14px)) / 2)}.pf-c-accordion__toggle .pf-c-accordion__toggle-text{margin-top:calc(-1 * var(--_typography-offset,5px));margin-bottom:calc(-1 * var(--_typography-offset,5px))}.pf-c-accordion__toggle .pf-c-accordion__toggle-icon{margin-top:calc(var(--_typography-offset,5px)/ 4)}:host(:not(:first-of-type)) .pf-c-accordion__toggle{border-top-width:0}.pf-c-accordion__toggle::after{position:absolute;content:"";top:-1px;left:-1px;bottom:-1px;background-color:var(--pfe-accordion--accent,transparent);width:calc(var(--pfe-accordion--accent--width,var(--pfe-theme--surface--border-width--active,3px)) - -1px);height:calc(100% - -1px - -1px);z-index:4;z-index:calc(var(--pfe-accordion--ZIndex,3) + 1)}.pf-c-accordion__toggle:active,.pf-c-accordion__toggle:hover,:host(:not([expanded])) .pf-c-accordion__toggle:focus{background-color:var(--pfe-accordion--BackgroundColor--active,var(--pfe-theme--color--surface--lighter,#f0f0f0));--pfe-accordion--Color:var(--pfe-accordion--Color--active, var(--pfe-broadcasted--text, #3c3f42))}:host(:not([expanded])) .pf-c-accordion__toggle:active,:host(:not([expanded])) .pf-c-accordion__toggle:focus,:host(:not([expanded])) .pf-c-accordion__toggle:hover{--pfe-accordion--accent:var(--pfe-accordion--accent--active, var(--pfe-theme--color--ui-accent, #06c))}:host([on=dark]) .pf-c-accordion__toggle:active,:host([on=dark]) .pf-c-accordion__toggle:hover,:host([on=dark]:not([expanded])) .pf-c-accordion__toggle:focus{background-color:var(--pfe-accordion--BackgroundColor--active,rgba(247,247,249,.1));--pfe-accordion--Color:var(--pfe-accordion--Color--active, var(--pfe-broadcasted--text, #3c3f42))}:host([on=dark]:not([expanded])) .pf-c-accordion__toggle:active,:host([on=dark]:not([expanded])) .pf-c-accordion__toggle:focus,:host([on=dark]:not([expanded])) .pf-c-accordion__toggle:hover{--pfe-accordion--accent:var(--pfe-accordion--accent--active, var(--pfe-theme--color--ui-accent--on-dark, #73bcf7))}:host([on=saturated]) .pf-c-accordion__toggle:active,:host([on=saturated]) .pf-c-accordion__toggle:hover,:host([on=saturated]:not([expanded])) .pf-c-accordion__toggle:focus{background-color:var(--pfe-accordion--BackgroundColor--active,rgba(0,0,0,.2));--pfe-accordion--Color:var(--pfe-accordion--Color--active, var(--pfe-broadcasted--text, #3c3f42))}:host([on=saturated]:not([expanded])) .pf-c-accordion__toggle:active,:host([on=saturated]:not([expanded])) .pf-c-accordion__toggle:focus,:host([on=saturated]:not([expanded])) .pf-c-accordion__toggle:hover{--pfe-accordion--accent:var(--pfe-accordion--accent--active, var(--pfe-theme--color--ui-accent--on-saturated, #fff))}:host(.animating) .pf-c-accordion__toggle,:host([expanded]) .pf-c-accordion__toggle{border-bottom-width:0}:host(.animating) .pf-c-accordion__toggle,:host([disclosure]:not([disclosure=false])) .pf-c-accordion__toggle,:host([expanded]) .pf-c-accordion__toggle{border-right-color:var(--pfe-accordion--BorderColor,var(--pfe-theme--color--surface--border,#d2d2d2));border-left-color:var(--pfe-accordion--BorderColor,var(--pfe-theme--color--surface--border,#d2d2d2))}:host([disclosure]:not([disclosure=false])) .pf-c-accordion__toggle{gap:calc(var(--pfe-theme--container-padding,1rem)/ 2);font-family:var(--pfe-theme--font-family, "Red Hat Text", "RedHatText", "Overpass", Overpass, Arial, sans-serif);font-size:var(--pfe-accordion--FontSize--header, var(--pf-global--FontSize--md, 1rem));font-weight:var(--pfe-accordion--FontWeight--header,var(--pfe-theme--font-weight--semi-bold,600))}.pf-c-accordion__toggle-wrapper{flex-grow:1;display:flex;align-items:center;justify-content:flex-start;gap:calc(var(--pfe-theme--container-padding,1rem) * 1.5)}.pf-c-accordion__toggle-text{max-width:var(--pfe-accordion--MaxWidth--content,80ch)}.pf-c-accordion__toggle-icon{align-self:flex-start;transition-property:transform;transition-duration:var(--pfe-theme--animation-speed, .3s);transition-timing-function:var(--pfe-theme--animation-timing,cubic-bezier(0.465,0.183,0.153,0.946))}:host([expanded]) .pf-c-accordion__toggle-icon{transform:rotate(90deg)}:host([disclosure]:not([disclosure=false])) .pf-c-accordion__toggle-icon{order:-1}.pf-c-accordion__toggle-accents{flex-grow:1}`;
    f4 = u5;
    M2 = /* @__PURE__ */ __name((a20) => a20 instanceof HTMLElement && !!a20.tagName.match(/P|^H[1-6]/), "M");
    l12 = /* @__PURE__ */ __name(class extends n10 {
      constructor(e24, r21) {
        super("change");
        this.expanded = e24;
        this.toggle = r21;
      }
    }, "l");
    o11 = /* @__PURE__ */ __name(class extends s4 {
      constructor() {
        super();
        this.expanded = false;
        this.headingText = "";
        this.headingTag = "h3";
        this.slots = new l11(this, "accents", null);
        this.logger = new n6(this);
        this.addEventListener("click", this._clickHandler);
      }
      get ariaExpandedState() {
        return String(!!this.expanded);
      }
      connectedCallback() {
        super.connectedCallback(), this.hidden = true, this.id || (this.id = n11("pfe-accordion"));
      }
      async _init() {
        let e24 = await this._getHeaderElement();
        e24 !== this._generatedHtag && (this._generatedHtag = void 0), this.headingTag = e24?.tagName.toLowerCase() ?? "h3", this.headingText = e24?.textContent?.trim() ?? "", this.hidden = false;
      }
      render() {
        let e24 = o10(this.headingTag);
        return n13`
      <${e24} id="heading">${y`<button id="button" aria-expanded="${this.ariaExpandedState}" class="pf-c-accordion__toggle"><span class="pf-c-accordion__toggle-wrapper"><span class="pf-c-accordion__toggle-text" part="text">${this.headingText || y`<slot></slot>`} </span>${this.slots.hasSlotted("accents") ? y`<span class="pf-c-accordion__toggle-accents" part="accents"><slot name="accents"></slot></span>` : ""}</span><pfe-icon icon="web-icon-caret-thin-right" on-fail="collapse" part="icon" class="pf-c-accordion__toggle-icon"></pfe-icon></button>`}
      </${e24}>
    `;
      }
      disconnectedCallback() {
        super.disconnectedCallback(), this.removeEventListener("click", this._clickHandler);
      }
      async _getHeaderElement() {
        if (await this.updateComplete, !this.firstElementChild && !this.firstChild)
          return void this.logger.warn("No header content provided");
        if (this.firstElementChild) {
          let [e24, ...r21] = this.slots.getSlotted().filter(M2);
          if (e24)
            r21.length && this.logger.warn("Heading currently only supports 1 tag; extra tags will be ignored.");
          else
            return void this.logger.warn("No heading information was provided.");
          return e24;
        } else
          return this._generatedHtag || this.logger.warn("Header should contain at least 1 heading tag for correct semantics."), this._generatedHtag = document.createElement("h3"), this.firstChild?.nodeType === Node.TEXT_NODE ? this._generatedHtag.textContent = this.firstChild.textContent : this._generatedHtag.textContent = this.textContent, this._generatedHtag;
      }
      _clickHandler() {
        let e24 = !this.expanded;
        this.dispatchEvent(new l12(e24, this)), this.dispatchEvent(n12("pfe-accordion:change", { expanded: e24, toggle: this }));
      }
      _expandedChanged() {
        this.button?.setAttribute("aria-expanded", this.ariaExpandedState);
      }
    }, "o");
    o11.version = "2.0.0-next.4", o11.styles = [f4], o11.shadowRootOptions = { ...s4.shadowRootOptions, delegatesFocus: true }, t6([e5({ attribute: "aria-controls", reflect: true })], o11.prototype, "ariaControls", 2), t6([e5({ type: String, reflect: true })], o11.prototype, "disclosure", 2), t6([p3, e5({ type: Boolean, reflect: true })], o11.prototype, "expanded", 2), t6([e5({ reflect: true, attribute: "heading-text" })], o11.prototype, "headingText", 2), t6([e5({ reflect: true, attribute: "heading-tag" })], o11.prototype, "headingTag", 2), t6([x2(), e5({ reflect: true })], o11.prototype, "on", 2), t6([i4(".pf-c-accordion__toggle")], o11.prototype, "button", 2), t6([c6()], o11.prototype, "_init", 1), t6([o6], o11.prototype, "_getHeaderElement", 1), t6([o6], o11.prototype, "_clickHandler", 1), o11 = t6([e4("pfe-accordion-header"), d4()], o11);
  }
});

// node_modules/@patternfly/pfe-collapse/pfe-collapse-panel.js
var u6, f5, r11, v3, c9, p6, m7, i13;
var init_pfe_collapse_panel = __esm({
  "node_modules/@patternfly/pfe-collapse/pfe-collapse-panel.js"() {
    init_lit();
    init_decorators();
    init_core();
    init_random();
    init_decorators2();
    init_deprecatedCustomEvent();
    init_lit();
    u6 = Object.defineProperty;
    f5 = Object.getOwnPropertyDescriptor;
    r11 = /* @__PURE__ */ __name((o24, a20, e24, t15) => {
      for (var n24 = t15 > 1 ? void 0 : t15 ? f5(a20, e24) : a20, s23 = o24.length - 1, l23; s23 >= 0; s23--)
        (l23 = o24[s23]) && (n24 = (t15 ? l23(a20, e24, n24) : l23(n24)) || n24);
      return t15 && n24 && u6(a20, e24, n24), n24;
    }, "r");
    v3 = i`:host{display:none;overflow:hidden;will-change:height}:host([expanded]){display:block;position:relative}:host(.animating){display:block;transition:height .3s ease-in-out}`;
    c9 = v3;
    p6 = /* @__PURE__ */ __name(class extends n10 {
      constructor(e24, t15) {
        super("animation-start");
        this.panel = e24;
        this.state = t15;
      }
    }, "p");
    m7 = /* @__PURE__ */ __name(class extends n10 {
      constructor(e24, t15) {
        super("animation-end");
        this.panel = e24;
        this.expanded = t15;
      }
    }, "m");
    i13 = /* @__PURE__ */ __name(class extends s4 {
      constructor() {
        super(...arguments);
        this.expanded = false;
      }
      get animates() {
        return this.animation !== "false";
      }
      connectedCallback() {
        super.connectedCallback(), this.expanded = false, this.id || (this.id = n11("pfe-collapse-panel"));
      }
      render() {
        return y`<slot></slot>`;
      }
      _expandedChanged(e24, t15) {
        t15 ? this._maybeAnimate("opening") : e24 && this._maybeAnimate("closing");
      }
      async _maybeAnimate(e24) {
        if (this.animates) {
          e24 === "opening" && await this.updateComplete;
          let { height: t15 } = this.getBoundingClientRect();
          this._fireAnimationEvent(e24);
          let n24 = [0, t15];
          e24 === "closing" && n24.reverse(), this._animate(...n24);
        }
      }
      _animate(e24, t15) {
        this.classList.add("animating"), this.style.height = `${e24}px`, requestAnimationFrame(() => {
          requestAnimationFrame(() => {
            this.style.height = `${t15}px`, this.classList.add("animating"), this.addEventListener("transitionend", this._transitionEndHandler, { once: true });
          });
        });
      }
      _transitionEndHandler(e24) {
        let t15 = e24.target;
        t15.style.height = "", t15.classList.remove("animating");
        let n24 = this, { expanded: s23 } = this;
        this.dispatchEvent(n12("pfe-collapse-panel:animation-end", { expanded: s23, panel: n24 })), this.dispatchEvent(new m7(this, s23));
      }
      _fireAnimationEvent(e24) {
        this.dispatchEvent(n12("pfe-collapse-panel:animation-start", { state: e24, panel: this })), this.dispatchEvent(new p6(this, e24));
      }
    }, "i");
    i13.version = "2.0.0-next.2", i13.styles = [c9], r11([p3, e5({ type: Boolean, reflect: true })], i13.prototype, "expanded", 2), r11([e5({ reflect: true })], i13.prototype, "animation", 2), i13 = r11([e4("pfe-collapse-panel"), d4()], i13);
  }
});

// node_modules/@patternfly/pfe-accordion/pfe-accordion-panel.js
var s7, l13, a10, x3, f6, o12;
var init_pfe_accordion_panel = __esm({
  "node_modules/@patternfly/pfe-accordion/pfe-accordion-panel.js"() {
    init_lit();
    init_decorators();
    init_decorators2();
    init_random();
    init_pfe_collapse_panel();
    init_lit();
    init_core();
    s7 = Object.defineProperty;
    l13 = Object.getOwnPropertyDescriptor;
    a10 = /* @__PURE__ */ __name((d13, r21, c21, n24) => {
      for (var e24 = n24 > 1 ? void 0 : n24 ? l13(r21, c21) : r21, i22 = d13.length - 1, p22; i22 >= 0; i22--)
        (p22 = d13[i22]) && (e24 = (n24 ? p22(r21, c21, e24) : p22(e24)) || e24);
      return n24 && e24 && s7(r21, c21, e24), e24;
    }, "a");
    x3 = i`:host{transition-property:box-shadow,border;transition-timing-function:var(--pfe-theme--animation-timing,cubic-bezier(0.465,0.183,0.153,0.946));transition-duration:calc(var(--pfe-theme--animation-speed, .3s) / 2)}:host(.animating),:host([expanded]){background-color:var(--pfe-accordion--BackgroundColor--expanded,var(--pfe-theme--color--surface--lightest,#fff));--pfe-accordion--Color:var(--pfe-accordion--Color--expanded, var(--pfe-broadcasted--text, #3c3f42));--pfe-accordion--accent:var(--pfe-accordion--accent--expanded, var(--pfe-theme--color--ui-accent, #06c))}:host([expanded]:not(.animating)){--pfe-accordion--BoxShadow:var(--pfe-accordion--BoxShadow--expanded, 0 5px 4px rgba(140, 140, 140, 0.35))}:host([on=dark].animating),:host([on=dark][expanded]){background-color:var(--pfe-accordion--BackgroundColor--expanded,rgba(247,247,249,.1));--pfe-accordion--Color:var(--pfe-accordion--Color--expanded, var(--pfe-broadcasted--text--on-dark, #fff));--pfe-accordion--accent:var(--pfe-accordion--accent--expanded, var(--pfe-theme--color--ui-accent--on-dark, #73bcf7))}:host([expanded]:not(.animating)){--pfe-accordion--BoxShadow:var(--pfe-accordion--BoxShadow--expanded, none)}:host([on=saturated].animating),:host([on=saturated][expanded]){background-color:var(--pfe-accordion--BackgroundColor--expanded,rgba(0,0,0,.2));--pfe-accordion--Color:var(--pfe-accordion--Color--expanded, var(--pfe-broadcasted--text--on-saturated, #fff));--pfe-accordion--accent:var(--pfe-accordion--accent--expanded, var(--pfe-theme--color--ui-accent--on-saturated, #fff))}:host([expanded]:not(.animating)){--pfe-accordion--BoxShadow:var(--pfe-accordion--BoxShadow--expanded, none)}:host{display:none;overflow:hidden;will-change:height;border-color:transparent;opacity:0;position:relative;box-sizing:border-box;width:100%;z-index:0;margin:0;padding:0;color:var(--pfe-accordion--Color,var(--pfe-broadcasted--text,#3c3f42));box-shadow:var(--pfe-accordion--BoxShadow,0 5px 4px transparent);box-sizing:border-box;border-style:var(--pfe-theme--surface--border-style,solid);border-color:var(--pfe-accordion--BorderColor,var(--pfe-theme--color--surface--border,#d2d2d2));border-width:var(--pfe-accordion--BorderWidth,var(--pfe-theme--surface--border-width,1px));border-top-width:0;border-bottom-width:0}:host *,:host ::after,:host ::before{box-sizing:border-box}:host ::slotted(*){--pfe-accordion--BoxShadow:none}:host::after{position:absolute;content:"";bottom:calc(-1 * var(--pfe-accordion--BorderWidth,var(--pfe-theme--surface--border-width,1px)));left:calc(-1 * var(--pfe-accordion--BorderWidth,var(--pfe-theme--surface--border-width,1px)));background-color:var(--pfe-accordion--accent,transparent);width:calc(var(--pfe-accordion--accent--width,var(--pfe-theme--surface--border-width--active,3px)) - calc(-1 * var(--pfe-accordion--BorderWidth,var(--pfe-theme--surface--border-width,1px))));height:calc(100% - calc(-1 * var(--pfe-accordion--BorderWidth,var(--pfe-theme--surface--border-width,1px))));z-index:calc(var(--pfe-accordion--ZIndex,3) + 1)}.pf-c-accordion__expanded-content{position:relative;display:block;width:100%;padding:var(--pfe-theme--container-spacer,1rem);display:inline-block;padding:var(--pfe-accordion--Padding,var(--pfe-theme--container-padding,1rem) calc(var(--pfe-theme--container-padding,1rem) * 1.5))}.pf-c-accordion__expanded-content::after{clear:both;content:"";display:table}:host([disclosure=true]) .pf-c-accordion__expanded-content{padding:var(--pfe-accordion__panel-container--Padding,0 calc(var(--pfe-theme--container-padding,1rem) * 3) calc(var(--pfe-theme--container-padding,1rem)) calc(var(--pfe-theme--container-padding,1rem) * 1.5))}:host(:not([full-width])) .pf-c-accordion__expanded-content{max-width:var(--pfe-accordion--MaxWidth--content,80ch)}:host(.animating){border-left-color:var(--pfe-accordion--accent,transparent);opacity:1}:host(.animating[hidden]),:host([expanded]:not(.animating)){margin-bottom:0;border-bottom-width:var(--pfe-accordion--BorderWidth,var(--pfe-theme--surface--border-width,1px));display:block!important;position:relative;opacity:1}:host([expanded]:not(.animating)){overflow:visible}:host{transition-property:box-shadow,border;transition-timing-function:var(--pfe-theme--animation-timing,cubic-bezier(0.465,0.183,0.153,0.946));transition-duration:calc(var(--pfe-theme--animation-speed, .3s) / 2)}:host(.animating),:host([expanded]){--pfe-accordion--BackgroundColor:var(--pfe-accordion--BackgroundColor--expanded, var(--pfe-theme--color--surface--lightest, #fff));--pfe-accordion--Color:var(--pfe-accordion--Color--expanded, var(--pfe-broadcasted--text, #3c3f42));--pfe-accordion--accent:var(--pfe-accordion--accent--expanded, var(--pfe-theme--color--ui-accent, #06c))}:host([expanded]:not(.animating)){--pfe-accordion--BoxShadow:var(--pfe-accordion--BoxShadow--expanded, 0 5px 4px rgba(140, 140, 140, 0.35))}:host([on=dark].animating),:host([on=dark][expanded]){--pfe-accordion--BackgroundColor:var(--pfe-accordion--BackgroundColor--expanded, rgba(247, 247, 249, 0.1));--pfe-accordion--Color:var(--pfe-accordion--Color--expanded, var(--pfe-broadcasted--text--on-dark, #fff));--pfe-accordion--accent:var(--pfe-accordion--accent--expanded, var(--pfe-theme--color--ui-accent--on-dark, #73bcf7))}:host([expanded]:not(.animating)){--pfe-accordion--BoxShadow:var(--pfe-accordion--BoxShadow--expanded, none)}:host([on=saturated].animating),:host([on=saturated][expanded]){--pfe-accordion--BackgroundColor:var(--pfe-accordion--BackgroundColor--expanded, rgba(0, 0, 0, 0.2));--pfe-accordion--Color:var(--pfe-accordion--Color--expanded, var(--pfe-broadcasted--text--on-saturated, #fff));--pfe-accordion--accent:var(--pfe-accordion--accent--expanded, var(--pfe-theme--color--ui-accent--on-saturated, #fff))}:host([expanded]:not(.animating)){--pfe-accordion--BoxShadow:var(--pfe-accordion--BoxShadow--expanded, none)}`;
    f6 = x3;
    o12 = /* @__PURE__ */ __name(class extends s4 {
      constructor() {
        super(...arguments);
        this.expanded = false;
      }
      connectedCallback() {
        super.connectedCallback(), this.id || (this.id = n11("pfe-accordion-panel")), this.setAttribute("role", "region");
      }
      render() {
        return y`<div tabindex="-1"><div id="container" class="pf-c-accordion__expanded-content" part="container"><slot></slot></div></div>`;
      }
    }, "o");
    o12.version = "2.0.0-next.4", o12.styles = [...i13.styles, f6], a10([e5({ type: String, reflect: true })], o12.prototype, "disclosure", 2), a10([e5({ type: Boolean, reflect: true })], o12.prototype, "expanded", 2), a10([e5({ attribute: "aria-labelledby", reflect: true })], o12.prototype, "ariaLabelledby", 2), a10([x2(), e5({ reflect: true })], o12.prototype, "on", 2), o12 = a10([e4("pfe-accordion-panel"), d4()], o12);
  }
});

// node_modules/@patternfly/pfe-accordion/pfe-accordion.js
var pfe_accordion_exports = {};
__export(pfe_accordion_exports, {
  AccordionCollapseEvent: () => h6,
  AccordionExpandEvent: () => p7,
  PfeAccordion: () => r12
});
function F(s23) {
  return s23 instanceof Element && s23.tagName.toLowerCase() === "pfe-accordion-panel";
}
var b2, _2, i14, y2, f7, p7, h6, z2, r12;
var init_pfe_accordion = __esm({
  "node_modules/@patternfly/pfe-accordion/pfe-accordion.js"() {
    init_lit();
    init_decorators();
    init_decorators2();
    init_core();
    init_deprecatedCustomEvent();
    init_logger();
    init_pfe_accordion_header();
    init_pfe_accordion_panel();
    init_lit();
    b2 = Object.defineProperty;
    _2 = Object.getOwnPropertyDescriptor;
    i14 = /* @__PURE__ */ __name((s23, d13, e24, a20) => {
      for (var t15 = a20 > 1 ? void 0 : a20 ? _2(d13, e24) : d13, n24 = s23.length - 1, o24; n24 >= 0; n24--)
        (o24 = s23[n24]) && (t15 = (a20 ? o24(d13, e24, t15) : o24(t15)) || t15);
      return a20 && t15 && b2(d13, e24, t15), t15;
    }, "i");
    y2 = i`:host{transition-property:box-shadow,border;transition-timing-function:var(--pfe-theme--animation-timing,cubic-bezier(0.465,0.183,0.153,0.946));transition-duration:calc(var(--pfe-theme--animation-speed, .3s) / 2)}:host(.animating),:host([expanded]){background-color:var(--pfe-accordion--BackgroundColor--expanded,var(--pfe-theme--color--surface--lightest,#fff));--pfe-accordion--Color:var(--pfe-accordion--Color--expanded, var(--pfe-broadcasted--text, #3c3f42));--pfe-accordion--accent:var(--pfe-accordion--accent--expanded, var(--pfe-theme--color--ui-accent, #06c))}:host([expanded]:not(.animating)){--pfe-accordion--BoxShadow:var(--pfe-accordion--BoxShadow--expanded, 0 5px 4px rgba(140, 140, 140, 0.35))}:host([on=dark].animating),:host([on=dark][expanded]){background-color:var(--pfe-accordion--BackgroundColor--expanded,rgba(247,247,249,.1));--pfe-accordion--Color:var(--pfe-accordion--Color--expanded, var(--pfe-broadcasted--text--on-dark, #fff));--pfe-accordion--accent:var(--pfe-accordion--accent--expanded, var(--pfe-theme--color--ui-accent--on-dark, #73bcf7))}:host([expanded]:not(.animating)){--pfe-accordion--BoxShadow:var(--pfe-accordion--BoxShadow--expanded, none)}:host([on=saturated].animating),:host([on=saturated][expanded]){background-color:var(--pfe-accordion--BackgroundColor--expanded,rgba(0,0,0,.2));--pfe-accordion--Color:var(--pfe-accordion--Color--expanded, var(--pfe-broadcasted--text--on-saturated, #fff));--pfe-accordion--accent:var(--pfe-accordion--accent--expanded, var(--pfe-theme--color--ui-accent--on-saturated, #fff))}:host([expanded]:not(.animating)){--pfe-accordion--BoxShadow:var(--pfe-accordion--BoxShadow--expanded, none)}:host{display:block;position:relative;overflow:hidden;margin:0;width:var(--pfe-accordion--Width,100%)}:host{overflow:visible}:host([hidden]),[hidden]{display:none!important}`;
    f7 = y2;
    __name(F, "F");
    p7 = /* @__PURE__ */ __name(class extends n10 {
      constructor(e24, a20) {
        super("expand");
        this.toggle = e24;
        this.panel = a20;
      }
    }, "p");
    h6 = /* @__PURE__ */ __name(class extends n10 {
      constructor(e24, a20) {
        super("collapse");
        this.toggle = e24;
        this.panel = a20;
      }
    }, "h");
    z2 = /^[0-9.]+(?<unit>[a-zA-Z]+)/g;
    r12 = /* @__PURE__ */ __name(class extends s4 {
      constructor() {
        super(...arguments);
        this.on = "light";
        this.history = false;
        this.expandedIndex = [];
        this._updateHistory = true;
        this.expandedSets = /* @__PURE__ */ new Set();
        this.initialized = false;
        this.logger = new n6(this);
        this.styles = getComputedStyle(this);
        this.transitionDuration = this.getAnimationDuration();
      }
      static isHeader(e24) {
        return e24 instanceof o11;
      }
      static isPanel(e24) {
        return e24 instanceof o12;
      }
      connectedCallback() {
        super.connectedCallback(), this.addEventListener("change", this._changeHandler), this.addEventListener("keydown", this._keydownHandler);
      }
      render() {
        return y`<slot></slot>`;
      }
      disconnectedCallback() {
        super.disconnectedCallback(), window.removeEventListener("popstate", this._updateStateFromURL);
      }
      async _init() {
        this.initialized || (this._manualDisclosure = this.getAttribute("disclosure"), await this.updateComplete, this.initialized = true), this.updateAccessibility(), this._updateStateFromURL();
      }
      _changeHandler(e24) {
        if (this.classList.contains("animating"))
          return;
        let a20 = this._getIndex(e24.target);
        e24.expanded ? this.expand(a20) : this.collapse(a20), this._updateURLHistory();
      }
      _expandHeader(e24) {
        let a20 = this._getIndex(e24);
        this.expandedSets.add(a20), e24.expanded = true;
      }
      async _expandPanel(e24) {
        if (!e24) {
          this.logger.error("Trying to expand a panel that doesn't exist.");
          return;
        }
        if (e24.expanded)
          return;
        e24.expanded = true, e24.hidden = false, await e24.updateComplete;
        let a20 = e24.getBoundingClientRect();
        this._animate(e24, 0, a20.height);
      }
      _collapseHeader(e24) {
        let a20 = this._getIndex(e24);
        this.expandedSets.delete(a20), e24.expanded = false;
      }
      async _collapsePanel(e24) {
        if (!e24) {
          this.logger.error("Trying to collapse a panel that doesn't exist");
          return;
        }
        if (await e24.updateComplete, !e24.expanded)
          return;
        let a20 = e24.getBoundingClientRect();
        e24.expanded = false, e24.hidden = true, this._animate(e24, a20.height, 0);
      }
      getAnimationDuration() {
        if ("computedStyleMap" in this)
          return this.computedStyleMap().get("transition-duration")?.to("ms").value;
        {
          let { transitionDuration: e24 } = this.styles, a20 = z2.exec(e24)?.groups;
          if (!a20)
            return 0;
          let t15 = parseFloat(e24);
          return a20.unit === "s" ? t15 * 1e3 : t15;
        }
      }
      async _animate(e24, a20, t15) {
        if (e24) {
          let n24 = e24.previousElementSibling, o24 = this.getAnimationDuration();
          o24 && (this.transitionDuration = o24);
          let v12 = this.transitionDuration ?? 0;
          n24?.classList.add("animating"), e24.classList.add("animating");
          let u19 = e24.animate({ height: [`${a20}px`, `${t15}px`] }, { duration: v12 });
          u19.play(), await u19.finished, n24?.classList.remove("animating"), e24.classList.remove("animating"), e24.style.removeProperty("height"), e24.hidden = !e24.expanded;
        }
      }
      async _keydownHandler(e24) {
        let a20 = e24.target;
        if (!r12.isHeader(a20))
          return;
        let t15;
        switch (e24.key) {
          case "ArrowDown":
            e24.preventDefault(), t15 = this._nextHeader();
            break;
          case "ArrowUp":
            e24.preventDefault(), t15 = this._previousHeader();
            break;
          case "Home":
            e24.preventDefault(), t15 = this._firstHeader();
            break;
          case "End":
            e24.preventDefault(), t15 = this._lastHeader();
            break;
          default:
            return;
        }
        t15?.focus?.();
      }
      _allHeaders() {
        return Array.from(this.children).filter(r12.isHeader);
      }
      _allPanels() {
        return Array.from(this.children).filter(r12.isPanel);
      }
      _panelForHeader(e24) {
        let a20 = e24.nextElementSibling;
        if (!!a20) {
          if (!F(a20)) {
            this.logger.error("Sibling element to a header needs to be a panel");
            return;
          }
          return a20;
        }
      }
      _previousHeader() {
        let e24 = this._allHeaders(), a20 = e24.findIndex((t15) => t15.matches(":focus,:focus-within")) - 1;
        return e24[(a20 + e24.length) % e24.length];
      }
      _nextHeader() {
        let e24 = this._allHeaders(), a20 = e24.findIndex((t15) => t15.matches(":focus,:focus-within")) + 1;
        return e24[a20 % e24.length];
      }
      _firstHeader() {
        return this._allHeaders()[0];
      }
      _lastHeader() {
        let e24 = this._allHeaders();
        return e24[e24.length - 1];
      }
      async _expandedIndexChanged(e24, a20) {
        await this.updateComplete, !(e24 === a20 || !Array.isArray(a20)) && [...a20].reverse().forEach((t15) => this.expand(t15 - 1));
      }
      _getIndex(e24) {
        return r12.isHeader(e24) ? this._allHeaders().findIndex((t15) => t15.id === e24.id) : r12.isPanel(e24) ? this._allPanels().findIndex((t15) => t15.id === e24.id) : (this.logger.warn("The _getIndex method expects to receive a header or panel element."), -1);
      }
      _getIndexesFromURL() {
        let e24 = new URLSearchParams(window.location.search);
        if (e24.has(this.id)) {
          let t15 = (e24.get(this.id) ?? "").split("-");
          return t15.length < 0 ? [] : t15.map((n24) => parseInt(n24.trim(), 10) - 1);
        }
      }
      _updateURLHistory() {
        if (!this.history || !this._updateHistory)
          return;
        if (!this.id) {
          this.logger.error("The history feature cannot update the URL without an ID added to the pfe-accordion tag.");
          return;
        }
        let e24 = Array.from(this.expandedSets, (t15) => t15 + 1).sort((t15, n24) => t15 - n24).join("-"), a20 = new URL(window.location.href);
        this.expandedSets.size > 0 ? a20.searchParams.set(this.id, e24) : a20.searchParams.delete(this.id), history.replaceState({}, "", a20.toString());
      }
      _updateStateFromURL() {
        let e24 = this._getIndexesFromURL() ?? [];
        this._updateHistory = false, e24.forEach((a20) => this.expand(a20)), this._updateHistory = true;
      }
      updateAccessibility() {
        let e24 = this._allHeaders();
        e24.forEach((a20) => {
          let t15 = this._panelForHeader(a20);
          t15 && (a20.setAttribute("aria-controls", t15.id), t15.setAttribute("aria-labelledby", a20.id), t15.hidden = !t15.expanded);
        }), e24.length === 1 ? this.disclosure = this._manualDisclosure ?? "true" : e24.length > 1 && (this.disclosure = "false");
      }
      toggle(e24) {
        this._allHeaders()[e24].expanded ? this.collapse(e24) : this.expand(e24);
      }
      expand(e24) {
        if (e24 == null)
          return;
        e24 = parseInt(`${e24}`, 10);
        let t15 = this._allHeaders()[e24];
        if (!t15)
          return;
        let n24 = this._panelForHeader(t15);
        !t15 || !n24 || (this._expandHeader(t15), this._expandPanel(n24), t15.focus(), this.dispatchEvent(new p7(t15, n24)), this.dispatchEvent(n12("pfe-accordion:expand", { toggle: t15, panel: n24 })));
      }
      expandAll() {
        let e24 = this._allHeaders(), a20 = this._allPanels();
        e24.forEach((t15) => this._expandHeader(t15)), a20.forEach((t15) => this._expandPanel(t15));
      }
      collapse(e24) {
        let a20 = this._allHeaders(), t15 = this._allPanels(), n24 = a20[e24], o24 = t15[e24];
        !n24 || !o24 || (this._collapseHeader(n24), this._collapsePanel(o24), this.dispatchEvent(new h6(n24, o24)), this.dispatchEvent(n12("pfe-accordion:collapse", { toggle: n24, panel: o24 })));
      }
      collapseAll() {
        let e24 = this._allHeaders(), a20 = this._allPanels();
        e24.forEach((t15) => this._collapseHeader(t15)), a20.forEach((t15) => this._collapsePanel(t15));
      }
    }, "r");
    r12.version = "2.0.0-next.4", r12.styles = [f7], i14([c5(), e5({ reflect: true, attribute: "color-palette" })], r12.prototype, "colorPalette", 2), i14([d3({ alias: "colorPalette", attribute: "color" })], r12.prototype, "color", 2), i14([x2(), e5({ reflect: true })], r12.prototype, "on", 2), i14([s5("pfe-accordion-header", "pfe-accordion-panel"), e5({ type: String, reflect: true })], r12.prototype, "disclosure", 2), i14([p3, e5({ type: Boolean })], r12.prototype, "history", 2), i14([p3, e5({ attribute: "expanded-index", converter: i8 })], r12.prototype, "expandedIndex", 2), i14([t3()], r12.prototype, "_updateHistory", 2), i14([c6()], r12.prototype, "_init", 1), i14([o6], r12.prototype, "_changeHandler", 1), i14([o6], r12.prototype, "_getIndexesFromURL", 1), i14([o6], r12.prototype, "_updateURLHistory", 1), i14([o6], r12.prototype, "_updateStateFromURL", 1), r12 = i14([e4("pfe-accordion"), d4()], r12);
  }
});

// node_modules/@lrnwebcomponents/code-sample/lib/themes/one-dark.js
var oneDark;
var init_one_dark = __esm({
  "node_modules/@lrnwebcomponents/code-sample/lib/themes/one-dark.js"() {
    init_lit();
    oneDark = y`
  <style>
    /*

  Atom One Dark by Daniel Gamage
  Original One Dark Syntax theme from https://github.com/atom/one-dark-syntax

  base:    #282c34
  mono-1:  #abb2bf
  mono-2:  #818896
  mono-3:  #5c6370
  hue-1:   #56b6c2
  hue-2:   #61aeee
  hue-3:   #c678dd
  hue-4:   #98c379
  hue-5:   #e06c75
  hue-5-2: #be5046
  hue-6:   #d19a66
  hue-6-2: #e6c07b

  */

    .hljs {
      display: block;
      overflow-x: auto;
      color: var(--code-sample-color, #abb2bf);
      background: var(--code-sample-background, #282c34);
    }

    .hljs-comment,
    .hljs-quote {
      color: #5c6370;
      font-style: italic;
    }

    .hljs-doctag,
    .hljs-keyword,
    .hljs-formula {
      color: #c678dd;
    }

    .hljs-section,
    .hljs-name,
    .hljs-selector-tag,
    .hljs-deletion,
    .hljs-subst,
    .hljs-tag {
      color: #e06c75;
    }

    .hljs-literal {
      color: #56b6c2;
    }

    .hljs-string,
    .hljs-regexp,
    .hljs-addition,
    .hljs-attribute,
    .hljs-meta-string {
      color: #98c379;
    }

    .hljs-built_in,
    .hljs-class .hljs-title {
      color: #e6c07b;
    }

    .hljs-attr,
    .hljs-variable,
    .hljs-template-variable,
    .hljs-type,
    .hljs-selector-class,
    .hljs-selector-attr,
    .hljs-selector-pseudo,
    .hljs-number {
      color: #d19a66;
    }

    .hljs-symbol,
    .hljs-bullet,
    .hljs-link,
    .hljs-meta,
    .hljs-selector-id,
    .hljs-title {
      color: #61aeee;
    }

    .hljs-emphasis {
      font-style: italic;
    }

    .hljs-strong {
      font-weight: bold;
    }

    .hljs-link {
      text-decoration: underline;
    }

    .hljs-params {
      color: #e6c07b;
    }
  </style>
`;
  }
});

// node_modules/@lrnwebcomponents/code-sample/lib/highlightjs/highlight.js
function escape(value) {
  return value.replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;");
}
function tag(node) {
  return node.nodeName.toLowerCase();
}
function testRe(re, lexeme) {
  var match = re && re.exec(lexeme);
  return match && match.index === 0;
}
function isNotHighlighted(language) {
  return noHighlightRe.test(language);
}
function blockLanguage(block2) {
  var i22, match, length, _class;
  var classes = block2.className + " ";
  classes += block2.parentNode ? block2.parentNode.className : "";
  match = languagePrefixRe.exec(classes);
  if (match) {
    return getLanguage(match[1]) ? match[1] : "no-highlight";
  }
  classes = classes.split(/\s+/);
  for (i22 = 0, length = classes.length; i22 < length; i22++) {
    _class = classes[i22];
    if (isNotHighlighted(_class) || getLanguage(_class)) {
      return _class;
    }
  }
}
function inherit(parent) {
  var key;
  var result = {};
  var objects = Array.prototype.slice.call(arguments, 1);
  for (key in parent)
    result[key] = parent[key];
  objects.forEach(function(obj) {
    for (key in obj)
      result[key] = obj[key];
  });
  return result;
}
function nodeStream(node) {
  var result = [];
  (/* @__PURE__ */ __name(function _nodeStream(node2, offset2) {
    for (var child = node2.firstChild; child; child = child.nextSibling) {
      if (child.nodeType === 3)
        offset2 += child.nodeValue.length;
      else if (child.nodeType === 1) {
        result.push({
          event: "start",
          offset: offset2,
          node: child
        });
        offset2 = _nodeStream(child, offset2);
        if (!tag(child).match(/br|hr|img|input/)) {
          result.push({
            event: "stop",
            offset: offset2,
            node: child
          });
        }
      }
    }
    return offset2;
  }, "_nodeStream"))(node, 0);
  return result;
}
function mergeStreams(original, highlighted, value) {
  var processed = 0;
  var result = "";
  var nodeStack = [];
  function selectStream() {
    if (!original.length || !highlighted.length) {
      return original.length ? original : highlighted;
    }
    if (original[0].offset !== highlighted[0].offset) {
      return original[0].offset < highlighted[0].offset ? original : highlighted;
    }
    return highlighted[0].event === "start" ? original : highlighted;
  }
  __name(selectStream, "selectStream");
  function open(node) {
    function attr_str(a20) {
      return " " + a20.nodeName + '="' + escape(a20.value).replace('"', "&quot;") + '"';
    }
    __name(attr_str, "attr_str");
    result += "<" + tag(node) + ArrayProto.map.call(node.attributes, attr_str).join("") + ">";
  }
  __name(open, "open");
  function close(node) {
    result += "</" + tag(node) + ">";
  }
  __name(close, "close");
  function render(event) {
    (event.event === "start" ? open : close)(event.node);
  }
  __name(render, "render");
  while (original.length || highlighted.length) {
    var stream = selectStream();
    result += escape(value.substring(processed, stream[0].offset));
    processed = stream[0].offset;
    if (stream === original) {
      nodeStack.reverse().forEach(close);
      do {
        render(stream.splice(0, 1)[0]);
        stream = selectStream();
      } while (stream === original && stream.length && stream[0].offset === processed);
      nodeStack.reverse().forEach(open);
    } else {
      if (stream[0].event === "start") {
        nodeStack.push(stream[0].node);
      } else {
        nodeStack.pop();
      }
      render(stream.splice(0, 1)[0]);
    }
  }
  return result + escape(value.substr(processed));
}
function expand_mode(mode) {
  if (mode.variants && !mode.cached_variants) {
    mode.cached_variants = mode.variants.map(function(variant) {
      return inherit(mode, { variants: null }, variant);
    });
  }
  return mode.cached_variants || mode.endsWithParent && [inherit(mode)] || [mode];
}
function compileLanguage(language) {
  function reStr(re) {
    return re && re.source || re;
  }
  __name(reStr, "reStr");
  function langRe(value, global2) {
    return new RegExp(
      reStr(value),
      "m" + (language.case_insensitive ? "i" : "") + (global2 ? "g" : "")
    );
  }
  __name(langRe, "langRe");
  function joinRe(regexps, separator) {
    var backreferenceRe = /\[(?:[^\\\]]|\\.)*\]|\(\??|\\([1-9][0-9]*)|\\./;
    var numCaptures = 0;
    var ret = "";
    for (var i22 = 0; i22 < regexps.length; i22++) {
      var offset2 = numCaptures;
      var re = reStr(regexps[i22]);
      if (i22 > 0) {
        ret += separator;
      }
      while (re.length > 0) {
        var match = backreferenceRe.exec(re);
        if (match == null) {
          ret += re;
          break;
        }
        ret += re.substring(0, match.index);
        re = re.substring(match.index + match[0].length);
        if (match[0][0] == "\\" && match[1]) {
          ret += "\\" + String(Number(match[1]) + offset2);
        } else {
          ret += match[0];
          if (match[0] == "(") {
            numCaptures++;
          }
        }
      }
    }
    return ret;
  }
  __name(joinRe, "joinRe");
  function compileMode(mode, parent) {
    if (mode.compiled)
      return;
    mode.compiled = true;
    mode.keywords = mode.keywords || mode.beginKeywords;
    if (mode.keywords) {
      var compiled_keywords = {};
      var flatten = /* @__PURE__ */ __name(function(className, str) {
        if (language.case_insensitive) {
          str = str.toLowerCase();
        }
        str.split(" ").forEach(function(kw) {
          var pair = kw.split("|");
          compiled_keywords[pair[0]] = [
            className,
            pair[1] ? Number(pair[1]) : 1
          ];
        });
      }, "flatten");
      if (typeof mode.keywords === "string") {
        flatten("keyword", mode.keywords);
      } else {
        objectKeys(mode.keywords).forEach(function(className) {
          flatten(className, mode.keywords[className]);
        });
      }
      mode.keywords = compiled_keywords;
    }
    mode.lexemesRe = langRe(mode.lexemes || /\w+/, true);
    if (parent) {
      if (mode.beginKeywords) {
        mode.begin = "\\b(" + mode.beginKeywords.split(" ").join("|") + ")\\b";
      }
      if (!mode.begin)
        mode.begin = /\B|\b/;
      mode.beginRe = langRe(mode.begin);
      if (mode.endSameAsBegin)
        mode.end = mode.begin;
      if (!mode.end && !mode.endsWithParent)
        mode.end = /\B|\b/;
      if (mode.end)
        mode.endRe = langRe(mode.end);
      mode.terminator_end = reStr(mode.end) || "";
      if (mode.endsWithParent && parent.terminator_end)
        mode.terminator_end += (mode.end ? "|" : "") + parent.terminator_end;
    }
    if (mode.illegal)
      mode.illegalRe = langRe(mode.illegal);
    if (mode.relevance == null)
      mode.relevance = 1;
    if (!mode.contains) {
      mode.contains = [];
    }
    mode.contains = Array.prototype.concat.apply(
      [],
      mode.contains.map(function(c21) {
        return expand_mode(c21 === "self" ? mode : c21);
      })
    );
    mode.contains.forEach(function(c21) {
      compileMode(c21, mode);
    });
    if (mode.starts) {
      compileMode(mode.starts, parent);
    }
    var terminators = mode.contains.map(function(c21) {
      return c21.beginKeywords ? "\\.?(?:" + c21.begin + ")\\.?" : c21.begin;
    }).concat([mode.terminator_end, mode.illegal]).map(reStr).filter(Boolean);
    mode.terminators = terminators.length ? langRe(joinRe(terminators, "|"), true) : {
      exec: function() {
        return null;
      }
    };
  }
  __name(compileMode, "compileMode");
  compileMode(language);
}
function highlight(name, value, ignore_illegals, continuation) {
  function escapeRe(value2) {
    return new RegExp(value2.replace(/[-\/\\^$*+?.()|[\]{}]/g, "\\$&"), "m");
  }
  __name(escapeRe, "escapeRe");
  function subMode(lexeme, mode) {
    var i22, length;
    for (i22 = 0, length = mode.contains.length; i22 < length; i22++) {
      if (testRe(mode.contains[i22].beginRe, lexeme)) {
        if (mode.contains[i22].endSameAsBegin) {
          mode.contains[i22].endRe = escapeRe(
            mode.contains[i22].beginRe.exec(lexeme)[0]
          );
        }
        return mode.contains[i22];
      }
    }
  }
  __name(subMode, "subMode");
  function endOfMode(mode, lexeme) {
    if (testRe(mode.endRe, lexeme)) {
      while (mode.endsParent && mode.parent) {
        mode = mode.parent;
      }
      return mode;
    }
    if (mode.endsWithParent) {
      return endOfMode(mode.parent, lexeme);
    }
  }
  __name(endOfMode, "endOfMode");
  function isIllegal(lexeme, mode) {
    return !ignore_illegals && testRe(mode.illegalRe, lexeme);
  }
  __name(isIllegal, "isIllegal");
  function keywordMatch(mode, match2) {
    var match_str = language.case_insensitive ? match2[0].toLowerCase() : match2[0];
    return mode.keywords.hasOwnProperty(match_str) && mode.keywords[match_str];
  }
  __name(keywordMatch, "keywordMatch");
  function buildSpan(classname, insideSpan, leaveOpen, noPrefix) {
    var classPrefix = noPrefix ? "" : options.classPrefix, openSpan = '<span class="' + classPrefix, closeSpan = leaveOpen ? "" : spanEndTag;
    openSpan += classname + '">';
    return openSpan + insideSpan + closeSpan;
  }
  __name(buildSpan, "buildSpan");
  function processKeywords() {
    var keyword_match, last_index, match2, result2;
    if (!top2.keywords)
      return escape(mode_buffer);
    result2 = "";
    last_index = 0;
    top2.lexemesRe.lastIndex = 0;
    match2 = top2.lexemesRe.exec(mode_buffer);
    while (match2) {
      result2 += escape(mode_buffer.substring(last_index, match2.index));
      keyword_match = keywordMatch(top2, match2);
      if (keyword_match) {
        relevance += keyword_match[1];
        result2 += buildSpan(keyword_match[0], escape(match2[0]));
      } else {
        result2 += escape(match2[0]);
      }
      last_index = top2.lexemesRe.lastIndex;
      match2 = top2.lexemesRe.exec(mode_buffer);
    }
    return result2 + escape(mode_buffer.substr(last_index));
  }
  __name(processKeywords, "processKeywords");
  function processSubLanguage() {
    var explicit = typeof top2.subLanguage === "string";
    if (explicit && !languages[top2.subLanguage]) {
      return escape(mode_buffer);
    }
    var result2 = explicit ? highlight(
      top2.subLanguage,
      mode_buffer,
      true,
      continuations[top2.subLanguage]
    ) : highlightAuto(
      mode_buffer,
      top2.subLanguage.length ? top2.subLanguage : void 0
    );
    if (top2.relevance > 0) {
      relevance += result2.relevance;
    }
    if (explicit) {
      continuations[top2.subLanguage] = result2.top;
    }
    return buildSpan(result2.language, result2.value, false, true);
  }
  __name(processSubLanguage, "processSubLanguage");
  function processBuffer() {
    result += top2.subLanguage != null ? processSubLanguage() : processKeywords();
    mode_buffer = "";
  }
  __name(processBuffer, "processBuffer");
  function startNewMode(mode) {
    result += mode.className ? buildSpan(mode.className, "", true) : "";
    top2 = Object.create(mode, { parent: { value: top2 } });
  }
  __name(startNewMode, "startNewMode");
  function processLexeme(buffer, lexeme) {
    mode_buffer += buffer;
    if (lexeme == null) {
      processBuffer();
      return 0;
    }
    var new_mode = subMode(lexeme, top2);
    if (new_mode) {
      if (new_mode.skip) {
        mode_buffer += lexeme;
      } else {
        if (new_mode.excludeBegin) {
          mode_buffer += lexeme;
        }
        processBuffer();
        if (!new_mode.returnBegin && !new_mode.excludeBegin) {
          mode_buffer = lexeme;
        }
      }
      startNewMode(new_mode, lexeme);
      return new_mode.returnBegin ? 0 : lexeme.length;
    }
    var end_mode = endOfMode(top2, lexeme);
    if (end_mode) {
      var origin = top2;
      if (origin.skip) {
        mode_buffer += lexeme;
      } else {
        if (!(origin.returnEnd || origin.excludeEnd)) {
          mode_buffer += lexeme;
        }
        processBuffer();
        if (origin.excludeEnd) {
          mode_buffer = lexeme;
        }
      }
      do {
        if (top2.className) {
          result += spanEndTag;
        }
        if (!top2.skip && !top2.subLanguage) {
          relevance += top2.relevance;
        }
        top2 = top2.parent;
      } while (top2 !== end_mode.parent);
      if (end_mode.starts) {
        if (end_mode.endSameAsBegin) {
          end_mode.starts.endRe = end_mode.endRe;
        }
        startNewMode(end_mode.starts, "");
      }
      return origin.returnEnd ? 0 : lexeme.length;
    }
    if (isIllegal(lexeme, top2))
      throw new Error(
        'Illegal lexeme "' + lexeme + '" for mode "' + (top2.className || "<unnamed>") + '"'
      );
    mode_buffer += lexeme;
    return lexeme.length || 1;
  }
  __name(processLexeme, "processLexeme");
  var language = getLanguage(name);
  if (!language) {
    throw new Error('Unknown language: "' + name + '"');
  }
  compileLanguage(language);
  var top2 = continuation || language;
  var continuations = {};
  var result = "", current;
  for (current = top2; current !== language; current = current.parent) {
    if (current.className) {
      result = buildSpan(current.className, "", true) + result;
    }
  }
  var mode_buffer = "";
  var relevance = 0;
  try {
    var match, count, index = 0;
    while (true) {
      top2.terminators.lastIndex = index;
      match = top2.terminators.exec(value);
      if (!match)
        break;
      count = processLexeme(value.substring(index, match.index), match[0]);
      index = match.index + count;
    }
    processLexeme(value.substr(index));
    for (current = top2; current.parent; current = current.parent) {
      if (current.className) {
        result += spanEndTag;
      }
    }
    return {
      relevance,
      value: result,
      language: name,
      top: top2
    };
  } catch (e24) {
    if (e24.message && e24.message.indexOf("Illegal") !== -1) {
      return {
        relevance: 0,
        value: escape(value)
      };
    } else {
      throw e24;
    }
  }
}
function highlightAuto(text, languageSubset) {
  languageSubset = languageSubset || options.languages || objectKeys(languages);
  var result = {
    relevance: 0,
    value: escape(text)
  };
  var second_best = result;
  languageSubset.filter(getLanguage).filter(autoDetection).forEach(function(name) {
    var current = highlight(name, text, false);
    current.language = name;
    if (current.relevance > second_best.relevance) {
      second_best = current;
    }
    if (current.relevance > result.relevance) {
      second_best = result;
      result = current;
    }
  });
  if (second_best.language) {
    result.second_best = second_best;
  }
  return result;
}
function fixMarkup(value) {
  return !(options.tabReplace || options.useBR) ? value : value.replace(fixMarkupRe, function(match, p1) {
    if (options.useBR && match === "\n") {
      return "<br>";
    } else if (options.tabReplace) {
      return p1.replace(/\t/g, options.tabReplace);
    }
    return "";
  });
}
function buildClassName(prevClassName, currentLang, resultLang) {
  var language = currentLang ? aliases[currentLang] : resultLang, result = [prevClassName.trim()];
  if (!prevClassName.match(/\bhljs\b/)) {
    result.push("hljs");
  }
  if (prevClassName.indexOf(language) === -1) {
    result.push(language);
  }
  return result.join(" ").trim();
}
function highlightBlock(block2) {
  var node, originalStream, result, resultNode, text;
  var language = blockLanguage(block2);
  if (isNotHighlighted(language))
    return;
  if (options.useBR) {
    node = document.createElementNS("http://www.w3.org/1999/xhtml", "div");
    node.innerHTML = block2.innerHTML.replace(/\n/g, "").replace(/<br[ \/]*>/g, "\n");
  } else {
    node = block2;
  }
  text = node.textContent;
  result = language ? highlight(language, text, true) : highlightAuto(text);
  originalStream = nodeStream(node);
  if (originalStream.length) {
    resultNode = document.createElementNS(
      "http://www.w3.org/1999/xhtml",
      "div"
    );
    resultNode.innerHTML = result.value;
    result.value = mergeStreams(originalStream, nodeStream(resultNode), text);
  }
  result.value = fixMarkup(result.value);
  block2.innerHTML = result.value;
  block2.className = buildClassName(block2.className, language, result.language);
  block2.result = {
    language: result.language,
    re: result.relevance
  };
  if (result.second_best) {
    block2.second_best = {
      language: result.second_best.language,
      re: result.second_best.relevance
    };
  }
}
function configure(user_options) {
  options = inherit(options, user_options);
}
function initHighlighting() {
  if (initHighlighting.called)
    return;
  initHighlighting.called = true;
  var blocks = document.querySelectorAll("pre code");
  ArrayProto.forEach.call(blocks, highlightBlock);
}
function initHighlightingOnLoad() {
  addEventListener("DOMContentLoaded", initHighlighting, false);
  addEventListener("load", initHighlighting, false);
}
function registerLanguage(name, language) {
  var lang = languages[name] = language(hljs);
  if (lang.aliases) {
    lang.aliases.forEach(function(alias) {
      aliases[alias] = name;
    });
  }
}
function listLanguages() {
  return objectKeys(languages);
}
function getLanguage(name) {
  name = (name || "").toLowerCase();
  return languages[name] || languages[aliases[name]];
}
function autoDetection(name) {
  var lang = getLanguage(name);
  return lang && !lang.disableAutodetect;
}
var hljs, ArrayProto, objectKeys, languages, aliases, noHighlightRe, languagePrefixRe, fixMarkupRe, spanEndTag, options;
var init_highlight = __esm({
  "node_modules/@lrnwebcomponents/code-sample/lib/highlightjs/highlight.js"() {
    hljs = {};
    ArrayProto = [];
    objectKeys = Object.keys;
    languages = {};
    aliases = {};
    noHighlightRe = /^(no-?highlight|plain|text)$/i;
    languagePrefixRe = /\blang(?:uage)?-([\w-]+)\b/i;
    fixMarkupRe = /((^(<[^>]+>|\t|)+|(?:\n)))/gm;
    spanEndTag = "</span>";
    options = {
      classPrefix: "hljs-",
      tabReplace: null,
      useBR: false,
      languages: void 0
    };
    __name(escape, "escape");
    __name(tag, "tag");
    __name(testRe, "testRe");
    __name(isNotHighlighted, "isNotHighlighted");
    __name(blockLanguage, "blockLanguage");
    __name(inherit, "inherit");
    __name(nodeStream, "nodeStream");
    __name(mergeStreams, "mergeStreams");
    __name(expand_mode, "expand_mode");
    __name(compileLanguage, "compileLanguage");
    __name(highlight, "highlight");
    __name(highlightAuto, "highlightAuto");
    __name(fixMarkup, "fixMarkup");
    __name(buildClassName, "buildClassName");
    __name(highlightBlock, "highlightBlock");
    __name(configure, "configure");
    __name(initHighlighting, "initHighlighting");
    __name(initHighlightingOnLoad, "initHighlightingOnLoad");
    __name(registerLanguage, "registerLanguage");
    __name(listLanguages, "listLanguages");
    __name(getLanguage, "getLanguage");
    __name(autoDetection, "autoDetection");
    hljs.highlight = highlight;
    hljs.highlightAuto = highlightAuto;
    hljs.fixMarkup = fixMarkup;
    hljs.highlightBlock = highlightBlock;
    hljs.configure = configure;
    hljs.initHighlighting = initHighlighting;
    hljs.initHighlightingOnLoad = initHighlightingOnLoad;
    hljs.registerLanguage = registerLanguage;
    hljs.listLanguages = listLanguages;
    hljs.getLanguage = getLanguage;
    hljs.autoDetection = autoDetection;
    hljs.inherit = inherit;
    hljs.IDENT_RE = "[a-zA-Z]\\w*";
    hljs.UNDERSCORE_IDENT_RE = "[a-zA-Z_]\\w*";
    hljs.NUMBER_RE = "\\b\\d+(\\.\\d+)?";
    hljs.C_NUMBER_RE = "(-?)(\\b0[xX][a-fA-F0-9]+|(\\b\\d+(\\.\\d*)?|\\.\\d+)([eE][-+]?\\d+)?)";
    hljs.BINARY_NUMBER_RE = "\\b(0b[01]+)";
    hljs.RE_STARTERS_RE = "!|!=|!==|%|%=|&|&&|&=|\\*|\\*=|\\+|\\+=|,|-|-=|/=|/|:|;|<<|<<=|<=|<|===|==|=|>>>=|>>=|>=|>>>|>>|>|\\?|\\[|\\{|\\(|\\^|\\^=|\\||\\|=|\\|\\||~";
    hljs.BACKSLASH_ESCAPE = {
      begin: "\\\\[\\s\\S]",
      relevance: 0
    };
    hljs.APOS_STRING_MODE = {
      className: "string",
      begin: "'",
      end: "'",
      illegal: "\\n",
      contains: [hljs.BACKSLASH_ESCAPE]
    };
    hljs.QUOTE_STRING_MODE = {
      className: "string",
      begin: '"',
      end: '"',
      illegal: "\\n",
      contains: [hljs.BACKSLASH_ESCAPE]
    };
    hljs.PHRASAL_WORDS_MODE = {
      begin: /\b(a|an|the|are|I'm|isn't|don't|doesn't|won't|but|just|should|pretty|simply|enough|gonna|going|wtf|so|such|will|you|your|they|like|more)\b/
    };
    hljs.COMMENT = function(begin, end2, inherits) {
      var mode = hljs.inherit(
        {
          className: "comment",
          begin,
          end: end2,
          contains: []
        },
        inherits || {}
      );
      mode.contains.push(hljs.PHRASAL_WORDS_MODE);
      mode.contains.push({
        className: "doctag",
        begin: "(?:TODO|FIXME|NOTE|BUG|XXX):",
        relevance: 0
      });
      return mode;
    };
    hljs.C_LINE_COMMENT_MODE = hljs.COMMENT("//", "$");
    hljs.C_BLOCK_COMMENT_MODE = hljs.COMMENT("/\\*", "\\*/");
    hljs.HASH_COMMENT_MODE = hljs.COMMENT("#", "$");
    hljs.NUMBER_MODE = {
      className: "number",
      begin: hljs.NUMBER_RE,
      relevance: 0
    };
    hljs.C_NUMBER_MODE = {
      className: "number",
      begin: hljs.C_NUMBER_RE,
      relevance: 0
    };
    hljs.BINARY_NUMBER_MODE = {
      className: "number",
      begin: hljs.BINARY_NUMBER_RE,
      relevance: 0
    };
    hljs.CSS_NUMBER_MODE = {
      className: "number",
      begin: hljs.NUMBER_RE + "(%|em|ex|ch|rem|vw|vh|vmin|vmax|cm|mm|in|pt|pc|px|deg|grad|rad|turn|s|ms|Hz|kHz|dpi|dpcm|dppx)?",
      relevance: 0
    };
    hljs.REGEXP_MODE = {
      className: "regexp",
      begin: /\//,
      end: /\/[gimuy]*/,
      illegal: /\n/,
      contains: [
        hljs.BACKSLASH_ESCAPE,
        {
          begin: /\[/,
          end: /\]/,
          relevance: 0,
          contains: [hljs.BACKSLASH_ESCAPE]
        }
      ]
    };
    hljs.TITLE_MODE = {
      className: "title",
      begin: hljs.IDENT_RE,
      relevance: 0
    };
    hljs.UNDERSCORE_TITLE_MODE = {
      className: "title",
      begin: hljs.UNDERSCORE_IDENT_RE,
      relevance: 0
    };
    hljs.METHOD_GUARD = {
      begin: "\\.\\s*" + hljs.UNDERSCORE_IDENT_RE,
      relevance: 0
    };
  }
});

// node_modules/@lrnwebcomponents/code-sample/lib/highlightjs/languages/javascript.js
function javascript(hljs2) {
  var IDENT_RE = "[A-Za-z$_][0-9A-Za-z$_]*";
  var KEYWORDS = {
    keyword: "in of if for while finally var new function do return void else break catch instanceof with throw case default try this switch continue typeof delete let yield const export super debugger as async await static import from as",
    literal: "true false null undefined NaN Infinity",
    built_in: "eval isFinite isNaN parseFloat parseInt decodeURI decodeURIComponent encodeURI encodeURIComponent escape unescape Object Function Boolean Error EvalError InternalError RangeError ReferenceError StopIteration SyntaxError TypeError URIError Number Math Date String RegExp Array Float32Array Float64Array Int16Array Int32Array Int8Array Uint16Array Uint32Array Uint8Array Uint8ClampedArray ArrayBuffer DataView JSON Intl arguments require module console window document Symbol Set Map WeakSet WeakMap Proxy Reflect Promise"
  };
  var NUMBER = {
    className: "number",
    variants: [
      { begin: "\\b(0[bB][01]+)" },
      { begin: "\\b(0[oO][0-7]+)" },
      { begin: hljs2.C_NUMBER_RE }
    ],
    relevance: 0
  };
  var SUBST = {
    className: "subst",
    begin: "\\$\\{",
    end: "\\}",
    keywords: KEYWORDS,
    contains: []
  };
  var TEMPLATE_STRING = {
    className: "string",
    begin: "`",
    end: "`",
    contains: [hljs2.BACKSLASH_ESCAPE, SUBST]
  };
  SUBST.contains = [
    hljs2.APOS_STRING_MODE,
    hljs2.QUOTE_STRING_MODE,
    TEMPLATE_STRING,
    NUMBER,
    hljs2.REGEXP_MODE
  ];
  var PARAMS_CONTAINS = SUBST.contains.concat([
    hljs2.C_BLOCK_COMMENT_MODE,
    hljs2.C_LINE_COMMENT_MODE
  ]);
  return {
    aliases: ["js", "jsx"],
    keywords: KEYWORDS,
    contains: [
      {
        className: "meta",
        relevance: 10,
        begin: /^\s*['"]use (strict|asm)['"]/
      },
      {
        className: "meta",
        begin: /^#!/,
        end: /$/
      },
      hljs2.APOS_STRING_MODE,
      hljs2.QUOTE_STRING_MODE,
      TEMPLATE_STRING,
      hljs2.C_LINE_COMMENT_MODE,
      hljs2.C_BLOCK_COMMENT_MODE,
      NUMBER,
      {
        begin: /[{,]\s*/,
        relevance: 0,
        contains: [
          {
            begin: IDENT_RE + "\\s*:",
            returnBegin: true,
            relevance: 0,
            contains: [{ className: "attr", begin: IDENT_RE, relevance: 0 }]
          }
        ]
      },
      {
        begin: "(" + hljs2.RE_STARTERS_RE + "|\\b(case|return|throw)\\b)\\s*",
        keywords: "return throw case",
        contains: [
          hljs2.C_LINE_COMMENT_MODE,
          hljs2.C_BLOCK_COMMENT_MODE,
          hljs2.REGEXP_MODE,
          {
            className: "function",
            begin: "(\\(.*?\\)|" + IDENT_RE + ")\\s*=>",
            returnBegin: true,
            end: "\\s*=>",
            contains: [
              {
                className: "params",
                variants: [
                  {
                    begin: IDENT_RE
                  },
                  {
                    begin: /\(\s*\)/
                  },
                  {
                    begin: /\(/,
                    end: /\)/,
                    excludeBegin: true,
                    excludeEnd: true,
                    keywords: KEYWORDS,
                    contains: PARAMS_CONTAINS
                  }
                ]
              }
            ]
          },
          {
            begin: /</,
            end: /(\/\w+|\w+\/)>/,
            subLanguage: "xml",
            contains: [
              { begin: /<\w+\s*\/>/, skip: true },
              {
                begin: /<\w+/,
                end: /(\/\w+|\w+\/)>/,
                skip: true,
                contains: [{ begin: /<\w+\s*\/>/, skip: true }, "self"]
              }
            ]
          }
        ],
        relevance: 0
      },
      {
        className: "function",
        beginKeywords: "function",
        end: /\{/,
        excludeEnd: true,
        contains: [
          hljs2.inherit(hljs2.TITLE_MODE, { begin: IDENT_RE }),
          {
            className: "params",
            begin: /\(/,
            end: /\)/,
            excludeBegin: true,
            excludeEnd: true,
            contains: PARAMS_CONTAINS
          }
        ],
        illegal: /\[|%/
      },
      {
        begin: /\$[(.]/
      },
      hljs2.METHOD_GUARD,
      {
        className: "class",
        beginKeywords: "class",
        end: /[{;=]/,
        excludeEnd: true,
        illegal: /[:"\[\]]/,
        contains: [{ beginKeywords: "extends" }, hljs2.UNDERSCORE_TITLE_MODE]
      },
      {
        beginKeywords: "constructor get set",
        end: /\{/,
        excludeEnd: true
      }
    ],
    illegal: /#(?!!)/
  };
}
var init_javascript = __esm({
  "node_modules/@lrnwebcomponents/code-sample/lib/highlightjs/languages/javascript.js"() {
    __name(javascript, "javascript");
  }
});

// node_modules/@lrnwebcomponents/code-sample/lib/highlightjs/languages/yaml.js
function yaml(hljs2) {
  var LITERALS = "true false yes no null";
  var keyPrefix = "^[ \\-]*";
  var keyName = "[a-zA-Z_][\\w\\-]*";
  var KEY = {
    className: "attr",
    variants: [
      { begin: keyPrefix + keyName + ":" },
      { begin: keyPrefix + '"' + keyName + '":' },
      { begin: keyPrefix + "'" + keyName + "':" }
    ]
  };
  var TEMPLATE_VARIABLES = {
    className: "template-variable",
    variants: [
      { begin: "{{", end: "}}" },
      { begin: "%{", end: "}" }
    ]
  };
  var STRING = {
    className: "string",
    relevance: 0,
    variants: [
      { begin: /'/, end: /'/ },
      { begin: /"/, end: /"/ },
      { begin: /\S+/ }
    ],
    contains: [hljs2.BACKSLASH_ESCAPE, TEMPLATE_VARIABLES]
  };
  return {
    case_insensitive: true,
    aliases: ["yml", "YAML", "yaml"],
    contains: [
      KEY,
      {
        className: "meta",
        begin: "^---s*$",
        relevance: 10
      },
      {
        className: "string",
        begin: "[\\|>] *$",
        returnEnd: true,
        contains: STRING.contains,
        end: KEY.variants[0].begin
      },
      {
        begin: "<%[%=-]?",
        end: "[%-]?%>",
        subLanguage: "ruby",
        excludeBegin: true,
        excludeEnd: true,
        relevance: 0
      },
      {
        className: "type",
        begin: "!" + hljs2.UNDERSCORE_IDENT_RE
      },
      {
        className: "type",
        begin: "!!" + hljs2.UNDERSCORE_IDENT_RE
      },
      {
        className: "meta",
        begin: "&" + hljs2.UNDERSCORE_IDENT_RE + "$"
      },
      {
        className: "meta",
        begin: "\\*" + hljs2.UNDERSCORE_IDENT_RE + "$"
      },
      {
        className: "bullet",
        begin: "^ *-",
        relevance: 0
      },
      hljs2.HASH_COMMENT_MODE,
      {
        beginKeywords: LITERALS,
        keywords: { literal: LITERALS }
      },
      hljs2.C_NUMBER_MODE,
      STRING
    ]
  };
}
var init_yaml = __esm({
  "node_modules/@lrnwebcomponents/code-sample/lib/highlightjs/languages/yaml.js"() {
    __name(yaml, "yaml");
  }
});

// node_modules/@lrnwebcomponents/code-sample/lib/highlightjs/languages/json.js
function jsonLang(hljs2) {
  var LITERALS = { literal: "true false null" };
  var TYPES = [hljs2.QUOTE_STRING_MODE, hljs2.C_NUMBER_MODE];
  var VALUE_CONTAINER = {
    end: ",",
    endsWithParent: true,
    excludeEnd: true,
    contains: TYPES,
    keywords: LITERALS
  };
  var OBJECT = {
    begin: "{",
    end: "}",
    contains: [
      {
        className: "attr",
        begin: /"/,
        end: /"/,
        contains: [hljs2.BACKSLASH_ESCAPE],
        illegal: "\\n"
      },
      hljs2.inherit(VALUE_CONTAINER, { begin: /:/ })
    ],
    illegal: "\\S"
  };
  var ARRAY = {
    begin: "\\[",
    end: "\\]",
    contains: [hljs2.inherit(VALUE_CONTAINER)],
    illegal: "\\S"
  };
  TYPES.splice(TYPES.length, 0, OBJECT, ARRAY);
  return {
    contains: TYPES,
    keywords: LITERALS,
    illegal: "\\S"
  };
}
var init_json = __esm({
  "node_modules/@lrnwebcomponents/code-sample/lib/highlightjs/languages/json.js"() {
    __name(jsonLang, "jsonLang");
  }
});

// node_modules/@lrnwebcomponents/code-sample/lib/highlightjs/languages/css.js
function cssLang(hljs2) {
  var IDENT_RE = "[a-zA-Z-][a-zA-Z0-9_-]*";
  var RULE = {
    begin: /[A-Z\_\.\-]+\s*:/,
    returnBegin: true,
    end: ";",
    endsWithParent: true,
    contains: [
      {
        className: "attribute",
        begin: /\S/,
        end: ":",
        excludeEnd: true,
        starts: {
          endsWithParent: true,
          excludeEnd: true,
          contains: [
            {
              begin: /[\w-]+\(/,
              returnBegin: true,
              contains: [
                {
                  className: "built_in",
                  begin: /[\w-]+/
                },
                {
                  begin: /\(/,
                  end: /\)/,
                  contains: [hljs2.APOS_STRING_MODE, hljs2.QUOTE_STRING_MODE]
                }
              ]
            },
            hljs2.CSS_NUMBER_MODE,
            hljs2.QUOTE_STRING_MODE,
            hljs2.APOS_STRING_MODE,
            hljs2.C_BLOCK_COMMENT_MODE,
            {
              className: "number",
              begin: "#[0-9A-Fa-f]+"
            },
            {
              className: "meta",
              begin: "!important"
            }
          ]
        }
      }
    ]
  };
  return {
    case_insensitive: true,
    illegal: /[=\/|'\$]/,
    contains: [
      hljs2.C_BLOCK_COMMENT_MODE,
      {
        className: "selector-id",
        begin: /#[A-Za-z0-9_-]+/
      },
      {
        className: "selector-class",
        begin: /\.[A-Za-z0-9_-]+/
      },
      {
        className: "selector-attr",
        begin: /\[/,
        end: /\]/,
        illegal: "$"
      },
      {
        className: "selector-pseudo",
        begin: /:(:)?[a-zA-Z0-9\_\-\+\(\)"'.]+/
      },
      {
        begin: "@(font-face|page)",
        lexemes: "[a-z-]+",
        keywords: "font-face page"
      },
      {
        begin: "@",
        end: "[{;]",
        illegal: /:/,
        contains: [
          {
            className: "keyword",
            begin: /\w+/
          },
          {
            begin: /\s/,
            endsWithParent: true,
            excludeEnd: true,
            relevance: 0,
            contains: [
              hljs2.APOS_STRING_MODE,
              hljs2.QUOTE_STRING_MODE,
              hljs2.CSS_NUMBER_MODE
            ]
          }
        ]
      },
      {
        className: "selector-tag",
        begin: IDENT_RE,
        relevance: 0
      },
      {
        begin: "{",
        end: "}",
        illegal: /\S/,
        contains: [hljs2.C_BLOCK_COMMENT_MODE, RULE]
      }
    ]
  };
}
var init_css = __esm({
  "node_modules/@lrnwebcomponents/code-sample/lib/highlightjs/languages/css.js"() {
    __name(cssLang, "cssLang");
  }
});

// node_modules/@lrnwebcomponents/code-sample/lib/highlightjs/languages/php.js
function phpLang(hljs2) {
  var VARIABLE = {
    begin: "\\$+[a-zA-Z_\x7F-\xFF][a-zA-Z0-9_\x7F-\xFF]*"
  };
  var PREPROCESSOR = {
    className: "meta",
    begin: /<\?(php)?|\?>/
  };
  var STRING = {
    className: "string",
    contains: [hljs2.BACKSLASH_ESCAPE, PREPROCESSOR],
    variants: [
      {
        begin: 'b"',
        end: '"'
      },
      {
        begin: "b'",
        end: "'"
      },
      hljs2.inherit(hljs2.APOS_STRING_MODE, { illegal: null }),
      hljs2.inherit(hljs2.QUOTE_STRING_MODE, { illegal: null })
    ]
  };
  var NUMBER = { variants: [hljs2.BINARY_NUMBER_MODE, hljs2.C_NUMBER_MODE] };
  return {
    aliases: ["php", "php3", "php4", "php5", "php6", "php7"],
    case_insensitive: true,
    keywords: "and include_once list abstract global private echo interface as static endswitch array null if endwhile or const for endforeach self var while isset public protected exit foreach throw elseif include __FILE__ empty require_once do xor return parent clone use __CLASS__ __LINE__ else break print eval new catch __METHOD__ case exception default die require __FUNCTION__ enddeclare final try switch continue endfor endif declare unset true false trait goto instanceof insteadof __DIR__ __NAMESPACE__ yield finally",
    contains: [
      hljs2.HASH_COMMENT_MODE,
      hljs2.COMMENT("//", "$", { contains: [PREPROCESSOR] }),
      hljs2.COMMENT("/\\*", "\\*/", {
        contains: [
          {
            className: "doctag",
            begin: "@[A-Za-z]+"
          }
        ]
      }),
      hljs2.COMMENT("__halt_compiler.+?;", false, {
        endsWithParent: true,
        keywords: "__halt_compiler",
        lexemes: hljs2.UNDERSCORE_IDENT_RE
      }),
      {
        className: "string",
        begin: /<<<['"]?\w+['"]?$/,
        end: /^\w+;?$/,
        contains: [
          hljs2.BACKSLASH_ESCAPE,
          {
            className: "subst",
            variants: [{ begin: /\$\w+/ }, { begin: /\{\$/, end: /\}/ }]
          }
        ]
      },
      PREPROCESSOR,
      {
        className: "keyword",
        begin: /\$this\b/
      },
      VARIABLE,
      {
        begin: /(::|->)+[a-zA-Z_\x7f-\xff][a-zA-Z0-9_\x7f-\xff]*/
      },
      {
        className: "function",
        beginKeywords: "function",
        end: /[;{]/,
        excludeEnd: true,
        illegal: "\\$|\\[|%",
        contains: [
          hljs2.UNDERSCORE_TITLE_MODE,
          {
            className: "params",
            begin: "\\(",
            end: "\\)",
            contains: [
              "self",
              VARIABLE,
              hljs2.C_BLOCK_COMMENT_MODE,
              STRING,
              NUMBER
            ]
          }
        ]
      },
      {
        className: "class",
        beginKeywords: "class interface",
        end: "{",
        excludeEnd: true,
        illegal: /[:\(\$"]/,
        contains: [
          { beginKeywords: "extends implements" },
          hljs2.UNDERSCORE_TITLE_MODE
        ]
      },
      {
        beginKeywords: "namespace",
        end: ";",
        illegal: /[\.']/,
        contains: [hljs2.UNDERSCORE_TITLE_MODE]
      },
      {
        beginKeywords: "use",
        end: ";",
        contains: [hljs2.UNDERSCORE_TITLE_MODE]
      },
      {
        begin: "=>"
      },
      STRING,
      NUMBER
    ]
  };
}
var init_php = __esm({
  "node_modules/@lrnwebcomponents/code-sample/lib/highlightjs/languages/php.js"() {
    __name(phpLang, "phpLang");
  }
});

// node_modules/@lrnwebcomponents/code-sample/lib/highlightjs/languages/xml.js
var xml;
var init_xml = __esm({
  "node_modules/@lrnwebcomponents/code-sample/lib/highlightjs/languages/xml.js"() {
    xml = /* @__PURE__ */ __name(function(hljs2) {
      var XML_IDENT_RE = "[A-Za-z0-9\\._:-]+";
      var TAG_INTERNALS = {
        endsWithParent: true,
        illegal: /</,
        relevance: 0,
        contains: [
          {
            className: "attr",
            begin: XML_IDENT_RE,
            relevance: 0
          },
          {
            begin: /=\s*/,
            relevance: 0,
            contains: [
              {
                className: "string",
                endsParent: true,
                variants: [
                  { begin: /"/, end: /"/ },
                  { begin: /'/, end: /'/ },
                  { begin: /[^\s"'=<>`]+/ }
                ]
              }
            ]
          }
        ]
      };
      return {
        aliases: ["html", "xhtml", "rss", "atom", "xjb", "xsd", "xsl", "plist"],
        case_insensitive: true,
        contains: [
          {
            className: "meta",
            begin: "<!DOCTYPE",
            end: ">",
            relevance: 10,
            contains: [{ begin: "\\[", end: "\\]" }]
          },
          hljs2.COMMENT("<!--", "-->", {
            relevance: 10
          }),
          {
            begin: "<\\!\\[CDATA\\[",
            end: "\\]\\]>",
            relevance: 10
          },
          {
            className: "meta",
            begin: /<\?xml/,
            end: /\?>/,
            relevance: 10
          },
          {
            begin: /<\?(php)?/,
            end: /\?>/,
            subLanguage: "php",
            contains: [
              { begin: "/\\*", end: "\\*/", skip: true },
              { begin: 'b"', end: '"', skip: true },
              { begin: "b'", end: "'", skip: true },
              hljs2.inherit(hljs2.APOS_STRING_MODE, {
                illegal: null,
                className: null,
                contains: null,
                skip: true
              }),
              hljs2.inherit(hljs2.QUOTE_STRING_MODE, {
                illegal: null,
                className: null,
                contains: null,
                skip: true
              })
            ]
          },
          {
            className: "tag",
            begin: "<style(?=\\s|>|$)",
            end: ">",
            keywords: { name: "style" },
            contains: [TAG_INTERNALS],
            starts: {
              end: "</style>",
              returnEnd: true,
              subLanguage: ["css", "xml"]
            }
          },
          {
            className: "tag",
            begin: "<script(?=\\s|>|$)",
            end: ">",
            keywords: { name: "script" },
            contains: [TAG_INTERNALS],
            starts: {
              end: "<\/script>",
              returnEnd: true,
              subLanguage: ["actionscript", "javascript", "handlebars", "xml"]
            }
          },
          {
            className: "tag",
            begin: "</?",
            end: "/?>",
            contains: [
              {
                className: "name",
                begin: /[^\/><\s]+/,
                relevance: 0
              },
              TAG_INTERNALS
            ]
          }
        ]
      };
    }, "xml");
  }
});

// node_modules/@lrnwebcomponents/code-sample/code-sample.js
var code_sample_exports = {};
__export(code_sample_exports, {
  CodeSample: () => CodeSample
});
var CodeSample;
var init_code_sample = __esm({
  "node_modules/@lrnwebcomponents/code-sample/code-sample.js"() {
    init_lit();
    init_one_dark();
    init_highlight();
    init_javascript();
    init_yaml();
    init_json();
    init_css();
    init_php();
    init_xml();
    hljs.registerLanguage("javascript", javascript);
    hljs.registerLanguage("json", jsonLang);
    hljs.registerLanguage("css", cssLang);
    hljs.registerLanguage("php", phpLang);
    hljs.registerLanguage("yaml", yaml);
    hljs.registerLanguage("xml", xml);
    hljs.registerLanguage("html", xml);
    window["hljs"] = hljs;
    CodeSample = class extends s4 {
      static get styles() {
        return [
          i`
        :host {
          display: block;
        }

        :host([hidden]),
        [hidden] {
          display: none;
        }

        pre {
          margin: 0;
        }

        pre,
        code {
          font-family: var(
            --code-sample-font-family,
            Operator Mono,
            Inconsolata,
            Roboto Mono,
            monaco,
            consolas,
            monospace
          );
          font-size: var(--code-sample-font-size, 0.875rem);
        }

        .hljs {
          padding: 0 1.25rem;
          line-height: var(--code-sample-line-height, 1.3);
        }

        .demo:not(:empty) {
          padding: var(--code-sample-demo-padding, 0 0 1.25rem);
        }

        #code-container {
          position: relative;
        }

        button {
          background: var(--code-sample-copy-button-bg-color, #e0e0e0);
          border: none;
          cursor: pointer;
          display: block;
          position: absolute;
          right: 0;
          top: 0;
          text-transform: uppercase;
        }
      `
        ];
      }
      render() {
        return y` <div id="theme"></div>
      <div id="demo" class="demo"></div>
      <slot></slot>
      <div id="code-container">
        <button
          type="button"
          ?hidden="${!this.copyClipboardButton}"
          id="copyButton"
          title="Copy to clipboard"
          @click="${this._copyToClipboard}"
        >
          Copy
        </button>
        <pre id="code"></pre>
      </div>`;
      }
      static get haxProperties() {
        return {
          type: "element",
          canScale: true,
          canPosition: true,
          canEditSource: true,
          gizmo: {
            title: "Code sample",
            description: "A sample of code highlighted in the page",
            icon: "icons:code",
            color: "blue",
            groups: ["Code", "Development"],
            meta: {
              author: "elmsln"
            }
          },
          settings: {
            configure: [
              {
                property: "type",
                title: "Code highlighting",
                description: "Syntax highlighting to apply to the code area",
                inputMethod: "select",
                options: {
                  javascript: "JavaScript",
                  css: "CSS",
                  html: "HTML",
                  xml: "XML",
                  json: "JSON data",
                  php: "PHP",
                  yaml: "YAML"
                }
              },
              {
                slot: "",
                slotWrapper: "template",
                slotAttributes: {
                  "preserve-content": "preserve-content"
                },
                title: "Source",
                description: "The URL for this video.",
                inputMethod: "code-editor"
              },
              {
                property: "copyClipboardButton",
                title: "Copy to clipboard button",
                description: "button in top right that says copy to clipboard",
                inputMethod: "boolean"
              }
            ],
            advanced: []
          },
          saveOptions: {
            unsetAttributes: ["theme"]
          },
          demoSchema: [
            {
              tag: "code-sample",
              content: '<template preserve-content="preserve-content">const great = "example";</template>',
              properties: {
                "copy-clipboard-button": "copy-clipboard-button"
              }
            }
          ]
        };
      }
      static get properties() {
        return {
          ...super.properties,
          copyClipboardButton: {
            type: Boolean,
            attribute: "copy-clipboard-button"
          },
          theme: {
            type: Object
          },
          type: {
            type: String,
            reflect: true
          }
        };
      }
      static get tag() {
        return "code-sample";
      }
      constructor() {
        super();
        this._observer = null;
        this.theme = oneDark;
        this.type = "html";
        this.copyClipboardButton = false;
      }
      haxHooks() {
        return {
          gizmoRegistration: "haxgizmoRegistration"
        };
      }
      haxgizmoRegistration(store) {
        let list = [
          "javascript",
          "js",
          "json",
          "css",
          "php",
          "yaml",
          "xml",
          "html"
        ];
        for (var i22 in list) {
          store.keyboardShortcuts["```" + list[i22]] = {
            tag: "code-sample",
            properties: {
              type: list[i22] === "js" ? "javascript" : list[i22]
            },
            content: `<template preserve-content="preserve-content">${this.getExample(
              list[i22]
            )}</template>`
          };
        }
        store.keyboardShortcuts["```"] = store.keyboardShortcuts["```html"];
      }
      getExample(type) {
        switch (type) {
          case "css":
            return `
  .the-cheet[is="tothelimit"] {
    padding: 8px;
    margin: 4px;
  }
`;
            break;
          case "html":
            return `
  <blockquote>
  Dear Strongbad,
  In 5th grade I have to watch a <em>lame hygiene movie</em>. I was thinking
  you could make a <strong id="bad">better movie about hygiene</strong> than the cruddy school version.
  Your friend,
  John
  </blockquote>
`;
            break;
          case "javascript":
          case "js":
            return `const everyBody = "to the limit";
  let theCheat = true;
  if (theCheat) {
    return \`is \${everyBody}\`;
  }`;
            break;
          case "xml":
            return `<IAmLike>
  <ComeOn>fhqwhgads</ComeOn>
</IAmLike>`;
            break;
          case "yaml":
            return `- CaracterList:
  - Homestar Runner
  - Strongbad
  - The Cheat`;
            break;
          case "php":
            return `  $MrTheCheat = "wins the big race";
if ($MrTheCheat) {
  return "HaVe A tRoPhY";
}`;
            break;
          case "json":
            return `{
  "mainMenu": [
    "Characters",
    "Games",
    "Toons",
    "Email",
    "Store"
  ]
}`;
            break;
        }
      }
      firstUpdated(changedProperties) {
        if (super.firstUpdated) {
          super.firstUpdated(changedProperties);
        }
        if (this.innerHTML == "") {
          this.innerHTML = '<template preserve-content="preserve-content">const great="example";</template>';
        }
        this._updateContent();
        setTimeout(() => {
          this._themeChanged(this.theme);
        }, 0);
      }
      connectedCallback() {
        super.connectedCallback();
        if (this.querySelector("template")) {
          this._observer = new MutationObserver((mutations) => {
            if (this.shadowRoot) {
              this._updateContent();
            }
          });
          this._observer.observe(this, {
            attributes: true,
            childList: true,
            subtree: true
          });
        } else if (this.childNodes.length) {
          console.error(
            "<code-sample>:",
            "content must be provided inside a <template> tag"
          );
        }
      }
      disconnectedCallback() {
        if (this._observer) {
          this._observer.disconnect();
          this._observer = null;
        }
        super.disconnectedCallback();
      }
      updated(changedProperties) {
        changedProperties.forEach((oldValue, propName) => {
          if (propName == "theme" && this.shadowRoot) {
            this._themeChanged(this[propName]);
          }
        });
      }
      _themeChanged(theme) {
        if (theme) {
          while (this.shadowRoot.querySelector("#theme").childNodes > 0) {
            this.shadowRoot.querySelector("#theme").removeChild(this.shadowRoot.querySelector("#theme").firstChild);
          }
          A(theme, this.shadowRoot.querySelector("#theme"));
        }
      }
      _updateContent() {
        if (this._code && this._code.parentNode) {
          this._code.parentNode.removeChild(this._code);
        }
        let template = this._getCodeTemplate();
        if (!template) {
          template = document.createElement("template");
          template.setAttribute("preserve-content", "preserve-content");
          this.appendChild(template);
        }
        this._highlight(template.innerHTML);
      }
      _getCodeTemplate() {
        const nodes = this.children;
        return [].filter.call(
          nodes,
          (node) => node.nodeType === Node.ELEMENT_NODE
        )[0];
      }
      _highlight(str) {
        this._code = document.createElement("code");
        if (this.type)
          this._code.classList.add(this.type);
        this._code.innerHTML = this._entitize(this._cleanIndentation(str));
        if (this.shadowRoot && this.shadowRoot.querySelector("#code")) {
          this.shadowRoot.querySelector("#code").appendChild(this._code);
          hljs.highlightBlock(this._code);
        }
      }
      _cleanIndentation(str) {
        const pattern = str.match(/\s*\n[\t\s]*/);
        return str.replace(new RegExp(pattern, "g"), "\n");
      }
      _entitize(str) {
        return String(str).replace(/&lt;/g, "<").replace(/&gt;/g, ">").replace(/=""/g, "").replace(/=&gt;/g, "=>").replace(/</g, "&lt;").replace(/>/g, "&gt;").replace(/"/g, "&quot;");
      }
      _copyToClipboard(event) {
        const copyButton = event.target;
        const textarea = this._textAreaWithClonedContent();
        textarea.select();
        try {
          document.execCommand("copy", false);
          copyButton.textContent = "Done";
        } catch (err) {
          console.error(err);
          copyButton.textContent = "Error";
        }
        textarea.remove();
        setTimeout(() => {
          copyButton.textContent = "Copy";
        }, 1e3);
      }
      _textAreaWithClonedContent() {
        const textarea = document.createElement("textarea");
        document.body.appendChild(textarea);
        textarea.value = this._cleanIndentation(this._getCodeTemplate().innerHTML);
        return textarea;
      }
    };
    __name(CodeSample, "CodeSample");
    window.customElements.define(CodeSample.tag, CodeSample);
  }
});

// elements/rh-dialog/yt-api.js
var yt_api_exports = {};
__export(yt_api_exports, {
  pauseVideo: () => pauseVideo
});
async function getPlayer(iframe) {
  return new Promise((r21) => {
    let player = players.get(iframe);
    if (!player) {
      players.set(iframe, new window.YT.Player(iframe, {
        events: {
          onReady() {
            player = players.get(iframe);
            r21(player);
          }
        }
      }));
    } else {
      requestAnimationFrame(() => r21(player));
    }
  });
}
async function pauseVideo(iframe) {
  if (!iframe.src.match(/enablejsapi=1/)) {
    console.warn("Cannot pause video, please add `enablejsapi=1` to iframe url.");
    return;
  }
  if (!window.YT) {
    const tag2 = document.createElement("script");
    tag2.src = "https://www.youtube.com/iframe_api";
    const [firstScriptTag] = document.getElementsByTagName("script");
    firstScriptTag.parentNode?.insertBefore(tag2, firstScriptTag);
    const orig = window.onYouTubeIframeAPIReady;
    await new Promise((r21) => {
      window.onYouTubeIframeAPIReady = function() {
        r21(void 0);
      };
    });
    window.onYouTubeIframeAPIReady = orig;
  }
  const player = await getPlayer(iframe);
  player?.pauseVideo();
}
var players;
var init_yt_api = __esm({
  "elements/rh-dialog/yt-api.js"() {
    "use strict";
    players = /* @__PURE__ */ new WeakMap();
    __name(getPlayer, "getPlayer");
    __name(pauseVideo, "pauseVideo");
  }
});

// node_modules/tslib/modules/index.js
var import_tslib = __toESM(require_tslib(), 1);
var {
  __extends,
  __assign,
  __rest,
  __decorate,
  __param,
  __metadata,
  __awaiter,
  __generator,
  __exportStar,
  __createBinding,
  __values,
  __read,
  __spread,
  __spreadArrays,
  __spreadArray,
  __await,
  __asyncGenerator,
  __asyncDelegator,
  __asyncValues,
  __makeTemplateObject,
  __importStar,
  __importDefault,
  __classPrivateFieldGet,
  __classPrivateFieldSet,
  __classPrivateFieldIn
} = import_tslib.default;

// elements/rh-alert/rh-alert.js
init_lit();
init_decorators();

// elements/rh-alert/rh-alert.css.js
init_lit();
var styles = i`:host {
  --_background-color: var(--rh-color-cyan-50, #f2f9f9);
  --_border-color: var(--rh-color-cyan-300, #009596);
  --_header-color: var(--rh-color-cyan-500, #003737);
  --_icon-color: var(--rh-color-cyan-300, #009596);

  display: block;
}

:host([hidden]) {
  display: none;
}

:host([state="info"]) {
  --_border-color: var(--rh-color-blue-250, #2b9af3);
  --_icon-color: var(--rh-color-blue-250, #2b9af3);
  --_header-color: var(--rh-color-blue-600, #002952);
  --_background-color: var(--rh-color-blue-50, #e7f1fa);
}

:host([state="success"]) {
  --_border-color: var(--rh-color-green-500, #3e8635);
  --_icon-color: var(--rh-color-green-500, #3e8635);
  --_header-color: var(--rh-color-green-600, #1e4f18);
  --_background-color: var(--rh-color-green-50, #f3faf2);
}

:host([state="warning"]) {
  --_border-color: var(--rh-color-gold-400, #f0ab00);
  --_icon-color: var(--rh-color-gold-400, #f0ab00);
  --_header-color: var(--rh-color-gold-600, #795600);
  --_background-color: var(--rh-color-gold-50, #fdf7e7);
}

:host([state="danger"]) {
  --_border-color: #c9190b; /* WARNING: not a recognized token value */
  --_icon-color: #c9190b; /* WARNING: not a recognized token value */
  --_header-color: #7d1007; /* WARNING: not a recognized token value */
  --_background-color: var(--rh-color-red-50, #faeae8);
}

:host([toast]) {
  --_background-color: var(--rh-color-surface-lightest, #ffffff);
}

#container {
  border-width: var(--rh-border-width-lg, 3px);
  border-color: var(--_border-color);
  border-style: solid;
  background-color: var(--_background-color);
  padding: var(--rh-space-lg, 16px);
  display: grid;
  grid-template-columns: min-content 1fr;
  gap: var(--rh-space-xs, 4px);
}

#left-column {
  display: inline-block;
  vertical-align: top;
}

#middle-column {
  display: inline-block;
  vertical-align: top;
}

header {
  display: flex;
  align-items: center;
  justify-content: flex-start;
  margin-bottom: var(--rh-space-xs, 4px);
}

header ::slotted(:is(h1,h2,h3,h4,h5,h6)) {
  margin: 0;
}

#header-actions {
  margin-right: var(--rh-space-xs, 4px);
}

#header {
  font-size: var(--rh-font-size-body-text-sm, 0.875rem);
  color: var(--_header-color);
  font-weight: var(--rh-font-weight-heading-medium, 500);
  flex: 1 1 auto;
}

#icon {
  display: flex;
  align-items: center;
  justify-content: center;
  width: var(--rh-font-size-body-text-2xl, 1.5rem);
  height: var(--rh-font-size-body-text-2xl, 1.5rem);
  color: var(--_icon-color);
}

#close-button {
  color: var(--rh-color-text-secondary-on-light, #6a6e73);
  background-color: transparent;
  border: none;
  height: var(--rh-length-xl, 24px);
  width: var(--rh-length-xl, 24px);
  cursor: pointer;
}

#close-button:hover {
  color: var(--rh-color-text-primary-on-light, #151515);
}

#description {
  font-size: var(--rh-font-size-body-text-sm, 0.875rem);
}

footer {
  margin-top: var(--rh-space-lg, 16px);
}

footer ::slotted([slot="actions"]) {
  margin-right: var(--actions-item--MarginRight, var(--rh-alert__actions--Gap, 24px)) !important;
  padding: 0;
  border: none;
  background-color: transparent;
  color: var(--rh-color-interactive-blue-darker, #0066cc);
  font-size: var(--rh-font-size-body-text-sm, 0.875rem);
}

/* TODO: separate focus and hover styles */
footer ::slotted([slot="actions"]:hover),
footer ::slotted([slot="actions"]:focus) {
  text-decoration: underline;
  color: var(--rh-color-interactive-blue-darkest, #004080);
}

:host(:not([variant])) #container,
:host([toast]) #container {
  border-left: 0;
  border-bottom: none;
  border-right: 0;
}

:host([toast]) #container {
  box-shadow: 0 5px 15px #00000033;
}
`;
var rh_alert_css_default = styles;

// elements/rh-alert/rh-alert.js
var ICONS = {
  default: { viewBox: "0 0 896 1024", path: "M448,0 C465.333333,0 480.333333,6.33333333 493,19 C505.666667,31.6666667 512,46.6666667 512,64 L512,106 L514.23,106.45 C587.89,121.39 648.48,157.24 696,214 C744,271.333333 768,338.666667 768,416 C768,500 780,568.666667 804,622 C818.666667,652.666667 841.333333,684 872,716 C873.773676,718.829136 875.780658,721.505113 878,724 C890,737.333333 896,752.333333 896,769 C896,785.666667 890,800.333333 878,813 C866,825.666667 850.666667,832 832,832 L63.3,832 C44.9533333,831.84 29.8533333,825.506667 18,813 C6,800.333333 0,785.666667 0,769 C0,752.333333 6,737.333333 18,724 L24,716 L25.06,714.9 C55.1933333,683.28 77.5066667,652.313333 92,622 C116,568.666667 128,500 128,416 C128,338.666667 152,271.333333 200,214 C248,156.666667 309.333333,120.666667 384,106 L384,63.31 C384.166667,46.27 390.5,31.5 403,19 C415.666667,6.33333333 430.666667,0 448,0 Z M576,896 L576,897.08 C575.74,932.6 563.073333,962.573333 538,987 C512.666667,1011.66667 482.666667,1024 448,1024 C413.333333,1024 383.333333,1011.66667 358,987 C332.666667,962.333333 320,932 320,896 L576,896 Z" },
  error: { viewBox: "0 0 512 512", path: "M256 8C119.043 8 8 119.083 8 256c0 136.997 111.043 248 248 248s248-111.003 248-248C504 119.083 392.957 8 256 8zm0 110c23.196 0 42 18.804 42 42s-18.804 42-42 42-42-18.804-42-42 18.804-42 42-42zm56 254c0 6.627-5.373 12-12 12h-88c-6.627 0-12-5.373-12-12v-24c0-6.627 5.373-12 12-12h12v-64h-12c-6.627 0-12-5.373-12-12v-24c0-6.627 5.373-12 12-12h64c6.627 0 12 5.373 12 12v100h12c6.627 0 12 5.373 12 12v24z" },
  success: { viewBox: "0 0 512 512", path: "M504 256c0 136.967-111.033 248-248 248S8 392.967 8 256 119.033 8 256 8s248 111.033 248 248zM227.314 387.314l184-184c6.248-6.248 6.248-16.379 0-22.627l-22.627-22.627c-6.248-6.249-16.379-6.249-22.628 0L216 308.118l-70.059-70.059c-6.248-6.248-16.379-6.248-22.628 0l-22.627 22.627c-6.248 6.248-6.248 16.379 0 22.627l104 104c6.249 6.249 16.379 6.249 22.628.001z" },
  warning: { viewBox: "0 0 576 512", path: "M569.517 440.013C587.975 472.007 564.806 512 527.94 512H48.054c-36.937 0-59.999-40.055-41.577-71.987L246.423 23.985c18.467-32.009 64.72-31.951 83.154 0l239.94 416.028zM288 354c-25.405 0-46 20.595-46 46s20.595 46 46 46 46-20.595 46-46-20.595-46-46-46zm-43.673-165.346l7.418 136c.347 6.364 5.609 11.346 11.982 11.346h48.546c6.373 0 11.635-4.982 11.982-11.346l7.418-136c.375-6.874-5.098-12.654-11.982-12.654h-63.383c-6.884 0-12.356 5.78-11.981 12.654z" },
  danger: { viewBox: "0 0 512 512", path: "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zm-248 50c-25.405 0-46 20.595-46 46s20.595 46 46 46 46-20.595 46-46-20.595-46-46-46zm-43.673-165.346l7.418 136c.347 6.364 5.609 11.346 11.982 11.346h48.546c6.373 0 11.635-4.982 11.982-11.346l7.418-136c.375-6.874-5.098-12.654-11.982-12.654h-63.383c-6.884 0-12.356 5.78-11.981 12.654z" },
  info: { viewBox: "0 0 512 512", path: "M256 8C119.043 8 8 119.083 8 256c0 136.997 111.043 248 248 248s248-111.003 248-248C504 119.083 392.957 8 256 8zm0 110c23.196 0 42 18.804 42 42s-18.804 42-42 42-42-18.804-42-42 18.804-42 42-42zm56 254c0 6.627-5.373 12-12 12h-88c-6.627 0-12-5.373-12-12v-24c0-6.627 5.373-12 12-12h12v-64h-12c-6.627 0-12-5.373-12-12v-24c0-6.627 5.373-12 12-12h64c6.627 0 12 5.373 12 12v100h12c6.627 0 12 5.373 12 12v24z" },
  close: { viewBox: "0 0 352 512", path: "M242.72 256l100.07-100.07c12.28-12.28 12.28-32.19 0-44.48l-22.24-22.24c-12.28-12.28-32.19-12.28-44.48 0L176 189.28 75.93 89.21c-12.28-12.28-32.19-12.28-44.48 0L9.21 111.45c-12.28 12.28-12.28 32.19 0 44.48L109.28 256 9.21 356.07c-12.28 12.28-12.28 32.19 0 44.48l22.24 22.24c12.28 12.28 32.2 12.28 44.48 0L176 322.72l100.07 100.07c12.28 12.28 32.2 12.28 44.48 0l22.24-22.24c12.28-12.28 12.28-32.19 0-44.48L242.72 256z" },
  get(name) {
    const { viewBox, path } = ICONS[name];
    return w`
      <svg
          aria-hidden="true"
          fill="currentColor"
          height="1em" width="1em"
          style="vertical-align:-0.125em"
          viewBox="${viewBox}">
        <path d="${path}"/>
      </svg>`;
  }
};
var RhAlert = /* @__PURE__ */ __name(class RhAlert2 extends s4 {
  constructor() {
    super(...arguments);
    this.state = "default";
    this.variant = false;
    this.toast = false;
  }
  get icon() {
    return ICONS.get(this.state) ?? ``;
  }
  render() {
    return y`
      <div id="container" role="alert" aria-hidden="false">
        <div id="left-column">
          <div id="icon">${this.icon}</div>
        </div>
        <div id="middle-column">
          <header>
            <div id="header"><slot name="header"></slot></div>
            <div id="header-actions">
              <button id="close-button" aria-label="Close" confirm>${ICONS.get("close")}</button>
            </div>
          </header>
          <div id="description"><slot></slot></div>
          <footer><slot name="actions"></slot></footer>
        </div>
      </div>
    `;
  }
}, "RhAlert");
RhAlert.version = "{{version}}";
RhAlert.styles = rh_alert_css_default;
__decorate([
  e5({ reflect: true })
], RhAlert.prototype, "state", void 0);
__decorate([
  e5({ reflect: true, type: Boolean })
], RhAlert.prototype, "variant", void 0);
__decorate([
  e5({ reflect: true, type: Boolean })
], RhAlert.prototype, "toast", void 0);
RhAlert = __decorate([
  e4("rh-alert")
], RhAlert);

// elements/rh-blockquote/rh-blockquote.js
init_lit();
init_decorators();
init_decorators2();

// elements/rh-blockquote/rh-blockquote.css.js
init_lit();
var styles2 = i`:host {
  color: var(--rh-color-black-900, #151515);
  margin: 0 auto;
  text-align: left;
  background-color: var(--rh-element-background-color);
  font-size: var(--rh-font-size-body-text-lg, 1.125rem);
  font-family: var(--rh-font-family-heading, RedHatDisplay, "Red Hat Display", "Noto Sans Arabic", "Noto Sans Hebrew", "Noto Sans JP", "Noto Sans KR", "Noto Sans Malayalam", "Noto Sans SC", "Noto Sans TC", "Noto Sans Thai", Overpass, Helvetica, Arial, sans-serif);
  line-height: var(--rh-line-height-body-text, 1.5);
}

@media (min-width: 700px) {
  :host {
    font-size: var(--rh-font-size-body-text-xl, 1.25rem);
  }
}

blockquote {
  margin: 0;
}

blockquote ::slotted(p) {
  margin: var(--rh-length-md, 8px);
}

figcaption {
  color: var(--rh-color-black-600, #6a6e73);
  font-family: var(--rh-font-family-text, "RedHatText", "Overpass", Overpass, Helvetica, Arial, sans-serif);
  font-size: var(--rh-font-size-body-text-sm, 0.875rem);
}

figcaption p {
  margin: 0;
}

#author {
  font-weight: 500;
}

svg {
  color: var(--rh-color-brand-red-500, #ee0000);
}

:host([align="center"]) {
  text-align: center;
}

:host([size="large"]) {
  font-size: var(--rh-font-size-body-text-2xl, 1.5rem);
  line-height: var(--rh-line-height-heading, 1.3);
}

@media (min-width: 700px) {
  :host([size="large"]) {
    font-size: var(--rh-font-size-heading-md, 1.75rem);
  }
}

:host([highlight]) {
  --BorderWidth: 8px;
  --BorderColor: #43adaf;
  --BorderStyle: solid;
}

:host([highlight]) figure {
  border-inline-start: var(--BorderWidth) var(--BorderStyle) var(--BorderColor);
  padding-inline-start: var(--rh-length-lg, 16px);
}

:host([color-palette="darkest"]) {
  color: var(--rh-color-white, #ffffff);
}

:host([color-palette="darkest"]) svg {
  color: var(--rh-color-brand-red-400, #ff3333);
}

:host([color-palette="darkest"]) figcaption {
  color: var(--rh-color-black-300, #d2d2d2);
}
`;
var rh_blockquote_css_default = styles2;

// elements/rh-blockquote/rh-blockquote.js
var RhBlockquote = /* @__PURE__ */ __name(class RhBlockquote2 extends s4 {
  constructor() {
    super(...arguments);
    this.title = "Blockquote";
    this.colorPalette = "lightest";
    this.align = "inline-start";
    this.highlight = false;
    this.size = "default";
  }
  render() {
    const { align, highlight: highlight2, colorPalette, size } = this;
    return y`
      <figure id="container">
        <svg fill="currentColor" height="20px" width="29px" aria-hidden="true" role="img" viewBox="4.3799147605896 8.372319221496582 27.240171432495117 19.24776840209961">
          <g>
            <path d="M 10,15.38 H 5.63 C 5.7110461,11.992437 8.6223137,9.3690967 12,9.64 12.344668,9.6747086 12.649028,9.4157753 12.67,9.07 12.72,8.44 12.04,8.34 11.55,8.38 7.5982208,8.3522481 4.3799026,11.548123 4.38,15.5 V 27 C 4.3743,27.34475 4.6552502,27.6257 5,27.62 h 11 c 0.34475,0.0057 0.6257,-0.27525 0.62,-0.62 V 22 C 16.614493,18.346158 13.653842,15.385507 10,15.38 Z"></path>
            <path d="M 25,15.38 H 20.63 C 20.71105,11.992437 23.622314,9.3690967 27,9.64 27.342787,9.668766 27.643464,9.4129672 27.67,9.07 27.72,8.44 27.04,8.34 26.55,8.38 c -3.932267,0 -7.12,3.187733 -7.12,7.12 V 27 c -0.0057,0.34475 0.27525,0.6257 0.62,0.62 H 31 c 0.34475,0.0057 0.6257,-0.27525 0.62,-0.62 V 22 C 31.614493,18.346158 28.653842,15.385507 25,15.38 Z"></path>
          </g>
        </svg>
        <blockquote id="quote">
          <slot></slot>
        </blockquote>
        <figcaption>
          <p id="author"><slot name="author"></slot></p>
          <p id="title"><slot name="title"></slot></p>
        </figcaption>
      </figure>
    `;
  }
}, "RhBlockquote");
RhBlockquote.styles = rh_blockquote_css_default;
__decorate([
  e5({ type: String })
], RhBlockquote.prototype, "title", void 0);
__decorate([
  e5({ reflect: true, attribute: "color-palette" })
], RhBlockquote.prototype, "colorPalette", void 0);
__decorate([
  e5({ reflect: true })
], RhBlockquote.prototype, "align", void 0);
__decorate([
  e5({ reflect: true, type: Boolean })
], RhBlockquote.prototype, "highlight", void 0);
__decorate([
  e5({ reflect: true })
], RhBlockquote.prototype, "size", void 0);
RhBlockquote = __decorate([
  e4("rh-blockquote")
], RhBlockquote);

// elements/rh-context-provider/rh-context-provider.js
init_lit();
init_decorators();

// lib/context/color.js
init_logger();
init_style_controller();

// lib/context/event.js
function createContext(name, initialValue) {
  return {
    name,
    initialValue
  };
}
__name(createContext, "createContext");
var ContextEvent = class extends Event {
  constructor(context, callback, multiple) {
    super("context-request", { bubbles: true, composed: true });
    this.context = context;
    this.callback = callback;
    this.multiple = multiple;
  }
};
__name(ContextEvent, "ContextEvent");

// lib/context/context-color.css.js
init_lit();
var styles3 = i`:host(:is([on=dark])) { --context: dark; }
:host(:is([on=light])) { --context: light; }
:host(:is([on=saturated])) { --context: saturated; }

/**
 * It's important for \`color-palette\` to take precedence over \`on\`
 * when setting \`--context\`, because a \`dark\` card that's on a \`light\`
 * background must create a new \`dark\` context for its descendents
 */

:host(:is([color-palette=darker],[color-palette=darkest])) {
  --context: dark;
  --rh-context-text: var(--rh-context-dark-color-text, #fff);
  --rh-context-text-muted: var(--rh-context-dark-color-text-muted, #d2d2d2);
  --rh-context-link: var(--rh-context-dark-color-text-link, #73bcf7);
  --rh-context-link-hover: var(--rh-context-dark-color-text-link-hover, #bee1f4);
  --rh-context-link-focus: var(--rh-context-dark-color-text-link-focus, #bee1f4);
  --rh-context-link-visited: var(--rh-context-dark-color-text-link-visited, #a18fff);
  --rh-context-link-visited-hover: var(--rh-context-dark-color-text-link-visited-hover, #cbc1ff);
  /* --rh-context-link-decoration: var(--rh-theme--link-decoration--on-dark, none); */
  /* --rh-context-link-decoration-hover: var(--rh-theme--link-decoration-hover--on-dark, underline); */
  /* --rh-context-link-decoration-focus: var(--rh-theme--link-decoration-focus--on-dark, underline); */
  /* --rh-context-link-decoration--visited: var(--rh-theme--link-decoration--visited--on-dark, none); */
}

:host(:is([color-palette=lighter],[color-palette=lightest],[color-palette=base])) {
  --context: light;
  --rh-context-text: var(--rh-context-light-color-text, #151515);
  --rh-context-text-muted: var(--rh-context-light-color-text-muted, #6a6e73);
  --rh-context-link: var(--rh-context-light-color-text-link, #06c);
  --rh-context-link-hover: var(--rh-context-light-color-text-link-hover, #004080);
  --rh-context-link-focus: var(--rh-context-light-color-text-link-focus, #004080);
  --rh-context-link-visited: var(--rh-context-light-color-text-link-visited, #6753ac);
  --rh-context-link-visited-hover: var(--rh-context-light-color-text-link-visited-hover, #1f0066);
  /* --rh-context-link-decoration: var(--rh-theme--link-decoration, none); */
  /* --rh-context-link-decoration-hover: var(--rh-theme--link-decoration-hover, underline); */
  /* --rh-context-link-decoration-focus: var(--rh-theme--link-decoration-focus, underline); */
  /* --rh-context-link-decoration--visited: var(--rh-theme--link-decoration--visited, none); */
}

/* FIXME: Saturated colours TBD */
/* :host(:is([color-palette=accent],[color-palette=complement],[color-palette=saturated])) { */
/*   --context: saturated; */
/*   --rh-context-text: var(--rh-theme--color--text--on-saturated, #fff); */
/*   --rh-context-text-muted: var(--rh-theme--color--text-muted--on-saturated, #d2d2d2); */
/*   --rh-context-link: var(--rh-theme--color--link-on-saturated, #fff); */
/*   --rh-context-link-hover: var(--rh-theme--color--link-hover--on-saturated, #fafafa); */
/*   --rh-context-link-focus: var(--rh-theme--color--link-focus--on-saturated, #fafafa); */
/*   --rh-context-link-visited: var(--rh-theme--color--link-visited--on-saturated, #d2d2d2); */
/*   --rh-context-link-decoration: var(--rh-theme--link-decoration--on-saturated, underline); */
/*   --rh-context-link-decoration-hover: var(--rh-theme--link-decoration-hover--on-saturated, underline); */
/*   --rh-context-link-decoration-focus: var(--rh-theme--link-decoration-focus--on-saturated, underline); */
/*   --rh-context-link-decoration--visited: var(--rh-theme--link-decoration--visited--on-saturated, underline); */
/* } */

:host(:is([color-palette=lightest])) {
  --rh-context-background-color: var(--rh-color-surface-lighest, #fff);
}

:host(:is([color-palette=lighter])) {
  --rh-context-background-color: var(--rh-color-surface-lighter, #f5f5f5);
}

:host(:is([color-palette=base])) {
  --rh-context-background-color: var(--rh-color-surface-lighest, #fff);
}

:host(:is([color-palette=darker])) {
  --rh-context-background-color: var(--rh-color-surface-darker, #212427);
}

:host(:is([color-palette=darkest])) {
  --rh-context-background-color: var(--rh-color-surface-darkest, #151515);
}

/* FIXME: Saturated colors TBD */
/* :host(:is([color-palette=complement])) { */
/*   --rh-context-background-color: var(--rh-color-surface-complement, #004368); */
/* } */
/**/
/* :host(:is([color-palette=accent])) { */
/*   --rh-context-background-color: var(--rh-color-surface-accent, #00659c); */
/* } */

/* QUESTION: should be specified per component? */
/* :host(:is([color-palette])) { */
/*   background-color: var(--rh-context-background-color, var(--rh-color-surface-base)); */
/* } */

`;
var context_color_css_default = styles3;

// lib/context/color.js
var _ColorContextProvider_instances;
var _ColorContextProvider_onChildContextEvent;
var contextEvents = /* @__PURE__ */ new Map();
var ColorContextController = class {
  constructor(host, options3) {
    this.host = host;
    this.prefix = "rh-";
    this.last = null;
    this.prefix = options3?.prefix ?? "rh-";
    this.context = createContext(`${this.prefix}-color-context`);
    this.logger = new n6(host);
    this.styleController = new l6(host, context_color_css_default);
    host.addController(this);
  }
};
__name(ColorContextController, "ColorContextController");
var ColorContextProvider = class extends ColorContextController {
  constructor(host, options3) {
    super(host, options3);
    _ColorContextProvider_instances.add(this);
    this.callbacks = /* @__PURE__ */ new Set();
    this.mo = new MutationObserver(() => this.update(this.contextVariable));
    this.style = window.getComputedStyle(host);
    this.attribute = options3?.attribute ?? "color-palette";
  }
  get contextVariable() {
    return this.style.getPropertyValue("--context").trim() || null;
  }
  hostConnected() {
    this.host.addEventListener("context-request", (e24) => __classPrivateFieldGet(this, _ColorContextProvider_instances, "m", _ColorContextProvider_onChildContextEvent).call(this, e24));
    this.mo.observe(this.host, { attributes: true, attributeFilter: [this.attribute, "on"] });
    this.update(this.contextVariable);
    for (const [host, fired] of contextEvents) {
      host.dispatchEvent(fired);
    }
  }
  hostDisconnected() {
    this.callbacks.forEach((x13) => this.callbacks.delete(x13));
    this.mo.disconnect();
  }
  isColorContextEvent(event) {
    return event.target !== this.host && event.context.name === `${this.prefix}-color-context`;
  }
  update(next) {
    for (const cb of this.callbacks) {
      cb(next);
    }
  }
};
__name(ColorContextProvider, "ColorContextProvider");
_ColorContextProvider_instances = /* @__PURE__ */ new WeakSet(), _ColorContextProvider_onChildContextEvent = /* @__PURE__ */ __name(function _ColorContextProvider_onChildContextEvent2(event) {
  if (this.isColorContextEvent(event)) {
    event.stopPropagation();
    event.callback(this.contextVariable);
    if (event.multiple) {
      this.callbacks.add(event.callback);
    }
  }
}, "_ColorContextProvider_onChildContextEvent");
var ColorContextConsumer = class extends ColorContextController {
  constructor(host, options3) {
    super(host, options3);
    this.override = null;
    this.attribute ?? (this.attribute = "on");
  }
  hostConnected() {
    const event = new ContextEvent(this.context, (e24) => this.contextCallback(e24), true);
    this.override = this.host.getAttribute(this.attribute);
    this.host.dispatchEvent(event);
    contextEvents.set(this.host, event);
  }
  hostDisconnected() {
    this.dispose?.();
    this.dispose = void 0;
    contextEvents.delete(this.host);
  }
  contextCallback(value, dispose) {
    if (dispose && dispose !== this.dispose) {
      this.dispose?.();
      this.dispose = dispose;
    }
    this.update(value);
  }
  update(next) {
    if (!this.override && next !== this.last) {
      this.last = next;
      this.logger.log(`setting context from ${this.host.getAttribute(this.attribute)} to ${next}`);
      if (next == null) {
        this.host.removeAttribute(this.attribute);
      } else {
        this.host.setAttribute(this.attribute, next);
      }
    }
  }
};
__name(ColorContextConsumer, "ColorContextConsumer");
function colorContextProvider(options3) {
  return function(proto, _7) {
    proto.constructor.addInitializer((instance) => {
      instance.__colorContextProvider = new ColorContextProvider(instance, options3);
    });
  };
}
__name(colorContextProvider, "colorContextProvider");
function colorContextConsumer(options3) {
  return function(proto, _7) {
    proto.constructor.addInitializer((instance) => {
      instance.__colorContextConsumer = new ColorContextConsumer(instance, options3);
    });
  };
}
__name(colorContextConsumer, "colorContextConsumer");

// elements/rh-context-provider/rh-context-provider.css.js
init_lit();
var styles4 = i`:host {
  background-color: var(--rh-context-background-color);
  color: var(--rh-context-text);
}
`;
var rh_context_provider_css_default = styles4;

// elements/rh-context-provider/rh-context-provider.js
var ContextProvider = /* @__PURE__ */ __name(class ContextProvider2 extends s4 {
  render() {
    return y`<slot></slot>`;
  }
}, "ContextProvider");
ContextProvider.styles = [context_color_css_default, rh_context_provider_css_default];
__decorate([
  colorContextProvider(),
  e5({ reflect: true, attribute: "color-palette" })
], ContextProvider.prototype, "colorPalette", void 0);
__decorate([
  colorContextConsumer(),
  e5({ reflect: true })
], ContextProvider.prototype, "on", void 0);
ContextProvider = __decorate([
  e4("rh-context-provider")
], ContextProvider);

// elements/rh-cta/rh-cta.js
init_lit();
init_decorators();
init_logger();

// lib/DirController.js
var _DirController_instances;
var _DirController_getDirContext;
var DirController = class {
  constructor(host) {
    this.host = host;
    _DirController_instances.add(this);
    this.dir = __classPrivateFieldGet(this, _DirController_instances, "m", _DirController_getDirContext).call(this);
  }
  hostConnected() {
    this.dir = __classPrivateFieldGet(this, _DirController_instances, "m", _DirController_getDirContext).call(this);
  }
};
__name(DirController, "DirController");
_DirController_instances = /* @__PURE__ */ new WeakSet(), _DirController_getDirContext = /* @__PURE__ */ __name(function _DirController_getDirContext2() {
  let host = this.host;
  while (host) {
    const dirContext = host.closest("[dir]");
    if (dirContext?.hasAttribute("dir")) {
      return dirContext?.getAttribute("dir") || "ltr";
    } else {
      ({ host } = host?.getRootNode() ?? {});
    }
  }
  return "ltr";
}, "_DirController_getDirContext");

// node_modules/lit-html/directives/class-map.js
init_lit_html();
init_directive();
var o8 = e8(class extends i10 {
  constructor(t15) {
    var i22;
    if (super(t15), t15.type !== t5.ATTRIBUTE || "class" !== t15.name || (null === (i22 = t15.strings) || void 0 === i22 ? void 0 : i22.length) > 2)
      throw Error("`classMap()` can only be used in the `class` attribute and must be the only part in the attribute.");
  }
  render(t15) {
    return " " + Object.keys(t15).filter((i22) => t15[i22]).join(" ") + " ";
  }
  update(i22, [s23]) {
    var r21, o24;
    if (void 0 === this.nt) {
      this.nt = /* @__PURE__ */ new Set(), void 0 !== i22.strings && (this.st = new Set(i22.strings.join(" ").split(/\s/).filter((t15) => "" !== t15)));
      for (const t15 in s23)
        s23[t15] && !(null === (r21 = this.st) || void 0 === r21 ? void 0 : r21.has(t15)) && this.nt.add(t15);
      return this.render(s23);
    }
    const e24 = i22.element.classList;
    this.nt.forEach((t15) => {
      t15 in s23 || (e24.remove(t15), this.nt.delete(t15));
    });
    for (const t15 in s23) {
      const i23 = !!s23[t15];
      i23 === this.nt.has(t15) || (null === (o24 = this.st) || void 0 === o24 ? void 0 : o24.has(t15)) || (i23 ? (e24.add(t15), this.nt.add(t15)) : (e24.remove(t15), this.nt.delete(t15)));
    }
    return x;
  }
});

// elements/rh-cta/rh-cta.js
init_pfe_icon();

// elements/rh-cta/rh-cta.css.js
init_lit();
var styles5 = i`:host {
  display: inline-flex;
  position: relative;
  z-index: 0;
  align-items: center;
  max-width: max-content;
  background-color: var(--rh-cta-background-color);
  border-radius: var(--rh-border-radius-default, 3px);
  border: var(--rh-border-width-sm, 1px);
  cursor: pointer;

  --rh-context-background-color: var(--rh-cta-background-color) !important;
}

::slotted(*) {
  white-space: normal;
  display: inline;
  padding: var(--rh-space-md, 8px) 0 !important;
  color: inherit !important;
  font-family: inherit !important;
  font-size: inherit !important;
  font-weight: inherit !important;
  line-height: inherit !important;
  text-decoration: inherit !important;
}

::slotted(button),
::slotted(input) {
  background-color: transparent;
  border: medium none;
  margin: 0;
  padding: 0;
  text-align: left;
}

#container {
  display: block;
  white-space: nowrap;
  min-width: 100%;
  color: var(--rh-cta-color);
  font-family: var(--rh-font-family-heading, RedHatDisplay, "Red Hat Display", "Noto Sans Arabic", "Noto Sans Hebrew", "Noto Sans JP", "Noto Sans KR", "Noto Sans Malayalam", "Noto Sans SC", "Noto Sans TC", "Noto Sans Thai", Overpass, Helvetica, Arial, sans-serif);
  font-size: var(--rh-font-size-text-xl, 1.125rem);
  font-weight: var(--rh-font-weight-bold, 600);
  line-height: var(--rh-line-height-lg, 1.5);
  text-decoration: var(--rh-cta-text-decoration);

  --_arrow-size: 13px;
}

/** Inner border */
#container:after {
  --_offset: 1px;

  content: "";
  display: block;
  height: calc(100% - var(--_offset) * 2);
  width: calc(100% - var(--_offset) * 2);
  box-sizing: border-box;
  position: absolute;
  top: var(--_offset);
  left: var(--_offset);
  z-index: -1;
  border: var(--rh-border-width-sm, 1px);
  border-radius: 2px;
  outline: none;
}

/** Default variant arrow icon */
svg {
  display: inline;
  fill: currentcolor;
  width: var(--_arrow-size);
  height: var(--_arrow-size);
  margin-bottom: -1px;
  padding-inline: 3px;
  translate: 0 0;
  transition: translate var(--_trans);

  --_trans:
    var(--rh-animation-speed, 0.3s)
    var(--rh-animation-timing, cubic-bezier(0.465, 0.183, 0.153, 0.946));
}

#container.rtl svg {
  rotate: 180deg;
}

/*****************************************************************************
 * FOCUS STATE                                                               *
 *****************************************************************************/

:host(:is(:focus, :focus-within)),
:host(:is(:focus, :focus-within)) ::slotted(*),
::slotted(:focus) {
  outline: none !important;
}

:host(:is(:focus, :focus-within)) {
  border-color: var(--rh-cta-focus-border-color);

  --rh-cta-inner-border-color: var(--rh-cta-focus-inner-border-color);
  --rh-cta-background-color: var(--rh-cta-focus-background-color) !important;
}

:host(:is(:focus, :focus-within)) #container {
  --rh-cta-color: var(--rh-cta-focus-color);
  --rh-cta-text-decoration: var(--rh-cta-focus-text-decoration);

  background-color:
    var(
      --rh-cta-focus-container-background-color,
      var(--rh-cta-focus-background-color)
    );
}

/*****************************************************************************
 * HOVER STATE                                                               *
 *****************************************************************************/

:host(:hover) {
  background-color: var(--rh-cta-hover-background-color);
  border-color: var(--rh-cta-hover-border-color);

  --rh-cta-inner-border-color: var(--rh-cta-hover-inner-border-color);
}

:host(:hover) #container {
  color: var(--rh-cta-hover-color);

  --rh-cta-text-decoration: var(--rh-cta-hover-text-decoration);
}

:host(:hover) #container svg {
  translate: 3px 0;
}

:host(:hover) #container.rtl svg {
  translate: -3px 0;
}

/*****************************************************************************
 * ACTIVE STATE                                                              *
 *****************************************************************************/

:host(:active) {
  background-color: var(--rh-cta-active-background-color);

  --rh-cta-inner-border-color: var(--rh-cta-active-inner-border-color) !important;
}

:host(:active) #container {
  --rh-cta-background-color:
    var(
      --rh-cta-active-container-background-color,
      var(--rh-cta-active-background-color)
    );
}

/*****************************************************************************
 * VARIANTS                                                                  *
 *****************************************************************************/

:host([variant]) #container {
  display: flex;
  flex-flow: row nowrap;
  align-items: center;
  height: 100%;
  background-color: transparent;
}

:host([variant\$="ary"]) ::slotted(*) {
  font-size: var(--rh-cta-font-size-priority, var(--rh-font-size-text-lg, 1rem));
  text-align: center;
}

:host([variant]) ::slotted(*) {
  padding: var(--rh-space-lg, 16px) var(--rh-space-xl, 24px) !important;
}

/* prefer to group state-bound styles */
/* stylelint-disable-next-line no-descending-specificity */
:host([variant]) #container svg {
  display: none;
}

/*****************************************************************************
 * DEFAULT
 *****************************************************************************/

:host(:not([variant])) {
  --rh-cta-background-color: transparent;
  --rh-cta-border-color: transparent;
  --rh-cta-color: var(--rh-color-interactive-blue, #0066cc);
  --rh-cta-hover-background-color: transparent;
  --rh-cta-hover-border-color: transparent;
  --rh-cta-hover-inner-border-color: transparent;
  --rh-cta-hover-color: var(--rh-context-color-link-hover, #004080);
  --rh-cta-hover-text-decoration: none;
  --rh-cta-focus-background-color: transparent;

  /* --rh-color-border-interactive-on-light with 10% opacity */
  --rh-cta-focus-container-background-color: #0066cc1a;
  --rh-cta-focus-border-color: transparent;
  --rh-cta-focus-color: var(--rh-context-light-color-focus, #0066cc);
  --rh-cta-focus-inner-border-color: transparent;
  --rh-cta-focus-text-decoration: none;

  /* --rh-color-border-interactive-on-light with 10% opacity */
  --rh-cta-active-container-background-color: #0066cc1a;
  --rh-cta-active-inner-border-color: transparent;
  --rh-cta-active-text-decoration: none;
}

:host(:not([variant])[on="dark"]) {
  --rh-cta-color: var(--rh-color-interactive-blue-lighter, #73bcf7);
  --rh-cta-hover-color: var(--rh-color-interactive-blue-lightest, #bee1f4);

  /* --rh-color-interactive-blue-lighter with 25% opacity */
  --rh-cta-focus-container-background-color: #73bcf740;
  --rh-cta-focus-border-color: transparent;
  --rh-cta-focus-color: var(--rh-color-interactive-blue-lighter, #73bcf7);
  --rh-cta-focus-inner-border-color: transparent;
  --rh-cta-focus-text-decoration: none;

  /* --rh-color-interactive-blue-lighter with 25% opacity */
  --rh-cta-active-container-background-color: #73bcf740;
  --rh-cta-active-text-decoration: none;
}

/*****************************************************************************
 * PRIMARY
 *****************************************************************************/

:host([variant="primary"]) {
  --rh-cta-background-color: var(--rh-color-brand-red-on-light, #ee0000);
  --rh-cta-border-color: var(--rh-color-brand-red-on-light, #ee0000);
  --rh-cta-color: var(--rh-color-text-primary-on-dark, #ffffff);
  --rh-cta-hover-background-color: var(--rh-color-brand-red-dark, #be0000);
  --rh-cta-hover-border-color: var(--rh-color-brand-red-dark, #be0000);
  --rh-cta-hover-color: var(--rh-color-text-primary-on-dark, #ffffff);
  --rh-cta-focus-background-color: var(--rh-color-brand-red-on-light, #ee0000);
  --rh-cta-focus-border-color: var(--rh-color-brand-red-on-light, #ee0000);
  --rh-cta-focus-color: var(--rh-color-text-primary-on-dark, #ffffff);
  --rh-cta-focus-inner-border-color: var(--rh-color-text-primary-on-dark, #ffffff);
  --rh-cta-active-background-color: var(--rh-color-brand-red-dark, #be0000);
  --rh-cta-active-inner-border-color: var(--rh-color-text-primary-on-dark, #ffffff);
}

/*****************************************************************************
 * SECONDARY
 *****************************************************************************/

:host([variant="secondary"]) {
  --rh-cta-background-color: transparent;
  --rh-cta-border-color: var(--rh-color-surface-darkest, #151515);
  --rh-cta-color: var(--rh-color-text-primary-on-light, #151515);
  --rh-cta-hover-background-color: var(--rh-color-surface-darkest, #151515);
  --rh-cta-hover-border-color: var(--rh-color-surface-darkest, #151515);
  --rh-cta-hover-color: var(--rh-color-primary-on-dark, #ffffff);
  --rh-cta-focus-background-color: var(--rh-color-surface-light, #f0f0f0);
  --rh-cta-focus-border-color: var(--rh-color-surface-darkest, #151515);
  --rh-cta-focus-color: var(--rh-color-surface-darkest, #151515);
  --rh-cta-focus-inner-border-color: var(--rh-color-surface-darkest, #151515);
  --rh-cta-active-color: var(--rh-color-surface-lightest, #ffffff);
  --rh-cta-active-background-color: var(--rh-color-surface-darkest, #151515);
  --rh-cta-active-inner-border-color: var(--rh-color-surface-light, #f0f0f0);
}

:host([variant="secondary"][on="dark"]) {
  --rh-cta-border-color: var(--rh-color-border-strong-on-dark, #ffffff);
  --rh-cta-color: var(--rh-color-text-primary-on-dark, #ffffff);
  --rh-cta-hover-background-color: var(--rh-color-surface-lightest, #ffffff);
  --rh-cta-hover-border-color: var(--rh-color-surface-lightest, #ffffff);
  --rh-cta-hover-color: var(--rh-color-text-primary-on-light, #151515);
  --rh-cta-focus-background-color: var(--rh-color-surface-dark, #3c3f42);
  --rh-cta-focus-border-color: var(--rh-color-border-strong-on-dark, #ffffff);
  --rh-cta-focus-inner-border-color: var(--rh-color-border-strong-on-dark, #ffffff);
  --rh-cta-focus-color: var(--rh-color-text-primary-on-dark, #ffffff);
  --rh-cta-active-color: var(--rh-color-text-primary-on-light, #151515);
  --rh-cta-active-background-color: var(--rh-color-surface-lightest, #ffffff);
  --rh-cta-active-inner-border-color: var(--rh-color-border-strong-on-light, #151515);
}

/*****************************************************************************
 * BRICK
 *****************************************************************************/

:host([variant="brick"]) #container {
  font-weight: var(--rh-font-weight-body-text-regular, 400);
}

:host([variant="brick"]) {
  --rh-cta-background-color: transparent;
  --rh-cta-border-color: var(--rh-color-border-subtle-on-light, #d2d2d2);
  --rh-cta-color: var(--rh-color-interactive-blue-darker, #0066cc);
  --rh-cta-hover-background-color: var(--rh-color-surface-lighter, #f5f5f5);
  --rh-cta-hover-border-color: var(--rh-color-border-subtle-on-light, #d2d2d2);
  --rh-cta-hover-color: var(--rh-color-interactive-blue-darkest, #004080);
  --rh-cta-hover-text-decoration: underline;
  --rh-cta-focus-color: var(--rh-color-interactive-blue-darker, #0066cc);
  --rh-cta-focus-border-color: var(--rh-color-border-subtle-on-light, #d2d2d2);
  --rh-cta-focus-inner-border-color: var(--rh-color-border-subtle-on-light, #d2d2d2);
  --rh-cta-focus-text-decoration: none;
  --rh-cta-active-background-color: var(--rh-color-surface-lighter, #f5f5f5);
  --rh-cta-active-inner-border-color: var(--rh-color-border-subtle-on-light, #d2d2d2);
  --rh-cta-active-text-decoration: underline;
}

:host([variant="brick"][on="dark"]) {
  --rh-cta-border-color: var(--rh-color-border-subtle-on-dark, #6a6e73);
  --rh-cta-color: var(--rh-color-interactive-blue-lighter, #73bcf7);
  --rh-cta-hover-background-color: var(--rh-color-surface-darker, #212427);
  --rh-cta-hover-border-color: var(--rh-color-border-subtle-on-dark, #6a6e73);
  --rh-cta-hover-color: var(--rh-color-interactive-blue-lightest, #bee1f4);
  --rh-cta-hover-text-decoration: underline;
  --rh-cta-focus-color: var(--rh-color-interactive-blue-lighter, #73bcf7);
  --rh-cta-focus-border-color: var(--rh-color-border-subtle-on-dark, #6a6e73);
  --rh-cta-focus-inner-border-color: var(--rh-color-border-subtle-on-dark, #6a6e73);
  --rh-cta-focus-text-decoration: none;
  --rh-cta-active-background-color: var(--rh-color-surface-darker, #212427);
  --rh-cta-active-inner-border-color: var(--rh-color-border-subtle-on-dark, #6a6e73);
  --rh-cta-active-text-decoration: underline;
}

/* chrome <= 103 */
@supports not (translate: 0 0) {
  svg {
    transform: translate(0, 0);
    transition: transform var(--_trans);
  }

  #container.rtl svg { transform: translate(0, 0) rotate(180deg); }
  :host(:hover) #container svg { transform: translate(3px, 0); }
  :host(:hover) #container.rtl svg { transform: translate(-3px, 0) rotate(180deg); }
}
`;
var rh_cta_css_default = styles5;

// elements/rh-cta/rh-cta.js
var _RhCta_instances;
var _RhCta_initializing;
var _RhCta_dir;
var _RhCta_logger;
var _RhCta_isDefault_get;
var supportedTags = ["a", "button"];
function isSupportedContent(el) {
  return !!el && supportedTags.includes(el.localName);
}
__name(isSupportedContent, "isSupportedContent");
var CONTENT = /* @__PURE__ */ new WeakMap();
function contentInitialized(el) {
  return !!el && !!CONTENT.get(el);
}
__name(contentInitialized, "contentInitialized");
function isButton(element) {
  return element.tagName.toLowerCase() === "button";
}
__name(isButton, "isButton");
var RhCta = /* @__PURE__ */ __name(class RhCta2 extends s4 {
  constructor() {
    super(...arguments);
    _RhCta_instances.add(this);
    this.cta = null;
    _RhCta_initializing.set(this, false);
    _RhCta_dir.set(this, new DirController(this));
    _RhCta_logger.set(this, new n6(this));
  }
  render() {
    const rtl = __classPrivateFieldGet(this, _RhCta_dir, "f").dir === "rtl";
    return y`
      <span id="container" part="container" class="${o8({ rtl })}">
        <slot @slotchange=${this.firstUpdated}></slot>${!__classPrivateFieldGet(this, _RhCta_instances, "a", _RhCta_isDefault_get) && !this.icon ? "" : this.icon ? y`
        <pfe-icon icon=${this.icon} size="sm"></pfe-icon>` : y`&nbsp;<svg xmlns="http://www.w3.org/2000/svg"
          viewBox="0 0 31.56 31.56" focusable="false" width="1em">
          <path d="M15.78 0l-3.1 3.1 10.5 10.49H0v4.38h23.18l-10.5 10.49 3.1 3.1 15.78-15.78L15.78 0z" />
        </svg>`}
      </span>
    `;
  }
  firstUpdated() {
    let [cta] = this.shadowRoot?.querySelector("slot")?.assignedElements() ?? [];
    while (cta instanceof HTMLSlotElement) {
      [cta] = cta.assignedElements();
    }
    if (contentInitialized(cta) || __classPrivateFieldGet(this, _RhCta_initializing, "f")) {
      return;
    }
    __classPrivateFieldSet(this, _RhCta_initializing, true, "f");
    if (!isSupportedContent(cta)) {
      return __classPrivateFieldGet(this, _RhCta_logger, "f").warn(`The first child in the light DOM must be a supported call-to-action tag (<a>, <button>)`);
    } else if (isButton(cta) && !this.variant) {
      return __classPrivateFieldGet(this, _RhCta_logger, "f").warn(`Button tag is not supported semantically by the default link styles`);
    } else {
      this.cta = cta;
      CONTENT.set(this.cta, true);
      __classPrivateFieldSet(this, _RhCta_initializing, false, "f");
    }
  }
}, "RhCta");
_RhCta_initializing = /* @__PURE__ */ new WeakMap(), _RhCta_dir = /* @__PURE__ */ new WeakMap(), _RhCta_logger = /* @__PURE__ */ new WeakMap(), _RhCta_instances = /* @__PURE__ */ new WeakSet(), _RhCta_isDefault_get = /* @__PURE__ */ __name(function _RhCta_isDefault_get2() {
  return !this.hasAttribute("variant");
}, "_RhCta_isDefault_get");
RhCta.version = "{{version}}";
RhCta.styles = [rh_cta_css_default];
__decorate([
  e5({ reflect: true })
], RhCta.prototype, "variant", void 0);
__decorate([
  colorContextProvider(),
  e5({ reflect: true, attribute: "color-palette" })
], RhCta.prototype, "colorPalette", void 0);
__decorate([
  colorContextConsumer(),
  e5({ reflect: true })
], RhCta.prototype, "on", void 0);
__decorate([
  e5({ reflect: true })
], RhCta.prototype, "icon", void 0);
RhCta = __decorate([
  e4("rh-cta")
], RhCta);

// elements/rh-demo/rh-demo.js
init_lit();
init_decorators();

// elements/rh-demo/rh-demo.css.js
init_lit();
var styles6 = i`pfe-accordion {
  --pfe-accordion--MaxWidth--content: none;
}

code-sample {
  display: flex;
  flex: 1 1 auto;
  flex-direction: column;
}
`;
var rh_demo_css_default = styles6;

// elements/rh-demo/rh-demo.js
var RhDemo = /* @__PURE__ */ __name(class RhDemo2 extends s4 {
  constructor() {
    super();
    Promise.resolve().then(() => init_pfe_accordion());
    Promise.resolve().then(() => init_code_sample());
  }
  createRenderRoot() {
    return this;
  }
  firstUpdated() {
    this.syncCodeEditor();
  }
  syncCodeEditor() {
    const template = this.querySelector("template");
    if (template) {
      const output = this.renderRoot.querySelector(".rh-demo-code-area template");
      if (output) {
        output.innerHTML = template.innerHTML;
        this.syncPreview();
      }
    }
  }
  syncPreview() {
    const preview = this.renderRoot.querySelector(".rh-demo-preview-area");
    if (preview) {
      preview.innerHTML = this.renderRoot.querySelector(".rh-demo-code-area template")?.innerHTML || "";
    }
  }
  render() {
    return y`
      <div class="rh-demo-preview-area"></div>
      <div part="code" class="rh-demo-code-area">
        <pfe-accordion>
          <pfe-accordion-header>
            <h3>View code</h3>
          </pfe-accordion-header>
          <pfe-accordion-panel>
            <code-sample>
              <template></template>
            </code-sample>
          </pfe-accordion-panel>
        </pfe-accordion>
      </div>
    `;
  }
}, "RhDemo");
RhDemo.styles = rh_demo_css_default;
RhDemo = __decorate([
  e4("rh-demo")
], RhDemo);

// elements/rh-dialog/rh-dialog.js
init_lit();
init_decorators();
init_observed();

// node_modules/@patternfly/pfe-modal/pfe-modal.js
init_lit();
init_decorators();

// node_modules/lit-html/directives/if-defined.js
init_lit_html();
var l14 = /* @__PURE__ */ __name((l23) => null != l23 ? l23 : b, "l");

// node_modules/@patternfly/pfe-modal/pfe-modal.js
init_core();
init_decorators2();
init_random();
init_deprecatedCustomEvent();
init_slot_controller();
init_lit();
var w2 = Object.defineProperty;
var k4 = Object.getOwnPropertyDescriptor;
var o13 = /* @__PURE__ */ __name((s23, d13, e24, r21) => {
  for (var a20 = r21 > 1 ? void 0 : r21 ? k4(d13, e24) : d13, l23 = s23.length - 1, i22; l23 >= 0; l23--)
    (i22 = s23[l23]) && (a20 = (r21 ? i22(d13, e24, a20) : i22(a20)) || a20);
  return r21 && a20 && w2(d13, e24, a20), a20;
}, "o");
var L2 = i`:host{display:block;position:relative}[hidden]{display:none!important}section{display:flex;position:fixed;height:100%;width:100%;top:0;left:0;align-items:center;justify-content:center;z-index:var(--pf-c-modal-box--ZIndex,var(--pf-global--ZIndex--xl,500))}#container{position:relative;max-height:inherit}[part=overlay]{position:fixed;height:100%;width:100%;top:0;left:0;background-color:var(--pf-c-backdrop--BackgroundColor,var(--pf-global--BackgroundColor--dark-transparent-100,rgba(3,3,3,.62)))}[part=dialog]{position:relative;margin:0 auto;width:var(--pf-c-modal-box--Width,calc(100% - var(--pf-global--spacer--xl,2rem)));max-width:var(--pf-c-modal-box--MaxWidth,calc(100% - var(--pf-global--spacer--xl,2rem)));max-height:var(--pf-c-modal-box--MaxHeight,calc(100% - var(--pf-global--spacer--2xl,3rem)));box-shadow:var(--pf-c-modal-box--BoxShadow,var(--pf-global--BoxShadow--xl,0 1rem 2rem 0 rgba(3,3,3,.16),0 0 .5rem 0 rgba(3,3,3,.1)));background-color:var(--pf-c-modal-box--BackgroundColor,var(--pf-global--BackgroundColor--100,var(--pf-global--BackgroundColor--100,#fff)));padding:var(--pf-global--spacer--lg,1.5rem);margin-inline:var(--pf-global--spacer--md,1rem)}:host([variant]) [part=dialog],:host([width]) [part=dialog]{margin-inline:0}:host([variant=small]) [part=dialog],:host([width=small]) [part=dialog]{--pf-c-modal-box--Width:var(--pf-c-modal-box--m-sm--sm--MaxWidth, 35rem)}:host([variant=medium]) [part=dialog],:host([width=medium]) [part=dialog]{--pf-c-modal-box--Width:var(--pf-c-modal-box--m-md--Width, 52.5rem)}:host([variant=large]) [part=dialog],:host([width=large]) [part=dialog]{--pf-c-modal-box--Width:var(--pf-c-modal-box--m-lg--lg--MaxWidth, 70rem)}[part=content]{overflow-y:auto;overscroll-behavior:contain;max-height:var(--pf-c-modal-box--MaxHeight,calc(100vh - var(--pf-global--spacer--2xl,3rem)));box-sizing:border-box}[part=content] ::slotted([slot=header]){margin-top:0!important}header{position:sticky;top:0;background-color:var(--pf-c-modal-box--BackgroundColor,var(--pf-global--BackgroundColor--100,var(--pf-global--BackgroundColor--100,#fff)))}header ::slotted(:is(h1,h2,h3,h4,h5,h6)[slot=header]){font-size:var(--pf-c-modal-box__title--FontSize, var(--pf-global--FontSize--2xl, 1.5rem));font-weight:var(--pf-global--FontWeight--normal,400);font-family:var(--pf-c-modal-box__title--FontFamily, var(--pf-global--FontFamily--heading--sans-serif, var(--pf-global--FontFamily--redhat-updated--heading--sans-serif, "RedHatDisplayUpdated", "Overpass", overpass, helvetica, arial, sans-serif)))}[part=close-button]{background-color:transparent;border:none;margin:0;padding:0;text-align:left;position:absolute;cursor:pointer;line-height:24px;padding-block:var(--pf-c-button--PaddingTop,var(--pf-global--spacer--form-element,0.375rem));padding-inline:var(--pf-c-button--PaddingRight,var(--pf-global--spacer--md,1rem));top:0;right:calc(var(--pf-global--spacer--lg,1.5rem)/ -3);color:var(--pf-c-button--m-plain--Color,var(--pf-global--Color--200,#6a6e73));font-size:var(--pf-c-button--FontSize, var(--pf-global--FontSize--md, 1rem))}[part=close-button]:is(:focus-within,:focus-visible,:hover){color:var(--pf-c-button--m-plain--focus--Color,var(--pf-global--Color--100,#151515))}[part=close-button]>svg{font-size:16px;width:var(--pf-global--spacer--md,1rem);aspect-ratio:1/1}:host([position=top]) #dialog{align-self:start;margin-block:var(--pf-c-modal-box--m-align-top--MarginTop,var(--pf-c-modal-box--m-align-top--spacer,2rem));margin-inline:var(--pf-global--spacer--md,1rem);width:100%;max-width:var(--pf-c-modal-box--m-align-top--MaxWidth,calc(100% - min(var(--pf-c-modal-box--m-align-top--spacer,2rem) * 2,var(--pf-global--spacer--xl,2rem))));max-height:var(--pf-c-modal-box--m-align-top--MaxHeight,calc(100% - min(var(--pf-c-modal-box--m-align-top--spacer,var(--pf-global--spacer--sm,.5rem)),var(--pf-global--spacer--2xl,3rem)) - var(--pf-c-modal-box--m-align-top--spacer,var(--pf-global--spacer--sm,.5rem))))}footer{display:flex;align-items:center;gap:var(--pf-global--spacer--xl,.5rem)}`;
var v4 = L2;
var h7 = /* @__PURE__ */ __name(class extends n10 {
  constructor() {
    super("cancel");
  }
}, "h");
var g3 = /* @__PURE__ */ __name(class extends n10 {
  constructor() {
    super("close");
  }
}, "g");
var m8 = /* @__PURE__ */ __name(class extends n10 {
  constructor(e24) {
    super("open");
    this.trigger = e24;
  }
}, "m");
var t7 = /* @__PURE__ */ __name(class extends s4 {
  constructor() {
    super(...arguments);
    this.open = false;
    this.returnValue = "";
    this.headerId = n11();
    this.triggerElement = null;
    this.header = null;
    this.body = [];
    this.headings = [];
    this.cancelling = false;
    this.slots = new l11(this, { slots: [null, "header", "description", "footer"], deprecations: { header: "pfe-modal--header" } });
  }
  connectedCallback() {
    super.connectedCallback(), this.addEventListener("keydown", this.onKeydown), this.addEventListener("click", this.onClick);
  }
  render() {
    let e24 = this.header || this.headings.length ? this.headerId : void 0, r21 = this.triggerElement ? this.triggerElement.innerText : void 0, a20 = this.slots.hasSlotted("header", "pfe-modal--header"), l23 = this.slots.hasSlotted("description"), i22 = this.slots.hasSlotted("footer");
    return y`<section ?hidden="${!this.open}"><div id="overlay" part="overlay" ?hidden="${!this.open}"></div><div id="dialog" part="dialog" tabindex="0" role="dialog" aria-labelledby="${l14(e24)}" aria-label="${l14(r21)}" ?hidden="${!this.open}"><div id="container"><div id="content" part="content" class="${o8({ hasHeader: a20, hasDescription: l23, hasFooter: i22 })}"><header part="header"><slot name="header"></slot><slot name="pfe-modal--header"></slot><div part="description" ?hidden="${!l23}"><slot name="description"></slot></div></header><slot></slot><footer ?hidden="${!i22}" part="footer"><slot name="footer"></slot></footer></div><button id="close-button" part="close-button" aria-label="Close dialog" @keydown="${this.onKeydown}" @click="${this.close}"><svg fill="currentColor" viewBox="0 0 352 512"><path d="M242.72 256l100.07-100.07c12.28-12.28 12.28-32.19 0-44.48l-22.24-22.24c-12.28-12.28-32.19-12.28-44.48 0L176 189.28 75.93 89.21c-12.28-12.28-32.19-12.28-44.48 0L9.21 111.45c-12.28 12.28-12.28 32.19 0 44.48L109.28 256 9.21 356.07c-12.28 12.28-12.28 32.19 0 44.48l22.24 22.24c12.28 12.28 32.2 12.28 44.48 0L176 322.72l100.07 100.07c12.28 12.28 32.2 12.28 44.48 0l22.24-22.24c12.28-12.28 12.28-32.19 0-44.48L242.72 256z"></path></svg></button></div></div></section>`;
  }
  disconnectedCallback() {
    super.disconnectedCallback(), this.removeEventListener("keydown", this.onKeydown), this.triggerElement?.removeEventListener("click", this.onTriggerClick);
  }
  async _init() {
    await this.updateComplete, this.header = this.querySelector('[slot$="header"]'), this.body = [...this.querySelectorAll("*:not([slot])")], this.headings = this.body.filter((e24) => e24.tagName.slice(0, 1) === "H"), this.triggerElement && (this.triggerElement.addEventListener("click", this.onTriggerClick), this.removeAttribute("hidden")), this.header ? this.header.id = this.headerId : this.headings.length > 0 && (this.headings[0].id = this.headerId);
  }
  async _openChanged(e24, r21) {
    if (!(e24 == null || r21 == null || e24 == r21))
      if (this.open)
        document.body.style.overflow = "hidden", await this.updateComplete, this.dialog?.focus(), this.dispatchEvent(new m8(this.triggerElement)), this.dispatchEvent(n12("pfe-modal:open", { open: true, ...this.triggerElement ? { trigger: this.triggerElement } : {} }));
      else {
        document.body.style.overflow = "auto";
        let { cancelling: a20 } = this;
        await this.updateComplete, this.triggerElement && this.triggerElement.focus(), this.dispatchEvent(a20 ? new h7() : new g3()), this.dispatchEvent(n12("pfe-modal:close", { open: false }));
      }
  }
  _triggerChanged() {
    this.trigger && (this.triggerElement = this.getRootNode().getElementById(this.trigger), this.triggerElement?.addEventListener("click", this.onTriggerClick));
  }
  onTriggerClick(e24) {
    e24.preventDefault(), this.showModal();
  }
  onClick(e24) {
    let { open: r21, overlay: a20, dialog: l23 } = this;
    if (r21) {
      let i22 = e24.composedPath(), { closeOnOutsideClick: E5 } = this.constructor;
      E5 && i22.includes(a20) && !i22.includes(l23) && (e24.preventDefault(), this.cancel());
    }
  }
  onKeydown(e24) {
    switch (e24.key) {
      case "Tab":
        e24.target === this.closeButton && (e24.preventDefault(), this.dialog?.focus());
        return;
      case "Escape":
      case "Esc":
        e24.preventDefault(), this.cancel();
        return;
      case "Enter":
        e24.target === this.triggerElement && (e24.preventDefault(), this.showModal());
        return;
    }
  }
  async cancel() {
    this.cancelling = true, this.open = false, await this.updateComplete, this.cancelling = false;
  }
  setTrigger(e24) {
    this.triggerElement = e24, this.triggerElement.addEventListener("click", this.onTriggerClick);
  }
  toggle() {
    this.open = !this.open;
  }
  show() {
    this.open = true;
  }
  showModal() {
    this.show();
  }
  close(e24) {
    typeof e24 == "string" && (this.returnValue = e24), this.open = false;
  }
}, "t");
t7.shadowRootOptions = { ...s4.shadowRootOptions, delegatesFocus: true }, t7.version = "2.0.0-next.4", t7.styles = [v4], t7.closeOnOutsideClick = false, o13([e5({ reflect: true })], t7.prototype, "variant", 2), o13([d3({ alias: "variant", attribute: "width" })], t7.prototype, "width", 2), o13([e5({ reflect: true })], t7.prototype, "position", 2), o13([p3, e5({ type: Boolean, reflect: true })], t7.prototype, "open", 2), o13([p3, e5()], t7.prototype, "trigger", 2), o13([i4("#overlay")], t7.prototype, "overlay", 2), o13([i4("#dialog")], t7.prototype, "dialog", 2), o13([i4("#close-button")], t7.prototype, "closeButton", 2), o13([c6()], t7.prototype, "_init", 1), o13([o6], t7.prototype, "onTriggerClick", 1), o13([o6], t7.prototype, "onClick", 1), o13([o6], t7.prototype, "onKeydown", 1), o13([o6], t7.prototype, "toggle", 1), o13([o6], t7.prototype, "show", 1), o13([o6], t7.prototype, "showModal", 1), o13([o6], t7.prototype, "close", 1), t7 = o13([e4("pfe-modal")], t7);

// lib/ScreenSizeController.js
init_bound();

// lib/tokens.js
init_lit();
var mobileBreakpoint = r`700px`;
var mobileXlBreakpoint = r`1008px`;
var desktopLargeBreakpoint = r`1368px`;
var desktopSmallBreakpoint = r`1200px`;
var tabletLandscapeBreakpoint = r`992px`;
var tabletPortraitBreakpoint = r`768px`;
var mobileLandscapeBreakpoint = r`576px`;
var mobilePortraitBreakpoint = r`320px`;

// lib/ScreenSizeController.js
var ScreenSizeController = class {
  constructor(host, breakpoint, options3) {
    this.host = host;
    this.breakpoint = breakpoint;
    this.mobile = ScreenSizeController.queries.get("mobile")?.matches ?? false;
    this.matches = /* @__PURE__ */ new Set();
    this.host.addController(this);
    this.size = "mobilePortrait";
    this.breakpoint = breakpoint;
    this.onChange = options3?.onChange;
    for (const [key, list] of ScreenSizeController.queries) {
      if (key !== "mobile" && list.matches) {
        this.size = key;
        this.matches.add(key);
        this.evaluate();
      }
    }
  }
  hostConnected() {
    ScreenSizeController.instances.add(this);
  }
  hostDisconnected() {
    ScreenSizeController.instances.delete(this);
  }
  evaluate() {
    this.host.requestUpdate();
    if (this.breakpoint) {
      this.onChange?.(this.matches.has(this.breakpoint) ?? false);
    }
  }
};
__name(ScreenSizeController, "ScreenSizeController");
ScreenSizeController.instances = /* @__PURE__ */ new Set();
ScreenSizeController.queries = /* @__PURE__ */ new Map([
  ["mobile", matchMedia(`screen and (max-width: ${mobileBreakpoint})`)],
  ["mobilePortrait", matchMedia(`screen and (min-width: ${mobilePortraitBreakpoint})`)],
  ["mobileLandscape", matchMedia(`screen and (min-width: ${mobileLandscapeBreakpoint})`)],
  ["tabletPortrait", matchMedia(`screen and (min-width: ${tabletPortraitBreakpoint})`)],
  ["tabletLandscape", matchMedia(`screen and (min-width: ${tabletLandscapeBreakpoint})`)],
  ["mobileXl", matchMedia(`screen and (max-width: ${mobileXlBreakpoint})`)],
  ["desktopSmall", matchMedia(`screen and (min-width: ${mobileXlBreakpoint}) and (max-width: ${desktopSmallBreakpoint})`)],
  ["desktopLarge", matchMedia(`screen and (min-width: ${desktopLargeBreakpoint})`)]
]);
__decorate([
  o6
], ScreenSizeController.prototype, "evaluate", null);
for (const [key, list] of ScreenSizeController.queries) {
  if (key === "mobile") {
    list.addEventListener("change", (event) => {
      for (const instance of ScreenSizeController.instances) {
        instance.mobile = event.matches;
        instance.evaluate();
      }
    });
  } else {
    list.addEventListener("change", (event) => {
      for (const instance of ScreenSizeController.instances) {
        if (event.matches) {
          instance.size = key;
          instance.matches.add(key);
        } else {
          instance.matches.delete(key);
        }
        instance.evaluate();
      }
    });
  }
}

// elements/rh-dialog/rh-dialog.css.js
init_lit();
var styles7 = i`#rhds-wrapper {
  display: contents;
  font-family: "Red Hat Text", RedHatText, Overpass, Helvetica, sans-serif;

  --offset: var(--rh-space-md, 8px);
  --offset-top: var(--offset);
  --offset-right: var(--offset);
}

header ::slotted(:is(h1, h2, h3, h4, h5, h6)[slot="header"]) {
  font-family: "Red Hat Display", RedHatDisplay, Overpass, Helvetica, sans-serif;
}

[part="dialog"] {
  background-color: var(--rh-color-surface-lightest, #ffffff);
  max-width: min(90%, 1140px);
  border-radius: var(--rh-border-radius-default, 3px);
  color: var(--rh-color-text-primary-on-light, #151515);
  font-family: inherit;
}

[part="content"] {
  border-radius: var(--rh-border-radius-default, 3px);
}

[part="close-button"] {
  /* NB: hardcoded, no token colour matches this (yet) */
  color: var(--rh-dialog-close-button-color, #6a6e73);
}

[part="close-button"]:is(:hover, :focus-within, :focus-visible) svg:is(svg, :hover) {
  fill: var(--rh-color-black-900, #151515);
}

:host([type="video"]) {
  --rh-dialog-close-button-color: white;
}

:host([type="video"]) [part="close-button"] {
  top: var(--offset-top);
  right: var(--offset-right);
  padding: var(--rh-space-sm, 6px);
  color: var(--rh-dialog-close-button-color, #6a6e73);
}

:host([type="video"]) [part="content"] {
  overflow: hidden;
}

:host([type="video"][open]) [part="overlay"] {
  background-color: #151515;
  opacity: 0.65;
}

:host([type="video"][open]) [part="dialog"] {
  --_aspect-ratio: var(--rh-modal-video-aspect-ratio, 16/9);

  aspect-ratio: var(--_aspect-ratio);
  max-width: min(90%, calc(90vh * var(--_aspect-ratio) + var(--offset-top)));
  padding: 0;
  margin: 0;
}

:host([type="video"]) #rhds-wrapper.mobile [part="close-button"] {
  --offset-right: var(--rh-space-sm, 6px);
}

:host([type="video"]) #container,
:host([type="video"]) [part="content"],
:host([type="video"]) ::slotted(:not([slot])) {
  aspect-ratio: var(--rh-modal-video-aspect-ratio, 16/9);

  /* account for a 1px descrepency between dialog and container aspect ratio */
  width: calc(100% + 1px);
  position: absolute;
  inset: 0;
  max-height: none;
}
`;
var rh_dialog_css_default = styles7;

// elements/rh-dialog/rh-dialog.js
var _RhDialog_screenSize;
var RhDialog = /* @__PURE__ */ __name(class RhDialog2 extends t7 {
  constructor() {
    super(...arguments);
    _RhDialog_screenSize.set(this, new ScreenSizeController(this));
    this.open = false;
  }
  render() {
    const { mobile } = __classPrivateFieldGet(this, _RhDialog_screenSize, "f");
    return y`
      <div id="rhds-wrapper" class=${o8({ mobile })}>
        ${super.render()}
      </div>
    `;
  }
  async _openChanged(oldValue, newValue) {
    super._openChanged(oldValue, newValue);
    if (this.type === "video" && oldValue === true && newValue === false) {
      this.querySelector("video")?.pause?.();
      const iframe = this.querySelector("iframe");
      if (iframe?.src.match(/youtube/)) {
        const { pauseVideo: pauseVideo2 } = await Promise.resolve().then(() => (init_yt_api(), yt_api_exports));
        pauseVideo2(iframe);
      }
    }
  }
}, "RhDialog");
_RhDialog_screenSize = /* @__PURE__ */ new WeakMap();
RhDialog.version = "{{version}}";
RhDialog.styles = [...t7.styles, rh_dialog_css_default];
RhDialog.closeOnOutsideClick = true;
__decorate([
  e5({ reflect: true })
], RhDialog.prototype, "type", void 0);
__decorate([
  p3,
  e5({ reflect: true, type: Boolean })
], RhDialog.prototype, "open", void 0);
RhDialog = __decorate([
  e4("rh-dialog")
], RhDialog);

// elements/rh-footer/RhFooter.js
init_lit();
init_static_html();
init_decorators();
init_random();
init_logger();

// elements/rh-footer/rh-footer.css.js
init_lit();
var styles8 = i`:host {
  /* apply sensible defaults based on redhat standards. */
  color: var(--rh-color-white, #ffffff);
  font-family: var(--rh-font-family-body-text, RedHatText, "Red Hat Text", "Noto Sans Arabic", "Noto Sans Hebrew", "Noto Sans JP", "Noto Sans KR", "Noto Sans Malayalam", "Noto Sans SC", "Noto Sans TC", "Noto Sans Thai", Overpass, Helvetica, Arial, sans-serif) !important;
  line-height: var(--rh-line-height-body-text, 1.5);
  font-weight: var(--_font-weight);
  font-size: initial;
  display: flex;
  flex-direction: column;
}

footer,
.global-base {
  --_icon-color: var(--rh-footer-icon-color, var(--rh-color-black-500, #8a8d90));
  --_icon-color-hover: var(--rh-footer-icon-color-hover, var(--rh-color-black-400, #b8bbbe));
  --_border-color: var(--rh-footer-border-color, var(--rh-color-black-600, #6a6e73));
  --_accent-color: var(--rh-footer-accent-color, var(--rh-color-brand-red-on-light, #ee0000));
  --_section-side-gap: var(--rh-footer-section-side-gap, var(--rh-space-2xl, 32px));
  --_accordion-background: var(--rh-color-white, #ffffff);
  --_logo-width: var(--rh-size-icon-04, 40px);
  --_font-weight: var(--rh-font-weight-body-text-regular, 400);

  /* Style Accordions */
  --pfe-accordion--Color: var(--_accordion-background);
  --pfe-accordion--Color--expanded: var(--_accordion-background);
  --pfe-accordion--Color--active: var(--_accordion-background);
  --pfe-accordion--BackgroundColor: transparent;
  --pfe-accordion--BackgroundColor--active: transparent;
  --pfe-accordion--BackgroundColor--expanded: var(--rh-color-surface-darkest, #151515);
  --pfe-accordion--BorderColor: var(--_border-color);
  --pfe-accordion--FontSize--header: initial;
  --pfe-accordion--FontWeight--header: var(--_font-weight);
  --pfe-accordion--accent--expanded: var(--_accent-color);
  --pfe-accordion--accent--active: var(--_accent-color);
}

pfe-accordion {
  --pfe-context-background-color: transparent;
}

* {
  box-sizing: border-box;
}

::slotted(:is(h1,h2,h3,h4,h5,h6)) {
  font-family: var(--rh-font-family-heading, RedHatDisplay, "Red Hat Display", "Noto Sans Arabic", "Noto Sans Hebrew", "Noto Sans JP", "Noto Sans KR", "Noto Sans Malayalam", "Noto Sans SC", "Noto Sans TC", "Noto Sans Thai", Overpass, Helvetica, Arial, sans-serif) !important;
}

/**
 * Debugging
 */
:host([debug]) *:not(.spacer, .base, a, svg) {
  /* make sure we have some */
  min-height: var(--rh-length-xl, 24px);
  position: relative;
  outline: var(--rh-length-3xs, 2px) dotted red;
}

:host([debug]) *:not(.spacer, .base, a, svg):after {
  content: attr(part);
  display: block;
  position: absolute;
  color: white;
  background-color: darkslategray;
  padding: var(--rh-space-xs, 4px);
  top: 0;
  right: 0;
  font-family: var(--rh-font-family-code, RedHatMono, "Red Hat Mono", "Courier New", Courier, monospace);
  font-size: var(--rh-font-size-code-xs, 0.75rem);
}

/**
 * Regions
 */
.section {
  padding: var(--rh-space-2xl, 32px) var(--_section-side-gap);
}

.header {
  background-color: var(--rh-color-surface-darker, #212427);

  /* children should flex wrap on mobile */
  display: flex;
  flex-wrap: wrap;
  gap: var(--rh-space-2xl, 32px);
  align-items: center;
  position: relative;
}

.header:after {
  display: block;
  content: "";
  background-color: var(--_border-color);
  height: var(--rh-length-4xs, 1px);
  position: absolute;
  bottom: 0;
  width: calc(100% - var(--_section-side-gap) * 2);
  left: var(--_section-side-gap);
}

.header-primary {
  flex: 1 1 auto;
}

.header-secondary {
  /* secondary should be push to the end */

  /* of the line on mobile */
  flex: 0 1 auto;
}

.main {
  background-color: var(--rh-color-surface-darker, #212427);
  display: grid;
  gap: var(--rh-space-2xl, 32px);
}

.global-base {
  --rh-footer-link-font-size: var(--rh-font-size-body-text-xs, 0.75rem);

  /* reduce the line-height for global links */
  line-height: 100%;
  background-color: var(--rh-color-surface-darkest, #151515);
  display: grid;
  grid-template-columns: 1fr;
  grid-template-areas:
    "logo"
    "primary"
    "spacer"
    "secondary"
    "tertiary";
  gap: var(--rh-space-2xl, 32px) var(--rh-space-xl, 24px);
}

.global-logo {
  grid-area: logo;
  width: var(--_logo-width);
}

.global-logo-image {
  fill: var(--_icon-color);
}

.global-logo-image:is(:hover, :focus-within) {
  fill: var(--_icon-color-hover);
}

.global-primary {
  grid-area: primary;
}

.global-secondary {
  grid-area: secondary;
  color: var(--rh-color-text-secondary-on-dark, #d2d2d2);
  display: flex;
  flex-direction: column;
  gap: var(--rh-space-lg, 16px);
  justify-content: space-between;
}

.global-tertiary {
  grid-area: tertiary;
  display: grid;
  justify-content: start;
  align-items: start;
}

.global-links-primary {
  display: flex;
  flex-direction: column;
  gap: var(--rh-space-md, 8px) var(--rh-space-xl, 24px);
}

.global-links-secondary {
  display: flex;
  flex-direction: column;
  gap: var(--rh-space-md, 8px) var(--rh-space-xl, 24px);
}

/* reduce the font size of the content in these regions */
:is(.global-primary, .global-secondary, .global-tertiary) ::slotted(*) {
  font-size: var(--rh-font-size-body-text-xs, 0.75rem);
}

.logo {
  /* fix wierd problem where there is extra space below logo */
  line-height: 0px;
}

.social-links {
  display: flex;
  margin-inline-start: 0;
  padding-inline-start: 0;
}

.social-links rh-footer-links,
.social-links slot::slotted(rh-footer-links) {
  display: flex;
  flex-direction: row;
  gap: var(--rh-space-xl, 24px);
}

:is(.links, .global-links-primary, .global-links-secondary) ::slotted(ul) {
  padding: 0;
  margin: 0;
  display: contents;
}

.isMobile .links {
  --rh-footer-link-header-font-size: var(--rh-font-size-body-text-lg, 1.125rem);
}

.isMobile .links ::slotted(ul) {
  --rh-footer-link-font-size: 1em;

  display: grid;
  grid-template-columns: 1fr;
  gap: calc(var(--rh-space-2xl, 32px) / 2);
}

[part="base"]:not(.isMobile) .links {
  display: grid;
  grid-template-columns: repeat(1fr, 25%);
  grid-template-rows: repeat(2, min-content auto);
  grid-auto-columns: minmax(0, 1fr);
  row-gap: var(--rh-space-lg, 16px);
  column-gap: var(--rh-space-2xl, 32px);
  grid-auto-flow: column;
}

[part="base"]:not(.isMobile) .links ::slotted(:is(h2, h3, h4, h5, h6):nth-of-type(1)) {
  grid-column: 1/2;
  grid-row: 1/2;
}

[part="base"]:not(.isMobile) .links ::slotted(:is(h2, h3, h4, h5, h6):nth-of-type(2)) {
  grid-column: 2/3;
  grid-row: 1/2;
}

[part="base"]:not(.isMobile) .links ::slotted(:is(h2, h3, h4, h5, h6):nth-of-type(3)) {
  grid-column: 3/4;
  grid-row: 1/2;
}

[part="base"]:not(.isMobile) .links ::slotted(:is(h2, h3, h4, h5, h6):nth-of-type(4)) {
  grid-column: 4/5;
  grid-row: 1/2;
}

[part="base"]:not(.isMobile) .links ::slotted(:is(h2, h3, h4, h5, h6):nth-of-type(5)) {
  grid-column: 1/2;
  grid-row: 3/4;
}

[part="base"]:not(.isMobile) .links ::slotted(:is(h2, h3, h4, h5, h6):nth-of-type(6)) {
  grid-column: 2/3;
  grid-row: 3/4;
}

[part="base"]:not(.isMobile) .links ::slotted(:is(h2, h3, h4, h5, h6):nth-of-type(7)) {
  grid-column: 3/4;
  grid-row: 3/4;
}

[part="base"]:not(.isMobile) .links ::slotted(:is(h2, h3, h4, h5, h6):nth-of-type(8)) {
  grid-column: 4/5;
  grid-row: 3/4;
}

[part="base"]:not(.isMobile) .links ::slotted(:is(ul:nth-of-type(1))) {
  grid-column: 1/2;
  grid-row: 2/3;
}

[part="base"]:not(.isMobile) .links ::slotted(:is(ul:nth-of-type(2))) {
  grid-column: 2/3;
  grid-row: 2/3;
}

[part="base"]:not(.isMobile) .links ::slotted(:is(ul:nth-of-type(3))) {
  grid-column: 3/4;
  grid-row: 2/3;
}

[part="base"]:not(.isMobile) .links ::slotted(:is(ul:nth-of-type(4))) {
  grid-column: 4/5;
  grid-row: 2/3;
}

[part="base"]:not(.isMobile) .links ::slotted(:is(ul:nth-of-type(5))) {
  grid-column: 1/2;
  grid-row: 4/5;
}

[part="base"]:not(.isMobile) .links ::slotted(:is(ul:nth-of-type(6))) {
  grid-column: 2/3;
  grid-row: 4/5;
}

[part="base"]:not(.isMobile) .links ::slotted(:is(ul:nth-of-type(7))) {
  grid-column: 3/4;
  grid-row: 4/5;
}

[part="base"]:not(.isMobile) .links ::slotted(:is(ul:nth-of-type(8))) {
  grid-column: 4/5;
  grid-row: 4/5;
}

[part="base"]:not(.isMobile) .links ::slotted(ul) {
  gap: var(--rh-footer-links-gap, var(--rh-space-lg, 16px));
  display: flex;
  flex-direction: column;
}

#footer-logo {
  width: var(--_logo-width);
}

:is(.links, .global-links-primary, .global-links-secondary) ::slotted(:is(h1, h2, h3, h4, h5)) {
  font-weight: var(--rh-font-weight-heading-medium, 500) !important;
  margin-block: 0 !important;
  font-size:
    var(
      --rh-footer-link-header-font-size,
      var(--rh-font-size-body-text-sm, 0.875rem)
    ) !important;
}
`;
var rh_footer_css_default = styles8;

// elements/rh-footer/rh-footer-responsive.css.js
init_lit();
var responsiveStyles = i`
  @media screen and (min-width: ${mobileBreakpoint}) {
    .global-base {
      grid-template-columns: 4fr 4fr 4fr;
      grid-template-areas:
        'logo      logo      logo'
        'primary   primary   primary'
        'spacer    spacer    spacer'
        'secondary secondary tertiary';
    }
  }

  @media screen and (min-width: ${mobileXlBreakpoint}) {
    .global-base {
      grid-template-columns: auto 10fr 2fr;
      grid-template-rows: 32px max-content;
      grid-template-areas:
        'logo primary   tertiary'
        'logo secondary tertiary';
      gap: 24px 32px;
    }

    .global-primary {
      display: flex;
    }

  }

  .spacer {
    grid-area: spacer;
    border-bottom: 1px solid var(--_border-color);
  }

  @media screen and (min-width: ${mobileXlBreakpoint}) {
    .spacer {
      display: none;
    }
  }

  @media screen and (min-width: ${mobileXlBreakpoint}) {
    .global-tertiary {
      display: grid;
      justify-content: flex-end;
      align-items: center;
    }
  }

  @media screen and (min-width: 500px) {
    .global-links-primary {
      display: grid;
      grid-template-columns: 1fr 1fr 1fr;
    }
  }

  @media screen and (min-width: ${mobileXlBreakpoint}) {
    .global-links-primary {
      display: flex;
      flex-flow: row wrap;
      align-items: center;
    }
  }

  @media screen and (min-width: 500px) {
    .global-links-secondary {
      display: grid;
      grid-template-columns: 1fr 1fr 1fr;
    }
  }

  @media screen and (min-width: ${mobileBreakpoint}) {
    .global-links-secondary {
      grid-template-columns: 1fr 1fr;
    }
  }

  @media screen and (min-width: ${mobileXlBreakpoint}) {
    .global-links-secondary {
      display: flex;
      flex-direction: row;
      flex-wrap: wrap;
      gap: 8px 24px;
    }
  }

  @media screen and (max-width: ${tabletLandscapeBreakpoint}) {
    .global-logo {
      grid-area: logo;
    }

    .global-primary {
      grid-area: primary;
    }
  }

  @media screen and (max-width: ${tabletLandscapeBreakpoint}) {
    /* Equalize padding on mobile */
    .section {
      --_section-side-gap: var(--rh-footer-section-side-gap, var(--rh-space-2xl, 32px));
    }

    /* hide the header border on mobile */
    .header:after {
      display: none;
    }

    /* force the mobile links menu to go flush against the header */
    .main {
      padding-top: 0;
    }

    .global-tertiary {
      margin-block-start: 16px;
    }
  }

  @media screen and (min-width: ${tabletLandscapeBreakpoint}) and (max-width: ${desktopLargeBreakpoint}) {
    /* Equalize padding on mobile */
    .section {
      --_section-side-gap: var(--rh-footer-section-side-gap, var(--rh-space-2xl, 32px));
    }

    .global-tertiary {
      margin-block-start: 16px;
    }

    .header,
    .main {
      /* switch header to use grid instead */
      display: grid;
      grid-template-columns: 8fr 4fr;
    }
  }

  @media screen and (min-width: ${desktopLargeBreakpoint}) {
    .section {
      --_section-side-gap: var(--rh-footer-section-side-gap, var(--rh-space-2xl, 32px));
    }

    .header,
    .main {
      /* switch header to use grid instead */
      display: grid;
      grid-template-columns: 8fr 4fr;
    }
  }

  @media screen and (min-width: ${mobileBreakpoint}) {
    .isMobile .links ::slotted(ul) {
      grid-template-columns: 1fr 1fr;
    }
  }
`;

// lib/MatchMediaController.js
init_bound();
var MatchMediaController = class {
  constructor(host, mediaQuery = "", options3) {
    this.host = host;
    this.mediaQuery = mediaQuery;
    this.mediaQueryList = null;
    this.host.addController(this);
    this.mediaQueryList = matchMedia(mediaQuery);
    this.onChange = options3?.onChange;
  }
  hostConnected() {
    this.evaluate();
    this.mediaQueryList?.addEventListener("change", this.evaluate);
  }
  hostDisconnected() {
    this.mediaQueryList?.removeEventListener("change", this.evaluate);
  }
  evaluate() {
    this.host.requestUpdate();
    this.onChange?.(this.mediaQueryList ?? matchMedia(this.mediaQuery));
  }
};
__name(MatchMediaController, "MatchMediaController");
__decorate([
  o6
], MatchMediaController.prototype, "evaluate", null);

// elements/rh-footer/rh-footer-social-link.js
init_lit();
init_decorators();
init_logger();

// elements/rh-footer/rh-footer-social-link.css.js
init_lit();
var styles9 = i`:host {
  display: block;

  --pfe-icon--color: var(--_icon-color);
  --pfe-icon--size: var(--rh-footer--social-icon--size, 1.75em);
}

:host(:is(:hover, :focus-within)) {
  --pfe-icon--color: var(--_icon-color-hover);
}
`;
var rh_footer_social_link_css_default = styles9;

// elements/rh-footer/rh-footer-social-link.js
var RhFooterSocialLink = /* @__PURE__ */ __name(class RhFooterSocialLink2 extends s4 {
  constructor() {
    super();
    this.logger = new n6(this);
    this.icon = null;
    this.setAttribute("role", "listitem");
  }
  render() {
    return y`<slot></slot>`;
  }
  updated() {
    this.updateLightdom();
  }
  updateLightdom() {
    const oldDiv = this.querySelector("a");
    if (oldDiv) {
      const newDiv = oldDiv.cloneNode(true);
      newDiv.querySelectorAll("[_rendered]").forEach((i22) => i22.remove());
      newDiv.innerHTML = `<pfe-icon icon="${this.icon}">${newDiv.innerHTML}</pfe-icon>`;
      newDiv.setAttribute("aria-label", newDiv.textContent || "");
      if (!newDiv.getAttribute("aria-label")) {
        this.logger.warn("Must add aria-label to links");
      }
      if (oldDiv.parentNode) {
        oldDiv.parentNode.replaceChild(newDiv, oldDiv);
      }
    }
  }
}, "RhFooterSocialLink");
RhFooterSocialLink.styles = rh_footer_social_link_css_default;
__decorate([
  e5()
], RhFooterSocialLink.prototype, "icon", void 0);
RhFooterSocialLink = __decorate([
  e4("rh-footer-social-link")
], RhFooterSocialLink);

// elements/rh-footer/rh-footer-links.js
init_lit();
init_decorators();
init_slot_controller();
init_decorators2();
init_logger();
init_random();

// elements/rh-footer/rh-footer-links.css.js
init_lit();
var styles10 = i`:host {
  display: flex;
  flex-direction: column;
  gap: 0.625em;
}

[part] {
  display: contents;
}

::slotted(:is(h1, h2, h3, h4, h5)) {
  font-weight: 500;
  font-size: 0.875em;
  margin-top: 0;
  margin-bottom: 0;
}

:host([header-hidden]) .header ::slotted(*) {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border: 0;
}
`;
var rh_footer_links_css_default = styles10;

// elements/rh-footer/rh-footer-links.js
var RhFooterLinks = /* @__PURE__ */ __name(class RhFooterLinks2 extends s4 {
  constructor() {
    super(...arguments);
    this.headerHidden = false;
    this.logger = new n6(this);
    this.slots = new l11(this, {
      slots: ["header"]
    });
  }
  updateAccessibility() {
    const header = this.querySelector('[slot="header"]');
    const ul = this.querySelector("ul");
    if (header && ul) {
      header.id || (header.id = n11("rh-footer-links"));
      ul.setAttribute("aria-labelledby", header.id);
    } else {
      this.logger.warn("This links set doesn't have a valid header associated with it.");
    }
  }
  render() {
    return y`
      <div part="header" class="header">
        <slot name="header"></slot>
      </div>
      <div part="default" class="default">
        <slot name="panel"></slot>
        <slot></slot>
      </div>
    `;
  }
}, "RhFooterLinks");
RhFooterLinks.styles = rh_footer_links_css_default;
__decorate([
  e5({ type: Boolean, attribute: "header-hidden", reflect: true })
], RhFooterLinks.prototype, "headerHidden", void 0);
__decorate([
  c6()
], RhFooterLinks.prototype, "updateAccessibility", null);
RhFooterLinks = __decorate([
  e4("rh-footer-links")
], RhFooterLinks);

// elements/rh-footer/rh-footer-block.js
init_lit();
init_decorators();

// elements/rh-footer/rh-footer-block.css.js
init_lit();
var styles11 = i`:host {
  display: block;
  position: relative;
}

/** Add margin to blocks that aren't first in the sidebar. */
:host(:not(:first-of-type)) {
  margin-top: var(--rh-space-xl, 24px);
}

/** Add the separator to blocks in the middle */
:host(:not(:last-of-type, :first-of-type)) {
  border-bottom: var(--rh-border-width-sm, 1px) solid var(--_border-color);
  padding-bottom: var(--rh-space-xl, 24px);
}

::slotted(*) {
  color: var(--rh-color-text-primary-on-dark, #ffffff);
  font-size: var(--rh-font-size-body-text-sm, 0.875rem);
  text-decoration: none;
}

::slotted(:is(h1, h2, h3, h4, h5)) {
  font-weight: var(--rh-font-weight-heading-medium, 500) !important;
  font-size: var(--rh-font-size-body-text-sm, 0.875rem) !important;
  margin-block: 0 var(--rh-space-lg, 16px) !important;
}

.content ::slotted(*) {
  color: var(--rh-color-text-secondary-on-dark, #d2d2d2);
  font-family: var(--rh-font-family-body-text, RedHatText, "Red Hat Text", "Noto Sans Arabic", "Noto Sans Hebrew", "Noto Sans JP", "Noto Sans KR", "Noto Sans Malayalam", "Noto Sans SC", "Noto Sans TC", "Noto Sans Thai", Overpass, Helvetica, Arial, sans-serif);
  font-weight: var(--rh-font-weight-body-text-regular, 400);
}
`;
var rh_footer_block_css_default = styles11;

// elements/rh-footer/rh-footer-block.js
var RhFooterBlock = /* @__PURE__ */ __name(class RhFooterBlock2 extends s4 {
  render() {
    return y`
      <div class="base" part="base">
        <div class="header" part="header">
          <slot name="header"></slot>
        </div>
        <div class="content" part="content">
          <slot></slot>
        </div>
      </div>
    `;
  }
}, "RhFooterBlock");
RhFooterBlock.styles = rh_footer_block_css_default;
RhFooterBlock = __decorate([
  e4("rh-footer-block")
], RhFooterBlock);

// elements/rh-footer/rh-global-footer.js
init_lit();
init_decorators();

// elements/rh-footer/rh-footer-copyright.js
init_lit();
init_decorators();

// elements/rh-footer/rh-footer-copyright.css.js
init_lit();
var styles12 = i`:host {
  flex: 1 1 auto;
  display: block;
  width: 100%;
}
`;
var rh_footer_copyright_css_default = styles12;

// elements/rh-footer/rh-footer-copyright.js
var currentYear = new Date().getFullYear();
var RhFooterCopyright = /* @__PURE__ */ __name(class RhFooterCopyright2 extends s4 {
  render() {
    return y`<slot>&copy; ${currentYear} Red Hat, Inc.</slot>`;
  }
}, "RhFooterCopyright");
RhFooterCopyright.styles = rh_footer_copyright_css_default;
RhFooterCopyright = __decorate([
  e4("rh-footer-copyright")
], RhFooterCopyright);

// elements/rh-footer/rh-global-footer.js
var RhGlobalFooter = /* @__PURE__ */ __name(class RhGlobalFooter2 extends s4 {
  constructor() {
    super(...arguments);
    this.colorPalette = "darker";
  }
  render() {
    return y`
      <div class="section global-base" part="section base">
        <slot name="base">
          <div class="global-logo" part="logo">
            <slot name="logo">
              <a class="global-logo-anchor"
                  part="logo-anchor"
                  href="/en"
                  alt="Visit Red Hat">
                <svg title="Red Hat logo"
                    class="global-logo-image"
                    part="logo-image"
                    data-name="Layer 1"
                    xmlns="http://www.w3.org/2000/svg"
                    viewBox="0 0 192 145">
                  <defs>
                    <style>
                      .band {
                        fill: transparent;
                      }
                    </style>
                  </defs>
                  <path class="band" d="M157.77,62.61a14,14,0,0,1,.31,3.42c0,14.88-18.1,17.46-30.61,17.46C78.83,83.49,42.53,53.26,42.53,44a6.43,6.43,0,0,1,.22-1.94l-3.66,9.06a18.45,18.45,0,0,0-1.51,7.33c0,18.11,41,45.48,87.74,45.48,20.69,0,36.43-7.76,36.43-21.77,0-1.08,0-1.94-1.73-10.13Z" />
                  <path class="cls-1" d="M127.47,83.49c12.51,0,30.61-2.58,30.61-17.46a14,14,0,0,0-.31-3.42l-7.45-32.36c-1.72-7.12-3.23-10.35-15.73-16.6C124.89,8.69,103.76.5,97.51.5,91.69.5,90,8,83.06,8c-6.68,0-11.64-5.6-17.89-5.6-6,0-9.91,4.09-12.93,12.5,0,0-8.41,23.72-9.49,27.16A6.43,6.43,0,0,0,42.53,44c0,9.22,36.3,39.45,84.94,39.45M160,72.07c1.73,8.19,1.73,9.05,1.73,10.13,0,14-15.74,21.77-36.43,21.77C78.54,104,37.58,76.6,37.58,58.49a18.45,18.45,0,0,1,1.51-7.33C22.27,52,.5,55,.5,74.22c0,31.48,74.59,70.28,133.65,70.28,45.28,0,56.7-20.48,56.7-36.65,0-12.72-11-27.16-30.83-35.78" />
                </svg>
              </a>
            </slot>
          </div>
          <div class="global-primary" part="primary">
            <slot name="primary">
              <div class="global-primary-start" part="primary-start">
                <slot name="primary-start"></slot>
              </div>
              <div class="global-links-primary" part="links-primary">
                <slot name="links-primary"></slot>
              </div>
              <div class="global-primary-end" part="primary-end">
                <slot name="primary-end"></slot>
              </div>
            </slot>
          </div>
          <div class="spacer" part="spacer"></div>
          <div class="global-secondary" part="secondary">
            <slot name="secondary">
              <div class="global-secondary-start" part="secondary-start">
                <slot name="secondary-start"></slot>
              </div>
              <div class="global-links-secondary" part="links-secondary">
                <slot name="links-secondary"></slot>
              </div>
              <div class="global-secondary-end" part="secondary-end">
                <slot name="secondary-end"></slot>
              </div>
            </slot>
          </div>
          <div class="global-tertiary" part="tertiary">
            <slot name="tertiary"></slot>
          </div>
        </slot>
      </div>
    `;
  }
}, "RhGlobalFooter");
RhGlobalFooter.styles = [rh_footer_css_default, responsiveStyles];
__decorate([
  colorContextProvider(),
  e5({ reflect: true, attribute: "color-palette" })
], RhGlobalFooter.prototype, "colorPalette", void 0);
RhGlobalFooter = __decorate([
  e4("rh-global-footer")
], RhGlobalFooter);

// elements/rh-footer/RhFooter.js
init_pfe_icon();
init_pfe_accordion();
var _RhFooter_instances;
var _RhFooter_matchMedia;
var _RhFooter_logger;
var _RhFooter_renderLinksTemplate;
function isHeader(tagName) {
  return !!tagName.match(/^H[1-6]$/i);
}
__name(isHeader, "isHeader");
var RhFooter = class extends s4 {
  constructor() {
    super(...arguments);
    _RhFooter_instances.add(this);
    _RhFooter_matchMedia.set(this, new MatchMediaController(this, `(max-width: ${tabletLandscapeBreakpoint})`));
    _RhFooter_logger.set(this, new n6(this));
    this.colorPalette = "darker";
  }
  static getImportURL(relativeLocation) {
    const url = new URL(relativeLocation, import.meta.url);
    if (url.protocol === "file:") {
      return new URL(relativeLocation, window.location.href);
    }
    return url;
  }
  connectedCallback() {
    super.connectedCallback();
    this.updateAccessibility();
  }
  render() {
    const isMobile = __classPrivateFieldGet(this, _RhFooter_matchMedia, "f").mediaQueryList?.matches ?? false;
    return y`
      <footer class="base ${o8({ isMobile })}" part="base">
        <slot name="base">
          <div class="section header" part="section header">
            <slot name="header">
              <div class="header-primary" part="header-primary">
                <slot name="header-primary">
                  <div class="logo" part="logo">
                    <slot name="logo">
                      <a href="/en">
                        <img alt="Red Hat" src="https://static.redhat.com/libs/redhat/brand-assets/2/corp/logo--on-dark.svg"/>
                      </a>
                    </slot>
                  </div>
                </slot>
              </div>
              <div class="header-secondary" part="header-secondary">
                <slot name="header-secondary">
                  <div class="social-links">
                    <rh-footer-links class="social-links-item"
                      part="social-links"
                      aria-label="Red Hat social media links">
                      <slot name="social-links"></slot>
                    </rh-footer-links>
                  </div>
                </slot>
              </div>
            </slot>
          </div>
          <div class="section main" part="section main">
            <slot name="main">
              <div class="main-primary" part="main-primary">
                <slot name="main-primary">
                  <div class="links" part="links">
                    ${__classPrivateFieldGet(this, _RhFooter_instances, "m", _RhFooter_renderLinksTemplate).call(this, isMobile)}
                  </div>
                </slot>
              </div>
              <div class="main-secondary" part="main-secondary">
                <slot name="main-secondary"></slot>
              </div>
            </slot>
          </div>
          <slot name="global"></slot>
        </slot>
      </footer>
    `;
  }
  updateAccessibility() {
    const listsSelector = ":is([slot^=links],[slot=footer-links-primary],[slot=footer-links-secondary]):is(ul)";
    for (const list of this.querySelectorAll(listsSelector)) {
      if (!list.hasAttribute("aria-labelledby")) {
        const header = isHeader(list.previousElementSibling?.tagName ?? "") ? list.previousElementSibling : null;
        if (!header) {
          return __classPrivateFieldGet(this, _RhFooter_logger, "f").warn("This links set doesn't have a valid header associated with it.");
        } else {
          header.id || (header.id = n11("rh-footer"));
          list.setAttribute("aria-labelledby", header.id);
        }
      }
    }
  }
};
__name(RhFooter, "RhFooter");
_RhFooter_matchMedia = /* @__PURE__ */ new WeakMap(), _RhFooter_logger = /* @__PURE__ */ new WeakMap(), _RhFooter_instances = /* @__PURE__ */ new WeakSet(), _RhFooter_renderLinksTemplate = /* @__PURE__ */ __name(function _RhFooter_renderLinksTemplate2(isMobile = false) {
  const children = Array.from(this.querySelectorAll(":scope > [slot^=links]"), (ref) => ({
    type: isHeader(ref.tagName) ? "header" : "panel",
    ref
  }));
  children.forEach(({ ref }, i22) => ref.setAttribute("slot", isMobile ? `links-${i22}` : "links"));
  return !(isMobile && children) ? y`
      <slot name="links"></slot>
      ` : y`
      <pfe-accordion on="dark" color-palette="darkest">${children.map((child, index) => n13`
        <pfe-accordion-${o10(child.type)} part="links-accordion-${child.type}">
          <slot name="links-${index}"></slot>
         </pfe-accordion-${o10(child.type)}>`)}
      </pfe-accordion>
    `;
}, "_RhFooter_renderLinksTemplate");
RhFooter.version = "{{version}}";
RhFooter.styles = [rh_footer_css_default, responsiveStyles];
__decorate([
  colorContextProvider(),
  e5({ reflect: true, attribute: "color-palette" })
], RhFooter.prototype, "colorPalette", void 0);

// elements/rh-footer/rh-footer.js
customElements.define("rh-footer", RhFooter);

// elements/rh-secondary-nav/rh-secondary-nav.js
init_lit();
init_decorators();
init_decorators2();
init_logger();

// elements/rh-secondary-nav/rh-secondary-nav-dropdown.js
init_lit();
init_decorators();
init_core();
init_logger();
init_decorators2();
init_slot_controller();
init_random();

// elements/rh-secondary-nav/rh-secondary-nav-menu.js
init_lit();
init_decorators();
init_decorators2();
init_random();

// elements/rh-secondary-nav/rh-secondary-nav-menu.css.js
init_lit();
var styles13 = i`:host {
  display: block;
}

#container {
  position: relative;
}

#container:not(:is(.visible)) {
  display: none;
}

#container.visible {
  background-color: var(--rh-color-surface-lightest, #ffffff);
}

#sections {
  padding: 1.5em;
}

:host(:not([type="fixed-width"])) #sections {
  display: grid;
  grid-template-columns:
    var(
      --rh-secondary-nav-menu-section-grid,
      repeat(auto-fit, minmax(15.5em, 1fr))
    );
  grid-template-rows: auto;
  gap: var(--rh-secondary-nav-menu-section-grid-gap, 2em);
}

::slotted(:is(ul, ol)) {
  list-style: none;
  margin: 0;
  padding: 0;
  display: flex;
  flex-direction: column;
  gap: 0.75em;
}

@media screen and (min-width: 992px) {
  #container.visible {
    position: absolute;
    left: 0;
    right: 0;
    top: var(--_nav-height);
    padding: 4em 2em 3em;
    box-shadow: var(--rh-box-shadow-sm, 0 2px 4px 0 rgba(21, 21, 21, 0.2));
    z-index: -1;
  }

  :host([layout="fixed-width"]) #container {
    position: absolute;
    top: var(--_nav-height);
    left: auto;
    right: auto;
    bottom: auto;
    margin-top: 0;
    padding: 0;
  }

  #sections {
    padding: 0;
    max-width: var(--rh-secondary-nav-menu-content-max-width, 1136px);
    margin: auto;
  }

  :host([layout="fixed-width"]) #sections {
    padding: 2em;
  }
}

@media screen and (min-width: 1200px) {
  #container.visible {
    padding: 3em 2em;
  }
}

@media screen and (min-width: 1440px) {
  #container.visible {
    padding: 3em 4em;
  }
}

@media screen and (min-width: 1600px) {
  #full-width {
    margin: auto;
  }
}
`;
var rh_secondary_nav_menu_css_default = styles13;

// elements/rh-secondary-nav/rh-secondary-nav-menu.js
var _RhSecondaryNavMenu_screenSize;
var RhSecondaryNavMenu = /* @__PURE__ */ __name(class RhSecondaryNavMenu2 extends s4 {
  constructor() {
    super(...arguments);
    this.layout = "full-width";
    _RhSecondaryNavMenu_screenSize.set(this, new ScreenSizeController(this));
    this._compact = false;
    this.screenSize = new ScreenSizeController(this, "tabletLandscape", {
      onChange: (matches) => {
        this._compact = !matches;
      }
    });
    this.visible = false;
  }
  static isDropdown(element) {
    return element instanceof RhSecondaryNavDropdown;
  }
  connectedCallback() {
    super.connectedCallback();
    this.id || (this.id = n11("rh-secondary-nav-menu"));
  }
  render() {
    const classes = { "compact": this._compact, "visible": this.visible };
    return y`
      <div id="container" class="${o8(classes)}">${this.layout === "full-width" ? y`
        <div id="full-width" part="full-width">
          <div id="sections" part="sections">
            <slot></slot>
          </div>
        </div>` : y`
        <div id="fixed-width" part="fixed-width">
          <div id="sections" part="sections">
            <slot></slot>
          </div>
        </div>`}
      </div>
    `;
  }
}, "RhSecondaryNavMenu");
_RhSecondaryNavMenu_screenSize = /* @__PURE__ */ new WeakMap();
RhSecondaryNavMenu.styles = [rh_secondary_nav_menu_css_default];
__decorate([
  e5({ reflect: true })
], RhSecondaryNavMenu.prototype, "layout", void 0);
__decorate([
  i4("#container")
], RhSecondaryNavMenu.prototype, "_container", void 0);
__decorate([
  p3,
  t3()
], RhSecondaryNavMenu.prototype, "_compact", void 0);
__decorate([
  t3()
], RhSecondaryNavMenu.prototype, "visible", void 0);
RhSecondaryNavMenu = __decorate([
  e4("rh-secondary-nav-menu")
], RhSecondaryNavMenu);

// elements/rh-secondary-nav/rh-secondary-nav-dropdown.css.js
init_lit();
var styles14 = i`:host {
  display: block;
}

#container {
  border-inline-start: 3px solid transparent;
  border-inline-end: 1px solid transparent;
  display: block;
  height: 100%;
}

/*
 * Move expanded back to an attribute if we decide
 * that we are going to abstract this component
 */
#container.expanded {
  border-inline-start-color: var(--rh-color-text-brand-on-light, #ee0000);
  border-inline-end-color: var(--rh-color-border-subtle-on-light, #d2d2d2);
  box-shadow: var(--rh-box-shadow-sm, 0 2px 4px 0 rgba(21, 21, 21, 0.2));
}

::slotted([slot="link"]) {
  justify-content: space-between;
  position: relative;
  gap: 0.85em;
}

::slotted([slot="link"]):after {
  box-sizing: content-box !important;
  content: "";
  display: block;
  width: var(--_chevron-size);
  height: var(--_chevron-size);
  border-inline-end: var(--_chevron-thickness) solid var(--_chevron-color);
  border-block-end: var(--_chevron-thickness) solid var(--_chevron-color);
  transform: var(--_chevron-transform-collapsed);
}

#container.expanded ::slotted([slot="link"]):after {
  transform: var(--_chevron-transform-expanded);
}

@media screen and (min-width: 992px) {
  #container {
    border-inline-start: none;
    border-inline-end: none;
  }

  /*
 * Move expanded back to an attribute if we decide
 * that we are going to abstract this component
 */
  #container.expanded {
    box-shadow: none;
  }

  ::slotted([slot="link"]) {
    justify-content: flex-start;
  }

  ::slotted([slot="link"][aria-expanded="true"]) {
    background: var(--rh-color-surface-lightest, #ffffff) !important;
    border-block-start-color: var(--rh-color-text-brand-on-light, #ee0000);
    color: var(--rh-color-text-primary-on-light, #151515);

    --_chevron-color: var(--rh-color-text-primary-on-light, #151515);
  }
}
`;
var rh_secondary_nav_dropdown_css_default = styles14;

// elements/rh-secondary-nav/rh-secondary-nav-dropdown.js
var _RhSecondaryNavDropdown_instances;
var _RhSecondaryNavDropdown_slots;
var _RhSecondaryNavDropdown_logger;
var _RhSecondaryNavDropdown_open;
var _RhSecondaryNavDropdown_close;
var SecondaryNavDropdownExpandEvent = class extends n10 {
  constructor(expanded, toggle) {
    super("expand-request");
    this.expanded = expanded;
    this.toggle = toggle;
  }
};
__name(SecondaryNavDropdownExpandEvent, "SecondaryNavDropdownExpandEvent");
var RhSecondaryNavDropdown = /* @__PURE__ */ __name(class RhSecondaryNavDropdown2 extends s4 {
  constructor() {
    super(...arguments);
    _RhSecondaryNavDropdown_instances.add(this);
    _RhSecondaryNavDropdown_slots.set(this, new l11(this, { slots: ["link", "menu"] }));
    _RhSecondaryNavDropdown_logger.set(this, new n6(this));
    this.expanded = false;
    this.colorPalette = "lighter";
  }
  connectedCallback() {
    super.connectedCallback();
    this.id || (this.id = n11("rh-secondary-nav-dropdown"));
    const [link] = __classPrivateFieldGet(this, _RhSecondaryNavDropdown_slots, "f").getSlotted("link");
    const [menu] = __classPrivateFieldGet(this, _RhSecondaryNavDropdown_slots, "f").getSlotted("menu");
    if (link === void 0) {
      __classPrivateFieldGet(this, _RhSecondaryNavDropdown_logger, "f").warn('[rh-secondary-nav-dropdown][slot="link"] expects a slotted <a> tag');
      return;
    }
    if (menu === void 0) {
      __classPrivateFieldGet(this, _RhSecondaryNavDropdown_logger, "f").warn('[rh-secondary-nav-dropdown][slot="menu"] expects a slotted <rh-secondary-nav-menu> tag');
      return;
    }
    link.setAttribute("role", "button");
    link.setAttribute("aria-expanded", "false");
    link.setAttribute("aria-controls", menu.id);
    link.addEventListener("click", this._clickHandler);
  }
  render() {
    const classes = { "expanded": this.expanded };
    return y`
      <div id="container" part="container" class="${o8(classes)}">
        <slot name="link"></slot>
        <slot name="menu"></slot>
      </div>
    `;
  }
  _expandedChanged(oldVal, newVal) {
    if (newVal === oldVal) {
      return;
    }
    newVal ? __classPrivateFieldGet(this, _RhSecondaryNavDropdown_instances, "m", _RhSecondaryNavDropdown_open).call(this) : __classPrivateFieldGet(this, _RhSecondaryNavDropdown_instances, "m", _RhSecondaryNavDropdown_close).call(this);
  }
  _clickHandler(event) {
    event.preventDefault();
    this.expanded = !this.expanded;
    this.dispatchEvent(new SecondaryNavDropdownExpandEvent(this.expanded, this));
  }
}, "RhSecondaryNavDropdown");
_RhSecondaryNavDropdown_slots = /* @__PURE__ */ new WeakMap(), _RhSecondaryNavDropdown_logger = /* @__PURE__ */ new WeakMap(), _RhSecondaryNavDropdown_instances = /* @__PURE__ */ new WeakSet(), _RhSecondaryNavDropdown_open = /* @__PURE__ */ __name(function _RhSecondaryNavDropdown_open2() {
  const link = __classPrivateFieldGet(this, _RhSecondaryNavDropdown_slots, "f").getSlotted("link").find((child) => child instanceof HTMLAnchorElement);
  link?.setAttribute("aria-expanded", "true");
  const menu = __classPrivateFieldGet(this, _RhSecondaryNavDropdown_slots, "f").getSlotted("menu").find((child) => child instanceof RhSecondaryNavMenu);
  menu.visible = true;
}, "_RhSecondaryNavDropdown_open"), _RhSecondaryNavDropdown_close = /* @__PURE__ */ __name(function _RhSecondaryNavDropdown_close2() {
  const link = __classPrivateFieldGet(this, _RhSecondaryNavDropdown_slots, "f").getSlotted("link").find((child) => child instanceof HTMLAnchorElement);
  link?.setAttribute("aria-expanded", "false");
  const menu = __classPrivateFieldGet(this, _RhSecondaryNavDropdown_slots, "f").getSlotted("menu").find((child) => child instanceof RhSecondaryNavMenu);
  menu.visible = false;
}, "_RhSecondaryNavDropdown_close");
RhSecondaryNavDropdown.styles = [rh_secondary_nav_dropdown_css_default];
__decorate([
  i4("#container")
], RhSecondaryNavDropdown.prototype, "_container", void 0);
__decorate([
  p3,
  t3()
], RhSecondaryNavDropdown.prototype, "expanded", void 0);
__decorate([
  colorContextProvider(),
  e5({ reflect: true, attribute: "color-palette" })
], RhSecondaryNavDropdown.prototype, "colorPalette", void 0);
__decorate([
  o6
], RhSecondaryNavDropdown.prototype, "_clickHandler", null);
RhSecondaryNavDropdown = __decorate([
  e4("rh-secondary-nav-dropdown")
], RhSecondaryNavDropdown);

// elements/rh-secondary-nav/rh-secondary-nav-menu-section.js
init_lit();
init_decorators();
init_random();
init_logger();

// lib/functions.js
function isHeadingElement(node) {
  return node instanceof HTMLHeadingElement;
}
__name(isHeadingElement, "isHeadingElement");

// elements/rh-secondary-nav/rh-secondary-nav-menu-section.css.js
init_lit();
var styles15 = i`:host {
  display: block;
}

::slotted([slot="header"]) {
  padding: 0;
}

::slotted(:is(h1,h2,h3,h4,h5,h6)) {
  font-family: var(--rh-font-family-heading, RedHatDisplay, "Red Hat Display", "Noto Sans Arabic", "Noto Sans Hebrew", "Noto Sans JP", "Noto Sans KR", "Noto Sans Malayalam", "Noto Sans SC", "Noto Sans TC", "Noto Sans Thai", Overpass, Helvetica, Arial, sans-serif) !important;
}

::slotted([slot="links"]:is(ul, ol)) {
  list-style: none;
  margin: 0;
  padding: 0;
  display: flex;
  flex-direction: column;
  gap: 0.75em;
}

::slotted([slot="cta"]) {
  padding: 1.5em 0 0;
}

::slotted([slot="cta"]:last-of-type) {
  padding: 1.5em 0;
}

@media screen and (min-width: 992px) {
  ::slotted([slot="header"]) {
    padding: 0;
  }

  ::slotted([slot="links"]) {
    padding: 0;
    margin: 0;
  }
}
`;
var rh_secondary_nav_menu_section_css_default = styles15;

// elements/rh-secondary-nav/rh-secondary-nav-menu-section.js
var _RhSecondaryNavMenuSection_instances;
var _RhSecondaryNavMenuSection_logger;
var _RhSecondaryNavMenuSection_updateAccessibility;
var RhSecondaryNavMenuSection = /* @__PURE__ */ __name(class RhSecondaryNavMenuSection2 extends s4 {
  constructor() {
    super(...arguments);
    _RhSecondaryNavMenuSection_instances.add(this);
    _RhSecondaryNavMenuSection_logger.set(this, new n6(this));
  }
  connectedCallback() {
    super.connectedCallback();
    __classPrivateFieldGet(this, _RhSecondaryNavMenuSection_instances, "m", _RhSecondaryNavMenuSection_updateAccessibility).call(this);
  }
  render() {
    return y`
      <section part="container">
        <slot name="header"></slot>
        <slot name="links"></slot>
        <slot name="cta"></slot>
      </section>
    `;
  }
}, "RhSecondaryNavMenuSection");
_RhSecondaryNavMenuSection_logger = /* @__PURE__ */ new WeakMap(), _RhSecondaryNavMenuSection_instances = /* @__PURE__ */ new WeakSet(), _RhSecondaryNavMenuSection_updateAccessibility = /* @__PURE__ */ __name(function _RhSecondaryNavMenuSection_updateAccessibility2() {
  const lists = this.querySelectorAll(':is([slot="links"]):is(ul, ol)');
  for (const list of lists) {
    if (!list.hasAttribute("aria-labelledby")) {
      const header = isHeadingElement(list.previousElementSibling) ? list.previousElementSibling : null;
      if (!header) {
        return __classPrivateFieldGet(this, _RhSecondaryNavMenuSection_logger, "f").warn("This links set doesn't have a valid header associated with it.");
      } else {
        header.id || (header.id = n11("rh-secondary-nav-menu-section"));
        list.setAttribute("aria-labelledby", header.id);
      }
    }
  }
}, "_RhSecondaryNavMenuSection_updateAccessibility");
RhSecondaryNavMenuSection.styles = [rh_secondary_nav_menu_section_css_default];
RhSecondaryNavMenuSection = __decorate([
  e4("rh-secondary-nav-menu-section")
], RhSecondaryNavMenuSection);

// elements/rh-secondary-nav/rh-secondary-nav-overlay.js
init_lit();
init_decorators();
init_core();
init_decorators2();

// elements/rh-secondary-nav/rh-secondary-nav-overlay.css.js
init_lit();
var styles16 = i`:host {
  position: fixed;
  background: rgb(21, 21, 21, 0.75);
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: var(--rh-secondary-nav-overlay-z-index, -1);
}

:host([open]) {
  display: block;
}

:host(:not([open])) {
  display: none;
}
`;
var rh_secondary_nav_overlay_css_default = styles16;

// elements/rh-secondary-nav/rh-secondary-nav-overlay.js
var SecondaryNavOverlayChangeEvent = class extends n10 {
  constructor(open, toggle) {
    super("overlay-change");
    this.open = open;
    this.toggle = toggle;
  }
};
__name(SecondaryNavOverlayChangeEvent, "SecondaryNavOverlayChangeEvent");
var RhSecondaryNavOverlay = /* @__PURE__ */ __name(class RhSecondaryNavOverlay2 extends s4 {
  constructor() {
    super(...arguments);
    this.open = false;
  }
  render() {
    return y``;
  }
  _openChanged(_oldValue, newValue) {
    this.toggleAttribute("open", newValue);
  }
}, "RhSecondaryNavOverlay");
RhSecondaryNavOverlay.styles = [rh_secondary_nav_overlay_css_default];
__decorate([
  p3,
  t3()
], RhSecondaryNavOverlay.prototype, "open", void 0);
RhSecondaryNavOverlay = __decorate([
  e4("rh-secondary-nav-overlay")
], RhSecondaryNavOverlay);

// elements/rh-secondary-nav/rh-secondary-nav.css.js
init_lit();
var styles17 = i`:host {
  --_chevron-size: 0.35em;
  --_chevron-thickness: 0.125em;
  --_chevron-up-angle: 45deg;
  --_chevron-down-angle: -135deg;
  --_chevron-color: var(--rh-color-text-primary-on-light, #151515);
  --_chevron-transform-collapsed:
    rotate(var(--_chevron-up-angle))
    translate(calc(-1 * var(--_chevron-size)), var(--_chevron-thickness));
  --_chevron-transform-expanded:
    rotate(var(--_chevron-down-angle))
    translate(var(--_chevron-thickness), calc(var(--_chevron-inverse, -1) * var(--_chevron-size)));
  --_button-font-color: var(--rh-color-text-primary-on-light, #151515);
  --_nav-height: 4.625em;

  z-index: var(--rh-secondary-nav-z-index, 102);
}

:host([color-palette="darker"]) {
  --_button-font-color: var(--rh-color-text-primary-on-dark, #ffffff);
  --_chevron-color: var(--rh-color-text-primary-on-dark, #ffffff);
}

nav {
  position: relative;
  height: 100%;
  z-index: var(--rh-secondary-nav-z-index, 102);
}

nav.rtl {
  --_chevron-up-angle: -45deg;
  --_chevron-down-angle: 135deg;
  --_chevron-transform-collapsed:
    rotate(var(--_chevron-up-angle))
    translate(var(--_chevron-thickness), calc(-1 * var(--_chevron-thickness)));
  --_chevron-transform-expanded:
    rotate(var(--_chevron-down-angle))
    translate(var(--_chevron-thickness), calc(-1 * var(--_chevron-thickness)));
}

#container {
  display: grid;
  position: relative;
  height: fit-content;
  z-index: var(--rh-secondary-nav-z-index, 102);
  background-color: var(--rh-color-surface-light, #f0f0f0);
  gap: 0 var(--rh-space-2xl, 32px);
  grid-template-rows: var(--_nav-height) max-content max-content;
  grid-template-columns: 1fr max-content;
  grid-template-areas:
    "logo menu"
    "nav nav"
    "cta cta";
}

#cta {
  grid-area: cta;
}

#container.expanded {
  --_chevron-color: var(--rh-color-text-primary-on-light, #151515);
}

:host([color-palette="darker"]) #container {
  background-color: var(--rh-color-surface-dark, #3c3f42);
}

#container.expanded ::slotted([slot="nav"]),
#container.expanded ::slotted([slot="cta"]) {
  display: flex !important;
}

#container.expanded ::slotted([slot="nav"]) {
  list-style: none;
  flex-direction: column;
  padding: 2em 1em 0;
  margin: 0 !important;
  max-height: calc(100vh - var(--_nav-height));
  overflow-y: auto;
}

nav.compact #container.expanded ::slotted([slot="nav"]) {
  background-color: var(--rh-color-surface-lightest, #ffffff);
}

#container.expanded ::slotted([slot="cta"]) {
  padding: 2em 1em;
}

nav.compact #container.expanded #cta {
  background-color: var(--rh-color-surface-lightest, #ffffff);
}

button {
  grid-area: menu;
  border: none;
  display: flex;
  height: 100%;
  align-items: center;
  font-family: "Red Hat Display", Arial, sans-serif;
  font-size: 1em;
  padding: 1em;
  border-block-start: 0.25em solid transparent;
  margin-inline-end: 1em;
  color: var(--_button-font-color);
  background-color: var(--rh-color-surface-light, #f0f0f0);
}

button:hover {
  border-block-start-color: var(--rh-color-text-brand-on-light, #ee0000);
}

button:after {
  box-sizing: content-box !important;
  content: "";
  display: block;
  margin-inline-start: 1em;
  width: var(--_chevron-size);
  height: var(--_chevron-size);
  border-inline-end: var(--_chevron-thickness) solid var(--_chevron-color);
  border-block-end: var(--_chevron-thickness) solid var(--_chevron-color);
  transform: var(--_chevron-transform-collapsed);
}

button[aria-expanded="true"]:after {
  transform: var(--_chevron-transform-expanded);
}

button:focus {
  border-block-start-color: var(--rh-color-text-brand-on-light, #ee0000);
}

:host([color-palette="dark"]) button {
  background-color: var(--rh-color-surface-dark, #3c3f42);
}

button:active,
button[aria-expanded="true"],
:host([color-palette="darker"]) button[aria-expanded="true"] {
  color: var(--rh-color-text-primary-on-light, #151515);
  background-color: var(--rh-color-surface-lightest, #ffffff);
  border-block-start-color: var(--rh-color-text-brand-on-light, #ee0000);
  border-block-end: none;
}

:host([color-palette="darker"]) button:active {
  color: var(--rh-color-text-primary-on-dark, #ffffff);
}

:host([color-palette="darker"]) button[aria-expanded="true"]:active {
  color: var(--rh-color-text-primary-on-light, #151515);
}

@media screen and (min-width: 768px) {
  button {
    margin-inline-end: 2em;
  }

  #container.expanded ::slotted([slot="nav"]) {
    padding: 2em 2em 0 !important;
  }

  #container.expanded ::slotted([slot="cta"]) {
    padding: 2em !important;
  }
}

@media screen and (min-width: 992px) {
  #container {
    grid-template-areas: "logo nav cta";
    grid-template-rows: auto;
    grid-template-columns: max-content 1fr max-content;
    height: 100%;
  }

  button {
    display: none;
  }
}
`;
var rh_secondary_nav_css_default = styles17;

// elements/rh-secondary-nav/rh-secondary-nav.js
var _RhSecondaryNav_instances;
var _RhSecondaryNav_logger;
var _RhSecondaryNav_logoCopy;
var _RhSecondaryNav_dir;
var _RhSecondaryNav_getOpenDropdowns;
var _RhSecondaryNav_getDropdownIndex;
var _RhSecondaryNav_dropdownByIndex;
var _RhSecondaryNav_expand;
var _RhSecondaryNav_allDropdowns;
var _RhSecondaryNav_closeDropdown;
var _RhSecondaryNav_openDropdown;
var _RhSecondaryNav_updateAccessibility;
var _RhSecondaryNav_toggleMobileMenu;
var _RhSecondaryNav_setNavOrder;
var RhSecondaryNav_1;
var RhSecondaryNav = RhSecondaryNav_1 = /* @__PURE__ */ __name(class RhSecondaryNav2 extends s4 {
  constructor() {
    super(...arguments);
    _RhSecondaryNav_instances.add(this);
    _RhSecondaryNav_logger.set(this, new n6(this));
    _RhSecondaryNav_logoCopy.set(this, null);
    _RhSecondaryNav_dir.set(this, new DirController(this));
    this._compact = false;
    this.screenSize = new ScreenSizeController(this, "tabletLandscape", {
      onChange: (matches) => {
        this._compact = !matches;
      }
    });
    this._mobileMenuExpanded = false;
    this.mainNav = false;
    this.colorPalette = "lighter";
  }
  static isDropdown(element) {
    return element instanceof RhSecondaryNavDropdown;
  }
  async connectedCallback() {
    super.connectedCallback();
    this.addEventListener("expand-request", this._dropdownChangeHandler);
    this.addEventListener("overlay-change", this._toggleNavOverlay);
    this.addEventListener("focusout", this._focusOutHandler);
    this.addEventListener("keydown", this._keyboardControls);
    __classPrivateFieldGet(this, _RhSecondaryNav_instances, "m", _RhSecondaryNav_updateAccessibility).call(this);
  }
  firstUpdated() {
    this._overlay.addEventListener("click", this._overlayClickHandler);
  }
  render() {
    const navClasses = { compact: this._compact, rtl: __classPrivateFieldGet(this, _RhSecondaryNav_dir, "f").dir === "rtl" };
    const containerClasses = { "expanded": this._mobileMenuExpanded };
    return y`
      <nav part="nav" class="${o8(navClasses)}" aria-label="${__classPrivateFieldGet(this, _RhSecondaryNav_instances, "m", _RhSecondaryNav_setNavOrder).call(this)}">
        ${__classPrivateFieldGet(this, _RhSecondaryNav_logoCopy, "f")}
        <div id="container" part="container" class="${o8(containerClasses)}">
          <slot name="logo" id="logo"></slot>
          <button aria-controls="container" aria-expanded="${this._mobileMenuExpanded}" @click="${__classPrivateFieldGet(this, _RhSecondaryNav_instances, "m", _RhSecondaryNav_toggleMobileMenu)}">Menu</button>
          <slot name="nav"></slot>
          <div id="cta" part="cta">
            <slot name="cta"><slot>
          </div>
        </div>
      </nav>
      <rh-secondary-nav-overlay></rh-secondary-nav-overlay>
    `;
  }
  open(index) {
    if (index == null) {
      return;
    }
    const dropdown = __classPrivateFieldGet(this, _RhSecondaryNav_instances, "m", _RhSecondaryNav_dropdownByIndex).call(this, index);
    if (dropdown && RhSecondaryNav_1.isDropdown(dropdown)) {
      this.close();
      __classPrivateFieldGet(this, _RhSecondaryNav_instances, "m", _RhSecondaryNav_expand).call(this, index);
      dropdown?.querySelector("a")?.focus();
      this._overlay.open = true;
    }
  }
  close() {
    const dropdowns = __classPrivateFieldGet(this, _RhSecondaryNav_instances, "m", _RhSecondaryNav_allDropdowns).call(this);
    dropdowns.forEach((dropdown) => __classPrivateFieldGet(this, _RhSecondaryNav_instances, "m", _RhSecondaryNav_closeDropdown).call(this, dropdown));
  }
  _dropdownChangeHandler(event) {
    if (event instanceof SecondaryNavDropdownExpandEvent) {
      const index = __classPrivateFieldGet(this, _RhSecondaryNav_instances, "m", _RhSecondaryNav_getDropdownIndex).call(this, event.target);
      if (index === null || index === void 0) {
        return;
      }
      this.close();
      if (event.expanded) {
        __classPrivateFieldGet(this, _RhSecondaryNav_instances, "m", _RhSecondaryNav_expand).call(this, index);
      }
      if (!this._nav?.classList.contains("compact")) {
        this.dispatchEvent(new SecondaryNavOverlayChangeEvent(event.expanded, event.toggle));
      }
    }
  }
  _focusOutHandler(event) {
    const target = event.relatedTarget;
    if (target === null || target && !target.closest("rh-secondary-nav")) {
      if (this._compact) {
        this._mobileMenuExpanded = false;
      }
      this.close();
      this._overlay.open = false;
    }
  }
  _overlayClickHandler() {
    this.close();
    this._overlay.open = false;
    if (this._compact) {
      this._mobileMenuExpanded = false;
    }
  }
  __compactChanged(oldVal, newVal) {
    if (newVal === void 0 || newVal === oldVal) {
      return;
    }
    const dropdownsOpen = __classPrivateFieldGet(this, _RhSecondaryNav_instances, "m", _RhSecondaryNav_getOpenDropdowns).call(this).length;
    if (newVal === true) {
      if (dropdownsOpen > 0) {
        this._mobileMenuExpanded = true;
      }
    } else {
      this._mobileMenuExpanded = false;
      if (dropdownsOpen === 0) {
        if (this._overlay) {
          this._overlay.open = false;
        }
      }
    }
  }
  _keyboardControls(event) {
    switch (event.key) {
      case "Escape":
        if (this._compact) {
          this._mobileMenuExpanded = false;
          this._mobileMenuButton?.focus();
        } else {
          const open = __classPrivateFieldGet(this, _RhSecondaryNav_instances, "m", _RhSecondaryNav_getOpenDropdowns).call(this);
          open[0].querySelector("a")?.focus();
        }
        this.close();
        this._overlay.open = false;
        break;
      default:
        break;
    }
  }
  _toggleNavOverlay(event) {
    if (event instanceof SecondaryNavOverlayChangeEvent) {
      if (this.contains(event.toggle)) {
        this._overlay.open = event.open;
      }
    }
  }
}, "RhSecondaryNav");
_RhSecondaryNav_logger = /* @__PURE__ */ new WeakMap(), _RhSecondaryNav_logoCopy = /* @__PURE__ */ new WeakMap(), _RhSecondaryNav_dir = /* @__PURE__ */ new WeakMap(), _RhSecondaryNav_instances = /* @__PURE__ */ new WeakSet(), _RhSecondaryNav_getOpenDropdowns = /* @__PURE__ */ __name(function _RhSecondaryNav_getOpenDropdowns2() {
  const dropdowns = __classPrivateFieldGet(this, _RhSecondaryNav_instances, "m", _RhSecondaryNav_allDropdowns).call(this);
  const openDropdowns = [];
  dropdowns.forEach((dropdown) => {
    if (dropdown.expanded) {
      openDropdowns.push(dropdown);
    }
  });
  return openDropdowns;
}, "_RhSecondaryNav_getOpenDropdowns"), _RhSecondaryNav_getDropdownIndex = /* @__PURE__ */ __name(function _RhSecondaryNav_getDropdownIndex2(element) {
  if (!RhSecondaryNav_1.isDropdown(element)) {
    __classPrivateFieldGet(this, _RhSecondaryNav_logger, "f").warn("The getDropdownIndex method expects to receive a dropdown element.");
    return;
  }
  const dropdowns = __classPrivateFieldGet(this, _RhSecondaryNav_instances, "m", _RhSecondaryNav_allDropdowns).call(this);
  const index = dropdowns.findIndex((dropdown) => dropdown.id === element.id);
  return index;
}, "_RhSecondaryNav_getDropdownIndex"), _RhSecondaryNav_dropdownByIndex = /* @__PURE__ */ __name(function _RhSecondaryNav_dropdownByIndex2(index) {
  const dropdowns = __classPrivateFieldGet(this, _RhSecondaryNav_instances, "m", _RhSecondaryNav_allDropdowns).call(this);
  if (dropdowns[index] === void 0) {
    __classPrivateFieldGet(this, _RhSecondaryNav_logger, "f").error("This dropdown index does not exist.");
    return;
  }
  return dropdowns[index];
}, "_RhSecondaryNav_dropdownByIndex"), _RhSecondaryNav_expand = /* @__PURE__ */ __name(function _RhSecondaryNav_expand2(index) {
  if (index == null) {
    return;
  }
  const dropdown = __classPrivateFieldGet(this, _RhSecondaryNav_instances, "m", _RhSecondaryNav_dropdownByIndex).call(this, index);
  if (dropdown && RhSecondaryNav_1.isDropdown(dropdown)) {
    __classPrivateFieldGet(this, _RhSecondaryNav_instances, "m", _RhSecondaryNav_openDropdown).call(this, dropdown);
  }
}, "_RhSecondaryNav_expand"), _RhSecondaryNav_allDropdowns = /* @__PURE__ */ __name(function _RhSecondaryNav_allDropdowns2() {
  return Array.from(this.querySelectorAll("rh-secondary-nav-dropdown")).filter(RhSecondaryNav_1.isDropdown);
}, "_RhSecondaryNav_allDropdowns"), _RhSecondaryNav_closeDropdown = /* @__PURE__ */ __name(function _RhSecondaryNav_closeDropdown2(dropdown) {
  if (dropdown.expanded === false) {
    return;
  }
  dropdown.expanded = false;
}, "_RhSecondaryNav_closeDropdown"), _RhSecondaryNav_openDropdown = /* @__PURE__ */ __name(function _RhSecondaryNav_openDropdown2(dropdown) {
  if (dropdown.expanded === true) {
    return;
  }
  dropdown.expanded = true;
}, "_RhSecondaryNav_openDropdown"), _RhSecondaryNav_updateAccessibility = /* @__PURE__ */ __name(function _RhSecondaryNav_updateAccessibility2() {
  this.removeAttribute("role");
  const nav = this.querySelector(':is([slot="nav"]):is(ul)');
  nav?.removeAttribute("aria-labelledby");
}, "_RhSecondaryNav_updateAccessibility"), _RhSecondaryNav_toggleMobileMenu = /* @__PURE__ */ __name(function _RhSecondaryNav_toggleMobileMenu2() {
  if (this._mobileMenuExpanded) {
    this._mobileMenuExpanded = false;
  } else {
    this._mobileMenuExpanded = true;
  }
  this.dispatchEvent(new SecondaryNavOverlayChangeEvent(this._mobileMenuExpanded, this));
}, "_RhSecondaryNav_toggleMobileMenu"), _RhSecondaryNav_setNavOrder = /* @__PURE__ */ __name(function _RhSecondaryNav_setNavOrder2() {
  return this.mainNav ? "main" : "secondary";
}, "_RhSecondaryNav_setNavOrder");
RhSecondaryNav.version = "{{version}}";
RhSecondaryNav.styles = [rh_secondary_nav_css_default];
__decorate([
  i4("rh-secondary-nav-overlay")
], RhSecondaryNav.prototype, "_overlay", void 0);
__decorate([
  i4("#container")
], RhSecondaryNav.prototype, "_container", void 0);
__decorate([
  i4("nav")
], RhSecondaryNav.prototype, "_nav", void 0);
__decorate([
  i4("button")
], RhSecondaryNav.prototype, "_mobileMenuButton", void 0);
__decorate([
  p3,
  t3()
], RhSecondaryNav.prototype, "_compact", void 0);
__decorate([
  t3()
], RhSecondaryNav.prototype, "_mobileMenuExpanded", void 0);
__decorate([
  e5({ reflect: true, attribute: "main", type: Boolean })
], RhSecondaryNav.prototype, "mainNav", void 0);
__decorate([
  colorContextProvider(),
  e5({ reflect: true, attribute: "color-palette" })
], RhSecondaryNav.prototype, "colorPalette", void 0);
__decorate([
  o6
], RhSecondaryNav.prototype, "_dropdownChangeHandler", null);
__decorate([
  o6
], RhSecondaryNav.prototype, "_focusOutHandler", null);
__decorate([
  o6
], RhSecondaryNav.prototype, "_overlayClickHandler", null);
__decorate([
  o6
], RhSecondaryNav.prototype, "_keyboardControls", null);
__decorate([
  o6
], RhSecondaryNav.prototype, "_toggleNavOverlay", null);
RhSecondaryNav = RhSecondaryNav_1 = __decorate([
  e4("rh-secondary-nav")
], RhSecondaryNav);

// elements/rh-stat/rh-stat.js
init_lit();
init_decorators();
init_decorators2();
init_slot_controller();
init_logger();

// elements/rh-stat/rh-stat.css.js
init_lit();
var styles18 = i`:host {
  display: block;
}

div {
  width: 100%;
  height: 100%;
  display: flex;

  --_accent-color: var(--rh-color-brand-red, #ee0000);

  flex-direction: column;
  align-items: center;
  align-content: center;
  justify-content: space-around;
}

:host([on="dark"]) div {
  --_accent-color: #ffffff;
}

span,
::slotted(*) {
  display: block;
  text-align: center;
}

pfe-icon[size="md"],
::slotted(pfe-icon[size="md"]) {
  --pfe-icon--size: var(--rh-font-size-heading-xl, 2.5rem);

  display: contents;
}

.hasIcon ::slotted([slot="icon"]),
.hasIcon pfe-icon[size="md"] {
  order: 1;
  display: block;
  color: black;
  margin-bottom: 16px;
}

#title {
  order: 1;
  color: var(--_accent-color);
  font-size: var(--rh-font-size-body-text-xl, 1.25rem);
  font-family: var(--rh-font-family-heading, RedHatDisplay, "Red Hat Display", "Noto Sans Arabic", "Noto Sans Hebrew", "Noto Sans JP", "Noto Sans KR", "Noto Sans Malayalam", "Noto Sans SC", "Noto Sans TC", "Noto Sans Thai", Overpass, Helvetica, Arial, sans-serif);
  font-weight: var(--rh-font-weight-regular, 400);
  text-transform: uppercase;
}

#statistic {
  order: 2;
  color: var(--_accent-color);
  font-size: var(--rh-font-size-heading-lg, 2.25rem);
  font-weight: var(--rh-font-weight-regular, 300);
  font-family: var(--rh-font-family-heading, RedHatDisplay, "Red Hat Display", "Noto Sans Arabic", "Noto Sans Hebrew", "Noto Sans JP", "Noto Sans KR", "Noto Sans Malayalam", "Noto Sans SC", "Noto Sans TC", "Noto Sans Thai", Overpass, Helvetica, Arial, sans-serif);
}

#content {
  order: 3;
  font-size: var(--rh-font-size-body-text-lg, 1.125rem);
  font-family: var(--rh-font-family-text, "RedHatText", "Overpass", Helvetica, Arial, sans-serif);
  margin-top: var(--rh-space-sm, 6px);
}

#cta {
  order: 4;
  font-size: var(--rh-font-size-body-text-lg, 1.125rem);
  font-family: var(--rh-font-family-heading, RedHatDisplay, "Red Hat Display", "Noto Sans Arabic", "Noto Sans Hebrew", "Noto Sans JP", "Noto Sans KR", "Noto Sans Malayalam", "Noto Sans SC", "Noto Sans TC", "Noto Sans Thai", Overpass, Helvetica, Arial, sans-serif);
  margin-top: var(--rh-space-lg, 16px);
}

:not(.hasIcon) #icon,
:not(.hasStatistic) #statistic,
:not(.hasTitle) #title,
:not(.hasCta) #cta {
  display: none;
}

:host([size="large"]) #statistic {
  font-size: var(--rh-font-size-heading-2xl, 3rem);
}

.isMobile #content {
  font-size: var(--rh-font-size-body-text-lg, 1.125rem);
}

.isMobile #statistic {
  font-size: 32px;
}

:host([top="statistic"]) #statistic {
  order: 1;
}

:host([top="statistic"]) #title {
  order: 2;
}
`;
var rh_stat_css_default = styles18;

// elements/rh-stat/rh-stat.js
var _RhStat_instances;
var _RhStat_screenSize;
var _RhStat_slots;
var _RhStat_mo;
var _RhStat_logger;
var _RhStat_updateIcons;
var _RhStat_onMutation;
var RhStat = /* @__PURE__ */ __name(class RhStat2 extends s4 {
  constructor() {
    super(...arguments);
    _RhStat_instances.add(this);
    this.on = "light";
    this.top = "default";
    this.size = "default";
    this.isMobile = false;
    _RhStat_screenSize.set(this, new ScreenSizeController(this));
    _RhStat_slots.set(this, new l11(this, null, "icon", "title", "statistic", "cta"));
    _RhStat_mo.set(this, new MutationObserver(() => __classPrivateFieldGet(this, _RhStat_instances, "m", _RhStat_onMutation).call(this)));
    _RhStat_logger.set(this, new n6(this));
  }
  connectedCallback() {
    super.connectedCallback();
    __classPrivateFieldGet(this, _RhStat_instances, "m", _RhStat_updateIcons).call(this);
    __classPrivateFieldGet(this, _RhStat_mo, "f").observe(this, { childList: true });
    __classPrivateFieldGet(this, _RhStat_instances, "m", _RhStat_onMutation).call(this);
  }
  render() {
    const hasIcon = __classPrivateFieldGet(this, _RhStat_slots, "f").hasSlotted("icon") || !!this.icon;
    const hasTitle = __classPrivateFieldGet(this, _RhStat_slots, "f").hasSlotted("title");
    const hasStatistic = __classPrivateFieldGet(this, _RhStat_slots, "f").hasSlotted("statistic");
    const hasCta = __classPrivateFieldGet(this, _RhStat_slots, "f").hasSlotted("cta");
    const isMobile = !__classPrivateFieldGet(this, _RhStat_screenSize, "f").matches.has("tabletPortrait");
    return y`
      <div class="${o8({ isMobile, hasIcon, hasTitle, hasStatistic, hasCta })}">
        <span id="icon">
          <slot name="icon" @slotchange="${__classPrivateFieldGet(this, _RhStat_instances, "m", _RhStat_updateIcons)}">${!this.icon ? "" : y`
            <pfe-icon size=${this.size === "default" ? "md" : "lg"} icon=${this.icon}></pfe-icon>`}
          </slot>
        </span>
        <span id="title"><slot name="title"></slot></span>
        <span id="statistic"><slot name="statistic"></slot></span>
        <span id="content"><slot></slot></span>
        <span id="cta"><slot name="cta"></slot></span>
      </div>
    `;
  }
}, "RhStat");
_RhStat_screenSize = /* @__PURE__ */ new WeakMap(), _RhStat_slots = /* @__PURE__ */ new WeakMap(), _RhStat_mo = /* @__PURE__ */ new WeakMap(), _RhStat_logger = /* @__PURE__ */ new WeakMap(), _RhStat_instances = /* @__PURE__ */ new WeakSet(), _RhStat_updateIcons = /* @__PURE__ */ __name(function _RhStat_updateIcons2() {
  this.querySelector('pfe-icon[slot="icon"]')?.setAttribute?.("size", this.size === "default" ? "md" : "lg");
}, "_RhStat_updateIcons"), _RhStat_onMutation = /* @__PURE__ */ __name(function _RhStat_onMutation2() {
  if (!__classPrivateFieldGet(this, _RhStat_slots, "f").hasSlotted("stat")) {
    __classPrivateFieldGet(this, _RhStat_logger, "f").warn("Must contain stat content");
  }
  if (!this.querySelectorAll(":not([slot])").length) {
    __classPrivateFieldGet(this, _RhStat_logger, "f").warn("Must contain description content");
  }
}, "_RhStat_onMutation");
RhStat.version = "{{version}}";
RhStat.styles = [rh_stat_css_default];
__decorate([
  x2(),
  e5({ reflect: true })
], RhStat.prototype, "on", void 0);
__decorate([
  e5({ reflect: true, type: String })
], RhStat.prototype, "icon", void 0);
__decorate([
  e5({ reflect: true, type: String })
], RhStat.prototype, "top", void 0);
__decorate([
  e5({ reflect: true, type: String })
], RhStat.prototype, "size", void 0);
__decorate([
  e5({ type: Boolean, reflect: true, attribute: "is-mobile" })
], RhStat.prototype, "isMobile", void 0);
RhStat = __decorate([
  e4("rh-stat")
], RhStat);

// elements/rh-tooltip/rh-tooltip.js
init_decorators();
init_decorators2();

// node_modules/@patternfly/pfe-tooltip/BaseTooltip.js
init_lit();
init_decorators();
init_lit();

// node_modules/@popperjs/core/lib/enums.js
var top = "top";
var bottom = "bottom";
var right = "right";
var left = "left";
var auto = "auto";
var basePlacements = [top, bottom, right, left];
var start = "start";
var end = "end";
var clippingParents = "clippingParents";
var viewport = "viewport";
var popper = "popper";
var reference = "reference";
var variationPlacements = /* @__PURE__ */ basePlacements.reduce(function(acc, placement) {
  return acc.concat([placement + "-" + start, placement + "-" + end]);
}, []);
var placements = /* @__PURE__ */ [].concat(basePlacements, [auto]).reduce(function(acc, placement) {
  return acc.concat([placement, placement + "-" + start, placement + "-" + end]);
}, []);
var beforeRead = "beforeRead";
var read = "read";
var afterRead = "afterRead";
var beforeMain = "beforeMain";
var main = "main";
var afterMain = "afterMain";
var beforeWrite = "beforeWrite";
var write = "write";
var afterWrite = "afterWrite";
var modifierPhases = [beforeRead, read, afterRead, beforeMain, main, afterMain, beforeWrite, write, afterWrite];

// node_modules/@popperjs/core/lib/dom-utils/getNodeName.js
function getNodeName(element) {
  return element ? (element.nodeName || "").toLowerCase() : null;
}
__name(getNodeName, "getNodeName");

// node_modules/@popperjs/core/lib/dom-utils/getWindow.js
function getWindow(node) {
  if (node == null) {
    return window;
  }
  if (node.toString() !== "[object Window]") {
    var ownerDocument = node.ownerDocument;
    return ownerDocument ? ownerDocument.defaultView || window : window;
  }
  return node;
}
__name(getWindow, "getWindow");

// node_modules/@popperjs/core/lib/dom-utils/instanceOf.js
function isElement(node) {
  var OwnElement = getWindow(node).Element;
  return node instanceof OwnElement || node instanceof Element;
}
__name(isElement, "isElement");
function isHTMLElement(node) {
  var OwnElement = getWindow(node).HTMLElement;
  return node instanceof OwnElement || node instanceof HTMLElement;
}
__name(isHTMLElement, "isHTMLElement");
function isShadowRoot(node) {
  if (typeof ShadowRoot === "undefined") {
    return false;
  }
  var OwnElement = getWindow(node).ShadowRoot;
  return node instanceof OwnElement || node instanceof ShadowRoot;
}
__name(isShadowRoot, "isShadowRoot");

// node_modules/@popperjs/core/lib/modifiers/applyStyles.js
function applyStyles(_ref) {
  var state = _ref.state;
  Object.keys(state.elements).forEach(function(name) {
    var style = state.styles[name] || {};
    var attributes = state.attributes[name] || {};
    var element = state.elements[name];
    if (!isHTMLElement(element) || !getNodeName(element)) {
      return;
    }
    Object.assign(element.style, style);
    Object.keys(attributes).forEach(function(name2) {
      var value = attributes[name2];
      if (value === false) {
        element.removeAttribute(name2);
      } else {
        element.setAttribute(name2, value === true ? "" : value);
      }
    });
  });
}
__name(applyStyles, "applyStyles");
function effect(_ref2) {
  var state = _ref2.state;
  var initialStyles = {
    popper: {
      position: state.options.strategy,
      left: "0",
      top: "0",
      margin: "0"
    },
    arrow: {
      position: "absolute"
    },
    reference: {}
  };
  Object.assign(state.elements.popper.style, initialStyles.popper);
  state.styles = initialStyles;
  if (state.elements.arrow) {
    Object.assign(state.elements.arrow.style, initialStyles.arrow);
  }
  return function() {
    Object.keys(state.elements).forEach(function(name) {
      var element = state.elements[name];
      var attributes = state.attributes[name] || {};
      var styleProperties = Object.keys(state.styles.hasOwnProperty(name) ? state.styles[name] : initialStyles[name]);
      var style = styleProperties.reduce(function(style2, property) {
        style2[property] = "";
        return style2;
      }, {});
      if (!isHTMLElement(element) || !getNodeName(element)) {
        return;
      }
      Object.assign(element.style, style);
      Object.keys(attributes).forEach(function(attribute) {
        element.removeAttribute(attribute);
      });
    });
  };
}
__name(effect, "effect");
var applyStyles_default = {
  name: "applyStyles",
  enabled: true,
  phase: "write",
  fn: applyStyles,
  effect,
  requires: ["computeStyles"]
};

// node_modules/@popperjs/core/lib/utils/getBasePlacement.js
function getBasePlacement(placement) {
  return placement.split("-")[0];
}
__name(getBasePlacement, "getBasePlacement");

// node_modules/@popperjs/core/lib/utils/math.js
var max = Math.max;
var min = Math.min;
var round = Math.round;

// node_modules/@popperjs/core/lib/dom-utils/getBoundingClientRect.js
function getBoundingClientRect(element, includeScale) {
  if (includeScale === void 0) {
    includeScale = false;
  }
  var rect = element.getBoundingClientRect();
  var scaleX = 1;
  var scaleY = 1;
  if (isHTMLElement(element) && includeScale) {
    var offsetHeight = element.offsetHeight;
    var offsetWidth = element.offsetWidth;
    if (offsetWidth > 0) {
      scaleX = round(rect.width) / offsetWidth || 1;
    }
    if (offsetHeight > 0) {
      scaleY = round(rect.height) / offsetHeight || 1;
    }
  }
  return {
    width: rect.width / scaleX,
    height: rect.height / scaleY,
    top: rect.top / scaleY,
    right: rect.right / scaleX,
    bottom: rect.bottom / scaleY,
    left: rect.left / scaleX,
    x: rect.left / scaleX,
    y: rect.top / scaleY
  };
}
__name(getBoundingClientRect, "getBoundingClientRect");

// node_modules/@popperjs/core/lib/dom-utils/getLayoutRect.js
function getLayoutRect(element) {
  var clientRect = getBoundingClientRect(element);
  var width = element.offsetWidth;
  var height = element.offsetHeight;
  if (Math.abs(clientRect.width - width) <= 1) {
    width = clientRect.width;
  }
  if (Math.abs(clientRect.height - height) <= 1) {
    height = clientRect.height;
  }
  return {
    x: element.offsetLeft,
    y: element.offsetTop,
    width,
    height
  };
}
__name(getLayoutRect, "getLayoutRect");

// node_modules/@popperjs/core/lib/dom-utils/contains.js
function contains(parent, child) {
  var rootNode = child.getRootNode && child.getRootNode();
  if (parent.contains(child)) {
    return true;
  } else if (rootNode && isShadowRoot(rootNode)) {
    var next = child;
    do {
      if (next && parent.isSameNode(next)) {
        return true;
      }
      next = next.parentNode || next.host;
    } while (next);
  }
  return false;
}
__name(contains, "contains");

// node_modules/@popperjs/core/lib/dom-utils/getComputedStyle.js
function getComputedStyle2(element) {
  return getWindow(element).getComputedStyle(element);
}
__name(getComputedStyle2, "getComputedStyle");

// node_modules/@popperjs/core/lib/dom-utils/isTableElement.js
function isTableElement(element) {
  return ["table", "td", "th"].indexOf(getNodeName(element)) >= 0;
}
__name(isTableElement, "isTableElement");

// node_modules/@popperjs/core/lib/dom-utils/getDocumentElement.js
function getDocumentElement(element) {
  return ((isElement(element) ? element.ownerDocument : element.document) || window.document).documentElement;
}
__name(getDocumentElement, "getDocumentElement");

// node_modules/@popperjs/core/lib/dom-utils/getParentNode.js
function getParentNode(element) {
  if (getNodeName(element) === "html") {
    return element;
  }
  return element.assignedSlot || element.parentNode || (isShadowRoot(element) ? element.host : null) || getDocumentElement(element);
}
__name(getParentNode, "getParentNode");

// node_modules/@popperjs/core/lib/dom-utils/getOffsetParent.js
function getTrueOffsetParent(element) {
  if (!isHTMLElement(element) || getComputedStyle2(element).position === "fixed") {
    return null;
  }
  return element.offsetParent;
}
__name(getTrueOffsetParent, "getTrueOffsetParent");
function getContainingBlock(element) {
  var isFirefox = navigator.userAgent.toLowerCase().indexOf("firefox") !== -1;
  var isIE = navigator.userAgent.indexOf("Trident") !== -1;
  if (isIE && isHTMLElement(element)) {
    var elementCss = getComputedStyle2(element);
    if (elementCss.position === "fixed") {
      return null;
    }
  }
  var currentNode = getParentNode(element);
  if (isShadowRoot(currentNode)) {
    currentNode = currentNode.host;
  }
  while (isHTMLElement(currentNode) && ["html", "body"].indexOf(getNodeName(currentNode)) < 0) {
    var css = getComputedStyle2(currentNode);
    if (css.transform !== "none" || css.perspective !== "none" || css.contain === "paint" || ["transform", "perspective"].indexOf(css.willChange) !== -1 || isFirefox && css.willChange === "filter" || isFirefox && css.filter && css.filter !== "none") {
      return currentNode;
    } else {
      currentNode = currentNode.parentNode;
    }
  }
  return null;
}
__name(getContainingBlock, "getContainingBlock");
function getOffsetParent(element) {
  var window2 = getWindow(element);
  var offsetParent = getTrueOffsetParent(element);
  while (offsetParent && isTableElement(offsetParent) && getComputedStyle2(offsetParent).position === "static") {
    offsetParent = getTrueOffsetParent(offsetParent);
  }
  if (offsetParent && (getNodeName(offsetParent) === "html" || getNodeName(offsetParent) === "body" && getComputedStyle2(offsetParent).position === "static")) {
    return window2;
  }
  return offsetParent || getContainingBlock(element) || window2;
}
__name(getOffsetParent, "getOffsetParent");

// node_modules/@popperjs/core/lib/utils/getMainAxisFromPlacement.js
function getMainAxisFromPlacement(placement) {
  return ["top", "bottom"].indexOf(placement) >= 0 ? "x" : "y";
}
__name(getMainAxisFromPlacement, "getMainAxisFromPlacement");

// node_modules/@popperjs/core/lib/utils/within.js
function within(min2, value, max2) {
  return max(min2, min(value, max2));
}
__name(within, "within");
function withinMaxClamp(min2, value, max2) {
  var v12 = within(min2, value, max2);
  return v12 > max2 ? max2 : v12;
}
__name(withinMaxClamp, "withinMaxClamp");

// node_modules/@popperjs/core/lib/utils/getFreshSideObject.js
function getFreshSideObject() {
  return {
    top: 0,
    right: 0,
    bottom: 0,
    left: 0
  };
}
__name(getFreshSideObject, "getFreshSideObject");

// node_modules/@popperjs/core/lib/utils/mergePaddingObject.js
function mergePaddingObject(paddingObject) {
  return Object.assign({}, getFreshSideObject(), paddingObject);
}
__name(mergePaddingObject, "mergePaddingObject");

// node_modules/@popperjs/core/lib/utils/expandToHashMap.js
function expandToHashMap(value, keys) {
  return keys.reduce(function(hashMap, key) {
    hashMap[key] = value;
    return hashMap;
  }, {});
}
__name(expandToHashMap, "expandToHashMap");

// node_modules/@popperjs/core/lib/modifiers/arrow.js
var toPaddingObject = /* @__PURE__ */ __name(function toPaddingObject2(padding, state) {
  padding = typeof padding === "function" ? padding(Object.assign({}, state.rects, {
    placement: state.placement
  })) : padding;
  return mergePaddingObject(typeof padding !== "number" ? padding : expandToHashMap(padding, basePlacements));
}, "toPaddingObject");
function arrow(_ref) {
  var _state$modifiersData$;
  var state = _ref.state, name = _ref.name, options3 = _ref.options;
  var arrowElement = state.elements.arrow;
  var popperOffsets2 = state.modifiersData.popperOffsets;
  var basePlacement = getBasePlacement(state.placement);
  var axis = getMainAxisFromPlacement(basePlacement);
  var isVertical = [left, right].indexOf(basePlacement) >= 0;
  var len = isVertical ? "height" : "width";
  if (!arrowElement || !popperOffsets2) {
    return;
  }
  var paddingObject = toPaddingObject(options3.padding, state);
  var arrowRect = getLayoutRect(arrowElement);
  var minProp = axis === "y" ? top : left;
  var maxProp = axis === "y" ? bottom : right;
  var endDiff = state.rects.reference[len] + state.rects.reference[axis] - popperOffsets2[axis] - state.rects.popper[len];
  var startDiff = popperOffsets2[axis] - state.rects.reference[axis];
  var arrowOffsetParent = getOffsetParent(arrowElement);
  var clientSize = arrowOffsetParent ? axis === "y" ? arrowOffsetParent.clientHeight || 0 : arrowOffsetParent.clientWidth || 0 : 0;
  var centerToReference = endDiff / 2 - startDiff / 2;
  var min2 = paddingObject[minProp];
  var max2 = clientSize - arrowRect[len] - paddingObject[maxProp];
  var center = clientSize / 2 - arrowRect[len] / 2 + centerToReference;
  var offset2 = within(min2, center, max2);
  var axisProp = axis;
  state.modifiersData[name] = (_state$modifiersData$ = {}, _state$modifiersData$[axisProp] = offset2, _state$modifiersData$.centerOffset = offset2 - center, _state$modifiersData$);
}
__name(arrow, "arrow");
function effect2(_ref2) {
  var state = _ref2.state, options3 = _ref2.options;
  var _options$element = options3.element, arrowElement = _options$element === void 0 ? "[data-popper-arrow]" : _options$element;
  if (arrowElement == null) {
    return;
  }
  if (typeof arrowElement === "string") {
    arrowElement = state.elements.popper.querySelector(arrowElement);
    if (!arrowElement) {
      return;
    }
  }
  if (false) {
    if (!isHTMLElement(arrowElement)) {
      console.error(['Popper: "arrow" element must be an HTMLElement (not an SVGElement).', "To use an SVG arrow, wrap it in an HTMLElement that will be used as", "the arrow."].join(" "));
    }
  }
  if (!contains(state.elements.popper, arrowElement)) {
    if (false) {
      console.error(['Popper: "arrow" modifier\'s `element` must be a child of the popper', "element."].join(" "));
    }
    return;
  }
  state.elements.arrow = arrowElement;
}
__name(effect2, "effect");
var arrow_default = {
  name: "arrow",
  enabled: true,
  phase: "main",
  fn: arrow,
  effect: effect2,
  requires: ["popperOffsets"],
  requiresIfExists: ["preventOverflow"]
};

// node_modules/@popperjs/core/lib/utils/getVariation.js
function getVariation(placement) {
  return placement.split("-")[1];
}
__name(getVariation, "getVariation");

// node_modules/@popperjs/core/lib/modifiers/computeStyles.js
var unsetSides = {
  top: "auto",
  right: "auto",
  bottom: "auto",
  left: "auto"
};
function roundOffsetsByDPR(_ref) {
  var x13 = _ref.x, y11 = _ref.y;
  var win = window;
  var dpr = win.devicePixelRatio || 1;
  return {
    x: round(x13 * dpr) / dpr || 0,
    y: round(y11 * dpr) / dpr || 0
  };
}
__name(roundOffsetsByDPR, "roundOffsetsByDPR");
function mapToStyles(_ref2) {
  var _Object$assign2;
  var popper2 = _ref2.popper, popperRect = _ref2.popperRect, placement = _ref2.placement, variation = _ref2.variation, offsets = _ref2.offsets, position = _ref2.position, gpuAcceleration = _ref2.gpuAcceleration, adaptive = _ref2.adaptive, roundOffsets = _ref2.roundOffsets, isFixed = _ref2.isFixed;
  var _offsets$x = offsets.x, x13 = _offsets$x === void 0 ? 0 : _offsets$x, _offsets$y = offsets.y, y11 = _offsets$y === void 0 ? 0 : _offsets$y;
  var _ref3 = typeof roundOffsets === "function" ? roundOffsets({
    x: x13,
    y: y11
  }) : {
    x: x13,
    y: y11
  };
  x13 = _ref3.x;
  y11 = _ref3.y;
  var hasX = offsets.hasOwnProperty("x");
  var hasY = offsets.hasOwnProperty("y");
  var sideX = left;
  var sideY = top;
  var win = window;
  if (adaptive) {
    var offsetParent = getOffsetParent(popper2);
    var heightProp = "clientHeight";
    var widthProp = "clientWidth";
    if (offsetParent === getWindow(popper2)) {
      offsetParent = getDocumentElement(popper2);
      if (getComputedStyle2(offsetParent).position !== "static" && position === "absolute") {
        heightProp = "scrollHeight";
        widthProp = "scrollWidth";
      }
    }
    offsetParent = offsetParent;
    if (placement === top || (placement === left || placement === right) && variation === end) {
      sideY = bottom;
      var offsetY = isFixed && offsetParent === win && win.visualViewport ? win.visualViewport.height : offsetParent[heightProp];
      y11 -= offsetY - popperRect.height;
      y11 *= gpuAcceleration ? 1 : -1;
    }
    if (placement === left || (placement === top || placement === bottom) && variation === end) {
      sideX = right;
      var offsetX = isFixed && offsetParent === win && win.visualViewport ? win.visualViewport.width : offsetParent[widthProp];
      x13 -= offsetX - popperRect.width;
      x13 *= gpuAcceleration ? 1 : -1;
    }
  }
  var commonStyles = Object.assign({
    position
  }, adaptive && unsetSides);
  var _ref4 = roundOffsets === true ? roundOffsetsByDPR({
    x: x13,
    y: y11
  }) : {
    x: x13,
    y: y11
  };
  x13 = _ref4.x;
  y11 = _ref4.y;
  if (gpuAcceleration) {
    var _Object$assign;
    return Object.assign({}, commonStyles, (_Object$assign = {}, _Object$assign[sideY] = hasY ? "0" : "", _Object$assign[sideX] = hasX ? "0" : "", _Object$assign.transform = (win.devicePixelRatio || 1) <= 1 ? "translate(" + x13 + "px, " + y11 + "px)" : "translate3d(" + x13 + "px, " + y11 + "px, 0)", _Object$assign));
  }
  return Object.assign({}, commonStyles, (_Object$assign2 = {}, _Object$assign2[sideY] = hasY ? y11 + "px" : "", _Object$assign2[sideX] = hasX ? x13 + "px" : "", _Object$assign2.transform = "", _Object$assign2));
}
__name(mapToStyles, "mapToStyles");
function computeStyles(_ref5) {
  var state = _ref5.state, options3 = _ref5.options;
  var _options$gpuAccelerat = options3.gpuAcceleration, gpuAcceleration = _options$gpuAccelerat === void 0 ? true : _options$gpuAccelerat, _options$adaptive = options3.adaptive, adaptive = _options$adaptive === void 0 ? true : _options$adaptive, _options$roundOffsets = options3.roundOffsets, roundOffsets = _options$roundOffsets === void 0 ? true : _options$roundOffsets;
  if (false) {
    var transitionProperty = getComputedStyle2(state.elements.popper).transitionProperty || "";
    if (adaptive && ["transform", "top", "right", "bottom", "left"].some(function(property) {
      return transitionProperty.indexOf(property) >= 0;
    })) {
      console.warn(["Popper: Detected CSS transitions on at least one of the following", 'CSS properties: "transform", "top", "right", "bottom", "left".', "\n\n", 'Disable the "computeStyles" modifier\'s `adaptive` option to allow', "for smooth transitions, or remove these properties from the CSS", "transition declaration on the popper element if only transitioning", "opacity or background-color for example.", "\n\n", "We recommend using the popper element as a wrapper around an inner", "element that can have any CSS property transitioned for animations."].join(" "));
    }
  }
  var commonStyles = {
    placement: getBasePlacement(state.placement),
    variation: getVariation(state.placement),
    popper: state.elements.popper,
    popperRect: state.rects.popper,
    gpuAcceleration,
    isFixed: state.options.strategy === "fixed"
  };
  if (state.modifiersData.popperOffsets != null) {
    state.styles.popper = Object.assign({}, state.styles.popper, mapToStyles(Object.assign({}, commonStyles, {
      offsets: state.modifiersData.popperOffsets,
      position: state.options.strategy,
      adaptive,
      roundOffsets
    })));
  }
  if (state.modifiersData.arrow != null) {
    state.styles.arrow = Object.assign({}, state.styles.arrow, mapToStyles(Object.assign({}, commonStyles, {
      offsets: state.modifiersData.arrow,
      position: "absolute",
      adaptive: false,
      roundOffsets
    })));
  }
  state.attributes.popper = Object.assign({}, state.attributes.popper, {
    "data-popper-placement": state.placement
  });
}
__name(computeStyles, "computeStyles");
var computeStyles_default = {
  name: "computeStyles",
  enabled: true,
  phase: "beforeWrite",
  fn: computeStyles,
  data: {}
};

// node_modules/@popperjs/core/lib/modifiers/eventListeners.js
var passive = {
  passive: true
};
function effect3(_ref) {
  var state = _ref.state, instance = _ref.instance, options3 = _ref.options;
  var _options$scroll = options3.scroll, scroll = _options$scroll === void 0 ? true : _options$scroll, _options$resize = options3.resize, resize = _options$resize === void 0 ? true : _options$resize;
  var window2 = getWindow(state.elements.popper);
  var scrollParents = [].concat(state.scrollParents.reference, state.scrollParents.popper);
  if (scroll) {
    scrollParents.forEach(function(scrollParent) {
      scrollParent.addEventListener("scroll", instance.update, passive);
    });
  }
  if (resize) {
    window2.addEventListener("resize", instance.update, passive);
  }
  return function() {
    if (scroll) {
      scrollParents.forEach(function(scrollParent) {
        scrollParent.removeEventListener("scroll", instance.update, passive);
      });
    }
    if (resize) {
      window2.removeEventListener("resize", instance.update, passive);
    }
  };
}
__name(effect3, "effect");
var eventListeners_default = {
  name: "eventListeners",
  enabled: true,
  phase: "write",
  fn: /* @__PURE__ */ __name(function fn() {
  }, "fn"),
  effect: effect3,
  data: {}
};

// node_modules/@popperjs/core/lib/utils/getOppositePlacement.js
var hash = {
  left: "right",
  right: "left",
  bottom: "top",
  top: "bottom"
};
function getOppositePlacement(placement) {
  return placement.replace(/left|right|bottom|top/g, function(matched) {
    return hash[matched];
  });
}
__name(getOppositePlacement, "getOppositePlacement");

// node_modules/@popperjs/core/lib/utils/getOppositeVariationPlacement.js
var hash2 = {
  start: "end",
  end: "start"
};
function getOppositeVariationPlacement(placement) {
  return placement.replace(/start|end/g, function(matched) {
    return hash2[matched];
  });
}
__name(getOppositeVariationPlacement, "getOppositeVariationPlacement");

// node_modules/@popperjs/core/lib/dom-utils/getWindowScroll.js
function getWindowScroll(node) {
  var win = getWindow(node);
  var scrollLeft = win.pageXOffset;
  var scrollTop = win.pageYOffset;
  return {
    scrollLeft,
    scrollTop
  };
}
__name(getWindowScroll, "getWindowScroll");

// node_modules/@popperjs/core/lib/dom-utils/getWindowScrollBarX.js
function getWindowScrollBarX(element) {
  return getBoundingClientRect(getDocumentElement(element)).left + getWindowScroll(element).scrollLeft;
}
__name(getWindowScrollBarX, "getWindowScrollBarX");

// node_modules/@popperjs/core/lib/dom-utils/getViewportRect.js
function getViewportRect(element) {
  var win = getWindow(element);
  var html = getDocumentElement(element);
  var visualViewport = win.visualViewport;
  var width = html.clientWidth;
  var height = html.clientHeight;
  var x13 = 0;
  var y11 = 0;
  if (visualViewport) {
    width = visualViewport.width;
    height = visualViewport.height;
    if (!/^((?!chrome|android).)*safari/i.test(navigator.userAgent)) {
      x13 = visualViewport.offsetLeft;
      y11 = visualViewport.offsetTop;
    }
  }
  return {
    width,
    height,
    x: x13 + getWindowScrollBarX(element),
    y: y11
  };
}
__name(getViewportRect, "getViewportRect");

// node_modules/@popperjs/core/lib/dom-utils/getDocumentRect.js
function getDocumentRect(element) {
  var _element$ownerDocumen;
  var html = getDocumentElement(element);
  var winScroll = getWindowScroll(element);
  var body = (_element$ownerDocumen = element.ownerDocument) == null ? void 0 : _element$ownerDocumen.body;
  var width = max(html.scrollWidth, html.clientWidth, body ? body.scrollWidth : 0, body ? body.clientWidth : 0);
  var height = max(html.scrollHeight, html.clientHeight, body ? body.scrollHeight : 0, body ? body.clientHeight : 0);
  var x13 = -winScroll.scrollLeft + getWindowScrollBarX(element);
  var y11 = -winScroll.scrollTop;
  if (getComputedStyle2(body || html).direction === "rtl") {
    x13 += max(html.clientWidth, body ? body.clientWidth : 0) - width;
  }
  return {
    width,
    height,
    x: x13,
    y: y11
  };
}
__name(getDocumentRect, "getDocumentRect");

// node_modules/@popperjs/core/lib/dom-utils/isScrollParent.js
function isScrollParent(element) {
  var _getComputedStyle = getComputedStyle2(element), overflow = _getComputedStyle.overflow, overflowX = _getComputedStyle.overflowX, overflowY = _getComputedStyle.overflowY;
  return /auto|scroll|overlay|hidden/.test(overflow + overflowY + overflowX);
}
__name(isScrollParent, "isScrollParent");

// node_modules/@popperjs/core/lib/dom-utils/getScrollParent.js
function getScrollParent(node) {
  if (["html", "body", "#document"].indexOf(getNodeName(node)) >= 0) {
    return node.ownerDocument.body;
  }
  if (isHTMLElement(node) && isScrollParent(node)) {
    return node;
  }
  return getScrollParent(getParentNode(node));
}
__name(getScrollParent, "getScrollParent");

// node_modules/@popperjs/core/lib/dom-utils/listScrollParents.js
function listScrollParents(element, list) {
  var _element$ownerDocumen;
  if (list === void 0) {
    list = [];
  }
  var scrollParent = getScrollParent(element);
  var isBody = scrollParent === ((_element$ownerDocumen = element.ownerDocument) == null ? void 0 : _element$ownerDocumen.body);
  var win = getWindow(scrollParent);
  var target = isBody ? [win].concat(win.visualViewport || [], isScrollParent(scrollParent) ? scrollParent : []) : scrollParent;
  var updatedList = list.concat(target);
  return isBody ? updatedList : updatedList.concat(listScrollParents(getParentNode(target)));
}
__name(listScrollParents, "listScrollParents");

// node_modules/@popperjs/core/lib/utils/rectToClientRect.js
function rectToClientRect(rect) {
  return Object.assign({}, rect, {
    left: rect.x,
    top: rect.y,
    right: rect.x + rect.width,
    bottom: rect.y + rect.height
  });
}
__name(rectToClientRect, "rectToClientRect");

// node_modules/@popperjs/core/lib/dom-utils/getClippingRect.js
function getInnerBoundingClientRect(element) {
  var rect = getBoundingClientRect(element);
  rect.top = rect.top + element.clientTop;
  rect.left = rect.left + element.clientLeft;
  rect.bottom = rect.top + element.clientHeight;
  rect.right = rect.left + element.clientWidth;
  rect.width = element.clientWidth;
  rect.height = element.clientHeight;
  rect.x = rect.left;
  rect.y = rect.top;
  return rect;
}
__name(getInnerBoundingClientRect, "getInnerBoundingClientRect");
function getClientRectFromMixedType(element, clippingParent) {
  return clippingParent === viewport ? rectToClientRect(getViewportRect(element)) : isElement(clippingParent) ? getInnerBoundingClientRect(clippingParent) : rectToClientRect(getDocumentRect(getDocumentElement(element)));
}
__name(getClientRectFromMixedType, "getClientRectFromMixedType");
function getClippingParents(element) {
  var clippingParents2 = listScrollParents(getParentNode(element));
  var canEscapeClipping = ["absolute", "fixed"].indexOf(getComputedStyle2(element).position) >= 0;
  var clipperElement = canEscapeClipping && isHTMLElement(element) ? getOffsetParent(element) : element;
  if (!isElement(clipperElement)) {
    return [];
  }
  return clippingParents2.filter(function(clippingParent) {
    return isElement(clippingParent) && contains(clippingParent, clipperElement) && getNodeName(clippingParent) !== "body";
  });
}
__name(getClippingParents, "getClippingParents");
function getClippingRect(element, boundary, rootBoundary) {
  var mainClippingParents = boundary === "clippingParents" ? getClippingParents(element) : [].concat(boundary);
  var clippingParents2 = [].concat(mainClippingParents, [rootBoundary]);
  var firstClippingParent = clippingParents2[0];
  var clippingRect = clippingParents2.reduce(function(accRect, clippingParent) {
    var rect = getClientRectFromMixedType(element, clippingParent);
    accRect.top = max(rect.top, accRect.top);
    accRect.right = min(rect.right, accRect.right);
    accRect.bottom = min(rect.bottom, accRect.bottom);
    accRect.left = max(rect.left, accRect.left);
    return accRect;
  }, getClientRectFromMixedType(element, firstClippingParent));
  clippingRect.width = clippingRect.right - clippingRect.left;
  clippingRect.height = clippingRect.bottom - clippingRect.top;
  clippingRect.x = clippingRect.left;
  clippingRect.y = clippingRect.top;
  return clippingRect;
}
__name(getClippingRect, "getClippingRect");

// node_modules/@popperjs/core/lib/utils/computeOffsets.js
function computeOffsets(_ref) {
  var reference2 = _ref.reference, element = _ref.element, placement = _ref.placement;
  var basePlacement = placement ? getBasePlacement(placement) : null;
  var variation = placement ? getVariation(placement) : null;
  var commonX = reference2.x + reference2.width / 2 - element.width / 2;
  var commonY = reference2.y + reference2.height / 2 - element.height / 2;
  var offsets;
  switch (basePlacement) {
    case top:
      offsets = {
        x: commonX,
        y: reference2.y - element.height
      };
      break;
    case bottom:
      offsets = {
        x: commonX,
        y: reference2.y + reference2.height
      };
      break;
    case right:
      offsets = {
        x: reference2.x + reference2.width,
        y: commonY
      };
      break;
    case left:
      offsets = {
        x: reference2.x - element.width,
        y: commonY
      };
      break;
    default:
      offsets = {
        x: reference2.x,
        y: reference2.y
      };
  }
  var mainAxis = basePlacement ? getMainAxisFromPlacement(basePlacement) : null;
  if (mainAxis != null) {
    var len = mainAxis === "y" ? "height" : "width";
    switch (variation) {
      case start:
        offsets[mainAxis] = offsets[mainAxis] - (reference2[len] / 2 - element[len] / 2);
        break;
      case end:
        offsets[mainAxis] = offsets[mainAxis] + (reference2[len] / 2 - element[len] / 2);
        break;
      default:
    }
  }
  return offsets;
}
__name(computeOffsets, "computeOffsets");

// node_modules/@popperjs/core/lib/utils/detectOverflow.js
function detectOverflow(state, options3) {
  if (options3 === void 0) {
    options3 = {};
  }
  var _options = options3, _options$placement = _options.placement, placement = _options$placement === void 0 ? state.placement : _options$placement, _options$boundary = _options.boundary, boundary = _options$boundary === void 0 ? clippingParents : _options$boundary, _options$rootBoundary = _options.rootBoundary, rootBoundary = _options$rootBoundary === void 0 ? viewport : _options$rootBoundary, _options$elementConte = _options.elementContext, elementContext = _options$elementConte === void 0 ? popper : _options$elementConte, _options$altBoundary = _options.altBoundary, altBoundary = _options$altBoundary === void 0 ? false : _options$altBoundary, _options$padding = _options.padding, padding = _options$padding === void 0 ? 0 : _options$padding;
  var paddingObject = mergePaddingObject(typeof padding !== "number" ? padding : expandToHashMap(padding, basePlacements));
  var altContext = elementContext === popper ? reference : popper;
  var popperRect = state.rects.popper;
  var element = state.elements[altBoundary ? altContext : elementContext];
  var clippingClientRect = getClippingRect(isElement(element) ? element : element.contextElement || getDocumentElement(state.elements.popper), boundary, rootBoundary);
  var referenceClientRect = getBoundingClientRect(state.elements.reference);
  var popperOffsets2 = computeOffsets({
    reference: referenceClientRect,
    element: popperRect,
    strategy: "absolute",
    placement
  });
  var popperClientRect = rectToClientRect(Object.assign({}, popperRect, popperOffsets2));
  var elementClientRect = elementContext === popper ? popperClientRect : referenceClientRect;
  var overflowOffsets = {
    top: clippingClientRect.top - elementClientRect.top + paddingObject.top,
    bottom: elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom,
    left: clippingClientRect.left - elementClientRect.left + paddingObject.left,
    right: elementClientRect.right - clippingClientRect.right + paddingObject.right
  };
  var offsetData = state.modifiersData.offset;
  if (elementContext === popper && offsetData) {
    var offset2 = offsetData[placement];
    Object.keys(overflowOffsets).forEach(function(key) {
      var multiply = [right, bottom].indexOf(key) >= 0 ? 1 : -1;
      var axis = [top, bottom].indexOf(key) >= 0 ? "y" : "x";
      overflowOffsets[key] += offset2[axis] * multiply;
    });
  }
  return overflowOffsets;
}
__name(detectOverflow, "detectOverflow");

// node_modules/@popperjs/core/lib/utils/computeAutoPlacement.js
function computeAutoPlacement(state, options3) {
  if (options3 === void 0) {
    options3 = {};
  }
  var _options = options3, placement = _options.placement, boundary = _options.boundary, rootBoundary = _options.rootBoundary, padding = _options.padding, flipVariations = _options.flipVariations, _options$allowedAutoP = _options.allowedAutoPlacements, allowedAutoPlacements = _options$allowedAutoP === void 0 ? placements : _options$allowedAutoP;
  var variation = getVariation(placement);
  var placements2 = variation ? flipVariations ? variationPlacements : variationPlacements.filter(function(placement2) {
    return getVariation(placement2) === variation;
  }) : basePlacements;
  var allowedPlacements = placements2.filter(function(placement2) {
    return allowedAutoPlacements.indexOf(placement2) >= 0;
  });
  if (allowedPlacements.length === 0) {
    allowedPlacements = placements2;
    if (false) {
      console.error(["Popper: The `allowedAutoPlacements` option did not allow any", "placements. Ensure the `placement` option matches the variation", "of the allowed placements.", 'For example, "auto" cannot be used to allow "bottom-start".', 'Use "auto-start" instead.'].join(" "));
    }
  }
  var overflows = allowedPlacements.reduce(function(acc, placement2) {
    acc[placement2] = detectOverflow(state, {
      placement: placement2,
      boundary,
      rootBoundary,
      padding
    })[getBasePlacement(placement2)];
    return acc;
  }, {});
  return Object.keys(overflows).sort(function(a20, b12) {
    return overflows[a20] - overflows[b12];
  });
}
__name(computeAutoPlacement, "computeAutoPlacement");

// node_modules/@popperjs/core/lib/modifiers/flip.js
function getExpandedFallbackPlacements(placement) {
  if (getBasePlacement(placement) === auto) {
    return [];
  }
  var oppositePlacement = getOppositePlacement(placement);
  return [getOppositeVariationPlacement(placement), oppositePlacement, getOppositeVariationPlacement(oppositePlacement)];
}
__name(getExpandedFallbackPlacements, "getExpandedFallbackPlacements");
function flip(_ref) {
  var state = _ref.state, options3 = _ref.options, name = _ref.name;
  if (state.modifiersData[name]._skip) {
    return;
  }
  var _options$mainAxis = options3.mainAxis, checkMainAxis = _options$mainAxis === void 0 ? true : _options$mainAxis, _options$altAxis = options3.altAxis, checkAltAxis = _options$altAxis === void 0 ? true : _options$altAxis, specifiedFallbackPlacements = options3.fallbackPlacements, padding = options3.padding, boundary = options3.boundary, rootBoundary = options3.rootBoundary, altBoundary = options3.altBoundary, _options$flipVariatio = options3.flipVariations, flipVariations = _options$flipVariatio === void 0 ? true : _options$flipVariatio, allowedAutoPlacements = options3.allowedAutoPlacements;
  var preferredPlacement = state.options.placement;
  var basePlacement = getBasePlacement(preferredPlacement);
  var isBasePlacement = basePlacement === preferredPlacement;
  var fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipVariations ? [getOppositePlacement(preferredPlacement)] : getExpandedFallbackPlacements(preferredPlacement));
  var placements2 = [preferredPlacement].concat(fallbackPlacements).reduce(function(acc, placement2) {
    return acc.concat(getBasePlacement(placement2) === auto ? computeAutoPlacement(state, {
      placement: placement2,
      boundary,
      rootBoundary,
      padding,
      flipVariations,
      allowedAutoPlacements
    }) : placement2);
  }, []);
  var referenceRect = state.rects.reference;
  var popperRect = state.rects.popper;
  var checksMap = /* @__PURE__ */ new Map();
  var makeFallbackChecks = true;
  var firstFittingPlacement = placements2[0];
  for (var i22 = 0; i22 < placements2.length; i22++) {
    var placement = placements2[i22];
    var _basePlacement = getBasePlacement(placement);
    var isStartVariation = getVariation(placement) === start;
    var isVertical = [top, bottom].indexOf(_basePlacement) >= 0;
    var len = isVertical ? "width" : "height";
    var overflow = detectOverflow(state, {
      placement,
      boundary,
      rootBoundary,
      altBoundary,
      padding
    });
    var mainVariationSide = isVertical ? isStartVariation ? right : left : isStartVariation ? bottom : top;
    if (referenceRect[len] > popperRect[len]) {
      mainVariationSide = getOppositePlacement(mainVariationSide);
    }
    var altVariationSide = getOppositePlacement(mainVariationSide);
    var checks = [];
    if (checkMainAxis) {
      checks.push(overflow[_basePlacement] <= 0);
    }
    if (checkAltAxis) {
      checks.push(overflow[mainVariationSide] <= 0, overflow[altVariationSide] <= 0);
    }
    if (checks.every(function(check) {
      return check;
    })) {
      firstFittingPlacement = placement;
      makeFallbackChecks = false;
      break;
    }
    checksMap.set(placement, checks);
  }
  if (makeFallbackChecks) {
    var numberOfChecks = flipVariations ? 3 : 1;
    var _loop = /* @__PURE__ */ __name(function _loop2(_i2) {
      var fittingPlacement = placements2.find(function(placement2) {
        var checks2 = checksMap.get(placement2);
        if (checks2) {
          return checks2.slice(0, _i2).every(function(check) {
            return check;
          });
        }
      });
      if (fittingPlacement) {
        firstFittingPlacement = fittingPlacement;
        return "break";
      }
    }, "_loop");
    for (var _i = numberOfChecks; _i > 0; _i--) {
      var _ret = _loop(_i);
      if (_ret === "break")
        break;
    }
  }
  if (state.placement !== firstFittingPlacement) {
    state.modifiersData[name]._skip = true;
    state.placement = firstFittingPlacement;
    state.reset = true;
  }
}
__name(flip, "flip");
var flip_default = {
  name: "flip",
  enabled: true,
  phase: "main",
  fn: flip,
  requiresIfExists: ["offset"],
  data: {
    _skip: false
  }
};

// node_modules/@popperjs/core/lib/modifiers/hide.js
function getSideOffsets(overflow, rect, preventedOffsets) {
  if (preventedOffsets === void 0) {
    preventedOffsets = {
      x: 0,
      y: 0
    };
  }
  return {
    top: overflow.top - rect.height - preventedOffsets.y,
    right: overflow.right - rect.width + preventedOffsets.x,
    bottom: overflow.bottom - rect.height + preventedOffsets.y,
    left: overflow.left - rect.width - preventedOffsets.x
  };
}
__name(getSideOffsets, "getSideOffsets");
function isAnySideFullyClipped(overflow) {
  return [top, right, bottom, left].some(function(side) {
    return overflow[side] >= 0;
  });
}
__name(isAnySideFullyClipped, "isAnySideFullyClipped");
function hide(_ref) {
  var state = _ref.state, name = _ref.name;
  var referenceRect = state.rects.reference;
  var popperRect = state.rects.popper;
  var preventedOffsets = state.modifiersData.preventOverflow;
  var referenceOverflow = detectOverflow(state, {
    elementContext: "reference"
  });
  var popperAltOverflow = detectOverflow(state, {
    altBoundary: true
  });
  var referenceClippingOffsets = getSideOffsets(referenceOverflow, referenceRect);
  var popperEscapeOffsets = getSideOffsets(popperAltOverflow, popperRect, preventedOffsets);
  var isReferenceHidden = isAnySideFullyClipped(referenceClippingOffsets);
  var hasPopperEscaped = isAnySideFullyClipped(popperEscapeOffsets);
  state.modifiersData[name] = {
    referenceClippingOffsets,
    popperEscapeOffsets,
    isReferenceHidden,
    hasPopperEscaped
  };
  state.attributes.popper = Object.assign({}, state.attributes.popper, {
    "data-popper-reference-hidden": isReferenceHidden,
    "data-popper-escaped": hasPopperEscaped
  });
}
__name(hide, "hide");
var hide_default = {
  name: "hide",
  enabled: true,
  phase: "main",
  requiresIfExists: ["preventOverflow"],
  fn: hide
};

// node_modules/@popperjs/core/lib/modifiers/offset.js
function distanceAndSkiddingToXY(placement, rects, offset2) {
  var basePlacement = getBasePlacement(placement);
  var invertDistance = [left, top].indexOf(basePlacement) >= 0 ? -1 : 1;
  var _ref = typeof offset2 === "function" ? offset2(Object.assign({}, rects, {
    placement
  })) : offset2, skidding = _ref[0], distance = _ref[1];
  skidding = skidding || 0;
  distance = (distance || 0) * invertDistance;
  return [left, right].indexOf(basePlacement) >= 0 ? {
    x: distance,
    y: skidding
  } : {
    x: skidding,
    y: distance
  };
}
__name(distanceAndSkiddingToXY, "distanceAndSkiddingToXY");
function offset(_ref2) {
  var state = _ref2.state, options3 = _ref2.options, name = _ref2.name;
  var _options$offset = options3.offset, offset2 = _options$offset === void 0 ? [0, 0] : _options$offset;
  var data = placements.reduce(function(acc, placement) {
    acc[placement] = distanceAndSkiddingToXY(placement, state.rects, offset2);
    return acc;
  }, {});
  var _data$state$placement = data[state.placement], x13 = _data$state$placement.x, y11 = _data$state$placement.y;
  if (state.modifiersData.popperOffsets != null) {
    state.modifiersData.popperOffsets.x += x13;
    state.modifiersData.popperOffsets.y += y11;
  }
  state.modifiersData[name] = data;
}
__name(offset, "offset");
var offset_default = {
  name: "offset",
  enabled: true,
  phase: "main",
  requires: ["popperOffsets"],
  fn: offset
};

// node_modules/@popperjs/core/lib/modifiers/popperOffsets.js
function popperOffsets(_ref) {
  var state = _ref.state, name = _ref.name;
  state.modifiersData[name] = computeOffsets({
    reference: state.rects.reference,
    element: state.rects.popper,
    strategy: "absolute",
    placement: state.placement
  });
}
__name(popperOffsets, "popperOffsets");
var popperOffsets_default = {
  name: "popperOffsets",
  enabled: true,
  phase: "read",
  fn: popperOffsets,
  data: {}
};

// node_modules/@popperjs/core/lib/utils/getAltAxis.js
function getAltAxis(axis) {
  return axis === "x" ? "y" : "x";
}
__name(getAltAxis, "getAltAxis");

// node_modules/@popperjs/core/lib/modifiers/preventOverflow.js
function preventOverflow(_ref) {
  var state = _ref.state, options3 = _ref.options, name = _ref.name;
  var _options$mainAxis = options3.mainAxis, checkMainAxis = _options$mainAxis === void 0 ? true : _options$mainAxis, _options$altAxis = options3.altAxis, checkAltAxis = _options$altAxis === void 0 ? false : _options$altAxis, boundary = options3.boundary, rootBoundary = options3.rootBoundary, altBoundary = options3.altBoundary, padding = options3.padding, _options$tether = options3.tether, tether = _options$tether === void 0 ? true : _options$tether, _options$tetherOffset = options3.tetherOffset, tetherOffset = _options$tetherOffset === void 0 ? 0 : _options$tetherOffset;
  var overflow = detectOverflow(state, {
    boundary,
    rootBoundary,
    padding,
    altBoundary
  });
  var basePlacement = getBasePlacement(state.placement);
  var variation = getVariation(state.placement);
  var isBasePlacement = !variation;
  var mainAxis = getMainAxisFromPlacement(basePlacement);
  var altAxis = getAltAxis(mainAxis);
  var popperOffsets2 = state.modifiersData.popperOffsets;
  var referenceRect = state.rects.reference;
  var popperRect = state.rects.popper;
  var tetherOffsetValue = typeof tetherOffset === "function" ? tetherOffset(Object.assign({}, state.rects, {
    placement: state.placement
  })) : tetherOffset;
  var normalizedTetherOffsetValue = typeof tetherOffsetValue === "number" ? {
    mainAxis: tetherOffsetValue,
    altAxis: tetherOffsetValue
  } : Object.assign({
    mainAxis: 0,
    altAxis: 0
  }, tetherOffsetValue);
  var offsetModifierState = state.modifiersData.offset ? state.modifiersData.offset[state.placement] : null;
  var data = {
    x: 0,
    y: 0
  };
  if (!popperOffsets2) {
    return;
  }
  if (checkMainAxis) {
    var _offsetModifierState$;
    var mainSide = mainAxis === "y" ? top : left;
    var altSide = mainAxis === "y" ? bottom : right;
    var len = mainAxis === "y" ? "height" : "width";
    var offset2 = popperOffsets2[mainAxis];
    var min2 = offset2 + overflow[mainSide];
    var max2 = offset2 - overflow[altSide];
    var additive = tether ? -popperRect[len] / 2 : 0;
    var minLen = variation === start ? referenceRect[len] : popperRect[len];
    var maxLen = variation === start ? -popperRect[len] : -referenceRect[len];
    var arrowElement = state.elements.arrow;
    var arrowRect = tether && arrowElement ? getLayoutRect(arrowElement) : {
      width: 0,
      height: 0
    };
    var arrowPaddingObject = state.modifiersData["arrow#persistent"] ? state.modifiersData["arrow#persistent"].padding : getFreshSideObject();
    var arrowPaddingMin = arrowPaddingObject[mainSide];
    var arrowPaddingMax = arrowPaddingObject[altSide];
    var arrowLen = within(0, referenceRect[len], arrowRect[len]);
    var minOffset = isBasePlacement ? referenceRect[len] / 2 - additive - arrowLen - arrowPaddingMin - normalizedTetherOffsetValue.mainAxis : minLen - arrowLen - arrowPaddingMin - normalizedTetherOffsetValue.mainAxis;
    var maxOffset = isBasePlacement ? -referenceRect[len] / 2 + additive + arrowLen + arrowPaddingMax + normalizedTetherOffsetValue.mainAxis : maxLen + arrowLen + arrowPaddingMax + normalizedTetherOffsetValue.mainAxis;
    var arrowOffsetParent = state.elements.arrow && getOffsetParent(state.elements.arrow);
    var clientOffset = arrowOffsetParent ? mainAxis === "y" ? arrowOffsetParent.clientTop || 0 : arrowOffsetParent.clientLeft || 0 : 0;
    var offsetModifierValue = (_offsetModifierState$ = offsetModifierState == null ? void 0 : offsetModifierState[mainAxis]) != null ? _offsetModifierState$ : 0;
    var tetherMin = offset2 + minOffset - offsetModifierValue - clientOffset;
    var tetherMax = offset2 + maxOffset - offsetModifierValue;
    var preventedOffset = within(tether ? min(min2, tetherMin) : min2, offset2, tether ? max(max2, tetherMax) : max2);
    popperOffsets2[mainAxis] = preventedOffset;
    data[mainAxis] = preventedOffset - offset2;
  }
  if (checkAltAxis) {
    var _offsetModifierState$2;
    var _mainSide = mainAxis === "x" ? top : left;
    var _altSide = mainAxis === "x" ? bottom : right;
    var _offset = popperOffsets2[altAxis];
    var _len = altAxis === "y" ? "height" : "width";
    var _min = _offset + overflow[_mainSide];
    var _max = _offset - overflow[_altSide];
    var isOriginSide = [top, left].indexOf(basePlacement) !== -1;
    var _offsetModifierValue = (_offsetModifierState$2 = offsetModifierState == null ? void 0 : offsetModifierState[altAxis]) != null ? _offsetModifierState$2 : 0;
    var _tetherMin = isOriginSide ? _min : _offset - referenceRect[_len] - popperRect[_len] - _offsetModifierValue + normalizedTetherOffsetValue.altAxis;
    var _tetherMax = isOriginSide ? _offset + referenceRect[_len] + popperRect[_len] - _offsetModifierValue - normalizedTetherOffsetValue.altAxis : _max;
    var _preventedOffset = tether && isOriginSide ? withinMaxClamp(_tetherMin, _offset, _tetherMax) : within(tether ? _tetherMin : _min, _offset, tether ? _tetherMax : _max);
    popperOffsets2[altAxis] = _preventedOffset;
    data[altAxis] = _preventedOffset - _offset;
  }
  state.modifiersData[name] = data;
}
__name(preventOverflow, "preventOverflow");
var preventOverflow_default = {
  name: "preventOverflow",
  enabled: true,
  phase: "main",
  fn: preventOverflow,
  requiresIfExists: ["offset"]
};

// node_modules/@popperjs/core/lib/dom-utils/getHTMLElementScroll.js
function getHTMLElementScroll(element) {
  return {
    scrollLeft: element.scrollLeft,
    scrollTop: element.scrollTop
  };
}
__name(getHTMLElementScroll, "getHTMLElementScroll");

// node_modules/@popperjs/core/lib/dom-utils/getNodeScroll.js
function getNodeScroll(node) {
  if (node === getWindow(node) || !isHTMLElement(node)) {
    return getWindowScroll(node);
  } else {
    return getHTMLElementScroll(node);
  }
}
__name(getNodeScroll, "getNodeScroll");

// node_modules/@popperjs/core/lib/dom-utils/getCompositeRect.js
function isElementScaled(element) {
  var rect = element.getBoundingClientRect();
  var scaleX = round(rect.width) / element.offsetWidth || 1;
  var scaleY = round(rect.height) / element.offsetHeight || 1;
  return scaleX !== 1 || scaleY !== 1;
}
__name(isElementScaled, "isElementScaled");
function getCompositeRect(elementOrVirtualElement, offsetParent, isFixed) {
  if (isFixed === void 0) {
    isFixed = false;
  }
  var isOffsetParentAnElement = isHTMLElement(offsetParent);
  var offsetParentIsScaled = isHTMLElement(offsetParent) && isElementScaled(offsetParent);
  var documentElement = getDocumentElement(offsetParent);
  var rect = getBoundingClientRect(elementOrVirtualElement, offsetParentIsScaled);
  var scroll = {
    scrollLeft: 0,
    scrollTop: 0
  };
  var offsets = {
    x: 0,
    y: 0
  };
  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {
    if (getNodeName(offsetParent) !== "body" || isScrollParent(documentElement)) {
      scroll = getNodeScroll(offsetParent);
    }
    if (isHTMLElement(offsetParent)) {
      offsets = getBoundingClientRect(offsetParent, true);
      offsets.x += offsetParent.clientLeft;
      offsets.y += offsetParent.clientTop;
    } else if (documentElement) {
      offsets.x = getWindowScrollBarX(documentElement);
    }
  }
  return {
    x: rect.left + scroll.scrollLeft - offsets.x,
    y: rect.top + scroll.scrollTop - offsets.y,
    width: rect.width,
    height: rect.height
  };
}
__name(getCompositeRect, "getCompositeRect");

// node_modules/@popperjs/core/lib/utils/orderModifiers.js
function order(modifiers) {
  var map = /* @__PURE__ */ new Map();
  var visited = /* @__PURE__ */ new Set();
  var result = [];
  modifiers.forEach(function(modifier) {
    map.set(modifier.name, modifier);
  });
  function sort(modifier) {
    visited.add(modifier.name);
    var requires = [].concat(modifier.requires || [], modifier.requiresIfExists || []);
    requires.forEach(function(dep) {
      if (!visited.has(dep)) {
        var depModifier = map.get(dep);
        if (depModifier) {
          sort(depModifier);
        }
      }
    });
    result.push(modifier);
  }
  __name(sort, "sort");
  modifiers.forEach(function(modifier) {
    if (!visited.has(modifier.name)) {
      sort(modifier);
    }
  });
  return result;
}
__name(order, "order");
function orderModifiers(modifiers) {
  var orderedModifiers = order(modifiers);
  return modifierPhases.reduce(function(acc, phase) {
    return acc.concat(orderedModifiers.filter(function(modifier) {
      return modifier.phase === phase;
    }));
  }, []);
}
__name(orderModifiers, "orderModifiers");

// node_modules/@popperjs/core/lib/utils/debounce.js
function debounce(fn2) {
  var pending;
  return function() {
    if (!pending) {
      pending = new Promise(function(resolve) {
        Promise.resolve().then(function() {
          pending = void 0;
          resolve(fn2());
        });
      });
    }
    return pending;
  };
}
__name(debounce, "debounce");

// node_modules/@popperjs/core/lib/utils/mergeByName.js
function mergeByName(modifiers) {
  var merged = modifiers.reduce(function(merged2, current) {
    var existing = merged2[current.name];
    merged2[current.name] = existing ? Object.assign({}, existing, current, {
      options: Object.assign({}, existing.options, current.options),
      data: Object.assign({}, existing.data, current.data)
    }) : current;
    return merged2;
  }, {});
  return Object.keys(merged).map(function(key) {
    return merged[key];
  });
}
__name(mergeByName, "mergeByName");

// node_modules/@popperjs/core/lib/createPopper.js
var DEFAULT_OPTIONS = {
  placement: "bottom",
  modifiers: [],
  strategy: "absolute"
};
function areValidElements() {
  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
    args[_key] = arguments[_key];
  }
  return !args.some(function(element) {
    return !(element && typeof element.getBoundingClientRect === "function");
  });
}
__name(areValidElements, "areValidElements");
function popperGenerator(generatorOptions) {
  if (generatorOptions === void 0) {
    generatorOptions = {};
  }
  var _generatorOptions = generatorOptions, _generatorOptions$def = _generatorOptions.defaultModifiers, defaultModifiers = _generatorOptions$def === void 0 ? [] : _generatorOptions$def, _generatorOptions$def2 = _generatorOptions.defaultOptions, defaultOptions = _generatorOptions$def2 === void 0 ? DEFAULT_OPTIONS : _generatorOptions$def2;
  return /* @__PURE__ */ __name(function createPopper2(reference2, popper2, options3) {
    if (options3 === void 0) {
      options3 = defaultOptions;
    }
    var state = {
      placement: "bottom",
      orderedModifiers: [],
      options: Object.assign({}, DEFAULT_OPTIONS, defaultOptions),
      modifiersData: {},
      elements: {
        reference: reference2,
        popper: popper2
      },
      attributes: {},
      styles: {}
    };
    var effectCleanupFns = [];
    var isDestroyed = false;
    var instance = {
      state,
      setOptions: /* @__PURE__ */ __name(function setOptions2(setOptionsAction) {
        var options4 = typeof setOptionsAction === "function" ? setOptionsAction(state.options) : setOptionsAction;
        cleanupModifierEffects();
        state.options = Object.assign({}, defaultOptions, state.options, options4);
        state.scrollParents = {
          reference: isElement(reference2) ? listScrollParents(reference2) : reference2.contextElement ? listScrollParents(reference2.contextElement) : [],
          popper: listScrollParents(popper2)
        };
        var orderedModifiers = orderModifiers(mergeByName([].concat(defaultModifiers, state.options.modifiers)));
        state.orderedModifiers = orderedModifiers.filter(function(m24) {
          return m24.enabled;
        });
        if (false) {
          var modifiers = uniqueBy([].concat(orderedModifiers, state.options.modifiers), function(_ref) {
            var name = _ref.name;
            return name;
          });
          validateModifiers(modifiers);
          if (getBasePlacement(state.options.placement) === auto) {
            var flipModifier = state.orderedModifiers.find(function(_ref2) {
              var name = _ref2.name;
              return name === "flip";
            });
            if (!flipModifier) {
              console.error(['Popper: "auto" placements require the "flip" modifier be', "present and enabled to work."].join(" "));
            }
          }
          var _getComputedStyle = getComputedStyle2(popper2), marginTop = _getComputedStyle.marginTop, marginRight = _getComputedStyle.marginRight, marginBottom = _getComputedStyle.marginBottom, marginLeft = _getComputedStyle.marginLeft;
          if ([marginTop, marginRight, marginBottom, marginLeft].some(function(margin) {
            return parseFloat(margin);
          })) {
            console.warn(['Popper: CSS "margin" styles cannot be used to apply padding', "between the popper and its reference element or boundary.", "To replicate margin, use the `offset` modifier, as well as", "the `padding` option in the `preventOverflow` and `flip`", "modifiers."].join(" "));
          }
        }
        runModifierEffects();
        return instance.update();
      }, "setOptions"),
      forceUpdate: /* @__PURE__ */ __name(function forceUpdate() {
        if (isDestroyed) {
          return;
        }
        var _state$elements = state.elements, reference3 = _state$elements.reference, popper3 = _state$elements.popper;
        if (!areValidElements(reference3, popper3)) {
          if (false) {
            console.error(INVALID_ELEMENT_ERROR);
          }
          return;
        }
        state.rects = {
          reference: getCompositeRect(reference3, getOffsetParent(popper3), state.options.strategy === "fixed"),
          popper: getLayoutRect(popper3)
        };
        state.reset = false;
        state.placement = state.options.placement;
        state.orderedModifiers.forEach(function(modifier) {
          return state.modifiersData[modifier.name] = Object.assign({}, modifier.data);
        });
        var __debug_loops__ = 0;
        for (var index = 0; index < state.orderedModifiers.length; index++) {
          if (false) {
            __debug_loops__ += 1;
            if (__debug_loops__ > 100) {
              console.error(INFINITE_LOOP_ERROR);
              break;
            }
          }
          if (state.reset === true) {
            state.reset = false;
            index = -1;
            continue;
          }
          var _state$orderedModifie = state.orderedModifiers[index], fn2 = _state$orderedModifie.fn, _state$orderedModifie2 = _state$orderedModifie.options, _options = _state$orderedModifie2 === void 0 ? {} : _state$orderedModifie2, name = _state$orderedModifie.name;
          if (typeof fn2 === "function") {
            state = fn2({
              state,
              options: _options,
              name,
              instance
            }) || state;
          }
        }
      }, "forceUpdate"),
      update: debounce(function() {
        return new Promise(function(resolve) {
          instance.forceUpdate();
          resolve(state);
        });
      }),
      destroy: /* @__PURE__ */ __name(function destroy() {
        cleanupModifierEffects();
        isDestroyed = true;
      }, "destroy")
    };
    if (!areValidElements(reference2, popper2)) {
      if (false) {
        console.error(INVALID_ELEMENT_ERROR);
      }
      return instance;
    }
    instance.setOptions(options3).then(function(state2) {
      if (!isDestroyed && options3.onFirstUpdate) {
        options3.onFirstUpdate(state2);
      }
    });
    function runModifierEffects() {
      state.orderedModifiers.forEach(function(_ref3) {
        var name = _ref3.name, _ref3$options = _ref3.options, options4 = _ref3$options === void 0 ? {} : _ref3$options, effect4 = _ref3.effect;
        if (typeof effect4 === "function") {
          var cleanupFn = effect4({
            state,
            name,
            instance,
            options: options4
          });
          var noopFn = /* @__PURE__ */ __name(function noopFn2() {
          }, "noopFn");
          effectCleanupFns.push(cleanupFn || noopFn);
        }
      });
    }
    __name(runModifierEffects, "runModifierEffects");
    function cleanupModifierEffects() {
      effectCleanupFns.forEach(function(fn2) {
        return fn2();
      });
      effectCleanupFns = [];
    }
    __name(cleanupModifierEffects, "cleanupModifierEffects");
    return instance;
  }, "createPopper");
}
__name(popperGenerator, "popperGenerator");

// node_modules/@patternfly/pfe-core/controllers/floating-dom-controller.js
var a11 = /* @__PURE__ */ __name((t15, e24, o24) => {
  if (!e24.has(t15))
    throw TypeError("Cannot " + o24);
}, "a");
var r13 = /* @__PURE__ */ __name((t15, e24, o24) => (a11(t15, e24, "read from private field"), o24 ? o24.call(t15) : e24.get(t15)), "r");
var s8 = /* @__PURE__ */ __name((t15, e24, o24) => {
  if (e24.has(t15))
    throw TypeError("Cannot add the same private member more than once");
  e24 instanceof WeakSet ? e24.add(t15) : e24.set(t15, o24);
}, "s");
var l15 = /* @__PURE__ */ __name((t15, e24, o24, p22) => (a11(t15, e24, "write to private field"), p22 ? p22.call(t15, o24) : e24.set(t15, o24), o24), "l");
var R2 = popperGenerator({ defaultModifiers: [eventListeners_default, popperOffsets_default, computeStyles_default, applyStyles_default, offset_default, flip_default, preventOverflow_default, arrow_default, hide_default] });
var i15;
var n14;
var m9 = /* @__PURE__ */ __name(class {
  constructor(e24) {
    this.host = e24;
    s8(this, i15, false);
    s8(this, n14, void 0);
    e24.addController(this);
  }
  get open() {
    return r13(this, i15);
  }
  set open(e24) {
    l15(this, i15, e24), e24 && r13(this, n14)?.update(), this.host.requestUpdate();
  }
  show() {
    this.open = true;
  }
  hide() {
    this.open = false;
  }
  create(e24, o24, p22, c21) {
    l15(this, n14, R2(e24, o24, { placement: p22, modifiers: [{ name: "offset", options: { offset: c21 } }, { name: "flip", options: { fallbackPlacements: ["top", "right", "left", "bottom"] } }] }));
  }
}, "m");
i15 = /* @__PURE__ */ new WeakMap(), n14 = /* @__PURE__ */ new WeakMap();

// node_modules/@patternfly/pfe-tooltip/BaseTooltip.js
var L3 = Object.defineProperty;
var x4 = Object.getOwnPropertyDescriptor;
var v5 = /* @__PURE__ */ __name((o24, t15, r21, c21) => {
  for (var a20 = c21 > 1 ? void 0 : c21 ? x4(t15, r21) : t15, f18 = o24.length - 1, h21; f18 >= 0; f18--)
    (h21 = o24[f18]) && (a20 = (c21 ? h21(t15, r21, a20) : h21(a20)) || a20);
  return c21 && a20 && L3(t15, r21, a20), a20;
}, "v");
var _3 = /* @__PURE__ */ __name((o24, t15, r21) => {
  if (!t15.has(o24))
    throw TypeError("Cannot " + r21);
}, "_");
var e10 = /* @__PURE__ */ __name((o24, t15, r21) => (_3(o24, t15, "read from private field"), r21 ? r21.call(o24) : t15.get(o24)), "e");
var i16 = /* @__PURE__ */ __name((o24, t15, r21) => {
  if (t15.has(o24))
    throw TypeError("Cannot add the same private member more than once");
  t15 instanceof WeakSet ? t15.add(o24) : t15.set(o24, r21);
}, "i");
var b3 = /* @__PURE__ */ __name((o24, t15, r21) => (_3(o24, t15, "access private method"), r21), "b");
var T2 = i`[class*=pf-c-],[class*=pf-c-]::after,[class*=pf-c-]::before{padding:0;margin:0;background-color:transparent}#tooltip{color:var(--pf-c-tooltip__content--Color,var(--pf-global--Color--light-100,#fff));background-color:var(--pf-c-toolip__content--BackgroundColor,var(--pf-global--BackgroundColor--dark-100,#151515));line-height:var(--pf-c-tooltip--line-height, 1.5);opacity:1;transition:opacity .3s cubic-bezier(.54, 1.5, .38, 1.11) 0s;position:relative;max-width:var(--pf-c-tooltip--MaxWidth,18.75rem);box-shadow:var(--pf-c-tooltip--BoxShadow,var(--pf-global--BoxShadow--md,0 .25rem .5rem 0 rgba(3,3,3,.12),0 0 .25rem 0 rgba(3,3,3,.06)));z-index:999}#tooltip[aria-hidden=true]{opacity:0;transition:opacity .3s cubic-bezier(.54, 1.5, .38, 1.11) 0s;pointer-events:none}[data-popper-placement=top-end] .arrow,[data-popper-placement=top-start] .arrow,[data-popper-placement=top] .arrow{bottom:0;left:50%;transform:translateX(var(--pf-c-tooltip__arrow--m-top--TranslateX,-50%)) translateY(var(--pf-c-tooltip__arrow--m-top--TranslateY,50%)) rotate(var(--pf-c-tooltip__arrow--m-top--Rotate,45deg))}[data-popper-placement=bottom-end] .arrow,[data-popper-placement=bottom-start] .arrow,[data-popper-placement=bottom] .arrow{top:0;left:50%;transform:translateX(var(--pf-c-tooltip__arrow--m-bottom--TranslateX,-50%)) translateY(var(--pf-c-tooltip__arrow--m-bottom--TranslateY,-50%)) rotate(var(--pf-c-tooltip__arrow--m-bottom--Rotate,45deg))}[data-popper-placement=left-end] .arrow,[data-popper-placement=left-start] .arrow,[data-popper-placement=left] .arrow{top:50%;right:0;transform:translateX(var(--pf-c-tooltip__arrow--m-left--TranslateX,50%)) translateY(var(--pf-c-tooltip__arrow--m-left--TranslateY,-50%)) rotate(var(--pf-c-tooltip__arrow--m-left--Rotate,45deg))}[data-popper-placement=right-end] .arrow,[data-popper-placement=right-start] .arrow,[data-popper-placement=right] .arrow{top:50%;left:0;transform:translateX(var(--pf-c-tooltip__arrow--m-right--TranslateX,-50%)) translateY(var(--pf-c-tooltip__arrow--m-right--TranslateY,-50%)) rotate(var(--pf-c-tooltip__arrow--m-right--Rotate,45deg))}[data-popper-placement=left-start] .arrow,[data-popper-placement=right-start] .arrow{top:var(--pf-c-tooltip__arrow--Height,.5rem)}[data-popper-placement=left-end] .arrow,[data-popper-placement=right-end] .arrow{top:auto;bottom:0}[data-popper-placement=bottom-start] .arrow,[data-popper-placement=top-start] .arrow{left:var(--pf-c-tooltip__arrow--Width,.5rem)}[data-popper-placement=bottom-end] .arrow,[data-popper-placement=top-end] .arrow{right:0;left:auto}.content{position:relative;padding:var(--pf-c-tooltip__content--PaddingTop,var(--pf-global--spacer--sm,.5rem)) var(--pf-c-tooltip__content--PaddingRight,var(--pf-global--spacer--sm,.5rem)) var(--pf-c-tooltip__content--PaddingBottom,var(--pf-global--spacer--sm,.5rem)) var(--pf-c-tooltip__content--PaddingLeft,var(--pf-global--spacer--sm,.5rem));font-size:var(--pf-c-tooltip__content--FontSize, var(--pf-global--FontSize--sm, .875rem));color:var(--pf-c-tooltip__content--Color,var(--pf-global--Color--light-100,#fff));text-align:center;word-break:break-word;background-color:var(--pf-c-tooltip__content--BackgroundColor,var(--pf-global--BackgroundColor--dark-100,#151515))}.arrow{position:absolute;width:var(--pf-c-tooltip__arrow--Width,.5rem);height:var(--pf-c-tooltip__arrow--Height,.5rem);pointer-events:none;background-color:var(--pf-c-tooltip__content--BackgroundColor,var(--pf-global--BackgroundColor--dark-100,#151515))}#invoker{width:fit-content;display:inline-block}`;
var u7 = T2;
var p8;
var d7;
var C2;
var n15;
var g4;
var s9;
var w3;
var m10;
var y3;
var l16 = /* @__PURE__ */ __name(class extends s4 {
  constructor() {
    super(...arguments);
    i16(this, d7);
    i16(this, n15);
    i16(this, s9);
    i16(this, m10);
    this.position = "top";
    this.offset = [0, 15];
    i16(this, p8, new m9(this));
  }
  connectedCallback() {
    super.connectedCallback(), ["top", "bottom"].includes(this.position) || (this.offset = [-4, 15]), b3(this, m10, y3).call(this);
  }
  firstUpdated() {
    e10(this, n15, g4) && e10(this, s9, w3) && e10(this, p8).create(e10(this, n15, g4), e10(this, s9, w3), this.position, this.offset);
  }
  show() {
    e10(this, p8).show();
  }
  hide() {
    e10(this, p8).hide();
  }
  render() {
    return y`<div id="invoker" role="tooltip" tabindex="0" aria-labelledby="tooltip"><slot></slot></div><div id="tooltip" aria-hidden="${!e10(this, d7, C2)}"><div class="arrow"></div><div id="content" class="content"><slot name="content"></slot></div></div>`;
  }
}, "l");
p8 = /* @__PURE__ */ new WeakMap(), d7 = /* @__PURE__ */ new WeakSet(), C2 = /* @__PURE__ */ __name(function() {
  return e10(this, p8).open;
}, "C"), n15 = /* @__PURE__ */ new WeakSet(), g4 = /* @__PURE__ */ __name(function() {
  return this.shadowRoot?.querySelector("#invoker") ?? null;
}, "g"), s9 = /* @__PURE__ */ new WeakSet(), w3 = /* @__PURE__ */ __name(function() {
  return this.shadowRoot?.querySelector("#tooltip") ?? null;
}, "w"), m10 = /* @__PURE__ */ new WeakSet(), y3 = /* @__PURE__ */ __name(function() {
  this.addEventListener("focus", this.show), this.addEventListener("blur", this.hide), this.addEventListener("tap", this.show), this.addEventListener("click", this.show), this.addEventListener("mouseenter", this.show), this.addEventListener("mouseleave", this.hide);
}, "y"), l16.styles = [u7], v5([e5({ reflect: true })], l16.prototype, "position", 2), v5([e5({ converter: { fromAttribute(o24) {
  return o24.split(",").map((t15) => parseInt(t15.trim()));
} } })], l16.prototype, "offset", 2);

// elements/rh-tooltip/rh-tooltip.css.js
init_lit();
var styles19 = i`:host([on="dark"]) {
  --pf-c-tooltip__content--BackgroundColor: #ffffff;
  --pf-c-tooltip__content--Color: #151515;
}

:host {
  --pf-c-tooltip--BoxShadow: var(--rh-box-shadow-sm, 0 2px 4px 0 rgba(21, 21, 21, 0.2));
  --pf-c-tooltip__content--PaddingTop: var(--rh-space-lg, 16px);
  --pf-c-tooltip__content--PaddingRight: var(--rh-space-lg, 16px);
  --pf-c-tooltip__content--PaddingBottom: var(--rh-space-lg, 16px);
  --pf-c-tooltip__content--PaddingLeft: var(--rh-space-lg, 16px);
  --pf-c-tooltip__arrow--Width: 11px;
  --pf-c-tooltip__arrow--Height: 11px;
}
`;
var rh_tooltip_css_default = styles19;

// elements/rh-tooltip/rh-tooltip.js
var RhTooltip = /* @__PURE__ */ __name(class RhTooltip2 extends l16 {
  constructor() {
    super();
    this.on = "light";
    if (["top", "bottom"].includes(this.position)) {
      this.offset = [-4, 16];
    }
  }
}, "RhTooltip");
RhTooltip.version = "{{version}}";
RhTooltip.styles = [...l16.styles, rh_tooltip_css_default];
__decorate([
  x2(),
  e5({ reflect: true })
], RhTooltip.prototype, "on", void 0);
RhTooltip = __decorate([
  e4("rh-tooltip")
], RhTooltip);

// components.ts
init_lit();
init_pfe_accordion();

// node_modules/@patternfly/pfe-autocomplete/pfe-autocomplete.js
init_lit();
init_decorators();
init_core();
init_decorators2();
init_deprecatedCustomEvent();
init_lit();
init_decorators();

// node_modules/lit-html/directives/repeat.js
init_lit_html();
init_directive();

// node_modules/lit-html/directive-helpers.js
init_lit_html();
var { H: l17 } = z;
var c10 = /* @__PURE__ */ __name(() => document.createComment(""), "c");
var r14 = /* @__PURE__ */ __name((o24, t15, i22) => {
  var n24;
  const d13 = o24._$AA.parentNode, v12 = void 0 === t15 ? o24._$AB : t15._$AA;
  if (void 0 === i22) {
    const t16 = d13.insertBefore(c10(), v12), n25 = d13.insertBefore(c10(), v12);
    i22 = new l17(t16, n25, o24, o24.options);
  } else {
    const l23 = i22._$AB.nextSibling, t16 = i22._$AM, e24 = t16 !== o24;
    if (e24) {
      let l24;
      null === (n24 = i22._$AQ) || void 0 === n24 || n24.call(i22, o24), i22._$AM = o24, void 0 !== i22._$AP && (l24 = o24._$AU) !== t16._$AU && i22._$AP(l24);
    }
    if (l23 !== v12 || e24) {
      let o25 = i22._$AA;
      for (; o25 !== l23; ) {
        const l24 = o25.nextSibling;
        d13.insertBefore(o25, v12), o25 = l24;
      }
    }
  }
  return i22;
}, "r");
var u8 = /* @__PURE__ */ __name((o24, l23, t15 = o24) => (o24._$AI(l23, t15), o24), "u");
var f8 = {};
var s10 = /* @__PURE__ */ __name((o24, l23 = f8) => o24._$AH = l23, "s");
var m11 = /* @__PURE__ */ __name((o24) => o24._$AH, "m");
var p9 = /* @__PURE__ */ __name((o24) => {
  var l23;
  null === (l23 = o24._$AP) || void 0 === l23 || l23.call(o24, false, true);
  let t15 = o24._$AA;
  const i22 = o24._$AB.nextSibling;
  for (; t15 !== i22; ) {
    const o25 = t15.nextSibling;
    t15.remove(), t15 = o25;
  }
}, "p");

// node_modules/lit-html/directives/repeat.js
var u9 = /* @__PURE__ */ __name((e24, s23, t15) => {
  const r21 = /* @__PURE__ */ new Map();
  for (let l23 = s23; l23 <= t15; l23++)
    r21.set(e24[l23], l23);
  return r21;
}, "u");
var c11 = e8(class extends i10 {
  constructor(e24) {
    if (super(e24), e24.type !== t5.CHILD)
      throw Error("repeat() can only be used in text expressions");
  }
  ht(e24, s23, t15) {
    let r21;
    void 0 === t15 ? t15 = s23 : void 0 !== s23 && (r21 = s23);
    const l23 = [], o24 = [];
    let i22 = 0;
    for (const s24 of e24)
      l23[i22] = r21 ? r21(s24, i22) : i22, o24[i22] = t15(s24, i22), i22++;
    return { values: o24, keys: l23 };
  }
  render(e24, s23, t15) {
    return this.ht(e24, s23, t15).values;
  }
  update(s23, [t15, r21, c21]) {
    var d13;
    const a20 = m11(s23), { values: p22, keys: v12 } = this.ht(t15, r21, c21);
    if (!Array.isArray(a20))
      return this.ut = v12, p22;
    const h21 = null !== (d13 = this.ut) && void 0 !== d13 ? d13 : this.ut = [], m24 = [];
    let y11, x13, j3 = 0, k7 = a20.length - 1, w7 = 0, A2 = p22.length - 1;
    for (; j3 <= k7 && w7 <= A2; )
      if (null === a20[j3])
        j3++;
      else if (null === a20[k7])
        k7--;
      else if (h21[j3] === v12[w7])
        m24[w7] = u8(a20[j3], p22[w7]), j3++, w7++;
      else if (h21[k7] === v12[A2])
        m24[A2] = u8(a20[k7], p22[A2]), k7--, A2--;
      else if (h21[j3] === v12[A2])
        m24[A2] = u8(a20[j3], p22[A2]), r14(s23, m24[A2 + 1], a20[j3]), j3++, A2--;
      else if (h21[k7] === v12[w7])
        m24[w7] = u8(a20[k7], p22[w7]), r14(s23, a20[j3], a20[k7]), k7--, w7++;
      else if (void 0 === y11 && (y11 = u9(v12, w7, A2), x13 = u9(h21, j3, k7)), y11.has(h21[j3]))
        if (y11.has(h21[k7])) {
          const e24 = x13.get(v12[w7]), t16 = void 0 !== e24 ? a20[e24] : null;
          if (null === t16) {
            const e25 = r14(s23, a20[j3]);
            u8(e25, p22[w7]), m24[w7] = e25;
          } else
            m24[w7] = u8(t16, p22[w7]), r14(s23, a20[j3], t16), a20[e24] = null;
          w7++;
        } else
          p9(a20[k7]), k7--;
      else
        p9(a20[j3]), j3++;
    for (; w7 <= A2; ) {
      const e24 = r14(s23, m24[A2 + 1]);
      u8(e24, p22[w7]), m24[w7++] = e24;
    }
    for (; j3 <= k7; ) {
      const e24 = a20[j3++];
      null !== e24 && p9(e24);
    }
    return this.ut = v12, s10(s23, m24), x;
  }
});

// node_modules/@patternfly/pfe-autocomplete/pfe-autocomplete.js
init_core();
init_decorators2();
init_deprecatedCustomEvent();
init_lit();
init_lit();
var O = Object.defineProperty;
var R3 = Object.getOwnPropertyDescriptor;
var e11 = /* @__PURE__ */ __name((n24, t15, i22, r21) => {
  for (var s23 = r21 > 1 ? void 0 : r21 ? R3(t15, i22) : t15, d13 = n24.length - 1, f18; d13 >= 0; d13--)
    (f18 = n24[d13]) && (s23 = (r21 ? f18(t15, i22, s23) : f18(s23)) || s23);
  return r21 && s23 && O(t15, i22, s23), s23;
}, "e");
var B = i`:host{position:relative;display:none;font-family:var(--pfe-theme--font-family, "Red Hat Text", "RedHatText", "Overpass", Overpass, Arial, sans-serif);font-size:var(--pfe-theme--font-size, 1rem);line-height:var(--pfe-theme--line-height, 1.5)}:host([open]){display:block}:host([debug]) [aria-selected]{box-shadow:inset 0 0 0 var(--pfe-theme--ui--border-width--md,2px) var(--pfe-theme--color--feedback--critical,#a30000)}.sr-only{position:absolute;width:1px;height:1px;padding:0;margin:-1px;overflow:hidden;clip:rect(0,0,0,0);border:0}.droplist{position:absolute;top:100%;left:0;right:0;max-height:250px;z-index:9999;overflow-y:scroll;overflow-x:hidden;border:1px solid #ccc}.droplist,:host(:not([on])) .droplist,:host([on=light]) .droplist{background-color:var(--pfe-theme--color--surface--lighter,#f0f0f0);color:var(--pfe-broadcasted--text,#3c3f42)}.droplist li.active,:host(:not([on])) .droplist li.active,:host([on=light]) .droplist li.active{background-color:var(--pfe-theme--color--surface--lighter,#f0f0f0)}:host([on=dark]) .droplist{background-color:var(--pfe-theme--color--surface--darker,#3c3f42)}:host([on=dark]) .droplist li.active{background-color:var(--pfe-theme--color--surface--darkest,#151515)}:host([on=saturated]) .droplist{background-color:var(--pfe-theme--color--surface--accent,#004080)}:host([on=saturated]) .droplist li.active{background-color:var(--pfe-theme--color--surface--complement,#002952)}ul{font-family:var(--pfe-theme--font-family, "Red Hat Text", "RedHatText", "Overpass", Overpass, Arial, sans-serif);font-size:var(--pfe-theme--font-size, 1rem);line-height:var(--pfe-theme--line-height, 1.5);border-top:none;margin:0;padding:0;list-style:none;cursor:pointer}ul li{display:list-item;cursor:pointer;padding:10px;margin:0}:host([on=dark]){--pfe-clipboard--icon--Color:var(--pfe---icon--Color--dark);--pfe-clipboard--icon--Color--hover:var(--pfe---icon--Color--hover--dark)}:host([on=saturated]){--pfe-clipboard--icon--Color:var(--pfe---icon--Color--saturated);--pfe-clipboard--icon--Color--hover:var(--pfe---icon--Color--hover--saturated)}`;
var x5 = B;
function y4(n24) {
  return n24?.tagName === "LI";
}
__name(y4, "y");
var k5 = /* @__PURE__ */ __name(class extends n10 {
  constructor(t15) {
    super("select");
    this.value = t15;
  }
}, "k");
var a12 = /* @__PURE__ */ __name(class extends s4 {
  constructor() {
    super(...arguments);
    this.open = false;
    this.reflow = false;
    this.announceTemplate = "";
    this.activeIndex = null;
    this.data = [];
    this.ariaAnnounceText = "";
  }
  render() {
    let t15 = this.data ?? [];
    return y`<div class="suggestions-aria-help sr-only" role="status" aria-hidden="false" aria-live="polite">${this.ariaAnnounceText}</div><div class="droplist"><ul id="droplist-items" part="listbox" role="listbox" @click="${this._optionSelected}" @keyup="${this._onKeyup}" tabindex="-1">${c11(t15, (i22) => i22, (i22, r21) => y`<li id="option-${r21}" part="option item-index-${r21}" class="${o8({ active: r21 === this.activeIndex })}" aria-selected="${String(r21 === this.activeIndex)}" role="option" tabindex="-1" value="${i22}">${i22}</li>`)}</ul></div>`;
  }
  _onKeyup(t15) {
    switch (t15.key) {
      case "Enter":
      case " ":
        y4(t15.target) && this._select(t15.target);
    }
  }
  _optionSelected(t15) {
    y4(t15.target) && this._select(t15.target);
  }
  _select(t15) {
    let i22 = t15.innerText;
    this.dispatchEvent(n12("pfe-autocomplete:option-selected", { optionValue: i22 })), this.dispatchEvent(new k5(i22));
  }
  _renderOptions() {
    this.ariaAnnounceText = this.announceTemplate ? this.announceTemplate.replace("${numOptions}", this.data.length.toString()) : "";
  }
  _activeIndexChanged() {
    if (!this.data || this.data.length === 0 || this.activeIndex === null)
      return;
    let { activeElement: t15, droplist: i22 } = this;
    if (!t15 || !i22)
      return;
    let r21 = t15.offsetHeight, s23 = window.getComputedStyle(t15).getPropertyValue("margin-bottom");
    r21 += parseInt(s23, 10), i22.scrollTop = t15.offsetTop - i22.offsetHeight + r21;
  }
}, "a");
a12.version = "2.0.0-next.2", a12.styles = [x5], e11([e5({ type: Boolean, reflect: true })], a12.prototype, "open", 2), e11([p3("_renderOptions"), e5({ type: Boolean, reflect: true })], a12.prototype, "reflow", 2), e11([e5({ attribute: "announce-template", reflect: true })], a12.prototype, "announceTemplate", 2), e11([p3, e5({ type: Number, reflect: true, attribute: "active-index" })], a12.prototype, "activeIndex", 2), e11([p3("_renderOptions"), e5({ attribute: false })], a12.prototype, "data", 2), e11([t3()], a12.prototype, "ariaAnnounceText", 2), e11([i4(".active")], a12.prototype, "activeElement", 2), e11([i4(".droplist")], a12.prototype, "droplist", 2), e11([o6], a12.prototype, "_onKeyup", 1), e11([o6], a12.prototype, "_optionSelected", 1), e11([o6], a12.prototype, "_renderOptions", 1), a12 = e11([e4("pfe-search-droplist"), d4()], a12);
var j = i`.sr-only{position:absolute;overflow:hidden;clip:rect(0,0,0,0);height:1px;width:1px;margin:-1px;padding:0;border:0}.sr-only{position:absolute;overflow:hidden;clip:rect(0,0,0,0);height:1px;width:1px;margin:-1px;padding:0;border:0}.sr-only{position:absolute;overflow:hidden;clip:rect(0,0,0,0);height:1px;width:1px;margin:-1px;padding:0;border:0}:host{display:block;position:relative;font-family:var(--pfe-theme--font-family, "Red Hat Text", "RedHatText", "Overpass", Overpass, Arial, sans-serif);--pfe-autocomplete--BoxShadow:var(--pfe-theme--box-shadow--inset, inset 0 0 0.625rem 0 #fafafa);--pfe-autocomplete--BackgroundColor:var(--pfe-theme--color--surface--lightest, #fff);--pfe-autocomplete--Border:var(--pfe-theme--ui--border-width, 1px) var(--pfe-theme--ui--border-style, solid) var(--pfe-theme--color--surface--border, #d2d2d2)}:host([button-text]){display:flex}:host([button-text]) #wrapper{flex:1}:host([button-text]) #input-box-wrapper{position:relative}:host([button-text]) button.clear-search{width:40px}:host([button-text]) ::slotted(input[type=search]::-webkit-search-cancel-button){-webkit-appearance:none}#input-box-wrapper{border-color:var(--pfe-theme--color--feedback--info,#06c)}#input-box-wrapper ::slotted(input){width:100%;flex:1;box-shadow:var(--pfe-autocomplete--BoxShadow,var(--pfe-theme--box-shadow--inset,inset 0 0 .625rem 0 #fafafa))!important;padding-left:10px;padding-right:0;border-radius:var(--pfe-theme--ui--border-radius,2px);background-color:var(--pfe-autocomplete--BackgroundColor,var(--pfe-theme--color--surface--lightest,#fff));border:var(--pfe-autocomplete--Border,var(--pfe-theme--ui--border-width,1px) var(--pfe-theme--ui--border-style,solid) var(--pfe-theme--color--surface--border,#d2d2d2));font-size:var(--pfe-theme--font-size, 1rem);font-family:var(--pfe-theme--font-family, "Red Hat Text", "RedHatText", "Overpass", Overpass, Arial, sans-serif);height:calc(var(--pfe-theme--ui--element--size,20px) * 2);transition:border-color ease-in-out .15s,box-shadow ease-in-out .15s;opacity:1;outline:0}#input-box-wrapper ::slotted(input:disabled),#input-box-wrapper button:disabled{cursor:not-allowed;color:#ccc}#input-box-wrapper ::slotted(input:disabled){padding-right:10px}#input-box-wrapper ::slotted(input:focus),#input-box-wrapper button:focus{outline:0}#input-box-wrapper ::slotted(input),#input-box-wrapper button{-webkit-appearance:none}#input-box-wrapper ::slotted([type=search]::-ms-clear){display:none}#input-box-wrapper ::slotted(input[type=search]::-webkit-search-cancel-button),#input-box-wrapper ::slotted(input[type=search]::-webkit-search-decoration){-webkit-appearance:none}button{color:var(--pfe-theme--color--ui-base,#6a6e73);background-color:transparent;border:none;position:absolute;top:0;bottom:0;cursor:pointer}button.clear-search{right:30px;width:20px;margin:2px 1px;background-color:var(--pfe-theme--color--surface--lightest,#fff)}button.clear-search:hover{color:var(--pfe-theme--color--ui-base,#6a6e73)}button.clear-search svg{width:14px;position:relative;top:2px;stroke:var(--pfe-theme--color--surface--border,#d2d2d2)}button.clear-search:focus svg,button.clear-search:hover svg{opacity:1;stroke:var(--pfe-theme--color--link,#06c)}button[disabled].clear-search:focus svg,button[disabled].clear-search:hover svg{stroke:var(--pfe-theme--color--surface--border,#d2d2d2)}button.search-button{margin-top:1px;margin-bottom:1px;right:1px;width:30px;background-color:var(--pfe-theme--color--surface--lightest,#fff)}button.search-button svg{fill:var(--pfe-theme--color--link,#06c);width:18px;position:relative;top:2px;stroke:var(--pfe-theme--color--surface--border,#d2d2d2)}button.search-button:focus svg,button.search-button:hover svg{fill:var(--pfe-theme--color--link--hover,#004080)}button.search-button:disabled svg{fill:var(--pfe-theme--color--ui-disabled,#d2d2d2)}pfe-button.search-button--textual{margin-left:16px}.loading{position:absolute;width:30px;right:52px;top:0;bottom:0}.loading svg{width:26px;padding-top:7px}`;
var E2 = j;
var L4 = /* @__PURE__ */ __name(class extends n10 {
  constructor() {
    super("clear");
  }
}, "L");
var H2 = /* @__PURE__ */ __name(class extends n10 {
  constructor() {
    super("show");
  }
}, "H");
var I2 = /* @__PURE__ */ __name(class extends n10 {
  constructor(t15) {
    super("search");
    this.value = t15;
  }
}, "I");
var M3 = /* @__PURE__ */ __name(class extends n10 {
  constructor(t15) {
    super("select");
    this.value = t15;
  }
}, "M");
function W(n24) {
  return n24?.tagName?.toLowerCase?.() === "input";
}
__name(W, "W");
var g5 = false;
var o14 = /* @__PURE__ */ __name(class extends s4 {
  constructor() {
    super();
    this.initValue = "";
    this.loading = false;
    this.disabled = false;
    this.debounce = 300;
    this.data = [];
    this.announceTemplate = "There are ${numOptions} suggestions. Use the up and down arrows to browse.";
    this.activeIndex = null;
    this.showTextualSearch = false;
    this.addEventListener("keyup", this._inputKeyUp), this.addEventListener("pfe-autocomplete:search-event", this._closeDroplist);
  }
  get ariaAnnounceTemplate() {
    return this.announceTemplate;
  }
  set ariaAnnounceTemplate(t15) {
    this.announceTemplate = t15;
  }
  connectedCallback() {
    this._inputInit(), super.connectedCallback();
  }
  render() {
    let t15 = this.disabled || !(this._input?.value !== "" && !this._input?.hasAttribute?.("disabled")), i22 = !this.loading || this._input?.value === "";
    return y`<div id="wrapper" part="container"><div id="input-box-wrapper"><slot @slotchange="${this._inputInit}"></slot><span class="loading" aria-hidden="${String(i22)}" ?hidden="${i22}"><svg viewBox="0 0 40 40" enable-background="new 0 0 40 40" part="icon"><path opacity="0.2" fill="#000" d="M20.201,5.169c-8.254,0-14.946,6.692-14.946,14.946c0,8.255,6.692,14.946,14.946,14.946                s14.946-6.691,14.946-14.946C35.146,11.861,28.455,5.169,20.201,5.169z M20.201,31.749c-6.425,0-11.634-5.208-11.634-11.634                c0-6.425,5.209-11.634,11.634-11.634c6.425,0,11.633,5.209,11.633,11.634C31.834,26.541,26.626,31.749,20.201,31.749z"/><path fill="#000" d="M26.013,10.047l1.654-2.866c-2.198-1.272-4.743-2.012-7.466-2.012h0v3.312h0                C22.32,8.481,24.301,9.057,26.013,10.047z"><animateTransform attributeType="xml" attributeName="transform" type="rotate" from="0 20 20" to="360 20 20" dur="0.5s" repeatCount="indefinite"/></path></svg> </span><button class="clear-search" type="button" part="clear-button" aria-label="clear search query" ?disabled="${this.disabled}" ?hidden="${!this._input?.value}" @click="${this._clear}"><svg viewBox="0 0 40 40" enable-background="new 0 0 40 40"><line x1="5" y1="5" x2="35" y2="35" stroke-width="10" stroke-linecap="round" stroke-miterlimit="10"></line><line x1="35" y1="5" x2="5" y2="35" stroke-width="10" stroke-linecap="round" stroke-miterlimit="10"></line></svg></button> <button class="search-button" type="button" part="search-button" aria-label="Search" ?disabled="${!this._input?.value || this.disabled}" ?hidden="${this.showTextualSearch}" @click="${this._search}"><svg viewBox="0 0 512 512"><path d="M256.233,5.756c-71.07,15.793-141.44,87.863-155.834,159.233c-11.495,57.076,0.3,111.153,27.688,154.335L6.339,441.172            c-8.596,8.596-8.596,22.391,0,30.987l33.286,33.286c8.596,8.596,22.391,8.596,30.987,0L192.26,383.796            c43.282,27.688,97.559,39.683,154.734,28.188c79.167-15.893,142.04-77.067,159.632-155.934            C540.212,104.314,407.968-27.93,256.233,5.756z M435.857,208.37c0,72.869-59.075,131.944-131.944,131.944            S171.969,281.239,171.969,208.37S231.043,76.426,303.913,76.426S435.857,135.501,435.857,208.37z"/></svg></button></div><pfe-search-droplist id="dropdown" part="droplist" exportparts="listbox,option,${this.data.map((r21, s23) => `item-index-${s23}`).join(",")}" @select="${this._optionSelected}" .announceTemplate="${this.announceTemplate}" .activeIndex="${this.activeIndex}" .data="${this.data}"></pfe-search-droplist></div><pfe-button class="search-button--textual" part="text-search-button" ?hidden="${!this.showTextualSearch || t15}" @click="${this._search}"><button class="search-button__text" ?disabled="${t15}">${this.buttonText || "Search"}</button></pfe-button>`;
  }
  disconnectedCallback() {
    super.disconnectedCallback(), this._input && (this._input.removeEventListener("input", this._inputChanged), this._input.removeEventListener("blur", this._closeDroplist));
  }
  async _inputInit() {
    await this.updateComplete;
    let t15 = this._slot?.assignedElements() ?? [];
    if (t15.length === 0)
      return console.error("pfe-autocomplete: There must be a input tag in the light DOM");
    if (t15.length > 1 || t15.some((i22) => !W(i22)))
      return console.error("pfe-autocomplete: The only child in the light DOM must be an input tag");
    [this._input] = t15, this._input.addEventListener("input", this._inputChanged), this._input.addEventListener("blur", this._closeDroplist), this._input.setAttribute("role", "combobox"), this._input.hasAttribute("aria-label") || this._input.setAttribute("aria-label", "Search"), this._input.setAttribute("aria-autocomplete", "list"), this._input.setAttribute("aria-haspopup", "true"), this._input.setAttribute("aria-owns", "droplist-items"), this._input.setAttribute("aria-controls", "droplist-items"), this._input.setAttribute("aria-expanded", "false"), this._input.setAttribute("type", "search"), this._input.setAttribute("autocomplete", "off"), this._input.setAttribute("autocorrect", "off"), this._input.setAttribute("autocapitalize", "off"), this._input.setAttribute("spellcheck", "false"), this._isDisabledChanged(), this._disabledChanged();
  }
  _initValueChanged(t15, i22) {
    i22 && this._input && (this._input.value = i22);
  }
  _isDisabledChanged() {
    let t15 = this.isDisabled;
    t15 != null && this.disabled !== t15 && (this.disabled = !!t15);
  }
  _disabledChanged() {
    this._input?.toggleAttribute?.("disabled", this.disabled);
  }
  _buttonTextChanged(t15, i22) {
    t15 === null ? this.showTextualSearch = false : (i22 === null || i22 === "") && (this.showTextualSearch = false);
  }
  _inputChanged() {
    if (this._input?.value === "")
      return this._reset();
    g5 === false && (g5 = true, window.setTimeout(() => {
      this._sendAutocompleteRequest(this._input?.value ?? ""), g5 = false;
    }, this.debounce)), this.requestUpdate();
  }
  async _clear() {
    this._input && (this._closeDroplist(), this._input.value = "", this.requestUpdate(), await this.updateComplete, this._input.focus()), this.dispatchEvent(n12("pfe-autocomplete:option-cleared", { searchValue: "" })), this.dispatchEvent(new L4());
  }
  _search() {
    this._doSearch(this._input?.value);
  }
  async _closeDroplist() {
    this._dropdown && (this._dropdown.open = false), this.activeIndex = null, this._input?.setAttribute("aria-expanded", "false");
  }
  _openDroplist() {
    this.activeIndex = null, this._dropdown && (this._dropdown.open = true), this.dispatchEvent(n12("pfe-autocomplete:options-shown")), this.dispatchEvent(new H2()), this._input?.setAttribute?.("aria-expanded", "true");
  }
  _optionSelected(t15) {
    let { value: i22 } = t15;
    this._input && (this._input.value = i22), this._doSearch(i22);
  }
  async _doSearch(t15 = "") {
    this.dispatchEvent(n12("pfe-autocomplete:search-event", { searchValue: t15 })), this.dispatchEvent(new I2(t15)), await this._reset(), this.selectedValue = t15;
  }
  _sendAutocompleteRequest(t15) {
    this.autocompleteRequest?.({ query: t15 }, this._autocompleteCallback);
  }
  async _autocompleteCallback(t15) {
    this.data = t15, this._dropdown && (this._dropdown.reflow = true), await this.updateComplete, t15.length ? this._openDroplist() : this._closeDroplist();
  }
  async _reset() {
    if (await this.updateComplete, !this._dropdown || !this._input)
      throw new Error("Unexpected Error");
    this.activeIndex = null, this._input.setAttribute("aria-activedescendant", ""), this.data = [], this._closeDroplist(), this.requestUpdate(), await this.updateComplete;
  }
  _activeOption(t15) {
    if (typeof t15 == "number")
      return this._dropdown?.shadowRoot?.querySelector?.(`li:nth-child(${t15 + 1})`)?.textContent ?? "";
  }
  async _inputKeyUp(t15) {
    let { key: i22 } = t15;
    if (!this._input || !this._dropdown)
      throw new Error("Unexpected error");
    if (this.data.length === 0 && i22 !== "ArrowDown" && i22 !== "ArrowUp" && i22 !== "Enter" && i22 !== "Escape")
      return;
    let { activeIndex: r21 } = this, s23 = this.data.length;
    switch (i22) {
      case "Escape":
        this._closeDroplist();
        break;
      case "ArrowUp":
        if (!this._dropdown.open)
          return;
        r21 = r21 === null ? s23 : r21, r21 -= 1, r21 < 0 && (r21 = s23 - 1), this._input.value = this._activeOption(r21) ?? "";
        break;
      case "ArrowDown":
        if (!this._dropdown.open)
          return;
        r21 = r21 === null ? -1 : r21, r21 += 1, r21 > s23 - 1 && (r21 = 0), this._input.value = this._activeOption(r21) ?? "";
        break;
      case "Enter": {
        let d13 = this._activeOption(r21);
        d13 ? (this.dispatchEvent(n12("pfe-autocomplete:option-selected", { optionValue: d13 })), this.dispatchEvent(new M3(d13))) : this._doSearch(this._input.value);
        return;
      }
    }
    r21 !== null ? this._input.setAttribute("aria-activedescendant", `option-${r21}`) : this._input.setAttribute("aria-activedescendant", ""), this.activeIndex = r21;
  }
  async clear() {
    await this._clear();
  }
  search() {
    this._search();
  }
}, "o");
o14.version = "2.0.0-next.2", o14.styles = [E2], o14.shadowRootOptions = { ...s4.shadowRootOptions, delegatesFocus: true }, e11([p3, e5({ attribute: "init-value", reflect: true })], o14.prototype, "initValue", 2), e11([e5({ type: Boolean, reflect: true })], o14.prototype, "loading", 2), e11([p3, e5({ type: Boolean, reflect: true })], o14.prototype, "disabled", 2), e11([p3, e5({ attribute: "is-disabled", type: Boolean })], o14.prototype, "isDisabled", 2), e11([e5({ type: Number, reflect: true })], o14.prototype, "debounce", 2), e11([e5({ reflect: true, attribute: "selected-value" })], o14.prototype, "selectedValue", 2), e11([p3, e5({ attribute: "button-text", reflect: true })], o14.prototype, "buttonText", 2), e11([e5({ attribute: false })], o14.prototype, "data", 2), e11([e5({ attribute: "announce-template", reflect: true })], o14.prototype, "announceTemplate", 2), e11([e5({ attribute: "aria-announce-template" })], o14.prototype, "ariaAnnounceTemplate", 1), e11([t3()], o14.prototype, "activeIndex", 2), e11([t3()], o14.prototype, "showTextualSearch", 2), e11([i4("slot")], o14.prototype, "_slot", 2), e11([i4("#dropdown")], o14.prototype, "_dropdown", 2), e11([o6], o14.prototype, "_inputChanged", 1), e11([o6], o14.prototype, "_clear", 1), e11([o6], o14.prototype, "_search", 1), e11([o6], o14.prototype, "_closeDroplist", 1), e11([o6], o14.prototype, "_openDroplist", 1), e11([o6], o14.prototype, "_doSearch", 1), e11([o6], o14.prototype, "_autocompleteCallback", 1), e11([o6], o14.prototype, "_inputKeyUp", 1), o14 = e11([e4("pfe-autocomplete"), d4()], o14);

// node_modules/@patternfly/pfe-avatar/pfe-avatar.js
init_lit();
init_decorators();
init_logger();

// node_modules/@patternfly/pfe-core/controllers/css-variable-controller.js
var e12 = /* @__PURE__ */ __name(class {
  constructor(t15) {
    this.host = t15;
    this.style = window.getComputedStyle(t15);
  }
  parseProperty(t15) {
    return t15.substr(0, 2) !== "--" ? `--${t15}` : t15;
  }
  getVariable(t15) {
    return this.style.getPropertyValue(this.parseProperty(t15)).trim() || null;
  }
}, "e");

// node_modules/@patternfly/pfe-avatar/pfe-avatar.js
init_decorators2();
init_deprecatedCustomEvent();
init_lit();
var V2 = Object.defineProperty;
var z3 = Object.getOwnPropertyDescriptor;
var u10 = /* @__PURE__ */ __name((n24, e24, t15, r21) => {
  for (var i22 = r21 > 1 ? void 0 : r21 ? z3(e24, t15) : e24, a20 = n24.length - 1, l23; a20 >= 0; a20--)
    (l23 = n24[a20]) && (i22 = (r21 ? l23(e24, t15, i22) : l23(i22)) || i22);
  return r21 && i22 && V2(e24, t15, i22), i22;
}, "u");
function S3(n24) {
  let e24 = 5381, t15 = n24.length;
  for (; t15; )
    e24 = e24 * 33 ^ n24.charCodeAt(--t15);
  return e24 >>> 0;
}
__name(S3, "S");
function b4(n24, e24, t15) {
  return t15 < 0 && (t15 += 1), t15 > 1 && (t15 -= 1), 6 * t15 < 1 ? n24 + (e24 - n24) * 6 * t15 : 2 * t15 < 1 ? e24 : 3 * t15 < 2 ? n24 + (e24 - n24) * (2 / 3 - t15) * 6 : n24;
}
__name(b4, "b");
function y5(n24, e24, t15) {
  let r21, i22, a20, l23 = Math.max(0, Math.min(1, n24)), c21 = Math.max(0, Math.min(1, e24)), o24 = Math.max(0, Math.min(1, t15));
  if (c21 === 0)
    r21 = o24 * 255, i22 = o24 * 255, a20 = o24 * 255;
  else {
    let d13, h21;
    o24 < 0.5 ? h21 = o24 * (1 + c21) : h21 = o24 + c21 - c21 * o24, d13 = 2 * o24 - h21, r21 = Math.floor(255 * b4(d13, h21, l23 + 1 / 3)), i22 = Math.floor(255 * b4(d13, h21, l23)), a20 = Math.floor(255 * b4(d13, h21, l23 - 1 / 3));
  }
  return [r21, i22, a20];
}
__name(y5, "y");
function C3(n24, e24, t15) {
  let r21, i22, a20, l23 = Math.max(0, Math.min(255, n24)), c21 = Math.max(0, Math.min(255, e24)), o24 = Math.max(0, Math.min(255, t15)), d13 = l23 / 255, h21 = c21 / 255, f18 = o24 / 255, g12 = Math.min(Math.min(d13, h21), f18), p22 = Math.max(Math.max(d13, h21), f18), m24 = p22 - g12;
  if (a20 = (p22 + g12) / 2, m24 === 0)
    r21 = 0, i22 = 0;
  else {
    a20 < 0.5 ? i22 = m24 / (p22 + g12) : i22 = m24 / (2 - p22 - g12);
    let v12 = ((p22 - d13) / 6 + m24 / 2) / m24, w7 = ((p22 - h21) / 6 + m24 / 2) / m24, M6 = ((p22 - f18) / 6 + m24 / 2) / m24;
    d13 === p22 ? r21 = M6 - w7 : h21 === p22 ? r21 = 1 / 3 + v12 - M6 : f18 === p22 && (r21 = 2 / 3 + w7 - v12), r21 ?? (r21 = 0), r21 < 0 ? r21 += 1 : r21 > 1 && (r21 -= 1);
  }
  return [r21, i22, a20];
}
__name(C3, "C");
var R4 = i`:host{display:block;position:relative;width:var(--pfe-avatar--size,var(--pfe-avatar--width,128px));height:var(--pfe-avatar--size,var(--pfe-avatar--width,128px))}canvas{width:100%;height:100%;image-rendering:optimizeSpeed;image-rendering:-moz-crisp-edges;image-rendering:-webkit-optimize-contrast;image-rendering:-o-crisp-edges;image-rendering:pixelated;-ms-interpolation-mode:nearest-neighbor}:host([shape=rounded]) canvas,:host([shape=rounded]) img{border-radius:calc(var(--pfe-avatar--size,var(--pfe-avatar--width,128px))/ 8 + 1px)}:host([shape=circle]) canvas,:host([shape=circle]) img{border-radius:50%}:host([src]) canvas{display:none}:host([src]) img{display:block;width:100%;height:100%;object-fit:cover}:host(:not([src])) img{display:none}:host([hidden]){display:none}`;
var T3 = R4;
function U(n24) {
  n24.registerColors();
}
__name(U, "U");
var s11 = /* @__PURE__ */ __name(class extends s4 {
  constructor() {
    super(...arguments);
    this.name = "";
    this.pattern = "squares";
    this.shape = "square";
    this._squareSize = 0;
    this._triangleSize = 0;
    this._colorIndex = -1;
    this.color1 = "";
    this.color2 = "";
    this.css = new e12(this);
  }
  static _registerColor(e24) {
    s11.colors.push({ color1: `rgb(${e24.join(",")})`, color2: `rgb(${this._adjustColor(e24).join(",")})` });
  }
  static _adjustColor(e24) {
    let i22 = C3(...e24);
    return i22[2] += i22[2] > 0.1 ? -0.1 : 0.1, y5(...i22);
  }
  static registerColors() {
    return s11.colors = [], (this.customColors || this.defaultColors).split(/\s+/).forEach((t15) => {
      let r21;
      switch (t15.length) {
        case 4:
          if (r21 = /^#([A-f0-9])([A-f0-9])([A-f0-9])$/.exec(t15), r21) {
            r21.shift();
            let i22 = r21.map((a20) => parseInt(a20 + a20, 16));
            s11._registerColor(i22);
          } else
            n6.log(`[pfe-avatar] invalid color ${t15}`);
          break;
        case 7:
          if (r21 = /^#([A-f0-9]{2})([A-f0-9]{2})([A-f0-9]{2})$/.exec(t15), r21) {
            r21.shift();
            let i22 = r21.map((a20) => parseInt(a20, 16));
            s11._registerColor(i22);
          } else
            n6.log(`[pfe-avatar] invalid color ${t15}`);
      }
    }), this.colors;
  }
  get customColors() {
    return this.css.getVariable("pfe-avatar--colors");
  }
  render() {
    return y`<canvas part="canvas"></canvas><img src="${l14(this.src)}" alt="" part="img">`;
  }
  firstUpdated() {
    this._initCanvas(), this.dispatchEvent(n12("pfe-avatar:connected"));
  }
  _initCanvas() {
    if (!this._canvas)
      throw new Error("canvas unavailable");
    let e24 = this.css.getVariable("pfe-avatar--width"), t15 = parseInt(e24 ?? s11.defaultSize.toString());
    this._canvas.width = t15, this._canvas.height = t15, this._squareSize = this._canvas.width / 8, this._triangleSize = this._canvas.width / 4, this._ctx = this._canvas.getContext("2d"), this._update();
  }
  _update() {
    if (!this.src) {
      let e24 = S3(this.name).toString(2), t15 = e24.split("").map((r21) => Number(r21));
      this._colorIndex = Math.floor(s11.colors.length * parseInt(e24, 2) / Math.pow(2, 32)), this.color1 = s11.colors[this._colorIndex].color1, this.color2 = s11.colors[this._colorIndex].color2, this._clear(), this._drawBackground(), this.pattern === "squares" ? this._drawSquarePattern(t15) : this.pattern === "triangles" && this._drawTrianglePattern(t15);
    }
  }
  _clear() {
    this._ctx && this._canvas && this._ctx.clearRect(0, 0, this._canvas.width, this._canvas.height);
  }
  _drawBackground() {
    this._ctx && this._canvas && (this._ctx.fillStyle = this.color1, this._ctx.fillRect(0, 0, this._canvas.width, this._canvas.height));
  }
  _drawSquarePattern(e24) {
    if (this._ctx) {
      this._ctx.fillStyle = this.color2;
      let t15 = e24.length;
      for (; t15--; )
        e24[t15] && this._drawMirroredSquare(t15 % 4, Math.floor(t15 / 4));
    }
  }
  _drawMirroredSquare(e24, t15) {
    this._ctx && (this._drawSquare(e24, t15), this._drawSquare(7 - e24, t15));
  }
  _drawSquare(e24, t15) {
    this._ctx && this._ctx.fillRect(this._squareSize * e24, this._squareSize * t15, this._squareSize, this._squareSize);
  }
  _drawTrianglePattern(e24) {
    if (this._ctx) {
      this._ctx.fillStyle = this.color2 ?? "";
      let t15 = e24.length;
      for (; t15--; )
        if (e24[t15]) {
          let r21 = Math.floor(t15 / 2) % 2, i22 = Math.floor(t15 / 4), a20 = t15 % 4, l23 = [r21, i22], c21 = [r21, i22], o24 = [r21, i22];
          switch (a20) {
            case 0:
              c21[1]++, o24[0]++, o24[1]++;
              break;
            case 1:
              c21[0]++, o24[0]++, o24[1]++;
              break;
            case 2:
              c21[0]++, o24[1]++;
              break;
            case 3:
              l23[0]++, c21[0]++, c21[1]++, o24[1]++;
              break;
          }
          this._drawMirroredTriangle(l23, c21, o24);
        }
    }
  }
  _drawMirroredTriangle(e24, t15, r21) {
    this._ctx && (this._drawTriangle(e24, t15, r21), this._drawTriangle([4 - e24[0], e24[1]], [4 - t15[0], t15[1]], [4 - r21[0], r21[1]]));
  }
  _drawTriangle(e24, t15, r21) {
    let i22 = /* @__PURE__ */ __name((a20) => a20 * this._triangleSize, "i");
    this._ctx && (this._ctx.beginPath(), this._ctx.moveTo(...e24.map(i22)), this._ctx.lineTo(...t15.map(i22)), this._ctx.lineTo(...r21.map(i22)), this._ctx.closePath(), this._ctx.fill(), this._ctx.fill());
  }
}, "s");
s11.version = "2.0.0-next.1", s11.styles = T3, s11.defaultSize = 128, s11.defaultColors = "#67accf #448087 #709c6b #a35252 #826cbb", s11.colors = [], u10([p3("_update"), e5({ reflect: true })], s11.prototype, "src", 2), u10([p3("_update"), e5({ reflect: true })], s11.prototype, "name", 2), u10([p3("_update"), e5({ reflect: true })], s11.prototype, "pattern", 2), u10([e5({ reflect: true })], s11.prototype, "shape", 2), u10([i4("canvas")], s11.prototype, "_canvas", 2), u10([o6], s11.prototype, "_initCanvas", 1), s11 = u10([e4("pfe-avatar"), d4(), U], s11);

// node_modules/@patternfly/pfe-badge/pfe-badge.js
init_lit();
init_decorators();
init_decorators2();
init_lit();
var c12 = Object.defineProperty;
var s12 = Object.getOwnPropertyDescriptor;
var n16 = /* @__PURE__ */ __name((f18, t15, r21, a20) => {
  for (var e24 = a20 > 1 ? void 0 : a20 ? s12(t15, r21) : t15, d13 = f18.length - 1, i22; d13 >= 0; d13--)
    (i22 = f18[d13]) && (e24 = (a20 ? i22(t15, r21, e24) : i22(e24)) || e24);
  return a20 && e24 && c12(t15, r21, e24), e24;
}, "n");
var h8 = i`:host{display:inline-block;line-height:calc(var(--pfe-theme--line-height, 1.5) * .75);text-align:center;text-rendering:optimizelegibility}span{background-color:var(--pfe-badge--BackgroundColor,var(--pfe-theme--color--feedback--default--lightest,#f0f0f0));border-radius:var(--pfe-badge--BorderRadius,calc(var(--pfe-theme--ui--border-radius,2px) * 30));color:var(--pfe-badge--Color,var(--pfe-theme--color--text,#151515));font-size:var(--pfe-badge--FontSize, calc(var(--pfe-theme--font-size, 1rem) * .75));font-weight:var(--pfe-badge--FontWeight,var(--pfe-theme--font-weight--semi-bold,600));min-width:var(--pfe-badge--MinWidth,calc(var(--pfe-theme--ui--border-width,1px) * 2));padding-left:var(--pfe-badge--PaddingLeft,calc(var(--pfe-theme--container-padding,1rem)/ 2));padding-right:var(--pfe-badge--PaddingRight,calc(var(--pfe-theme--container-padding,1rem)/ 2));vertical-align:middle}:host([state=moderate]) span{--pfe-badge--BackgroundColor:var(--pfe-theme--color--feedback--moderate, #f0ab00);--pfe-badge--Color:var(--pfe-theme--color--text, #151515)}:host([state=important]) span{--pfe-badge--BackgroundColor:var(--pfe-theme--color--feedback--important, #c9190b);--pfe-badge--Color:var(--pfe-theme--color--text--on-dark, #fff)}:host([state=critical]) span{--pfe-badge--BackgroundColor:var(--pfe-theme--color--feedback--critical, #a30000);--pfe-badge--Color:var(--pfe-theme--color--text--on-dark, #fff)}:host([state=success]) span{--pfe-badge--BackgroundColor:var(--pfe-theme--color--feedback--success, #3e8635);--pfe-badge--Color:var(--pfe-theme--color--text--on-dark, #fff)}:host([state=info]) span{--pfe-badge--BackgroundColor:var(--pfe-theme--color--feedback--info, #06c);--pfe-badge--Color:var(--pfe-theme--color--text--on-dark, #fff)}:host([hidden]){display:none}`;
var p10 = h8;
var o15 = /* @__PURE__ */ __name(class extends s4 {
  render() {
    let { threshold: t15, number: r21, textContent: a20 } = this, e24 = t15 && r21 && t15 < r21 ? `${t15.toString()}+` : r21 != null ? r21.toString() : a20 ?? "";
    return y`<span>${e24}</span>`;
  }
}, "o");
o15.version = "2.0.0-next.1", o15.styles = [p10], n16([e5({ reflect: true })], o15.prototype, "state", 2), n16([e5({ reflect: true, type: Number })], o15.prototype, "number", 2), n16([e5({ reflect: true, type: Number })], o15.prototype, "threshold", 2), o15 = n16([e4("pfe-badge"), d4()], o15);

// node_modules/@patternfly/pfe-band/pfe-band.js
init_lit();
init_decorators();
init_slot_controller();
init_decorators2();
init_lit();
var v6 = Object.defineProperty;
var y6 = Object.getOwnPropertyDescriptor;
var r15 = /* @__PURE__ */ __name((l23, p22, i22, a20) => {
  for (var t15 = a20 > 1 ? void 0 : a20 ? y6(p22, i22) : p22, s23 = l23.length - 1, o24; s23 >= 0; s23--)
    (o24 = l23[s23]) && (t15 = (a20 ? o24(p22, i22, t15) : o24(t15)) || t15);
  return a20 && t15 && v6(p22, i22, t15), t15;
}, "r");
var x6 = i`:host{--context:var(--pfe-band--context, light);display:block;border:var(--pfe-band--Border,var(--pfe-theme--surface--border-width,1px) var(--pfe-theme--surface--border-style,solid) transparent);--pfe-theme--color--surface--lightest:#ffffff;--pfe-theme--color--surface--base:#f0f0f0;--pfe-theme--color--surface--darker:#3c3f42;--pfe-theme--color--surface--darkest:#151515;--pfe-theme--color--surface--accent:#004080;--pfe-theme--color--surface--complement:#002952;--pfe-band-padding-vertical-divisor:2;background-color:var(--pfe-band--BackgroundColor,var(--pfe-context-background-color));background-position:var(--pfe-band--BackgroundPosition,center center);color:var(--pfe-broadcasted--text,#3c3f42);padding:var(--pfe-band--Padding,var(--pfe-band--Padding--vertical,calc((var(--pfe-theme--container-spacer,1rem) * 4)/ var(--pfe-band-padding-vertical-divisor))) var(--pfe-band--Padding--horizontal,calc(var(--pfe-theme--container-spacer,1rem) * 1)))}@media (min-width:576px){:host{--pfe-band-padding-vertical-divisor:1}}:host *,:host ::after,:host ::before{box-sizing:border-box}@media print{:host{background-color:#fff!important;background-image:none!important;box-shadow:none!important}}@media print{:host{border-radius:3px;border:1px solid #d2d2d2;padding:2rem 1rem}}:host([size=small]){--pfe-band-padding-vertical-divisor:4}@media (min-width:576px){:host([size=small]){--pfe-band-padding-vertical-divisor:4}}:host([color-palette]),:host([on]){background-color:var(--pfe-band--BackgroundColor,var(--pfe-context-background-color))}.pfe-band__container{margin:0 auto;display:grid;grid-template-rows:auto;grid-template-columns:auto;grid-template-areas:"body";grid-row-gap:var(--pfe-band--gutter--vertical,var(--pfe-theme--container-spacer,1rem));row-gap:var(--pfe-band--gutter--vertical,var(--pfe-theme--container-spacer,1rem));grid-column-gap:var(--pfe-band--gutter--horizontal,calc(var(--pfe-theme--container-spacer,1rem) * 3));column-gap:var(--pfe-band--gutter--horizontal,calc(var(--pfe-theme--container-spacer,1rem) * 3))}:host(:not([full-width])) .pfe-band__container{max-width:var(--pfe-band--Width,auto)}@media screen and (min-width:768px){:host(:not([full-width])) .pfe-band__container{max-width:var(--pfe-band--Width,calc(768px - (var(--pfe-band--Padding--horizontal,calc(var(--pfe-theme--container-spacer,1rem) * 1)) * 4)))}}@media screen and (min-width:992px){:host(:not([full-width])) .pfe-band__container{max-width:var(--pfe-band--Width,calc(992px - (var(--pfe-band--Padding--horizontal,calc(var(--pfe-theme--container-spacer,1rem) * 1)) * 4)))}}@media screen and (min-width:1200px){:host(:not([full-width])) .pfe-band__container{max-width:var(--pfe-band--Width,calc(1200px - (var(--pfe-band--Padding--horizontal,calc(var(--pfe-theme--container-spacer,1rem) * 1)) * 4)))}}.pfe-band__container.has-header{grid-template-areas:"header" "body"}.pfe-band__container.has-aside{grid-template-areas:"body" "aside"}@media (max-width:767px){.pfe-band__container.has-aside[aside-mobile=top]{grid-template-areas:"aside" "body"}}@media (min-width:768px){.pfe-band__container.has-aside{grid-template-areas:"body aside"}.pfe-band__container.has-aside[aside-desktop=left]{grid-template-areas:"aside body"}}.pfe-band__container.has-footer{grid-template-areas:"body" "footer"}.pfe-band__container.has-header.has-aside{grid-template-areas:"header" "body" "aside"}@media (max-width:767px){.pfe-band__container.has-header.has-aside[aside-mobile=top]{grid-template-areas:"aside" "header" "body"}}@media (min-width:768px){.pfe-band__container.has-header.has-aside{grid-template-areas:"header header" "body aside"}.pfe-band__container.has-header.has-aside[aside-desktop=left]{grid-template-areas:"header header" "aside body"}.pfe-band__container.has-header.has-aside[aside-height=full]{grid-template-areas:"header aside" "body aside"}.pfe-band__container.has-header.has-aside[aside-desktop=left][aside-height=full]{grid-template-areas:"aside header" "aside body"}}.pfe-band__container.has-header.has-footer{grid-template-areas:"header" "body" "footer"}.pfe-band__container.has-footer.has-aside{grid-template-areas:"body" "aside" "footer"}@media (max-width:767px){.pfe-band__container.has-footer.has-aside[aside-mobile=top]{grid-template-areas:"aside" "body" "footer"}}@media (min-width:768px){.pfe-band__container.has-footer.has-aside{grid-template-areas:"body aside" "footer footer"}.pfe-band__container.has-footer.has-aside[aside-desktop=left]{grid-template-areas:"aside body" "footer footer"}.pfe-band__container.has-footer.has-aside[aside-height=full]{grid-template-areas:"body aside" "footer aside"}.pfe-band__container.has-footer.has-aside[aside-desktop=left][aside-height=full]{grid-template-areas:"aside body" "aside footer"}}.pfe-band__container.has-header.has-aside.has-footer{grid-template-areas:"header" "body" "footer" "aside"}@media (max-width:767px){.pfe-band__container.has-header.has-aside.has-footer[aside-mobile=top]{grid-template-areas:"aside" "header" "body" "footer"}}@media (min-width:768px){.pfe-band__container.has-header.has-aside.has-footer{grid-template-areas:"header header" "body aside" "footer footer"}.pfe-band__container.has-header.has-aside.has-footer[aside-desktop=left]{grid-template-areas:"header header" "aside body" "footer footer"}.pfe-band__container.has-header.has-aside.has-footer[aside-height=full]{grid-template-areas:"header aside" "body aside" "footer aside"}.pfe-band__container.has-header.has-aside.has-footer[aside-desktop=left][aside-height=full]{grid-template-areas:"aside header" "aside body" "aside footer"}}@media (min-width:768px){.pfe-band__container{grid-template-rows:auto;grid-template-columns:1fr}.pfe-band__container.has-aside{grid-template-rows:auto;grid-template-columns:1fr var(--pfe-band--Width__aside--sm,240px)}.pfe-band__container.has-aside[aside-desktop=left]{grid-template-rows:auto;grid-template-columns:var(--pfe-band--Width__aside--sm,240px) 1fr}}@media (min-width:992px){.pfe-band__container.has-aside{grid-template-rows:auto;grid-template-columns:var(--pfe-band--layout,1fr var(--pfe-band--Width__aside--lg,300px))}.pfe-band__container.has-aside[aside-desktop=left]{grid-template-rows:auto;grid-template-columns:var(--pfe-band--layout,var(--pfe-band--Width__aside--lg,300px) 1fr)}}:host([full-width]) .pfe-band__container{max-width:var(--pfe-band--Width,100%)}@media screen and (min-width:768px){:host([full-width]) .pfe-band__container{width:calc(100% - var(--pfe-band--Padding--horizontal,calc(var(--pfe-theme--container-spacer,1rem) * 1)) * 4)}}@media screen and (min-width:992px){:host([full-width]) .pfe-band__container{width:calc(100% - var(--pfe-band--Padding--horizontal,calc(var(--pfe-theme--container-spacer,1rem) * 1)) * 4)}}@media screen and (min-width:1200px){:host([full-width]) .pfe-band__container{width:calc(100% - var(--pfe-band--Padding--horizontal,calc(var(--pfe-theme--container-spacer,1rem) * 1)) * 8)}}.pfe-band__container,.pfe-band__wrapper{width:100%;margin-bottom:calc(-1 * var(--pfe-band--gutter--vertical,var(--pfe-theme--container-spacer,1rem)));margin-right:calc(-1 * var(--pfe-band--gutter--vertical,var(--pfe-theme--container-spacer,1rem)))}@supports (display:grid){.pfe-band__container,.pfe-band__wrapper{margin:0 auto}}:host([full-width]) .pfe-band__wrapper{max-width:var(--pfe-band--Width,100%)}.pfe-band__aside{height:100%}slot[name=pfe-band--aside]{display:block;height:100%}.pfe-band__header{margin-bottom:var(--pfe-band__header--gutter--vertical,var(--pfe-theme--container-spacer,1rem));margin-right:var(--pfe-band__header--gutter--vertical,var(--pfe-theme--container-spacer,1rem))}@supports (display:grid){.pfe-band__header{grid-area:header;margin-bottom:0;margin-right:0}:host([use-grid]) .pfe-band__header{display:grid;grid-template-rows:auto;grid-template-columns:var(--pfe-band__header--layout,1fr);grid-row-gap:var(--pfe-band__header--gutter--vertical,var(--pfe-theme--container-spacer,1rem));row-gap:var(--pfe-band__header--gutter--vertical,var(--pfe-theme--container-spacer,1rem));grid-column-gap:var(--pfe-band__header--gutter--horizontal,calc(var(--pfe-theme--container-spacer,1rem) * 3));column-gap:var(--pfe-band__header--gutter--horizontal,calc(var(--pfe-theme--container-spacer,1rem) * 3))}}.pfe-band__body{margin-bottom:var(--pfe-band__body--gutter--vertical,var(--pfe-theme--container-spacer,1rem));margin-right:var(--pfe-band__body--gutter--vertical,var(--pfe-theme--container-spacer,1rem))}@supports (display:grid){.pfe-band__body{grid-area:body;margin-bottom:0;margin-right:0}:host([use-grid]) .pfe-band__body{display:grid;grid-template-rows:auto;grid-template-columns:var(--pfe-band__body--layout,1fr);grid-row-gap:var(--pfe-band__body--gutter--vertical,var(--pfe-theme--container-spacer,1rem));row-gap:var(--pfe-band__body--gutter--vertical,var(--pfe-theme--container-spacer,1rem));grid-column-gap:var(--pfe-band__body--gutter--horizontal,calc(var(--pfe-theme--container-spacer,1rem) * 3));column-gap:var(--pfe-band__body--gutter--horizontal,calc(var(--pfe-theme--container-spacer,1rem) * 3))}}.pfe-band__footer{margin-bottom:var(--pfe-band__footer--gutter--vertical,var(--pfe-theme--container-spacer,1rem));margin-right:var(--pfe-band__footer--gutter--vertical,var(--pfe-theme--container-spacer,1rem))}@supports (display:grid){.pfe-band__footer{grid-area:footer;margin-bottom:0;margin-right:0}:host([use-grid]) .pfe-band__footer{display:grid;grid-template-rows:auto;grid-template-columns:var(--pfe-band__footer--layout,1fr);grid-row-gap:var(--pfe-band__footer--gutter--vertical,var(--pfe-theme--container-spacer,1rem));row-gap:var(--pfe-band__footer--gutter--vertical,var(--pfe-theme--container-spacer,1rem));grid-column-gap:var(--pfe-band__footer--gutter--horizontal,calc(var(--pfe-theme--container-spacer,1rem) * 3));column-gap:var(--pfe-band__footer--gutter--horizontal,calc(var(--pfe-theme--container-spacer,1rem) * 3))}}.pfe-band__aside{margin-bottom:var(--pfe-band__aside--gutter--vertical,var(--pfe-theme--container-spacer,1rem));margin-right:var(--pfe-band__aside--gutter--vertical,var(--pfe-theme--container-spacer,1rem))}@supports (display:grid){.pfe-band__aside{grid-area:aside;margin-bottom:0;margin-right:0}:host([use-grid]) .pfe-band__aside{display:grid;grid-template-rows:auto;grid-template-columns:var(--pfe-band__aside--layout,1fr);grid-row-gap:var(--pfe-band__aside--gutter--vertical,var(--pfe-theme--container-spacer,1rem));row-gap:var(--pfe-band__aside--gutter--vertical,var(--pfe-theme--container-spacer,1rem));grid-column-gap:var(--pfe-band__aside--gutter--horizontal,calc(var(--pfe-theme--container-spacer,1rem) * 3));column-gap:var(--pfe-band__aside--gutter--horizontal,calc(var(--pfe-theme--container-spacer,1rem) * 3))}}@media (min-width:768px){:host([aside-height=full]) #container.has-header.has-aside{grid-template-areas:"header aside" "body aside"}}`;
var m12 = x6;
var e13 = /* @__PURE__ */ __name(class extends s4 {
  constructor() {
    super(...arguments);
    this.imgSrc = "";
    this.colorPalette = "base";
    this.asideDesktop = "right";
    this.asideMobile = "bottom";
    this.asideHeight = "body";
    this.useGrid = false;
    this.slots = new l11(this, { slots: ["header", null, "footer", "aside"], deprecations: { header: "pfe-band--header", aside: "pfe-band--aside", footer: "pfe-band--footer" } });
  }
  get asidePosition() {
    return { desktop: this.asideDesktop, mobile: this.asideMobile, height: this.asideHeight };
  }
  render() {
    let { asideHeight: i22, asidePosition: a20 } = this, t15 = this.slots.hasSlotted(), s23 = this.slots.hasSlotted("header", "pfe-band--header"), o24 = this.slots.hasSlotted("aside", "pfe-band--aside"), h21 = this.slots.hasSlotted("footer", "pfe-band--footer"), b12 = o24 && a20.mobile === "top", g12 = i22 !== "full" && o24 && a20.mobile !== "top", _7 = i22 === "full" && o24 && a20.mobile !== "top", c21 = y`<aside class="pfe-band__aside" part="aside"><slot name="aside"></slot><slot name="pfe-band--aside"></slot></aside>`, f18 = y`${s23 ? y`<header class="pfe-band__header" part="header"><slot name="header"></slot><slot name="pfe-band--header"></slot></header>` : ""}<article class="pfe-band__body" part="body"><slot></slot></article>${g12 ? c21 : ""} ${h21 ? y`<footer class="pfe-band__footer" part="footer"><slot name="footer"></slot><slot name="pfe-band--footer"></slot></footer>` : ""}`, u19 = this.asideHeight !== "full" ? f18 : y`<div class="pfe-band__wrapper" part="wrapper">${f18}</div>`;
    return y`<section id="container" class="pfe-band__container ${o8({ "has-header": s23, "has-body": t15, "has-aside": o24, "has-footer": h21 })}" part="base">${b12 ? c21 : ""} ${u19} ${_7 ? c21 : ""}</section>`;
  }
  _imgSrcChanged(i22, a20) {
    this.style.backgroundImage = a20 ? `url('${a20}')` : "";
  }
}, "e");
e13.version = "2.0.0-next.2", e13.styles = [m12], r15([p3, e5({ attribute: "img-src", reflect: true })], e13.prototype, "imgSrc", 2), r15([c5(), e5({ reflect: true, attribute: "color-palette" })], e13.prototype, "colorPalette", 2), r15([d3({ alias: "colorPalette", attribute: "color" })], e13.prototype, "color", 2), r15([x2(), e5({ reflect: true })], e13.prototype, "on", 2), r15([e5({ attribute: "aside-desktop", reflect: true })], e13.prototype, "asideDesktop", 2), r15([e5({ attribute: "aside-mobile", reflect: true })], e13.prototype, "asideMobile", 2), r15([e5({ attribute: "aside-height", reflect: true })], e13.prototype, "asideHeight", 2), r15([e5({ reflect: true })], e13.prototype, "size", 2), r15([e5({ attribute: "use-grid", type: Boolean, reflect: true })], e13.prototype, "useGrid", 2), e13 = r15([e4("pfe-band"), d4()], e13);

// node_modules/@patternfly/pfe-button/pfe-button.js
init_lit();
init_decorators();

// node_modules/@patternfly/pfe-button/BaseButton.js
init_lit();
init_decorators();
init_decorators2();
init_logger();
init_slot_controller();
init_lit();
var P2 = Object.defineProperty;
var R5 = Object.getOwnPropertyDescriptor;
var p11 = /* @__PURE__ */ __name((n24, r21, a20, e24) => {
  for (var d13 = e24 > 1 ? void 0 : e24 ? R5(r21, a20) : r21, C5 = n24.length - 1, k7; C5 >= 0; C5--)
    (k7 = n24[C5]) && (d13 = (e24 ? k7(r21, a20, d13) : k7(d13)) || d13);
  return e24 && d13 && P2(r21, a20, d13), d13;
}, "p");
var B2 = /* @__PURE__ */ __name((n24, r21, a20) => {
  if (!r21.has(n24))
    throw TypeError("Cannot " + a20);
}, "B");
var o16 = /* @__PURE__ */ __name((n24, r21, a20) => (B2(n24, r21, "read from private field"), a20 ? a20.call(n24) : r21.get(n24)), "o");
var f9 = /* @__PURE__ */ __name((n24, r21, a20) => {
  if (r21.has(n24))
    throw TypeError("Cannot add the same private member more than once");
  r21 instanceof WeakSet ? r21.add(n24) : r21.set(n24, a20);
}, "f");
var h9 = /* @__PURE__ */ __name((n24, r21, a20, e24) => (B2(n24, r21, "write to private field"), e24 ? e24.call(n24, a20) : r21.set(n24, a20), a20), "h");
var u11 = /* @__PURE__ */ __name((n24, r21, a20) => (B2(n24, r21, "access private method"), a20), "u");
var F2 = i`:host{display:inline-block;height:max-content;--pfe-icon--color:currentColor}:host([hidden]){display:none!important}[hidden]{display:none!important}::slotted(button){cursor:pointer!important;position:relative!important;color:var(--pf-c-button--m-primary--Color,var(--pf-global--Color--light-100,#fff))!important;background-color:var(--pf-c-button--m-primary--BackgroundColor,var(--pf-global--primary-color--100,#06c))!important;font-family:inherit!important;font-size:var(--pf-c-button--FontSize, var(--pf-global--FontSize--md, 1rem))!important;font-weight:var(--pf-c-button--FontWeight,var(--pf-global--FontWeight--normal,400))!important;line-height:var(--pf-c-button--LineHeight, var(--pf-global--LineHeight--md, 1.5))!important;padding:var(--pf-c-button--PaddingTop,var(--pf-global--spacer--form-element,.375rem)) var(--pf-c-button--PaddingRight,var(--pf-global--spacer--md,1rem)) var(--pf-c-button--PaddingBottom,var(--pf-global--spacer--form-element,.375rem)) var(--pf-c-button--PaddingLeft,var(--pf-global--spacer--md,1rem))!important}::slotted(button),:host{border-width:0!important;border-style:solid!important;border-radius:var(--pf-c-button--BorderRadius,var(--pf-global--BorderRadius--sm,3px))!important}::slotted(button)::after{position:absolute!important;inset:0 0 0 0!important;content:""!important;border-style:solid!important;border-color:var(--pf-c-button--after--BorderColor,transparent)!important;border-width:var(--pf-c-button--after--BorderWidth,var(--pf-global--BorderWidth--sm,1px))!important;border-radius:var(--pf-c-button--after--BorderRadius,var(--pf-global--BorderRadius--sm,3px))!important}::slotted(button:active){--pf-c-button--m-primary--Color:var(--pf-c-button--m-primary--active--Color,
    var(--pf-global--Color--light-100, #fff));--pf-c-button--m-primary--BackgroundColor:var(--pf-c-button--m-primary--active--BackgroundColor,
    var(--pf-global--primary-color--200, #004080));--pf-c-button--after--BorderWidth:var(--pf-c-button--active--after--BorderWidth,
    var(--pf-global--BorderWidth--md, 2px));--pf-c-button--m-danger--Color:var(--pf-c-button--m-danger--active--Color,
    var(--pf-global--Color--light-100, #fff));--pf-c-button--m-danger--BackgroundColor:var(--pf-c-button--m-danger--active--BackgroundColor,
    var(--pf-global--danger-color--200, #a30000))}::slotted(button:focus){--pf-c-button--m-primary--Color:var(--pf-c-button--m-primary--focus--Color,
    var(--pf-global--Color--light-100, #fff));--pf-c-button--m-primary--BackgroundColor:var(--pf-c-button--m-primary--focus--BackgroundColor,
    var(--pf-global--primary-color--200, #004080));--pf-c-button--after--BorderWidth:var(--pf-c-button--focus--after--BorderWidth,
    var(--pf-global--BorderWidth--md, 2px));--pf-c-button--m-danger--Color:var(--pf-c-button--m-danger--focus--Color,
    var(--pf-global--Color--light-100, #fff));--pf-c-button--m-danger--BackgroundColor:var(--pf-c-button--m-danger--focus--BackgroundColor,
    var(--pf-global--danger-color--200, #a30000))}::slotted(button:hover){--pf-c-button--m-primary--Color:var(--pf-c-button--m-primary--hover--Color,
    var(--pf-global--Color--light-100, #fff));--pf-c-button--m-primary--BackgroundColor:var(--pf-c-button--m-primary--hover--BackgroundColor,
    var(--pf-global--primary-color--200, #004080));--pf-c-button--after--BorderWidth:var(--pf-c-button--hover--after--BorderWidth,
    var(--pf-global--BorderWidth--md, 2px));--pf-c-button--m-danger--Color:var(--pf-c-button--m-danger--hover--Color,
    var(--pf-global--Color--light-100, #fff));--pf-c-button--m-danger--BackgroundColor:var(--pf-c-button--m-danger--hover--BackgroundColor,
    var(--pf-global--danger-color--200, #a30000))}:host([variant=secondary]){--pf-c-button--m-danger--Color:var(--pf-c-button--m-secondary--m-danger--Color,
    var(--pf-global--danger-color--100, #c9190b));--pf-c-button--m-danger--BackgroundColor:var(--pf-c-button--m-secondary--m-danger--BackgroundColor, transparent)}:host([variant=secondary]) ::slotted(button){color:var(--pf-c-button--m-secondary--Color,var(--pf-global--primary-color--100,#06c))!important;background-color:var(--pf-c-button--m-secondary--BackgroundColor,transparent)!important;--pf-c-button--after--BorderColor:var(--pf-c-button--m-secondary--after--BorderColor,
    var(--pf-global--primary-color--100, #06c))}:host([variant=secondary]) ::slotted(button:active){--pf-c-button--m-secondary--Color:var(--pf-c-button--m-secondary--active--Color,
    var(--pf-global--primary-color--100, #06c));--pf-c-button--m-secondary--BackgroundColor:var(--pf-c-button--m-secondary--active--BackgroundColor, transparent);--pf-c-button--after--BorderColor:var(--pf-c-button--m-secondary--active--after--BorderColor,
    var(--pf-global--primary-color--100, #06c));--pf-c-button--m-danger--Color:var(--pf-c-button--m-secondary--m-danger--active--Color,
    var(--pf-global--danger--color--200, #a30000));--pf-c-button--m-danger--BackgroundColor:var(--pf-c-button--m-secondary--m-danger--active--BackgroundColor, transparent)}:host([variant=secondary]) ::slotted(button:focus){--pf-c-button--m-secondary--Color:var(--pf-c-button--m-secondary--focus--Color,
    var(--pf-global--primary-color--100, #06c));--pf-c-button--m-secondary--BackgroundColor:var(--pf-c-button--m-secondary--focus--BackgroundColor, transparent);--pf-c-button--after--BorderColor:var(--pf-c-button--m-secondary--focus--after--BorderColor,
    var(--pf-global--primary-color--100, #06c));--pf-c-button--m-danger--Color:var(--pf-c-button--m-secondary--m-danger--focus--Color,
    var(--pf-global--danger--color--200, #a30000));--pf-c-button--m-danger--BackgroundColor:var(--pf-c-button--m-secondary--m-danger--focus--BackgroundColor, transparent)}:host([variant=secondary]) ::slotted(button:hover){--pf-c-button--m-secondary--Color:var(--pf-c-button--m-secondary--hover--Color,
    var(--pf-global--primary-color--100, #06c));--pf-c-button--m-secondary--BackgroundColor:var(--pf-c-button--m-secondary--hover--BackgroundColor,
    transparent);--pf-c-button--after--BorderColor:var(--pf-c-button--m-secondary--hover--after--BorderColor,
    var(--pf-global--primary-color--100, #06c));--pf-c-button--m-danger--Color:var(--pf-c-button--m-secondary--m-danger--hover--Color,
    var(--pf-global--danger--color--200, #a30000));--pf-c-button--m-danger--BackgroundColor:var(--pf-c-button--m-secondary--m-danger--hover--BackgroundColor, transparent)}:host([variant=secondary][danger]) ::slotted(button){color:var(--pf-c-button--m-secondary--m-danger--Color,var(--pf-global--danger--color--100,#c9190b))!important;background-color:var(--pf-c-button--m-secondary--m-danger--BackgroundColor,transparent)!important;--pf-c-button--after--BorderColor:var(--pf-c-button--m-secondary--m-danger--after--BorderColor,
    var(--pf-global--danger--color--100, #c9190b))}:host([variant=secondary][danger]) ::slotted(button:active){--pf-c-button--after--BorderColor:var(--pf-c-button--m-secondary--m-danger--active--after--BorderColor,
    var(--pf-global--danger--color--100, #c9190b))}:host([variant=secondary][danger]) ::slotted(button:focus){--pf-c-button--after--BorderColor:var(--pf-c-button--m-secondary--m-danger--focus--after--BorderColor,
    var(--pf-global--danger--color--100, #c9190b))}:host([variant=secondary][danger]) ::slotted(button:hover){--pf-c-button--after--BorderColor:var(--pf-c-button--m-secondary--m-danger--hover--after--BorderColor,
    var(--pf-global--danger--color--100, #c9190b))}:host([variant=tertiary]) ::slotted(button){--pf-c-button--after--BorderColor:var(--pf-c-button--m-tertiary--after--BorderColor,
    var(--pf-global--Color--100, #151515));color:var(--pf-c-button--m-tertiary--Color,var(--pf-global--Color--100,#151515))!important;background-color:var(--pf-c-button--m-tertiary--BackgroundColor,transparent)!important}:host([variant=tertiary]) ::slotted(button:active){--pf-c-button--m-tertiary--Color:var(--pf-c-button--m-tertiary--active--Color,
    var(--pf-global--Color--100, #151515));--pf-c-button--m-tertiary--BackgroundColor:var(--pf-c-button--m-tertiary--active--BackgroundColor, transparent);--pf-c-button--after--BorderColor:var(--pf-c-button--m-tertiary--active--after--BorderColor,
    var(--pf-global--Color--100, #151515))}:host([variant=tertiary]) ::slotted(button:focus){--pf-c-button--m-tertiary--Color:var(--pf-c-button--m-tertiary--focus--Color,
    var(--pf-global--Color--100, #151515));--pf-c-button--m-tertiary--BackgroundColor:var(--pf-c-button--m-tertiary--focus--BackgroundColor,
    transparent);--pf-c-button--after--BorderColor:var(--pf-c-button--m-tertiary--focus--after--BorderColor,
    var(--pf-global--Color--100, #151515))}:host([variant=tertiary]) ::slotted(button:hover){--pf-c-button--m-tertiary--Color:var(--pf-c-button--m-tertiary--hover--Color,
    var(--pf-global--Color--100, #151515));--pf-c-button--m-tertiary--BackgroundColor:var(--pf-c-button--m-tertiary--hover--BackgroundColor, transparent);--pf-c-button--after--BorderColor:var(--pf-c-button--m-tertiary--hover--after--BorderColor,
    var(--pf-global--Color--100, #151515))}:host([variant=control]) ::slotted(button){--pf-c-button--BorderRadius:var(--pf-c-button--m-control--BorderRadius, 0);--pf-c-button--disabled--BackgroundColor:var(--pf-c-button--m-control--disabled--BackgroundColor,
    var(--pf-global--disabled-color--300, #f0f0f0));--pf-c-button--after--BorderRadius:0;--pf-c-button--after--BorderWidth:var(--pf-c-button--m-control--after--BorderWidth,
    var(--pf-global--BorderWidth--sm, 1px));--pf-c-button--after--BorderColor:var(--pf-c-button--m-control--after--BorderTopColor,
      var(--pf-global--BorderColor--300, #f0f0f0)) var(--pf-c-button--m-control--after--BorderRightColor,
      var(--pf-global--BorderColor--300, #f0f0f0)) var(--pf-c-button--m-control--after--BorderBottomColor,
      var(--pf-global--BorderColor--200, #8a8d90)) var(--pf-c-button--m-control--after--BorderLeftColor,
      var(--pf-global--BorderColor--300, #f0f0f0))!important;color:var(--pf-c-button--m-control--Color,var(--pf-global--Color--100,#151515))!important;background-color:var(--pf-c-button--m-control--BackgroundColor,var(--pf-global--BackgroundColor--100,#fff))!important}:host([variant=control]) ::slotted(button:active){--pf-c-button--m-control--Color:var(--pf-c-button--m-control--active--Color,
    var(--pf-global--Color--100, #151515));--pf-c-button--m-control--BackgroundColor:var(--pf-c-button--m-control--active--BackgroundColor,
    var(--pf-global--BackgroundColor--100, #fff));--pf-c-button--m-control--after--BorderBottomColor:var(--pf-c-button--m-control--active--after--BorderBottomColor,
    var(--pf-global--active-color--100, #06c))}:host([variant=control]) ::slotted(button:focus){--pf-c-button--m-control--Color:var(--pf-c-button--m-control--focus--Color,
    var(--pf-global--Color--100, #151515));--pf-c-button--m-control--BackgroundColor:var(--pf-c-button--m-control--focus--BackgroundColor,
    var(--pf-global--BackgroundColor--100, #fff));--pf-c-button--m-control--after--BorderBottomColor:var(--pf-c-button--m-control--focus--after--BorderBottomColor,
    var(--pf-global--active-color--100, #06c))}:host([variant=control]) ::slotted(button:hover){--pf-c-button--m-control--Color:var(--pf-c-button--m-control--hover--Color,
    var(--pf-global--Color--100, #151515));--pf-c-button--m-control--BackgroundColor:var(--pf-c-button--m-control--hover--BackgroundColor,
    var(--pf-global--BackgroundColor--100, #fff));--pf-c-button--m-control--after--BorderBottomColor:var(--pf-c-button--m-control--hover--after--BorderBottomColor,
    var(--pf-global--active-color--100, #06c))}:host([variant=control]) ::slotted(button:active)::after{border-block-end-width:var(--pf-c-button--m-control--active--after--BorderBottomWidth,var(--pf-global--BorderWidth--md,2px))!important}:host([variant=control]) ::slotted(button:focus)::after{border-block-end-width:var(--pf-c-button--m-control--focus--after--BorderBottomWidth,var(--pf-global--BorderWidth--md,2px))!important}:host([variant=control]) ::slotted(button:hover)::after{border-block-end-width:var(--pf-c-button--m-control--hover--after--BorderBottomWidth,var(--pf-global--BorderWidth--md,2px))!important}:host([variant=link]) #container,:host([variant=link]) ::slotted(button){color:var(--pf-c-button--m-link--Color,var(--pf-global--link--Color,#06c))!important}:host([variant=link]) ::slotted(button){background-color:var(--pf-c-button--m-link--BackgroundColor,var(--pf-c-button--m-link--hover--BackgroundColor,transparent))!important}:host([variant=link][inline]),:host([variant=link][inline]) #container,:host([variant=link][inline]) ::slotted(button){display:inline}:host([variant=link][inline]){--pf-c-button--PaddingTop:0;--pf-c-button--PaddingLeft:0;--pf-c-button--PaddingBottom:0;--pf-c-button--PaddingRight:0}:host([variant=link][inline]) ::slotted(button:hover){text-decoration:var(--pf-c-button--m-link--m-inline--hover--TextDecoration,var(--pf-global--link--TextDecoration--hover,underline))!important}:host([variant=link]){--pf-c-button--disabled--BackgroundColor:var(--pf-c-button--m-link--disabled--BackgroundColor, transparent)}:host(:hover){--pf-c-button--m-link--Color:var(--pf-c-button--m-link--hover--Color,
    var(--pf-global--link--Color--hover, #004080));--pf-c-button--m-link--BackgroundColor:var(--pf-c-button--m-link--hover--BackgroundColor, transparent)}:host(:focus),:host(:focus-within){--pf-c-button--m-link--Color:var(--pf-c-button--m-link--focus--Color,
    var(--pf-global--link--Color--hover, #004080));--pf-c-button--m-link--BackgroundColor:var(--pf-c-button--m-link--hover--BackgroundColor, transparent)}:host(:not([inline])) ::slotted(button:active){--pf-c-button--m-link--Color:var(--pf-c-button--m-link--active--Color,
    var(--pf-global--link--Color--hover, #004080));--pf-c-button--m-link--BackgroundColor:var(--pf-c-button--m-link--active--BackgroundColor, transparent)}:host(:not([inline]):has(button:active)){--pf-c-button--m-link--Color:var(--pf-c-button--m-link--active--Color,
    var(--pf-global--link--Color--hover, #004080));--pf-c-button--m-link--BackgroundColor:var(--pf-c-button--m-link--active--BackgroundColor, transparent)}:host([variant=link][danger]) ::slotted(button){--pf-c-button--m-danger--Color:var(--pf-c-button--m-link--m-danger--Color,
      var(--pf-global--danger-color--100, #c9190b));--pf-c-button--m-danger--BackgroundColor:var(--pf-c-button--m-link--m-danger--BackgroundColor, transparent)}:host([variant=link][danger]) ::slotted(button:hover){--pf-c-button--m-link--m-danger--Color:var(--pf-c-button--m-link--m-danger--hover--Color,
      var(--pf-global--danger-color--200, #a30000));--pf-c-button--m-link--m-danger--BackgroundColor:var(--pf-c-button--m-link--m-danger--hover--BackgroundColor, transparent)}:host([variant=link][danger]) ::slotted(button:active){--pf-c-button--m-link--m-danger--Color:var(--pf-c-button--m-link--m-danger--active--Color,
    var(--pf-global--danger-color--200, #a30000));--pf-c-button--m-link--m-danger--BackgroundColor:var(--pf-c-button--m-link--m-danger--active--BackgroundColor, transparent)}:host([variant=link][danger]:has(button:active)){--pf-c-button--m-link--m-danger--Color:var(--pf-c-button--m-link--m-danger--active--Color,
    var(--pf-global--danger-color--200, #a30000));--pf-c-button--m-link--m-danger--BackgroundColor:var(--pf-c-button--m-link--m-danger--active--BackgroundColor, transparent)}:host([variant=link][danger]:is(:focus,:focus-within)){--pf-c-button--m-link--m-danger--Color:var(--pf-c-button--m-link--m-danger--focus--Color,
    var(--pf-global--danger-color--200, #a30000));--pf-c-button--m-link--m-danger--BackgroundColor:var(--pf-c-button--m-link--m-danger--focus--BackgroundColor, transparent)}::slotted(button[aria-disabled=true]),:host([disabled]),:host([disabled]) #container,:host([disabled]) ::slotted(button),:host([disabled][danger]) ::slotted(button),:host([disabled][variant=link]) ::slotted(button){pointer-events:none!important;cursor:default!important;color:var(--pf-c-button--disabled--Color,var(--pf-global--disabled-color--100,#6a6e73))!important;background-color:var(--pf-c-button--disabled--BackgroundColor,var(--pf-global--disabled-color--200,#d2d2d2))!important}::slotted(button[aria-disabled=true])::after,:host([disabled]) ::slotted(button)::after{border-color:var(--pf-c-button--disabled--after--BorderColor,transparent)!important}:host([block]),:host([block]) #container,:host([block]) ::slotted(button){display:flex!important;width:100%!important;justify-content:center!important}:host([size=large]) ::slotted(button){--pf-c-button--PaddingTop:var(--pf-c-button--m-display-lg--PaddingTop,
    var(--pf-global--spacer--md, 1rem));--pf-c-button--PaddingRight:var(--pf-c-button--m-display-lg--PaddingRight,
    var(--pf-global--spacer--xl, 2rem));--pf-c-button--PaddingBottom:var(--pf-c-button--m-display-lg--PaddingBottom,
    var(--pf-global--spacer--md, 1rem));--pf-c-button--PaddingLeft:var(--pf-c-button--m-display-lg--PaddingLeft,
    var(--pf-global--spacer--xl, 2rem));--pf-c-button--FontWeight:var(--pf-c-button--m-display-lg--FontWeight,
    var(--pf-global--FontWeight--bold, 700))}:host([size=small]) ::slotted(button){--pf-c-button--FontSize:var(--pf-c-button--m-small--FontSize,
    var(--pf-global--FontSize--md, 1rem))}[part=icon]{display:none;pointer-events:none}.hasIcon{position:relative;display:flex;align-items:center}.hasIcon [part=icon]{display:inline-flex;align-items:center;position:absolute;width:16px;left:var(--pf-c-button--PaddingLeft,var(--pf-global--spacer--md,1rem));margin-inline-end:var(--pf-c-button__icon--m-start--MarginRight,var(--pf-global--spacer--xs,.25rem))}:host(:not([disabled])) .hasIcon [part=icon]{cursor:pointer}[part=icon] ::slotted(*){width:16px;max-width:16px;height:16px;max-height:16px}.hasIcon ::slotted(button){position:absolute;inset:0;padding-left:calc(24px + var(--pf-c-button--PaddingLeft,var(--pf-global--spacer--md,1rem)))!important}.hasIcon ::slotted(button){padding-left:calc(24px + var(--pf-c-button--PaddingLeft,var(--pf-global--spacer--md,1rem)))!important}:host([danger]) ::slotted(button){color:var(--pf-c-button--m-danger--Color,var(--pf-global--Color--light-100,#fff))!important;background-color:var(--pf-c-button--m-danger--BackgroundColor,var(--pf-global--danger-color--100,#c9190b))!important}`;
var W2 = F2;
var t8;
var l18;
var s13;
var m13;
var i17;
var v7;
var y7;
var g6;
var x7;
var c13 = /* @__PURE__ */ __name(class extends s4 {
  constructor() {
    super(...arguments);
    f9(this, t8);
    f9(this, v7);
    f9(this, g6);
    this.disabled = false;
    this.variant = "primary";
    this.danger = false;
    this.icon = "";
    this.slots = new l11(this, null, "icon");
    f9(this, s13, new n6(this));
    f9(this, m13, new MutationObserver(() => u11(this, g6, x7).call(this)));
    f9(this, i17, o16(this, t8, l18)?.tabIndex ?? null);
  }
  connectedCallback() {
    u11(this, v7, y7).call(this), super.connectedCallback(), this.shadowRoot?.addEventListener("slotchange", () => u11(this, v7, y7).call(this));
  }
  render() {
    let { icon: a20 } = this, e24 = this.slots.hasSlotted("icon") || !!a20;
    return y`<span id="container" class="${o8({ hasIcon: e24 })}"><span part="icon"><slot name="icon">${this.renderDefaultIcon()}</slot></span><slot></slot></span>`;
  }
  firstUpdated() {
    this._disabledChanged(), u11(this, g6, x7).call(this);
  }
  _typeChanged() {
    o16(this, t8, l18) && o16(this, t8, l18).type !== this.type && (this.type ? o16(this, t8, l18).type = this.type : o16(this, t8, l18).removeAttribute("type"));
  }
  _disabledChanged() {
    o16(this, t8, l18) && o16(this, t8, l18).disabled !== this.disabled && (o16(this, t8, l18).disabled = this.disabled, this.disabled ? (h9(this, i17, o16(this, t8, l18).tabIndex), o16(this, t8, l18).setAttribute("tabindex", "-1")) : o16(this, i17) ? (o16(this, t8, l18).setAttribute("tabindex", o16(this, i17).toString()), h9(this, i17, null)) : (o16(this, t8, l18).removeAttribute("tabindex"), h9(this, i17, null)));
  }
}, "c");
t8 = /* @__PURE__ */ new WeakSet(), l18 = /* @__PURE__ */ __name(function() {
  return this.querySelector("button");
}, "l"), s13 = /* @__PURE__ */ new WeakMap(), m13 = /* @__PURE__ */ new WeakMap(), i17 = /* @__PURE__ */ new WeakMap(), v7 = /* @__PURE__ */ new WeakSet(), y7 = /* @__PURE__ */ __name(function() {
  o16(this, m13).disconnect(), o16(this, t8, l18) && o16(this, m13).observe(o16(this, t8, l18), { attributes: true, attributeFilter: ["type", "disabled"] });
}, "y"), g6 = /* @__PURE__ */ new WeakSet(), x7 = /* @__PURE__ */ __name(function() {
  let a20 = this.querySelectorAll("button");
  o16(this, t8, l18) ? (this.disabled = o16(this, t8, l18).hasAttribute("disabled") || o16(this, t8, l18).getAttribute("aria-disabled") === "true", this.type = o16(this, t8, l18).getAttribute("type") ?? void 0, a20.length > 1 && o16(this, s13).warn("Only one button child is allowed")) : o16(this, s13).warn("You must have a button in the light DOM");
}, "x"), c13.styles = [W2], p11([p3, e5({ reflect: true, type: Boolean })], c13.prototype, "disabled", 2), p11([e5({ reflect: true })], c13.prototype, "variant", 2), p11([e5({ reflect: true })], c13.prototype, "size", 2), p11([p3, e5()], c13.prototype, "type", 2), p11([e5({ type: Boolean, reflect: true })], c13.prototype, "danger", 2), p11([e5()], c13.prototype, "icon", 2);

// node_modules/@patternfly/pfe-button/pfe-button.js
init_lit();
var g7 = Object.defineProperty;
var b5 = Object.getOwnPropertyDescriptor;
var a13 = /* @__PURE__ */ __name((l23, r21, i22, n24) => {
  for (var t15 = n24 > 1 ? void 0 : n24 ? b5(r21, i22) : r21, e24 = l23.length - 1, p22; e24 >= 0; e24--)
    (p22 = l23[e24]) && (t15 = (n24 ? p22(r21, i22, t15) : p22(t15)) || t15);
  return n24 && t15 && g7(r21, i22, t15), t15;
}, "a");
var u12 = i`:host([warning]) ::slotted(button){color:var(--pf-c-button--m-warning--Color,var(--pf-global--Color--dark-100,#151515))!important;background-color:var(--pf-c-button--m-warning--BackgroundColor,var(--pf-global--warning-color--100,#f0ab00))!important}:host([warning]) ::slotted(button:active){--pf-c-button--m-warning--Color:var(--pf-c-button--m-warning--active--Color,
    var(--pf-global--Color--dark-100, #151515));--pf-c-button--m-warning--BackgroundColor:var(--pf-c-button--m-warning--active--BackgroundColor,
    var(--pf-global--palette--gold-500, #c58c00))}:host([warning]) ::slotted(button:focus){--pf-c-button--m-warning--Color:var(--pf-c-button--m-warning--focus--Color,
    var(--pf-global--Color--dark-100, #151515));--pf-c-button--m-warning--BackgroundColor:var(--pf-c-button--m-warning--focus--BackgroundColor,
    var(--pf-global--palette--gold-500, #c58c00))}:host([warning]) ::slotted(button:hover){--pf-c-button--m-warning--Color:var(--pf-c-button--m-warning--hover--Color,
    var(--pf-global--Color--dark-100, #151515));--pf-c-button--m-warning--BackgroundColor:var(--pf-c-button--m-warning--hover--BackgroundColor,
    var(--pf-global--palette--gold-500, #c58c00))}:host([disabled][warning]) ::slotted(button){pointer-events:none!important;cursor:default!important;color:var(--pf-c-button--disabled--Color,var(--pf-global--disabled-color--100,#6a6e73))!important;background-color:var(--pf-c-button--disabled--BackgroundColor,var(--pf-global--disabled-color--200,#d2d2d2))!important}:host([plain]){--pf-c-button--disabled--BackgroundColor:var(--pf-c-button--m-plain--disabled--BackgroundColor, transparent)}:host([plain]) ::slotted(button){--pf-c-button--after--BorderWidth:0!important;--pf-c-button--after--BorderColor:var(--pf-c-button--m-tertiary--after--BorderColor,
    var(--pf-global--Color--100, #151515));--pf-c-button--disabled--Color:var(--pf-c-button--m-plain--disabled--Color,
    var(--pf-global--disabled-color--200, #d2d2d2));color:var(--pf-c-button--m-plain--Color,var(--pf-global--Color--200,#6a6e73))!important;background-color:var(--pf-c-button--m-plain--BackgroundColor,transparent)!important}:host([plain]) ::slotted(button:active){--pf-c-button--m-plain--Color:var(--pf-c-button--m-plain--active--Color,
    var(--pf-global--Color--100, #151515));--pf-c-button--m-plain--BackgroundColor:var(--pf-c-button--m-plain--active--BackgroundColor,
    tranparent)}:host([plain]) ::slotted(button:focus){--pf-c-button--m-plain--Color:var(--pf-c-button--m-plain--focus--Color,
    var(--pf-global--Color--100, #151515));--pf-c-button--m-plain--BackgroundColor:var(--pf-c-button--m-plain--focus--BackgroundColor,
    transparent)}:host([plain]) ::slotted(button:hover){--pf-c-button--m-plain--Color:var(--pf-c-button--m-plain--hover--Color,
    var(--pf-global--Color--100, #151515));--pf-c-button--m-plain--BackgroundColor:var(--pf-c-button--m-plain--hover--BackgroundColor,
    transparent)}:host([loading][plain]) [part=icon],:host([plain]) .hasIcon [part=icon]{left:16px}:host([plain]) ::slotted(button:disabled),:host([plain]) ::slotted(button[aria-disabled=true]),:host([plain][disabled]),:host([plain][disabled]) ::slotted(button),:host([plain][disabled][variant=link]) ::slotted(button){color:var(--pf-c-button--disabled--Color,var(--pf-c-button--m-plain--disabled--Color,var(--pf-global--disabled--color--200,#d2d2d2)))!important}:host([icon-position=right]) .hasIcon [part=icon],:host([icon-position=right][loading]) [part=icon]{display:inline-flex;align-items:center;position:absolute;width:16px;left:initial;right:var(--pf-c-button--PaddingRight,var(--pf-global--spacer--md,1rem));margin-inline-start:var(--pf-c-button__icon--m-start--MarginLeft,var(--pf-global--spacer--xs,.25rem));margin-inline-end:initial}:host([icon-position=right]) .hasIcon ::slotted(button){padding-left:var(--pf-c-button--PaddingLeft,var(--pf-global--spacer--md,1rem))!important;padding-right:calc(24px + var(--pf-c-button--PaddingRight,var(--pf-global--spacer--md,1rem)))!important}:host([loading]) #container{position:relative;display:flex;align-items:center}:host([loading]) #container [part=icon]{display:inline-block;z-index:1;position:absolute;cursor:pointer;top:var(--pf-c-button__progress--Top,50%);left:var(--pf-c-button__progress--Left,var(--pf-global--spacer--md,1rem));line-height:1;transform:translate(var(--pf-c-button__progress--TranslateX,0),var(--pf-c-button__progress--TranslateY,-50%));margin-inline-end:var(--pf-c-button__icon--m-start--MarginRight,var(--pf-global--spacer--xs,.25rem))}pfe-progress-indicator{--pfe-progress-indicator-size:18px;--pfe-theme--surface--border-width--heavy:2px}:host([loading]){--pfe-progress-indicator--background-color:rgba(0,102,204,.25);--pfe-progress-indicator--foreground-color:#06c}:host([loading][danger]),:host([loading][variant=primary]:not([plain])){--pfe-progress-indicator--background-color:rgba(255, 255, 255, .25);--pfe-progress-indicator--foreground-color:rgba(255, 255, 255, .75)}:host([loading]:not([plain])){--pf-c-button--PaddingRight:var(--pf-c-button--m-in-progress--PaddingRight,
    var(--pf-global--spacer--md, 1rem));--pf-c-button--PaddingLeft:var(--pf-c-button--m-in-progress--PaddingLeft,
    calc(
      var(--pf-global--spacer--md, 1rem) + var(--pf-c-button__progress--width,
        calc(var(--pf-global--icon--FontSize--md, 1.125rem) + var(--pf-global--spacer--sm, 0.5rem))) / 2))}:host([loading]:not([plain])) ::slotted(button){padding-left:calc(12px + var(--pf-c-button--PaddingLeft,var(--pf-global--spacer--md,1rem)))!important}`;
var s14 = u12;
var o17 = /* @__PURE__ */ __name(class extends c13 {
  constructor() {
    super(...arguments);
    this.loading = false;
    this.plain = false;
    this.warning = false;
  }
  renderDefaultIcon() {
    return y`<pfe-icon ?hidden="${!this.icon}" icon="${this.icon}" size="sm"></pfe-icon><pfe-progress-indicator ?hidden="${!this.loading}" indeterminate aria-label="${this.getAttribute("progress-label") ?? "loading"}"></pfe-progress-indicator>`;
  }
}, "o");
o17.version = "2.0.0-next.4", o17.styles = [...c13.styles, s14], a13([e5({ type: Boolean, reflect: true })], o17.prototype, "loading", 2), a13([e5({ type: Boolean, reflect: true })], o17.prototype, "plain", 2), a13([e5({ type: Boolean, reflect: true })], o17.prototype, "warning", 2), o17 = a13([e4("pfe-button")], o17);

// node_modules/@patternfly/pfe-card/pfe-card.js
init_lit();
init_decorators();
init_decorators2();
init_slot_controller();
init_lit();
var n17 = Object.defineProperty;
var m14 = Object.getOwnPropertyDescriptor;
var a14 = /* @__PURE__ */ __name((f18, d13, r21, o24) => {
  for (var t15 = o24 > 1 ? void 0 : o24 ? m14(d13, r21) : d13, p22 = f18.length - 1, l23; p22 >= 0; p22--)
    (l23 = f18[p22]) && (t15 = (o24 ? l23(d13, r21, t15) : l23(t15)) || t15);
  return o24 && t15 && n17(d13, r21, t15), t15;
}, "a");
var _4 = i`:host{--context:var(--pfe-card--context, var(--pfe-theme--color--surface--base--context, light));--pfe-theme--color--surface--lightest:#ffffff;--pfe-theme--color--surface--lighter:#ececec;--pfe-theme--color--surface--base:#f0f0f0;--pfe-theme--color--surface--darker:#3c3f42;--pfe-theme--color--surface--darkest:#151515;--pfe-theme--color--surface--accent:#004080;--pfe-theme--color--surface--complement:#002952;display:flex;flex-direction:column;justify-items:flex-start;align-self:stretch;padding:var(--pfe-card--Padding,var(--pfe-card--PaddingTop,calc(var(--pfe-theme--container-spacer,1rem) * 2)) var(--pfe-card--PaddingRight,calc(var(--pfe-theme--container-spacer,1rem) * 2)) var(--pfe-card--PaddingBottom,calc(var(--pfe-theme--container-spacer,1rem) * 2)) var(--pfe-card--PaddingLeft,calc(var(--pfe-theme--container-spacer,1rem) * 2)));border:var(--pfe-card--Border,var(--pfe-card--BorderWidth,0) var(--pfe-card--BorderStyle,solid) var(--pfe-card--BorderColor,var(--pfe-theme--color--surface--border,#d2d2d2)));border-radius:var(--pfe-card--BorderRadius,var(--pfe-theme--surface--border-radius,3px));overflow:hidden;background-color:var(--pfe-card--BackgroundColor,var(--pfe-context-background-color));background-position:var(--pfe-card--BackgroundPosition,center center);color:var(--pfe-broadcasted--text,#3c3f42)}@media print{:host{background-color:#fff!important;background-image:none!important;box-shadow:none!important}}@media print{:host{border-radius:3px;border:1px solid #d2d2d2}}:host([color-palette]),:host([color]),:host([on]){background-color:var(--pfe-card--BackgroundColor,var(--pfe-context-background-color))}:host([size=small]){--pfe-card--PaddingTop:var(--pfe-theme--container-spacer, 1rem);--pfe-card--PaddingRight:var(--pfe-theme--container-spacer, 1rem);--pfe-card--PaddingBottom:var(--pfe-theme--container-spacer, 1rem);--pfe-card--PaddingLeft:var(--pfe-theme--container-spacer, 1rem)}:host([border]:not([border=false])){--pfe-card--BorderWidth:1px}.pfe-card__body ::slotted([overflow~=top]),.pfe-card__footer ::slotted([overflow~=top]),.pfe-card__header ::slotted([overflow~=top]){z-index:1;margin-top:-2rem;margin-top:calc(-1 * var(--pfe-card--PaddingTop,calc(var(--pfe-theme--container-spacer,1rem) * 2)))!important}:host(.has-header) .pfe-card__body ::slotted([overflow~=top]),:host(.has-header) .pfe-card__footer ::slotted([overflow~=top]),:host(.has-header) .pfe-card__header ::slotted([overflow~=top]){padding-top:var(--pfe-card--spacing,var(--pfe-theme--container-spacer,1rem))}.pfe-card__body ::slotted([overflow~=right]),.pfe-card__footer ::slotted([overflow~=right]),.pfe-card__header ::slotted([overflow~=right]){margin-right:-2rem;margin-right:calc(-1 * var(--pfe-card--PaddingRight,calc(var(--pfe-theme--container-spacer,1rem) * 2)))}.pfe-card__body ::slotted([overflow~=bottom]),.pfe-card__footer ::slotted([overflow~=bottom]),.pfe-card__header ::slotted([overflow~=bottom]){margin-bottom:-2rem;margin-bottom:calc(-1 * (var(--pfe-card--PaddingBottom,calc(var(--pfe-theme--container-spacer,1rem) * 2)) + var(--pfe-card--BorderRadius,var(--pfe-theme--surface--border-radius,3px))));align-self:flex-end}.pfe-card__body ::slotted([overflow~=left]),.pfe-card__footer ::slotted([overflow~=left]),.pfe-card__header ::slotted([overflow~=left]){margin-left:-2rem;margin-left:calc(-1 * var(--pfe-card--PaddingLeft,calc(var(--pfe-theme--container-spacer,1rem) * 2)))}.pfe-card__body ::slotted(img),.pfe-card__footer ::slotted(img),.pfe-card__header ::slotted(img){max-width:100%!important;align-self:flex-start;object-fit:cover}.pfe-card__body ::slotted(img:not[overflow]),.pfe-card__footer ::slotted(img:not[overflow]),.pfe-card__header ::slotted(img:not[overflow]){align-self:flex-start}.pfe-card__body ::slotted(img[overflow]),.pfe-card__footer ::slotted(img[overflow]),.pfe-card__header ::slotted(img[overflow]){max-width:unset!important}.pfe-card__body ::slotted(img[overflow~=right]),.pfe-card__footer ::slotted(img[overflow~=right]),.pfe-card__header ::slotted(img[overflow~=right]){width:calc(100% + 2rem)!important;width:calc(100% + var(--pfe-card--PaddingRight,calc(var(--pfe-theme--container-spacer,1rem) * 2)))!important}.pfe-card__body ::slotted(img[overflow~=left]),.pfe-card__footer ::slotted(img[overflow~=left]),.pfe-card__header ::slotted(img[overflow~=left]){width:calc(100% + 2rem)!important;width:calc(100% + var(--pfe-card--PaddingLeft,calc(var(--pfe-theme--container-spacer,1rem) * 2)))!important}.pfe-card__body ::slotted(img[overflow~=right][overflow~=left]),.pfe-card__footer ::slotted(img[overflow~=right][overflow~=left]),.pfe-card__header ::slotted(img[overflow~=right][overflow~=left]){width:calc(100% + 4rem)!important;width:calc(100% + var(--pfe-card--PaddingRight,calc(var(--pfe-theme--container-spacer,1rem) * 2)) + var(--pfe-card--PaddingLeft,calc(var(--pfe-theme--container-spacer,1rem) * 2)))!important}.pfe-card__header{z-index:2;background-color:var(--pfe-card__header--BackgroundColor,rgba(0,0,0,var(--pfe-theme--opacity,.09)));color:var(--pfe-card__header--Color,var(--pfe-broadcasted--text,#3c3f42));margin-top:calc(var(--pfe-card--PaddingTop,calc(var(--pfe-theme--container-spacer,1rem) * 2)) * -1)!important;margin-right:calc(var(--pfe-card--PaddingRight,calc(var(--pfe-theme--container-spacer,1rem) * 2)) * -1);margin-bottom:var(--pfe-card--spacing--vertical,var(--pfe-card--spacing,var(--pfe-theme--container-spacer,1rem)));margin-left:calc(var(--pfe-card--PaddingLeft,calc(var(--pfe-theme--container-spacer,1rem) * 2)) * -1);padding-top:var(--pfe-card--spacing--vertical,var(--pfe-card--spacing,var(--pfe-theme--container-spacer,1rem)));padding-right:var(--pfe-card--PaddingRight,calc(var(--pfe-theme--container-spacer,1rem) * 2));padding-left:var(--pfe-card--PaddingLeft,calc(var(--pfe-theme--container-spacer,1rem) * 2));padding-bottom:var(--pfe-card--spacing--vertical,var(--pfe-card--spacing,var(--pfe-theme--container-spacer,1rem)))}:host([color-palette^=dark]) .pfe-card__header{background-color:var(--pfe-card__header--BackgroundColor--dark,rgba(255,255,255,var(--pfe-theme--opacity,.09)))}.pfe-card__header:not(.has-body,.has-footer){margin-bottom:var(--pfe-card--PaddingBottom,calc(var(--pfe-theme--container-spacer,1rem) * 2))}.pfe-card__header ::slotted([overflow~=top]){--pfe-card__overflow--MarginTop:calc(var(--pfe-card--PaddingTop, calc(var(--pfe-theme--container-spacer, 1rem) * 2)) * -1)}.pfe-card__header:not(.has-header){display:none}.pfe-card__header.has-body,.pfe-card__header.has-footer ::slotted([overflow~=bottom]){--pfe-card__overflow--MarginBottom:calc(var(--pfe-card--spacing--vertical, var(--pfe-card--spacing, var(--pfe-theme--container-spacer, 1rem))) * -1)}.pfe-card__header ::slotted([overflow~=bottom]){--pfe-card__overflow--MarginBottom:calc(var(--pfe-card--PaddingBottom, calc(var(--pfe-theme--container-spacer, 1rem) * 2)) * -1)}.pfe-card__header ::slotted(h1){margin-bottom:0}.pfe-card__header ::slotted(h2){margin-bottom:0}.pfe-card__header ::slotted(h3){margin-bottom:0}.pfe-card__header ::slotted(h4){margin-bottom:0}.pfe-card__header ::slotted(h5){margin-bottom:0}.pfe-card__header ::slotted(h6){margin-bottom:0}.pfe-card__body:not(.has-header) ::slotted([overflow~=top]){--pfe-card__overflow--MarginTop:calc(var(--pfe-card--PaddingTop, calc(var(--pfe-theme--container-spacer, 1rem) * 2)) * -1)}.pfe-card__body ::slotted([overflow~=top]){z-index:1;--pfe-card__overflow--MarginTop:calc(var(--pfe-card--spacing--vertical, var(--pfe-card--spacing, var(--pfe-theme--container-spacer, 1rem))) * -1)}.pfe-card__body ::slotted([overflow~=bottom]){--pfe-card__overflow--MarginBottom:calc(var(--pfe-card--PaddingBottom, calc(var(--pfe-theme--container-spacer, 1rem) * 2)) * -1)}.pfe-card__body.has-footer ::slotted([overflow~=bottom]){--pfe-card__overflow--MarginBottom:calc(var(--pfe-card--spacing--vertical, var(--pfe-card--spacing, var(--pfe-theme--container-spacer, 1rem))) * -1)}.pfe-card__body:is(.has-header) ::slotted(img[overflow~=top]){padding-top:var(--pfe-card--spacing,var(--pfe-theme--container-spacer,1rem))}.pfe-card__body:not(.has-footer){margin-bottom:0}.pfe-card__footer{margin-top:auto;display:flex;flex-direction:var(--pfe-card__footer--Row,row);flex-wrap:var(--pfe-card__footer--Wrap,wrap);align-items:var(--pfe-card__footer--AlignItems,baseline)}.pfe-card__footer ::slotted([overflow~=bottom]){--pfe-card__overflow--MarginBottom:calc(var(--pfe-card--PaddingBottom, calc(var(--pfe-theme--container-spacer, 1rem) * 2)) * -1)}.pfe-card__footer:not(.has-footer){display:none}.pfe-card__body,.pfe-card__header{margin-bottom:var(--pfe-card--spacing--vertical,var(--pfe-card--spacing,var(--pfe-theme--container-spacer,1rem)))}.pfe-card__body ::slotted(p:first-child),.pfe-card__header ::slotted(p:first-child){margin-top:0}.pfe-card__body ::slotted(h1:first-child),.pfe-card__header ::slotted(h1:first-child){margin-top:0}.pfe-card__body ::slotted(h2:first-child),.pfe-card__header ::slotted(h2:first-child){margin-top:0}.pfe-card__body ::slotted(h3:first-child),.pfe-card__header ::slotted(h3:first-child){margin-top:0}.pfe-card__body ::slotted(h4:first-child),.pfe-card__header ::slotted(h4:first-child){margin-top:0}.pfe-card__body ::slotted(h5:first-child),.pfe-card__header ::slotted(h5:first-child){margin-top:0}.pfe-card__body ::slotted(h6:first-child),.pfe-card__header ::slotted(h6:first-child){margin-top:0}#header ::slotted(:is(h1,h2,h3,h4,h5,h6)){font-weight:var(--pfe-card-header-font-weight,500)}`;
var s15 = _4;
var e14 = /* @__PURE__ */ __name(class extends s4 {
  constructor() {
    super(...arguments);
    this.colorPalette = "base";
    this.border = false;
    this.slots = new l11(this, { slots: ["header", null, "footer"], deprecations: { header: "pfe-card--header", footer: "pfe-card--footer" } });
  }
  render() {
    let r21 = { "has-header": this.slots.hasSlotted("header", "pfe-card--header"), "has-footer": this.slots.hasSlotted("footer", "pfe-card--footer"), "has-body": this.slots.hasSlotted() };
    return y`<div class="pfe-card__header ${o8(r21)}" part="header"><slot name="header"></slot><slot name="pfe-card--header"></slot></div><div class="pfe-card__body ${o8(r21)}" part="body"><slot></slot></div><div class="pfe-card__footer ${o8(r21)}" part="footer"><slot name="footer"></slot><slot name="pfe-card--footer"></slot></div>`;
  }
  _imgSrcChanged(r21, o24) {
    typeof this.imgSrc == "string" && (this.style.backgroundImage = o24 ? `url('${o24}')` : "");
  }
}, "e");
e14.version = "2.0.0-next.4", e14.styles = [s15], a14([p3, e5({ attribute: "img-src", reflect: true })], e14.prototype, "imgSrc", 2), a14([c5(), e5({ reflect: true, attribute: "color-palette" })], e14.prototype, "colorPalette", 2), a14([d3({ alias: "colorPalette", attribute: "color" })], e14.prototype, "color", 2), a14([x2(), e5({ reflect: true })], e14.prototype, "on", 2), a14([e5({ reflect: true })], e14.prototype, "size", 2), a14([e5({ type: Boolean, reflect: true })], e14.prototype, "border", 2), e14 = a14([e4("pfe-card"), d4()], e14);

// node_modules/@patternfly/pfe-collapse/pfe-collapse.js
init_lit();
init_decorators();
init_decorators2();
init_pfe_collapse_panel();

// node_modules/@patternfly/pfe-collapse/pfe-collapse-toggle.js
init_lit();
init_decorators();
init_core();
init_random();
init_deprecatedCustomEvent();
init_logger();
init_decorators2();
init_lit();
var u13 = Object.defineProperty;
var m15 = Object.getOwnPropertyDescriptor;
var a15 = /* @__PURE__ */ __name((s23, r21, t15, e24) => {
  for (var o24 = e24 > 1 ? void 0 : e24 ? m15(r21, t15) : r21, l23 = s23.length - 1, i22; l23 >= 0; l23--)
    (i22 = s23[l23]) && (o24 = (e24 ? i22(r21, t15, o24) : i22(o24)) || o24);
  return e24 && o24 && u13(r21, t15, o24), o24;
}, "a");
var b6 = i`:host{display:block;cursor:default}`;
var h10 = b6;
var p12 = /* @__PURE__ */ __name(class extends n10 {
  constructor(t15, e24, o24) {
    super("change");
    this.toggle = t15;
    this.panel = e24;
    this.expanded = o24;
  }
}, "p");
function d8(s23, r21, t15) {
  let e24 = t15.value;
  t15.value = function(...o24) {
    if (!this.disabled)
      return e24.call(this, ...o24);
  };
}
__name(d8, "d");
var n18 = /* @__PURE__ */ __name(class extends s4 {
  constructor() {
    super();
    this.logger = new n6(this);
    this.expanded = false;
    this.ariaControls = "";
    this.disabled = false;
    this.controlledPanel = null;
    this.addEventListener("click", this.toggle), this.addEventListener("keydown", this._keydownHandler);
  }
  connectedCallback() {
    super.connectedCallback(), this.setAttribute("role", "button"), this.tabIndex = 0, this.id || (this.id = n11("pfe-collapse-toggle")), this.controlledPanel || this._connectPanel(this.ariaControls);
  }
  render() {
    return y`<slot></slot>`;
  }
  _expandedChanged() {
    if (this.setAttribute("aria-expanded", String(!!this.expanded)), this.controlledPanel || this._connectPanel(this.ariaControls), !this.controlledPanel)
      this.logger.warn("This toggle doesn't have a panel associated with it");
    else {
      let { expanded: t15, controlledPanel: e24 } = this;
      e24.expanded = t15, this.dispatchEvent(n12("pfe-collapse:change", { expanded: t15, panel: e24, toggle: this })), this.dispatchEvent(new p12(this, e24, t15));
    }
  }
  _ariaControlsChanged(t15, e24) {
    e24 && this._connectPanel(e24);
  }
  _keydownHandler(t15) {
    switch (t15.key) {
      case " ":
      case "Spacebar":
      case "Enter":
        this.toggle();
        break;
    }
  }
  _connectPanel(t15) {
    if (t15) {
      let e24 = this.getRootNode();
      e24 instanceof Document || e24 instanceof ShadowRoot ? this.controlledPanel = e24.querySelector(`#${t15}`) : this.logger.warn("pfe-collapse-toggle was not connected");
    }
  }
  expand() {
    this.expanded = true;
  }
  collapse() {
    this.expanded = false;
  }
  toggle() {
    this.expanded = !this.expanded;
  }
}, "n");
n18.version = "2.0.0-next.2", n18.styles = [h10], a15([p3, e5({ type: Boolean, attribute: "expanded" })], n18.prototype, "expanded", 2), a15([p3, e5({ attribute: "aria-controls", reflect: true })], n18.prototype, "ariaControls", 2), a15([e5({ type: Boolean, reflect: true })], n18.prototype, "disabled", 2), a15([d8], n18.prototype, "expand", 1), a15([d8], n18.prototype, "collapse", 1), a15([d8], n18.prototype, "toggle", 1), n18 = a15([e4("pfe-collapse-toggle"), d4()], n18);

// node_modules/@patternfly/pfe-collapse/pfe-collapse.js
init_lit();
var m16 = Object.defineProperty;
var d9 = Object.getOwnPropertyDescriptor;
var o18 = /* @__PURE__ */ __name((n24, i22, l23, t15) => {
  for (var a20 = t15 > 1 ? void 0 : t15 ? d9(i22, l23) : i22, r21 = n24.length - 1, s23; r21 >= 0; r21--)
    (s23 = n24[r21]) && (a20 = (t15 ? s23(i22, l23, a20) : s23(a20)) || a20);
  return t15 && a20 && m16(i22, l23, a20), a20;
}, "o");
var g8 = i`:host{display:block}:host([hidden]){display:none}:host(.animating),:host([expanded]){display:block}`;
var p13 = g8;
var e15 = /* @__PURE__ */ __name(class extends s4 {
  constructor() {
    super();
    this._toggle = null;
    this._panel = null;
    this.addEventListener("animation-start", this._animationStartHandler), this.addEventListener("animation-end", this._animationEndHandler);
  }
  render() {
    return y`<slot></slot>`;
  }
  _animationChanged(l23, t15) {
    t15 !== "false" && t15 !== "true" || this._panel && (this._panel.animation = t15);
  }
  async _init() {
    await this.updateComplete, this._toggle = this.querySelector("pfe-collapse-toggle"), this._panel = this.querySelector("pfe-collapse-panel"), this._toggle?.setAttribute?.("aria-controls", this._panel?.id ?? "");
  }
  _animationStartHandler() {
    this.classList.add("animating");
  }
  _animationEndHandler() {
    this.classList.remove("animating");
  }
  toggle() {
    this._toggle?.toggle?.();
  }
}, "e");
e15.version = "2.0.0-next.2", e15.styles = [p13], o18([p3, e5({ reflect: true })], e15.prototype, "animation", 2), o18([c6()], e15.prototype, "_init", 1), e15 = o18([e4("pfe-collapse"), d4()], e15);

// node_modules/@patternfly/pfe-cta/pfe-cta.js
init_lit();
init_decorators();
init_core();
init_deprecatedCustomEvent();
init_logger();
init_decorators2();
init_lit();
var u14 = Object.defineProperty;
var v8 = Object.getOwnPropertyDescriptor;
var t9 = /* @__PURE__ */ __name((o24, i22, r21, a20) => {
  for (var c21 = a20 > 1 ? void 0 : a20 ? v8(i22, r21) : i22, l23 = o24.length - 1, p22; l23 >= 0; l23--)
    (p22 = o24[l23]) && (c21 = (a20 ? p22(i22, r21, c21) : p22(c21)) || c21);
  return a20 && c21 && u14(i22, r21, c21), c21;
}, "t");
var b7 = i`.pfe-cta--wrapper button,.pfe-cta--wrapper input,::slotted(button),::slotted(input){background-color:transparent;border:none;margin:0;padding:0;text-align:left}.pfe-cta--wrapper button,.pfe-cta--wrapper input,::slotted(button),::slotted(input){background-color:transparent;border:none;margin:0;padding:0;text-align:left}.pfe-cta--wrapper button,.pfe-cta--wrapper input,::slotted(button),::slotted(input){background-color:transparent;border:none;margin:0;padding:0;text-align:left}.pfe-cta--wrapper button,.pfe-cta--wrapper input,::slotted(button),::slotted(input){background-color:transparent;border:none;margin:0;padding:0;text-align:left}:host{display:inline-block;position:relative;z-index:0;vertical-align:middle;max-width:var(--pfe-cta--MaxWidth,max-content);background-color:var(--pfe-cta--BackgroundColor,transparent);border-radius:var(--pfe-cta--BorderRadius,0);border:var(--pfe-theme--ui--border-width,1px) var(--pfe-theme--ui--border-style,solid) var(--pfe-cta--BorderColor,transparent);cursor:pointer;--pfe-context-background-color:var(--pfe-cta--BackgroundColor, transparent)!important}::slotted(*){white-space:normal;display:inline;padding:var(--pfe-cta--Padding,.6rem 0)!important;color:var(--pfe-cta--Color,var(--pfe-broadcasted--link,#06c))!important;font-family:var(--pfe-cta--FontFamily, var(--pfe-theme--font-family--heading, "Red Hat Display", "RedHatDisplay", "Overpass", Overpass, Arial, sans-serif));font-size:var(--pfe-cta--FontSize, var(--pf-global--FontSize--lg, 1.125rem));font-weight:var(--pfe-cta--FontWeight,var(--pfe-theme--font-weight--bold,700));line-height:var(--pfe-cta--LineHeight, var(--pfe-theme--line-height, 1.5));text-decoration:var(--pfe-cta--TextDecoration,none)!important}:host([priority]) ::slotted(*){font-size:var(--pfe-cta--FontSize--priority, var(--pf-global--FontSize--md, 1rem));text-align:center}:host([aria-disabled=true]) ::slotted(*){cursor:default!important;font-size:var(--pfe-cta--FontSize, var(--pf-global--FontSize--md, 1rem))}:host([aria-disabled=true]) ::slotted(*),:host([priority]) ::slotted(*){padding:var(--pfe-cta--Padding,var(--pfe-theme--container-padding,1rem) calc(var(--pfe-theme--container-padding,1rem) * 2))!important}:host(:not([aria-disabled=true])) ::slotted(:focus),:host(:not([aria-disabled=true]).focus-within),:host(:not([aria-disabled=true]).focus-within) ::slotted(*),:host(:not([aria-disabled=true]):focus){outline:0!important}.pfe-cta--wrapper{display:block;white-space:nowrap;min-width:100%}:host([aria-disabled=true]) .pfe-cta--wrapper,:host([priority]) .pfe-cta--wrapper{display:flex;flex-flow:row nowrap;align-items:center;height:100%}.pfe-cta--inner{display:block;height:calc(100% - 4px);width:calc(100% - 4px);box-sizing:border-box;position:absolute;top:2px;left:2px;z-index:-1;border:var(--pfe-theme--surface--border-width,1px) var(--pfe-theme--surface--border-style,solid) var(--pfe-cta__inner--BorderColor,transparent);border-radius:2px;outline:0}.pfe-cta--arrow{display:var(--pfe-cta__arrow--Display,inline);padding:var(--pfe-cta__arrow--Padding,0 3px);fill:var(--pfe-cta--Color,var(--pfe-broadcasted--link,#06c));width:var(--pfe-cta__arrow--size,13px);height:var(--pfe-cta__arrow--size,13px);transition:padding var(--pfe-theme--animation-speed, .3s) var(--pfe-theme--animation-timing, cubic-bezier(.465, .183, .153, .946));margin-bottom:-1px}:host([priority]) svg{display:none}:host([priority=primary]){--pfe-cta--BorderRadius:var(--pfe-theme--ui--border-radius, 2px);--pfe-cta--BackgroundColor:var(--pfe-theme--color--ui-accent, #06c);--pfe-cta--BorderColor:var(--pfe-theme--color--ui-accent, #06c);--pfe-cta--Color:var(--pfe-theme--color--ui-accent--text, #fff);--pfe-cta--BackgroundColor--hover:var(--pfe-theme--color--ui-accent--hover, #004080);--pfe-cta--BorderColor--hover:var(--pfe-theme--color--ui-accent--hover, #004080);--pfe-cta--Color--hover:var(--pfe-theme--color--ui-accent--text, #fff);--pfe-cta--BackgroundColor--focus:var(--pfe-theme--color--ui-accent, #06c);--pfe-cta--BorderColor--focus:var(--pfe-theme--color--ui-accent, #06c);--pfe-cta--Color--focus:var(--pfe-theme--color--ui-accent--text, #fff);--pfe-cta__arrow--Display:none;--pfe-cta__inner--BorderColor--focus:var(--pfe-theme--color--ui-accent--text, #fff)}:host([priority=secondary]){--pfe-cta--BorderRadius:var(--pfe-theme--ui--border-radius, 2px);--pfe-cta--BackgroundColor:transparent;--pfe-cta--BorderColor:var(--pfe-broadcasted--text, #3c3f42);--pfe-cta--Color:var(--pfe-broadcasted--text, #3c3f42);--pfe-cta--BackgroundColor--hover:var(--pfe-broadcasted--text, #3c3f42);--pfe-cta--BorderColor--hover:var(--pfe-broadcasted--text, #3c3f42);--pfe-cta--Color--hover:var(--pfe-theme--color--ui-base--text, #fff);--pfe-cta--BackgroundColor--focus:var(--pfe-theme--color--surface--lighter, #f0f0f0);--pfe-cta--BorderColor--focus:var(--pfe-theme--color--ui-base, #6a6e73);--pfe-cta--Color--focus:var(--pfe-theme--color--ui-base, #6a6e73);--pfe-cta__arrow--Display:none;--pfe-cta__inner--BorderColor--focus:var(--pfe-theme--color--ui-base, #6a6e73)}:host([priority=primary][on=dark]),:host([priority=primary][on=saturated]){--pfe-cta--BackgroundColor:var(--pfe-theme--color--surface--lightest, #fff);--pfe-cta--BorderColor:var(--pfe-theme--color--surface--lightest, #fff);--pfe-cta--Color:var(--pfe-theme--color--text, #151515);--pfe-cta--BackgroundColor--hover:var(--pfe-theme--color--surface--lighter, #f0f0f0);--pfe-cta--BorderColor--hover:var(--pfe-theme--color--surface--lighter, #f0f0f0);--pfe-cta--Color--hover:var(--pfe-theme--color--text, #151515);--pfe-cta--BackgroundColor--focus:var(--pfe-theme--color--surface--lightest, #fff);--pfe-cta--BorderColor--focus:var(--pfe-theme--color--surface--lightest, #fff);--pfe-cta--Color--focus:var(--pfe-theme--color--text, #151515);--pfe-cta__inner--BorderColor--focus:var(--pfe-theme--color--surface--darkest, #151515)}:host([priority=secondary][on=dark]),:host([priority=secondary][on=saturated]){--pfe-cta--BackgroundColor:transparent;--pfe-cta--BorderColor:var(--pfe-theme--color--surface--lightest, #fff);--pfe-cta--Color:var(--pfe-theme--color--text--on-dark, #fff);--pfe-cta--BackgroundColor--hover:var(--pfe-theme--color--surface--lighter, #f0f0f0);--pfe-cta--BorderColor--hover:var(--pfe-theme--color--surface--lighter, #f0f0f0);--pfe-cta--Color--hover:var(--pfe-theme--color--text, #151515);--pfe-cta--BackgroundColor--focus:var(--pfe-theme--color--surface--lightest, #fff);--pfe-cta--BorderColor--focus:var(--pfe-theme--color--surface--lightest, #fff);--pfe-cta--Color--focus:var(--pfe-theme--color--text, #151515);--pfe-cta__inner--BorderColor--focus:var(--pfe-theme--color--surface--darkest, #151515)}:host([on=saturated][color-palette=accent]),:host([on^=dark][color-palette=accent]),:host([on^=light][color-palette=accent]){--pfe-broadcasted--text:var(--pfe-theme--color--text, #fff)!important;--pfe-broadcasted--link:var(--pfe-theme--color--link, #06c);--pfe-broadcasted--link--hover:var(--pfe-theme--color--link--hover, #004080);--pfe-broadcasted--link--focus:var(--pfe-theme--color--link--focus, #004080)}:host([priority=secondary][color-palette=accent]){--pfe-cta--BackgroundColor:transparent;--pfe-cta--BorderColor:var(--pfe-theme--color--ui-accent, #06c);--pfe-cta--Color:var(--pfe-theme--color--ui-accent, #06c);--pfe-cta--BackgroundColor--hover:var(--pfe-theme--color--ui-accent, #06c);--pfe-cta--BorderColor--hover:var(--pfe-theme--color--ui-accent, #06c);--pfe-cta--Color--hover:var(--pfe-theme--color--ui-accent--text, #fff);--pfe-cta--BackgroundColor--focus:var(--pfe-theme--color--surface--lighter, #f0f0f0);--pfe-cta--BorderColor--focus:var(--pfe-theme--color--ui-accent, #06c);--pfe-cta--Color--focus:var(--pfe-theme--color--ui-accent, #06c);--pfe-cta__inner--BorderColor--focus:var(--pfe-theme--color--ui-accent, #06c)}:host([on^=dark]){--pfe-broadcasted--text:var(--pfe-theme--color--text--on-dark, #fff)!important;--pfe-broadcasted--text--muted:var(--pfe-theme--color--text--muted--on-dark, #d2d2d2)!important;--pfe-broadcasted--link:var(--pfe-theme--color--link--on-dark, #73bcf7)!important;--pfe-broadcasted--link--hover:var(--pfe-theme--color--link--hover--on-dark, #bee1f4)!important;--pfe-broadcasted--link--focus:var(--pfe-theme--color--link--focus--on-dark, #bee1f4)!important;--pfe-broadcasted--link--visited:var(--pfe-theme--color--link--visited--on-dark, #bee1f4)!important;--pfe-broadcasted--link-decoration:var(--pfe-theme--link-decoration--on-dark, none);--pfe-broadcasted--link-decoration--hover:var(--pfe-theme--link-decoration--hover--on-dark, underline)!important;--pfe-broadcasted--link-decoration--focus:var(--pfe-theme--link-decoration--focus--on-dark, underline)!important;--pfe-broadcasted--link-decoration--visited:var(--pfe-theme--link-decoration--visited--on-dark, none)!important}:host([on=saturated]){--pfe-broadcasted--text:var(--pfe-theme--color--text--on-saturated, #fff)!important;--pfe-broadcasted--text--muted:var(--pfe-theme--color--text--muted--on-saturated, #d2d2d2)!important;--pfe-broadcasted--link:var(--pfe-theme--color--link--on-saturated, #fff)!important;--pfe-broadcasted--link--hover:var(--pfe-theme--color--link--hover--on-saturated, #fafafa)!important;--pfe-broadcasted--link--focus:var(--pfe-theme--color--link--focus--on-saturated, #fafafa)!important;--pfe-broadcasted--link--visited:var(--pfe-theme--color--link--visited--on-saturated, #d2d2d2)!important;--pfe-broadcasted--link-decoration:var(--pfe-theme--link-decoration--on-saturated, underline)!important;--pfe-broadcasted--link-decoration--hover:var(--pfe-theme--link-decoration--hover--on-saturated, underline)!important;--pfe-broadcasted--link-decoration--focus:var(--pfe-theme--link-decoration--focus--on-saturated, underline)!important;--pfe-broadcasted--link-decoration--visited:var(--pfe-theme--link-decoration--visited--on-saturated, underline)!important}:host([priority=primary][color-palette=base]){--pfe-cta--BackgroundColor:var(--pfe-theme--color--ui-base, #6a6e73);--pfe-cta--BorderColor:var(--pfe-theme--color--ui-base, #6a6e73);--pfe-cta--Color:var(--pfe-theme--color--ui-base--text, #fff);--pfe-cta--BackgroundColor--hover:var(--pfe-theme--color--ui-base--hover, #151515);--pfe-cta--BorderColor--hover:var(--pfe-theme--color--ui-base--hover, #151515);--pfe-cta--Color--hover:var(--pfe-theme--color--ui-base--text, #fff);--pfe-cta--BackgroundColor--focus:var(--pfe-theme--color--ui-base, #6a6e73);--pfe-cta--BorderColor--focus:var(--pfe-theme--color--surface--darker, #3c3f42);--pfe-cta--Color--focus:var(--pfe-theme--color--ui-base--text, #fff);--pfe-cta__inner--BorderColor--focus:var(--pfe-theme--color--ui-base--text, #fff)}:host([priority=secondary][color-palette=base]){--pfe-cta--BackgroundColor:transparent;--pfe-cta--BorderColor:var(--pfe-theme--color--ui-base, #6a6e73);--pfe-cta--Color:var(--pfe-theme--color--ui-base, #6a6e73);--pfe-cta--BackgroundColor--hover:var(--pfe-theme--color--ui-base--hover, #151515);--pfe-cta--BorderColor--hover:var(--pfe-theme--color--ui-base--hover, #151515);--pfe-cta--Color--hover:var(--pfe-theme--color--ui-base--text, #fff);--pfe-cta--BackgroundColor--focus:rgba(40, 151, 240, 0.2);--pfe-cta--BorderColor--focus:var(--pfe-theme--color--ui-base, #6a6e73);--pfe-cta--Color--focus:var(--pfe-theme--color--ui-base, #6a6e73);--pfe-cta__inner--BorderColor--focus:var(--pfe-theme--color--ui-base, #6a6e73)}:host([priority=secondary][variant=wind]){--pfe-cta--BackgroundColor:transparent;--pfe-cta--BorderColor:var(--pfe-theme--color--surface--border, #d2d2d2);--pfe-cta--Color:var(--pfe-broadcasted--link, #06c);--pfe-cta--FontWeight:var(--pfe-theme--font-weight--normal, 400);--pfe-cta--BackgroundColor--hover:var(--pfe-theme--color--surface--border--lightest, #f5f5f5);--pfe-cta--BorderColor--hover:var(--pfe-theme--color--surface--border, #d2d2d2);--pfe-cta--Color--hover:var(--pfe-theme--color--link--hover, #004080);--pfe-cta--TextDecoration--hover:var(--pfe-theme--link-decoration--hover, underline);--pfe-cta--Color--focus:var(--pfe-theme--color--link--hover, #004080);--pfe-cta--BorderColor--focus:var(--pfe-theme--color--surface--border, #d2d2d2);--pfe-cta__inner--BorderColor--focus:var(--pfe---BorderColor--focus)}:host([aria-disabled=true]){--pfe-cta__arrow--Display:none;--pfe-cta--BackgroundColor:var(--pfe-theme--color--ui-disabled, #d2d2d2);--pfe-cta--BorderColor:var(--pfe-theme--color--ui-disabled, #d2d2d2);--pfe-cta--Color:var(--pfe-theme--color--ui-disabled--text, #6a6e73)}:host(:not([aria-disabled=true]).focus-within),:host(:not([aria-disabled=true]):focus){--pfe-cta--BackgroundColor:var(--pfe-cta--BackgroundColor--focus, rgba(40, 151, 240, 0.2));--pfe-cta--BorderColor:var(--pfe-cta--BorderColor--focus, transparent);--pfe-cta--Color:var(--pfe-cta--Color--focus, var(--pfe-broadcasted--link--focus, #004080));--pfe-cta--TextDecoration:var(--pfe-cta--TextDecoration--focus, none);--pfe-cta__inner--BorderColor:var(--pfe-cta__inner--BorderColor--focus, transparent)}:host(:not([aria-disabled=true])) ::slotted(:hover),:host(:not([aria-disabled=true]):hover){--pfe-cta--BackgroundColor:var(--pfe-cta--BackgroundColor--hover, transparent);--pfe-cta--BorderColor:var(--pfe-cta--BorderColor--hover, transparent);--pfe-cta--Color:var(--pfe-cta--Color--hover, var(--pfe-broadcasted--link--hover, #004080));--pfe-cta--TextDecoration:var(--pfe-cta--TextDecoration--hover, none);--pfe-cta__inner--BorderColor:var(--pfe-cta__inner--BorderColor--hover, transparent);--pfe-cta__arrow--Padding:0 0 0 6px}`;
var d10 = b7;
var D = ["a", "button"];
function M4(o24) {
  return !!o24 && D.includes(o24.localName);
}
__name(M4, "M");
var h11 = /* @__PURE__ */ new WeakMap();
function F3(o24) {
  return !!o24 && !!h11.get(o24);
}
__name(F3, "F");
var s16 = /* @__PURE__ */ __name(class extends n10 {
  constructor(r21, a20) {
    super("select");
    this.originEvent = a20;
    this.data = r21.data;
  }
}, "s");
var e16 = /* @__PURE__ */ __name(class extends s4 {
  constructor() {
    super(...arguments);
    this.data = {};
    this.cta = null;
    this.initializing = false;
    this.logger = new n6(this);
  }
  get isDefault() {
    return !this.hasAttribute("priority");
  }
  render() {
    return y`<span class="pfe-cta--wrapper" part="container"><slot @slotchange="${this._init}"></slot>${this.isDefault ? w`<svg class="pfe-cta--arrow" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 31.56 31.56" focusable="false" width="1em"><path d="M15.78 0l-3.1 3.1 10.5 10.49H0v4.38h23.18l-10.5 10.49 3.1 3.1 15.78-15.78L15.78 0z"/></svg>` : ""} <span class="pfe-cta--inner"></span></span>`;
  }
  disconnectedCallback() {
    super.disconnectedCallback(), this.cta && (this.cta.removeEventListener("focus", this._focusHandler), this.cta.removeEventListener("blur", this._blurHandler), this.cta.removeEventListener("click", this._clickHandler), this.cta.removeEventListener("keyup", this._keyupHandler));
  }
  async _init() {
    await this.updateComplete;
    let r21 = this.firstElementChild;
    if (!(F3(r21) || this.initializing)) {
      if (this.initializing = true, M4(r21)) {
        if (r21.tagName.toLowerCase() === "button" && this.priority == null && this.getAttribute("aria-disabled") !== "true")
          return this.logger.warn("Button tag is not supported semantically by the default link styles");
      } else
        return this.logger.warn("The first child in the light DOM must be a supported call-to-action tag (<a>, <button>)");
      this.cta = r21, this.data = { href: this.cta.href, text: this.cta.text, title: this.cta.title, color: this.color, type: this.priority }, this.variant && (this.data.type = `${this.data.type} ${this.variant}`), this.getAttribute("aria-disabled") && (this.data.type = "disabled"), this.cta.addEventListener("focus", this._focusHandler), this.cta.addEventListener("blur", this._blurHandler), this.cta.addEventListener("click", this._clickHandler), this.cta.addEventListener("keyup", this._keyupHandler), h11.set(this.cta, true), this.initializing = false;
    }
  }
  _focusHandler() {
    this.classList.add("focus-within");
  }
  _blurHandler() {
    this.classList.remove("focus-within");
  }
  _keyupHandler(r21) {
    let { key: a20 } = r21;
    switch (a20) {
      case "Enter":
        this._clickHandler(r21);
    }
  }
  _clickHandler(r21) {
    this.dispatchEvent(new s16(this, r21)), this.dispatchEvent(n12("pfe-cta:select", Object.assign(this.data, { originEvent: r21 })));
  }
}, "e");
e16.version = "2.0.0-next.4", e16.styles = [d10], t9([e5({ reflect: true })], e16.prototype, "priority", 2), t9([c5(), e5({ reflect: true, attribute: "color-palette" })], e16.prototype, "colorPalette", 2), t9([d3({ alias: "colorPalette", attribute: "color" })], e16.prototype, "color", 2), t9([x2(), e5({ reflect: true })], e16.prototype, "on", 2), t9([e5({ reflect: true })], e16.prototype, "variant", 2), t9([t3()], e16.prototype, "data", 2), t9([c6({ observe: false })], e16.prototype, "_init", 1), t9([o6], e16.prototype, "_focusHandler", 1), t9([o6], e16.prototype, "_blurHandler", 1), t9([o6], e16.prototype, "_keyupHandler", 1), t9([o6], e16.prototype, "_clickHandler", 1), e16 = t9([e4("pfe-cta"), d4()], e16);

// node_modules/@patternfly/pfe-datetime/pfe-datetime.js
init_lit();
init_decorators();
init_decorators2();
init_logger();
init_lit();
var y8 = Object.defineProperty;
var _5 = Object.getOwnPropertyDescriptor;
var a16 = /* @__PURE__ */ __name((l23, o24, i22, e24) => {
  for (var t15 = e24 > 1 ? void 0 : e24 ? _5(o24, i22) : o24, n24 = l23.length - 1, s23; n24 >= 0; n24--)
    (s23 = l23[n24]) && (t15 = (e24 ? s23(o24, i22, t15) : s23(t15)) || t15);
  return e24 && t15 && y8(o24, i22, t15), t15;
}, "a");
var b8 = i`:host{display:inline}`;
var g9 = b8;
function O2(l23) {
  return l23.replace(/[\w]([A-Z])/g, (o24) => `${o24[0]}-${o24[1]}`).toLowerCase();
}
__name(O2, "O");
var I3 = Object.entries({ weekday: { short: "short", long: "long" }, day: { numeric: "numeric", "2-digit": "2-digit" }, month: { short: "short", long: "long" }, year: { numeric: "numeric", "2-digit": "2-digit" }, hour: { numeric: "numeric", "2-digit": "2-digit" }, minute: { numeric: "numeric", "2-digit": "2-digit" }, second: { numeric: "numeric", "2-digit": "2-digit" }, timeZoneName: { short: "short", long: "long" } });
var r16 = /* @__PURE__ */ __name(class extends s4 {
  constructor() {
    super(...arguments);
    this.type = "local";
    this.datetime = "";
    this.logger = new n6(this);
  }
  get _dateTimeType() {
    return this.type || "local";
  }
  render() {
    let i22 = this._getTypeString();
    return y`<span>${i22}</span>`;
  }
  _datetimeChanged(i22, e24) {
    !e24 || !Date.parse(e24) || Date.parse(e24) && this._datetime === Date.parse(e24) || this.setDate(Date.parse(e24));
  }
  _timestampChanged(i22, e24) {
    if (e24 == null || this._timestamp === e24) {
      this.logger.log("early return");
      return;
    }
    this._timestamp = e24, this.setDate(new Date(e24 * 1e3));
  }
  _getOptions() {
    let i22 = {};
    for (let [e24, t15] of I3) {
      let n24 = O2(e24), s23 = this.getAttribute(n24);
      if (s23) {
        let m24 = t15[s23];
        m24 && (i22[e24] = m24);
      }
    }
    return this.timeZone && (i22.timeZone = this.timeZone), i22;
  }
  _getTypeString() {
    if (this._datetime == null)
      return "";
    try {
      let i22 = this._getOptions(), e24 = this.getAttribute("locale") || navigator.language;
      switch (this._dateTimeType) {
        case "local":
          return new Intl.DateTimeFormat(e24, i22).format(this._datetime);
        case "relative":
          return this._getTimeRelative(this._datetime - Date.now());
        default:
          return new Date(this._datetime ?? "").toLocaleString();
      }
    } catch {
      return new Date(this._datetime ?? "").toLocaleString();
    }
  }
  _getTimeRelative(i22) {
    let e24 = i22 > 0 ? "until" : "ago", t15 = "just now", n24 = Math.round(Math.abs(i22) / 1e3), s23 = Math.round(n24 / 60), m24 = Math.round(s23 / 60), u19 = Math.round(m24 / 24), c21 = Math.round(u19 / 30), f18 = Math.round(c21 / 12);
    return c21 >= 18 ? t15 = `${f18} years` : c21 >= 12 ? t15 = "a year" : u19 >= 45 ? t15 = `${c21} months` : u19 >= 30 ? t15 = "a month" : m24 >= 36 ? t15 = `${u19} days` : m24 >= 24 ? t15 = "a day" : s23 >= 90 ? t15 = `${m24} hours` : s23 >= 45 ? t15 = "an hour" : n24 >= 90 ? t15 = `${s23} minutes` : n24 >= 45 ? t15 = "a minute" : n24 >= 10 && (t15 = `${n24} seconds`), t15 !== "just now" ? `${t15} ${e24}` : t15;
  }
  setDate(i22) {
    this._datetime = i22 instanceof Date ? i22.getTime() : i22;
  }
}, "r");
r16.version = "2.0.0-next.3", r16.styles = [g9], a16([e5({ reflect: true })], r16.prototype, "type", 2), a16([p3, e5({ reflect: true })], r16.prototype, "datetime", 2), a16([p3, e5({ type: Number, reflect: true })], r16.prototype, "timestamp", 2), a16([e5({ reflect: true, attribute: "time-zone" })], r16.prototype, "timeZone", 2), a16([t3()], r16.prototype, "_datetime", 2), a16([t3()], r16.prototype, "_timestamp", 2), r16 = a16([e4("pfe-datetime"), d4()], r16);

// node_modules/@patternfly/pfe-dropdown/pfe-dropdown.js
init_lit();
init_decorators();
init_core();
init_decorators2();
init_deprecatedCustomEvent();

// node_modules/@patternfly/pfe-dropdown/pfe-dropdown-item.js
init_lit();
init_decorators();
init_decorators2();
init_lit();
var h12 = Object.defineProperty;
var m17 = Object.getOwnPropertyDescriptor;
var i18 = /* @__PURE__ */ __name((a20, r21, e24, n24) => {
  for (var o24 = n24 > 1 ? void 0 : n24 ? m17(r21, e24) : r21, d13 = a20.length - 1, s23; d13 >= 0; d13--)
    (s23 = a20[d13]) && (o24 = (n24 ? s23(r21, e24, o24) : s23(o24)) || o24);
  return n24 && o24 && h12(r21, e24, o24), o24;
}, "i");
var v9 = i`::slotted(*){--pf-c--FontSize:var(--pfe-dropdown--FontSize, var(--pf-global--FontSize--md, 1rem));display:block;width:100%;padding:var(--pfe-dropdown--spacing--vertical,calc(var(--pfe-theme--container-padding,1rem) * .5)) var(--pfe-dropdown--spacing--horizontal,calc(var(--pfe-theme--container-padding,1rem) * .5));color:var(--pfe-dropdown--Color,#030303);font-size:var(--pfe-dropdown--FontSize, var(--pf-global--FontSize--md, 1rem));font-weight:var(--pfe-dropdown--FontWeight,400);line-height:var(--pfe-dropdown--LineHeight, var(--pfe-theme--line-height, 1.5));text-align:var(--pfe-dropdown--TextAlign,left);white-space:nowrap;box-sizing:border-box;text-decoration:none;font-family:var(--pfe-theme--font-family, inherit);cursor:pointer}::slotted(button){background-color:var(--pfe-dropdown--BackgroundColor,transparent);border:var(--pfe-dropdown--Border,none)}.pfe-dropdown-item__container:active,.pfe-dropdown-item__container:focus-within,.pfe-dropdown-item__container:hover{background-color:var(--pfe-dropdown--BackgroundColor--hover,var(--pfe-theme--color--surface--lighter,#f0f0f0));color:var(--pfe-dropdown--Color--hover,#151515)}:host([item-type=separator]) .pfe-dropdown-item__container{height:1px;background-color:#f0f0f0}:host([disabled]) .pfe-dropdown-item__container{pointer-events:none;--pfe-dropdown--Color:#6a6e73}`;
var l19 = v9;
var t10 = /* @__PURE__ */ __name(class extends s4 {
  constructor() {
    super(...arguments);
    this.disabled = false;
  }
  connectedCallback() {
    super.connectedCallback(), this.addEventListener("click", this._clickHandler);
  }
  render() {
    return y`<li class="pfe-dropdown-item__container" role="${l14(this.containerRole)}" part="container"><slot></slot></li>`;
  }
  _itemTypeChanged() {
    let e24 = this.itemType;
    if (e24)
      switch (e24) {
        case "link":
          this.containerRole = "none", this.firstElementChild?.setAttribute("role", "menuitem");
          break;
        case "action":
          this.containerRole = "menuitem", this.firstElementChild?.removeAttribute("role");
          break;
        case "separator":
          this.containerRole = "separator";
          break;
      }
  }
  _disabledChanged() {
    let e24 = this.disabled;
    this.setAttribute("aria-disabled", String(this.disabled)), this.toggleAttribute("is_disabled", this.disabled), e24 ? this.removeAttribute("tabindex") : this.setAttribute("tabindex", "0");
  }
  _clickHandler(e24) {
    e24.target === this && this.firstElementChild?.click();
  }
}, "t");
t10.version = "2.0.0-next.2", t10.styles = [l19], t10.shadowRootOptions = { ...s4.shadowRootOptions, delegatesFocus: true }, i18([p3, e5({ reflect: true, attribute: "item-type" })], t10.prototype, "itemType", 2), i18([p3, e5({ type: Boolean, reflect: true })], t10.prototype, "disabled", 2), i18([t3()], t10.prototype, "containerRole", 2), t10 = i18([e4("pfe-dropdown-item"), d4()], t10);

// node_modules/@patternfly/pfe-dropdown/pfe-dropdown.js
init_lit();
var b9 = Object.defineProperty;
var _6 = Object.getOwnPropertyDescriptor;
var a17 = /* @__PURE__ */ __name((p22, s23, e24, t15) => {
  for (var o24 = t15 > 1 ? void 0 : t15 ? _6(s23, e24) : s23, n24 = p22.length - 1, i22; n24 >= 0; n24--)
    (i22 = p22[n24]) && (o24 = (t15 ? i22(s23, e24, o24) : i22(o24)) || o24);
  return t15 && o24 && b9(s23, e24, o24), o24;
}, "a");
var w4 = i`:host{position:relative;display:inline-block;max-width:100%}:host(:hover:not([disabled])){--pfe-dropdown__before--BorderBottomColor:var(--pfe-dropdown__before--BorderBottomColor--hover, var(--pfe-theme--color--ui-base, #6a6e73))}:host(:active:not([disabled])),:host(:focus:not([disabled])){--pfe-dropdown__before--BorderBottomColor:var(--pfe-dropdown__before--BorderBottomColor--hover, var(--pfe-theme--color--ui-base, #6a6e73));--pfe-dropdown__before--BorderWidth:var(--pfe-dropdown__before--BorderWidth--hover, calc(var(--pfe-theme--ui--border-width, 1px) * 2))}:host([hidden]){display:none}:host([disabled]){--pfe-dropdown--BackgroundColor:var(--pfe-theme--color--surface--lighter, #f0f0f0);--pfe-dropdown--BorderWidth:0}:host([disabled]) .pfe-dropdown__container{pointer-events:none}.pfe-dropdown__toggle{position:relative;display:flex;align-items:center;justify-content:space-between;min-width:var(--pfe-dropdown--MinWidth,calc(var(--pfe-theme--container-spacer,1rem) * 2));max-width:var(--pfe-dropdown--MaxWidth,100%);padding:var(--pfe-dropdown--spacing--vertical,calc(var(--pfe-theme--container-padding,1rem) * .5)) var(--pfe-dropdown--spacing--horizontal,calc(var(--pfe-theme--container-padding,1rem) * .5));font-size:var(--pfe-dropdown--FontSize, var(--pf-global--FontSize--md, 1rem));font-family:var(--pfe-theme--font-family, inherit);font-weight:var(--pfe-dropdown--FontWeight,400);line-height:var(--pfe-theme--line-height, 1.5);color:var(--pfe-dropdown--Color,var(--pfe-broadcasted--text,#3c3f42));background-color:var(--pfe-dropdown--BackgroundColor,transparent);border:var(--pfe-dropdown--Border,none);cursor:pointer}.pfe-dropdown__toggle::before{position:absolute;top:0;right:0;bottom:0;left:0;content:"";border-width:var(--pfe-dropdown__before--BorderWidth,var(--pfe-theme--ui--border-width,1px));border-style:var(--pfe-dropdown__before--BorderStyle,var(--pfe-theme--ui--border-style,solid));border-top-color:var(--pfe-dropdown__before--BorderTopColor,var(--pfe-theme--color--surface--lighter,#f0f0f0));border-right-color:var(--pfe-dropdown__before--BorderRightColor,var(--pfe-theme--color--surface--lighter,#f0f0f0));border-bottom-color:var(--pfe-dropdown__before--BorderBottomColor,var(--pfe-theme--color--surface--border--darker,#6a6e73));border-left-color:var(--pfe-dropdown__before--BorderLeftColor,var(--pfe-theme--color--surface--lighter,#f0f0f0))}.pfe-dropdown__toggle-text{overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.pfe-dropdown__toggle-icon{vertical-align:calc(var(--pfe-theme--container-spacer,1rem) * -.125);fill:currentColor;height:var(--pfe-theme--icon-size,1em);width:var(--pfe-dropdown__toggle-icon--Width);margin-right:calc(var(--pfe-theme--container-spacer,1rem) * .5);margin-left:var(--pfe-theme--container-spacer,1rem);line-height:var(--pfe-theme--line-height, 1.5)}.pfe-dropdown__menu{display:none;position:absolute;top:calc(100% + .25rem);z-index:var(--pfe-theme--zindex--overlay,90);padding:var(--pfe-dropdown__menu--spacing--vertical) var(--pfe-dropdown__menu--spacing--horizontal,0);margin:var(--pfe-dropdown__menu--Margin,0);background:var(--pfe-dropdown__menu--BackgroundColor,var(--pfe-theme--color--surface--lightest,#fff));background-clip:padding-box;border-width:var(--pfe-dropdown__menu--BorderWidth,var(--pfe-theme--ui--border-width,1px));border-style:var(--pfe-dropdown__menu--BorderStyle,var(--pfe-theme--ui--border-style,solid));border-color:var(--pfe-dropdown__menu--BorderColor,transparent);box-shadow:var(--pfe-dropdown__menu--BoxShadow,var(--pfe-theme--box-shadow--sm,0 .0625rem .125rem 0 rgba(3,3,3,.12),0 0 .125rem 0 rgba(3,3,3,.06) 0 .0625rem .125rem 0 rgba(3,3,3,.2)));list-style:none;box-sizing:border-box;min-width:var(--pfe-dropdown__menu--MinWidth,100%)}.pfe-dropdown__menu.open{display:block}`;
var h13 = w4;
var f10 = /* @__PURE__ */ __name(class extends n10 {
  constructor(e24) {
    super("change");
    this.action = e24;
  }
}, "f");
var r17 = /* @__PURE__ */ __name(class extends s4 {
  constructor() {
    super(...arguments);
    this.label = "Dropdown";
    this.disabled = false;
    this.expanded = false;
  }
  connectedCallback() {
    super.connectedCallback(), this.addEventListener("keydown", this._itemKeydownHandler), document.addEventListener("click", this._outsideClickHandler);
  }
  get pfeDropdownOptions() {
    return this.options;
  }
  set pfeDropdownOptions(e24) {
    this.options = e24;
  }
  render() {
    return y`<div class="pfe-dropdown__container" part="container"><button id="pfe-dropdown-toggle" class="pfe-dropdown__toggle" part="button" aria-haspopup="true" aria-controls="pfe-dropdown-menu" aria-expanded="${String(!!this.expanded)}" @click="${this.toggle}" @keydown="${this._toggleKeydownHandler}"><span class="pfe-dropdown__toggle-text">${this.label}</span> <svg class="pfe-dropdown__toggle-icon" viewBox="0 0 320 512" aria-hidden="true" role="img"><path d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"></path></svg></button><ul id="pfe-dropdown-menu" class="pfe-dropdown__menu ${o8({ open: this.expanded })}" part="menu" role="menu" aria-labelledby="pfe-dropdown-toggle"><slot></slot></ul></div>`;
  }
  disconnectedCallback() {
    super.disconnectedCallback(), this._allItems().forEach((e24) => {
      e24.removeEventListener("click", this._itemClickHandler);
    });
  }
  _init() {
    this.disabled || this._allItems().forEach((e24) => {
      e24.addEventListener("click", this._itemClickHandler);
    });
  }
  _optionsChanged(e24, t15) {
    this._modifyDOM(t15);
  }
  _disabledChanged() {
    this.setAttribute("aria-disabled", String(this.disabled)), this.disabled ? this.setAttribute("tabindex", "-1") : this.removeAttribute("tabindex");
  }
  _itemClickHandler(e24) {
    let t15 = e24.target.parentElement?.getAttribute("item-type") ?? void 0;
    return e24.target.parentElement instanceof t10 && this._selectItem(e24.target, t15), this;
  }
  async _itemKeydownHandler(e24) {
    let t15, o24 = e24.target instanceof HTMLElement ? e24.target.getAttribute("item-type") : void 0, n24 = this._allItems().findIndex((i22) => i22 === document.activeElement || i22.matches(":focus"));
    switch (e24.key) {
      case " ":
      case "Enter":
        e24.preventDefault(), e24.stopPropagation(), e24.target instanceof t10 && this._selectItem(e24.target, o24 ?? void 0);
        break;
      case "Escape":
        e24.preventDefault(), e24.stopPropagation(), this._focus(), await this.updateComplete, this.close();
        break;
      case "Tab":
        this.close();
        break;
      case "ArrowRight":
      case "ArrowDown":
        e24.preventDefault(), e24.stopPropagation(), t15 = this._itemContainer(this._nextItem(n24, 1));
        break;
      case "ArrowLeft":
      case "ArrowUp":
        t15 = this._itemContainer(this._nextItem(n24, -1));
        break;
      case "Home":
        t15 = this._firstItem();
        break;
      case "End":
        t15 = this._lastItem();
        break;
      default:
        break;
    }
    return t15 && (t15.setAttribute("tabindex", "-1"), t15.focus()), this;
  }
  _outsideClickHandler(e24) {
    e24.composedPath().includes(this) || this.close();
  }
  async _toggleKeydownHandler(e24) {
    switch (e24.key) {
      case " ":
      case "Enter":
      case "ArrowDown":
        if (e24.preventDefault(), e24.stopPropagation(), this._allDisabled())
          this.toggle();
        else if (!this.expanded) {
          this.open(), await this.updateComplete;
          let t15 = this._itemContainer(this._nextItem(-1, 1));
          t15?.setAttribute("tabindex", "-1"), t15?.focus();
        }
        break;
      case "Tab":
        this.close();
        break;
      default:
        break;
    }
    return this;
  }
  async _modifyDOM(e24, t15 = true) {
    t15 && (this.innerHTML = "");
    for (let o24 of e24)
      this.appendChild(this._createItem(o24));
  }
  _createItem(e24) {
    let t15 = document.createElement("pfe-dropdown-item");
    switch (t15.itemType = e24.type, e24.type) {
      case "link":
        {
          let o24 = document.createElement("a");
          o24.setAttribute("href", e24.href ? e24.href : "#"), o24.innerText = e24.text ?? "", t15.appendChild(o24), e24.disabled && (t15.disabled = true);
        }
        break;
      case "action":
        {
          let o24 = document.createElement("button");
          o24.innerText = e24.text ?? "", t15.appendChild(o24), e24.disabled && (t15.disabled = true);
        }
        break;
    }
    return t15;
  }
  _allItems() {
    let e24 = "pfe-dropdown-item:not([item-type='separator'])";
    return [...this.querySelectorAll(e24)];
  }
  _allDisabled() {
    return this._allItems().every((e24) => e24.disabled);
  }
  _nextItem(e24, t15) {
    let o24 = this._allItems(), n24 = (e24 + t15) % o24.length;
    n24 = n24 < 0 ? n24 + o24.length : n24;
    let i22 = o24[n24];
    for (; i22?.hasAttribute("disabled"); )
      n24 += t15, i22 = o24[n24 % o24.length];
    return i22;
  }
  _firstItem() {
    return this._allItems()[0];
  }
  _lastItem() {
    let e24 = this._allItems();
    return e24[e24.length - 1];
  }
  async _selectItem(e24, t15) {
    if (t15 === "action") {
      let o24 = e24.innerText;
      this.dispatchEvent(new f10(o24)), this.dispatchEvent(n12("pfe-dropdown:change", { action: o24 })), this.close(), await this.updateComplete, this._focus();
    } else
      e24.click();
  }
  _itemContainer(e24) {
    return e24.shadowRoot?.querySelector(".pfe-dropdown-item__container") ?? null;
  }
  _focus() {
    this.button?.focus();
  }
  addDropdownOptions(e24) {
    this._modifyDOM(e24, false);
  }
  open() {
    this.expanded = true;
  }
  close() {
    this.expanded = false;
  }
  toggle() {
    this.expanded = !this.expanded;
  }
}, "r");
r17.version = "2.0.0-next.2", r17.styles = [h13], r17.shadowRootOptions = { ...s4.shadowRootOptions, delegatesFocus: true }, a17([e5({ reflect: true })], r17.prototype, "label", 2), a17([p3, e5({ type: Boolean, reflect: true })], r17.prototype, "disabled", 2), a17([p3, e5({ type: Boolean, reflect: true })], r17.prototype, "expanded", 2), a17([p3], r17.prototype, "options", 2), a17([i4("#pfe-dropdown-toggle")], r17.prototype, "button", 2), a17([c6({ observe: false })], r17.prototype, "_init", 1), a17([o6], r17.prototype, "_itemClickHandler", 1), a17([o6], r17.prototype, "_itemKeydownHandler", 1), a17([o6], r17.prototype, "_outsideClickHandler", 1), a17([o6], r17.prototype, "_toggleKeydownHandler", 1), a17([o6], r17.prototype, "addDropdownOptions", 1), a17([o6], r17.prototype, "open", 1), a17([o6], r17.prototype, "close", 1), a17([o6], r17.prototype, "toggle", 1), r17 = a17([e4("pfe-dropdown"), d4()], r17);

// node_modules/@patternfly/pfe-health-index/pfe-health-index.js
init_lit();
init_decorators();
init_decorators2();
init_logger();
init_lit();
var x8 = Object.defineProperty;
var m18 = Object.getOwnPropertyDescriptor;
var h14 = /* @__PURE__ */ __name((a20, s23, i22, t15) => {
  for (var r21 = t15 > 1 ? void 0 : t15 ? m18(s23, i22) : s23, n24 = a20.length - 1, l23; n24 >= 0; n24--)
    (l23 = a20[n24]) && (r21 = (t15 ? l23(s23, i22, r21) : l23(r21)) || r21);
  return t15 && r21 && x8(s23, i22, r21), r21;
}, "h");
var v10 = i`:host{display:inline-flex;align-items:center}:host([hidden]){display:none}.box.a{--pfe-health-index--accent:#3f9c35;--pfe-health-index--accent--text:var(--pfe-theme--color--text--on-dark, #fff)}.box.b{--pfe-health-index--accent:#92d400;--pfe-health-index--accent--text:var(--pfe-theme--color--text--on-dark, #fff)}.box.c{--pfe-health-index--accent:#efaa00;--pfe-health-index--accent--text:var(--pfe-theme--color--text--on-dark, #fff)}.box.d{--pfe-health-index--accent:#ec7a08;--pfe-health-index--accent--text:var(--pfe-theme--color--text--on-dark, #fff)}.box.e{--pfe-health-index--accent:#cc0000;--pfe-health-index--accent--text:var(--pfe-theme--color--text--on-dark, #fff)}.box.f{--pfe-health-index--accent:#523333;--pfe-health-index--accent--text:var(--pfe-theme--color--text--on-dark, #fff)}:host(:not([size=lg]):not([size=mini])) .box{background-color:var(--pfe-theme--color--surface--lightest,#fff);width:calc(var(--pfe-theme--ui--element--size,20px)/ 2);height:var(--pfe-theme--ui--element--size,20px);border-right:var(--pfe-theme--ui--border-width,1px) var(--pfe-theme--ui--border-style,solid) var(--pfe-theme--color--surface--border,#d2d2d2)}:host(:not([size=lg]):not([size=mini])) .box:last-child{border-right:0}:host(:not([size=lg]):not([size=mini])) .box.active{background-color:var(--pfe-health-index--accent)}:host([size=mini]) .box{display:flex;width:var(--pfe-theme--ui--element--size,20px);height:var(--pfe-theme--ui--element--size,20px);justify-content:center;align-items:center;font-size:1em;border-radius:var(--pfe-theme--ui--border-radius,2px);background-color:var(--pfe-health-index--accent);color:var(--pfe-health-index--accent--text)}:host([size=lg]) .box{background-color:var(--pfe-theme--color--surface--lightest,#fff);color:var(--pfe-theme--color--ui-disabled--text,#6a6e73);border-top:calc(var(--pfe-theme--ui--border-width,1px) * 2) var(--pfe-theme--ui--border-style,solid) var(--pfe-theme--color--surface--border--lightest,#f5f5f5)}:host([size=lg]) .box:first-child{margin-left:0;border-left:calc(var(--pfe-theme--ui--border-width,1px) * 2) var(--pfe-theme--ui--border-style,solid) var(--pfe-theme--color--surface--border--lightest,#f5f5f5)}:host([size=lg]) .box.active:first-child{border-left:none}:host([size=lg]) .box:last-child{margin-right:0;border-right:calc(var(--pfe-theme--ui--border-width,1px) * 2) var(--pfe-theme--ui--border-style,solid) var(--pfe-theme--color--surface--border--lightest,#f5f5f5)}:host([size=lg]) .box.active:last-child{border-right:0}:host([size=lg]) .box>.bottom{height:.5em;margin:0 .5px}:host([size=lg]) .box .grade{padding:6px calc(var(--pfe-theme--ui--element--size,20px)/ 2)}:host([size=lg]) .box.active .grade{margin:calc(var(--pfe-theme--ui--border-width,1px) * -2) .5px 0 .5px;padding-top:.5em}:host([size=lg]) .box.active .grade,:host([size=lg]) .box>.bottom{background-color:var(--pfe-health-index--accent);color:var(--pfe-health-index--accent--text)}:host(:not([size=mini])) .box-container{display:flex}:host(:not([size=lg]):not([size=mini])) .box-container{border:var(--pfe-theme--ui--border-width,1px) var(--pfe-theme--ui--border-style,solid) var(--pfe-theme--color--surface--border,#d2d2d2);margin-left:calc(var(--pfe-theme--container-spacer,1rem) * .5)}:host([size=mini],[size=lg]) .box-container{border:none}:host([size=mini]) .box-container{margin:0}:host([size=lg]) .box-container{margin-left:0}`;
var f11 = v10;
var C4 = /^[^A-F]*[A-F][^A-F]*$/i;
var c14 = /* @__PURE__ */ __name((a20) => typeof a20 == "string" && !!a20.match(C4), "c");
var e17 = /* @__PURE__ */ __name(class extends s4 {
  constructor() {
    super();
    this.logger = new n6(this);
    this.size = null;
    this.textContent && !this.hasAttribute("health-index") && !c14(this.textContent) && this.logger.warn("a valid health-index was not provided. Please use A, B, C, D, E, or F"), this.healthIndex ?? (this.healthIndex = c14(this.textContent) ? this.textContent : "A");
  }
  render() {
    let i22 = (this.healthIndex ?? "").toLowerCase();
    return y`${this.size ? "" : y`<div id="healthIndex">${i22.toUpperCase()}</div>`}<div class="box-container" part="container">${this.size === "mini" ? y`<div class="box ${o8({ [i22]: true, active: true })}" part="box"><div class="grade" id="healthIndex">${i22.toUpperCase()}</div></div>` : e17.grades.map((t15) => y`<div class="box ${o8({ active: i22 === t15, [t15]: true })}">${this.size === "lg" ? y`<div class="grade">${t15.toUpperCase()}</div><div class="bottom"></div>` : y`<div class="box ${o8({ active: i22 === t15, [t15]: true })}" part="box"></div>`}</div>`)}</div>`;
  }
  updated() {
    this.healthIndex ? c14(this.healthIndex) ? this.textContent !== this.healthIndex.toUpperCase() && (this.textContent = this.healthIndex.toUpperCase()) : this.healthIndex = null : (this.logger.warn("a valid health-index was not provided. Please use A, B, C, D, E, or F"), this.textContent = "");
  }
}, "e");
e17.version = "2.0.0-next.2", e17.styles = [f11], e17.grades = ["a", "b", "c", "d", "e", "f"], h14([e5({ type: String, reflect: true, attribute: "health-index" })], e17.prototype, "healthIndex", 2), h14([e5({ reflect: true })], e17.prototype, "size", 2), e17 = h14([e4("pfe-health-index"), d4()], e17);

// components.ts
init_pfe_icon();

// node_modules/@patternfly/pfe-icon-panel/pfe-icon-panel.js
init_lit();
init_decorators();
init_decorators2();
init_pfe_icon();
init_lit();
var m19 = Object.defineProperty;
var f12 = Object.getOwnPropertyDescriptor;
var o19 = /* @__PURE__ */ __name((a20, r21, l23, i22) => {
  for (var t15 = i22 > 1 ? void 0 : i22 ? f12(r21, l23) : r21, c21 = a20.length - 1, p22; c21 >= 0; c21--)
    (p22 = a20[c21]) && (t15 = (i22 ? p22(r21, l23, t15) : p22(t15)) || t15);
  return i22 && t15 && m19(r21, l23, t15), t15;
}, "o");
var h15 = i`:host{display:flex;align-content:flex-start;align-items:flex-start;flex-direction:column;margin-top:calc(-1 * var(--pfe-theme--container-spacer,1rem));margin-right:calc(-1 * var(--pfe-theme--container-spacer,1rem))}@media (min-width:576px){:host{flex-direction:row}}:host([stacked]),:host([stacked]:not([stacked=false])){flex-direction:column}.pfe-icon-panel__content{margin-top:var(--pfe-theme--container-spacer,1rem);margin-left:0}@media (min-width:576px){.pfe-icon-panel__content{margin-top:0;margin-left:var(--pfe-theme--container-spacer,1rem)}}.pfe-icon-panel__footer{margin-top:var(--pfe-theme--content-spacer,1.5rem)}`;
var s17 = h15;
var e18 = /* @__PURE__ */ __name(class extends s4 {
  constructor() {
    super(...arguments);
    this.color = "darker";
    this.circled = false;
    this.stacked = false;
    this.centered = false;
  }
  render() {
    return y`<pfe-icon part="icon" ?circled="${this.circled}" color="${this.color}" size="${this.circled ? "lg" : "xl"}" icon="${l14(this.icon)}"></pfe-icon><div class="pfe-icon-panel__content" part="content"><slot class="pfe-icon-panel__header" name="header"></slot><slot class="pfe-icon-panel__header" name="pfe-icon-panel--header"></slot><slot class="pfe-icon-panel__body"></slot><slot class="pfe-icon-panel__footer" name="footer"></slot><slot class="pfe-icon-panel__footer" name="pfe-icon-panel--footer"></slot></div>`;
  }
}, "e");
e18.version = "2.0.0-next.2", e18.styles = [s17], o19([e5({ reflect: true })], e18.prototype, "icon", 2), o19([e5({ reflect: true })], e18.prototype, "color", 2), o19([e5({ reflect: true, type: Boolean })], e18.prototype, "circled", 2), o19([e5({ reflect: true, type: Boolean })], e18.prototype, "stacked", 2), o19([e5({ reflect: true, type: Boolean })], e18.prototype, "centered", 2), e18 = o19([e4("pfe-icon-panel"), d4()], e18);

// node_modules/@patternfly/pfe-jump-links/pfe-jump-links-nav.js
init_lit();

// node_modules/lit-html/directives/unsafe-html.js
init_lit_html();
init_directive();
var e19 = class extends i10 {
  constructor(i22) {
    if (super(i22), this.it = b, i22.type !== t5.CHILD)
      throw Error(this.constructor.directiveName + "() can only be used in child bindings");
  }
  render(r21) {
    if (r21 === b || null == r21)
      return this._t = void 0, this.it = r21;
    if (r21 === x)
      return r21;
    if ("string" != typeof r21)
      throw Error(this.constructor.directiveName + "() called with a non-string value");
    if (r21 === this.it)
      return this._t;
    this.it = r21;
    const s23 = [r21];
    return s23.raw = s23, this._t = { _$litType$: this.constructor.resultType, strings: s23, values: [] };
  }
};
__name(e19, "e");
e19.directiveName = "unsafeHTML", e19.resultType = 1;
var o20 = e8(e19);

// node_modules/@patternfly/pfe-jump-links/pfe-jump-links-nav.js
init_decorators();
init_core();
init_decorators2();
init_random();
init_deprecatedCustomEvent();
init_slot_controller();
init_logger();

// node_modules/@patternfly/pfe-jump-links/pfe-jump-links-panel.js
init_lit();
init_decorators();
init_core();
init_decorators2();
init_deprecatedCustomEvent();
init_logger();
var h16 = Object.defineProperty;
var u15 = Object.getOwnPropertyDescriptor;
var s18 = /* @__PURE__ */ __name((n24, a20, i22, r21) => {
  for (var e24 = r21 > 1 ? void 0 : r21 ? u15(a20, i22) : a20, o24 = n24.length - 1, l23; o24 >= 0; o24--)
    (l23 = n24[o24]) && (e24 = (r21 ? l23(a20, i22, e24) : l23(e24)) || e24);
  return r21 && e24 && h16(a20, i22, e24), e24;
}, "s");
var p14 = /* @__PURE__ */ __name(class extends n10 {
  constructor() {
    super("content-change");
  }
}, "p");
var t11 = /* @__PURE__ */ __name(class extends s4 {
  constructor() {
    super(...arguments);
    this.logger = new n6(this);
    this.spacers = false;
  }
  get sections() {
    return this.querySelectorAll(".pfe-jump-links-panel__section");
  }
  render() {
    return y`<slot></slot>`;
  }
  _isValidMarkup() {
    [...this.sections].length === 0 && this.logger.warn("This panel does not contain any headings labeled with the pfe-jump-links-panel__section class.", "Please add that class and an ID to any heading you would like surfaced in the jump links navigation.");
  }
  _spacersChanged() {
    !this.spacers || !this.sections || [...this.sections].length <= 0 || [...this.sections].forEach((i22) => {
      let r21 = i22.parentNode, e24 = i22.previousElementSibling;
      (!e24 || !e24.classList.contains("pfe-jump-links__section--spacer")) && (e24 = document.createElement("div"), e24.classList.add("pfe-jump-links__section--spacer"), r21?.insertBefore(e24, i22)), i22.id && (!e24.id || e24.id !== i22.id) && (e24.id = i22.id, i22.removeAttribute("id"), i22.setAttribute("data-target", e24.id)), e24.style.marginTop = "calc(-1 * (var(--pfe-navigation--Height--actual, 0px) + var(--pfe-jump-links--Height--actual, 0px)))", e24.style.height = "calc(var(--pfe-navigation--Height--actual, 0px) + var(--pfe-jump-links--Height--actual, 0px))";
    });
  }
  _init(i22) {
    t11.instances.add(this), i22 && (this.dispatchEvent(new p14()), this.dispatchEvent(n12("pfe-jump-links-panel:change"))), this._isValidMarkup(), this._spacersChanged();
  }
  disconnectedCallback() {
    super.disconnectedCallback(), t11.instances.delete(this);
  }
}, "t");
t11.version = "2.0.0-next.4", t11.instances = /* @__PURE__ */ new Set(), s18([e5({ type: Number })], t11.prototype, "offset", 2), s18([e5({ reflect: true })], t11.prototype, "scrolltarget", 2), s18([p3, e5({ type: Boolean, reflect: true })], t11.prototype, "spacers", 2), s18([o6], t11.prototype, "_isValidMarkup", 1), s18([o6], t11.prototype, "_spacersChanged", 1), s18([c6({ observe: { childList: true, subtree: true } })], t11.prototype, "_init", 1), t11 = s18([e4("pfe-jump-links-panel"), d4()], t11);

// node_modules/@patternfly/pfe-jump-links/pfe-jump-links-nav.js
init_lit();
init_pfe_accordion();
var T4 = Object.defineProperty;
var E3 = Object.getOwnPropertyDescriptor;
var n19 = /* @__PURE__ */ __name((p22, f18, e24, t15) => {
  for (var i22 = t15 > 1 ? void 0 : t15 ? E3(f18, e24) : f18, o24 = p22.length - 1, a20; o24 >= 0; o24--)
    (a20 = p22[o24]) && (i22 = (t15 ? a20(f18, e24, i22) : a20(i22)) || i22);
  return t15 && i22 && T4(f18, e24, i22), i22;
}, "n");
var j2 = i`slot[name=heading][sr-only]{position:absolute;overflow:hidden;clip:rect(0,0,0,0);height:1px;width:1px;margin:-1px;padding:0;border:0}slot[name=heading][sr-only]{position:absolute;overflow:hidden;clip:rect(0,0,0,0);height:1px;width:1px;margin:-1px;padding:0;border:0}:host{box-sizing:border-box;font-family:var(--pfe-theme--font-family, "Red Hat Text", "RedHatText", "Overpass", Overpass, Arial, sans-serif);font-weight:var(--pfe-theme--font-weight--normal,400);display:block;position:sticky;z-index:var(--pfe-theme--zindex--jumplinks,80);top:0;padding:0}@media (min-width:992px){:host([horizontal][color-palette=darkest]){background-color:var(--pfe-theme--color--surface--darkest,#151515);--context:var(--pfe-theme--color--surface--darkest--context, dark);--pfe-broadcasted--text:var(--pfe-theme--color--text--on-dark, #fff);--pfe-broadcasted--text--muted:var(--pfe-theme--color--text--muted--on-dark, #d2d2d2);--pfe-broadcasted--link:var(--pfe-theme--color--link--on-dark, #73bcf7);--pfe-broadcasted--link--hover:var(--pfe-theme--color--link--hover--on-dark, #bee1f4);--pfe-broadcasted--link--focus:var(--pfe-theme--color--link--focus--on-dark, #bee1f4);--pfe-broadcasted--link--visited:var(--pfe-theme--color--link--visited--on-dark, #bee1f4);--pfe-broadcasted--link-decoration:var(--pfe-theme--link-decoration--on-dark, none);--pfe-broadcasted--link-decoration--hover:var(--pfe-theme--link-decoration--hover--on-dark, underline);--pfe-broadcasted--link-decoration--focus:var(--pfe-theme--link-decoration--focus--on-dark, underline);--pfe-broadcasted--link-decoration--visited:var(--pfe-theme--link-decoration--visited--on-dark, none)}}@media (min-width:992px){:host([horizontal][color-palette=darker]){background-color:var(--pfe-theme--color--surface--darker,#3c3f42);--context:var(--pfe-theme--color--surface--darker--context, dark);--pfe-broadcasted--text:var(--pfe-theme--color--text--on-dark, #fff);--pfe-broadcasted--text--muted:var(--pfe-theme--color--text--muted--on-dark, #d2d2d2);--pfe-broadcasted--link:var(--pfe-theme--color--link--on-dark, #73bcf7);--pfe-broadcasted--link--hover:var(--pfe-theme--color--link--hover--on-dark, #bee1f4);--pfe-broadcasted--link--focus:var(--pfe-theme--color--link--focus--on-dark, #bee1f4);--pfe-broadcasted--link--visited:var(--pfe-theme--color--link--visited--on-dark, #bee1f4);--pfe-broadcasted--link-decoration:var(--pfe-theme--link-decoration--on-dark, none);--pfe-broadcasted--link-decoration--hover:var(--pfe-theme--link-decoration--hover--on-dark, underline);--pfe-broadcasted--link-decoration--focus:var(--pfe-theme--link-decoration--focus--on-dark, underline);--pfe-broadcasted--link-decoration--visited:var(--pfe-theme--link-decoration--visited--on-dark, none)}}@media (min-width:992px){:host([horizontal][color-palette=lightest]){background-color:var(--pfe-theme--color--surface--lightest,#fff);--context:var(--pfe-theme--color--surface--lightest--context, light);--pfe-broadcasted--text:var(--pfe-theme--color--text, #151515);--pfe-broadcasted--text--muted:var(--pfe-theme--color--text--muted, #6a6e73);--pfe-broadcasted--link:var(--pfe-theme--color--link, #06c);--pfe-broadcasted--link--hover:var(--pfe-theme--color--link--hover, #004080);--pfe-broadcasted--link--focus:var(--pfe-theme--color--link--focus, #004080);--pfe-broadcasted--link--visited:var(--pfe-theme--color--link--visited, #6753ac);--pfe-broadcasted--link-decoration:var(--pfe-theme--link-decoration, none);--pfe-broadcasted--link-decoration--hover:var(--pfe-theme--link-decoration--hover, underline);--pfe-broadcasted--link-decoration--focus:var(--pfe-theme--link-decoration--focus, underline);--pfe-broadcasted--link-decoration--visited:var(--pfe-theme--link-decoration--visited, none)}}@media (min-width:992px){:host([horizontal][color-palette=lighter]){background-color:var(--pfe-theme--color--surface--lighter,#f0f0f0);--context:var(--pfe-theme--color--surface--lighter--context, light);--pfe-broadcasted--text:var(--pfe-theme--color--text, #151515);--pfe-broadcasted--text--muted:var(--pfe-theme--color--text--muted, #6a6e73);--pfe-broadcasted--link:var(--pfe-theme--color--link, #06c);--pfe-broadcasted--link--hover:var(--pfe-theme--color--link--hover, #004080);--pfe-broadcasted--link--focus:var(--pfe-theme--color--link--focus, #004080);--pfe-broadcasted--link--visited:var(--pfe-theme--color--link--visited, #6753ac);--pfe-broadcasted--link-decoration:var(--pfe-theme--link-decoration, none);--pfe-broadcasted--link-decoration--hover:var(--pfe-theme--link-decoration--hover, underline);--pfe-broadcasted--link-decoration--focus:var(--pfe-theme--link-decoration--focus, underline);--pfe-broadcasted--link-decoration--visited:var(--pfe-theme--link-decoration--visited, none)}}:host([stuck][horizontal]){box-shadow:var(--pfe-theme--box-shadow--sm,0 .0625rem .125rem 0 rgba(3,3,3,.12),0 0 .125rem 0 rgba(3,3,3,.06) 0 .0625rem .125rem 0 rgba(3,3,3,.2))}.pfe-jump-links-nav__heading{margin-top:0;margin-bottom:var(--pfe-theme--content-spacer--body--sm,.5rem)}.pfe-jump-links-nav__heading h3,::slotted([slot=heading]){color:var(--pfe-broadcasted--text,#3c3f42);margin:0;font-size:var(--pfe-jump-links__heading--FontSize, var(--pf-global--FontSize--md, 1rem));font-weight:var(--pfe-theme--font-weight--normal,400);text-transform:var(--pfe-jump-links__heading--TextTransform,uppercase)}slot[name=logo]{display:none}slot[name=cta]{display:none}nav{visibility:visible;margin:0;list-style:none;padding:0}pfe-accordion-panel nav{width:100%}@media (min-width:992px){:host([horizontal][no-header]) nav{padding-top:1px;padding-bottom:0}}#container{padding:32px 0}pfe-accordion-panel #container{padding:24px 0}ul{padding:0;margin:0;border-left:var(--pfe-theme--surface--border-width,1px) var(--pfe-theme--surface--border-style,solid) var(--pfe-theme--color--ui-disabled,#d2d2d2)}li{display:block;position:relative;margin-left:calc(var(--pfe-theme--surface--border-width,1px) * -1)}.sub-nav li{margin-left:0}li[expand] ul{height:auto;flex:1}li[expand] .sub-nav{display:table;height:auto}li::before{position:absolute;content:"";top:0;left:0;height:calc(100% - 0px);width:calc(var(--pfe-theme--surface--border-width--heavy,4px) - 0px);background-color:transparent}li:not([active],[expand]):hover::before,li:not([expand]) li:hover::before{background-color:var(--pfe-theme--color--ui-disabled,#d2d2d2)}li[active]::before,li[expand]::before{background-color:var(--pfe-jump-links--accent,var(--pfe-jump-links--BorderColor,var(--pfe-theme--color--ui-accent,#06c)));z-index:2}a{position:relative;color:var(--pfe-theme--color--ui-disabled--text,#6a6e73);font-size:var(--pfe-jump-links--FontSize, var(--pf-global--FontSize--md, 1rem));text-decoration:none;line-height:var(--pfe-theme--line-height, 1.5);padding:calc(var(--pfe-jump-links__link--vertical-spacer,calc(var(--pfe-theme--content-spacer,1.5rem)/ 6)) * 2) calc(var(--pfe-jump-links__link--horizontal-spacer,calc(var(--pfe-theme--content-spacer,1.5rem)/ 3)) * 2)}a,a:focus+ul>li>a,li:hover a,li[expand] a{display:table}li>a:hover,li[active]>a{color:var(--pfe-broadcasted--text,#3c3f42)}.has-sub-section a{padding-bottom:var(--pfe-jump-links__link--vertical-spacer,calc(var(--pfe-theme--content-spacer,1.5rem)/ 6))}.sub-section a{margin-left:calc(var(--pfe-theme--container-spacer,1rem) * .75);font-size:var(--pfe-jump-links--FontSize, var(--pf-global--FontSize--md, 1rem));padding:var(--pfe-jump-links__link--vertical-spacer,calc(var(--pfe-theme--content-spacer,1.5rem)/ 6)) calc(var(--pfe-jump-links__link--horizontal-spacer,calc(var(--pfe-theme--content-spacer,1.5rem)/ 3)) * 2)}@media (min-width:992px){.sub-section a{display:none}}.sub-section a:last-child{padding-bottom:var(--pfe-jump-links__link--horizontal-spacer,calc(var(--pfe-theme--content-spacer,1.5rem)/ 3))}a:focus:focus-visible{outline:0;position:relative}a:focus:focus-visible::after{position:absolute;content:"";top:0;left:0;width:calc(100% + var(--pfe-theme--ui--border-width--active,3px));height:calc(100% + var(--pfe-theme--ui--border-width--active,3px));border-radius:var(--pfe-theme--ui--border-radius,2px);border:var(--pfe-theme--ui--border-width--md,2px) var(--pfe-theme--ui--border-style,solid) transparent}a:focus:focus-visible:focus::after{border-color:var(--pfe-theme--color--link,#06c)}a:focus:focus-visible:focus:not(:focus-visible)::after{border:unset}ul ul{margin:0;padding:0;overflow-y:hidden;transition:flex 1s linear}ul ul,ul ul li{border-left:none!important}pfe-accordion{border:var(--pfe-theme--surface--border-width,1px) var(--pfe-theme--surface--border-style,solid) var(--pfe-theme--color--ui-disabled,#d2d2d2);--context:light;--pfe-accordion--BackgroundColor:var(--pfe-theme--color--surface--lightest, #fff)}:host([color-palette=darkest]) pfe-accordion{--context:dark;--pfe-accordion--BackgroundColor:var(--pfe-theme--color--surface--darkest, #151515);--pfe-theme--color--ui-accent--on-dark:transparent}pfe-accordion,pfe-accordion-panel.animating,pfe-accordion-panel[expanded]{--pfe-accordion--accent:transparent;--pfe-accordion--BorderColor:transparent;--pfe-accordion--accent:transparent;--pfe-accordion--BorderTopWidth:0;--pfe-accordion--BorderBottomWidth:0;--pfe-accordion--panel-container--Padding:0 0 0 calc(var(--pfe-accordion__base--Padding,var(--pfe-theme--container-spacer,1rem)) * 1.5)}@media screen and (min-width:992px){:host([horizontal]){width:100%;background-color:var(--pfe-jump-links--BackgroundColor,var(--pfe-theme--color--surface--lightest,#fff));--context:var(--pfe-jump-links--context, var(--pfe-theme--color--surface--lightest--context, light));z-index:calc(var(--pfe-theme--zindex--jumplinks,80) + 1);border:none;padding:0}:host([horizontal]) .pfe-jump-links-nav__heading{flex-basis:100%;align-self:center;justify-content:center;display:block;margin:0;padding-bottom:var(--pfe-theme--container-padding,1rem);border-bottom:var(--pfe-theme--surface--border-width,1px) var(--pfe-theme--surface--border-style,solid) var(--pfe-theme--color--surface--border,#d2d2d2)}:host([horizontal]) .pfe-jump-links-nav__heading h3,:host([horizontal]) ::slotted([slot=heading]){text-align:var(--pfe-jump-links__heading--TextAlign,center)}:host([horizontal]) ::slotted([slot=logo]){position:absolute;max-height:calc(var(--pfe-theme--container-spacer,1rem) * 3.5);max-width:calc(var(--pfe-theme--container-spacer,1rem) * 14);top:var(--pfe-theme--container-spacer,1rem);left:calc(var(--pfe-theme--container-spacer,1rem) * 4)}:host([horizontal]) ::slotted([slot=cta]){position:absolute;top:calc(var(--pfe-theme--container-spacer,1rem) * 1);right:calc(var(--pfe-theme--container-spacer,1rem) * 4)}}@media screen and (min-width:992px){:host([horizontal]) nav{display:flex;flex-flow:row wrap;padding-top:32px;padding-bottom:8px;max-width:var(--pfe-jump-links--Width,calc(992px - (var(--pfe-jump-links--Padding--horizontal) * 4)))}}@media screen and (min-width:1200px){:host([horizontal]) nav{max-width:var(--pfe-jump-links--Width,calc(1200px - (var(--pfe-jump-links--Padding--horizontal) * 4)))}}@media screen and (min-width:992px){:host([horizontal]) #container{padding:0;flex-grow:1;display:flex;justify-items:center;flex-direction:column}:host([horizontal]) ul{border:none;text-align:center;flex-grow:1;display:flex;padding:0;width:auto;margin:0 auto}:host([horizontal]) li{margin-left:0;padding:0;display:flex;align-items:center;margin-top:calc(var(--pfe-theme--surface--border-width,1px) * -1)}:host([horizontal]) li::before{height:var(--pfe-theme--surface--border-width--heavy,4px);width:100%}:host([horizontal]) a{padding:16px;text-decoration:none;font-size:16px;color:var(--pfe-broadcasted--text--muted,)}:host([horizontal]) a:hover,:host([horizontal]) a[active]{color:var(--pfe-broadcasted--text,#3c3f42)}}:host([hidden]){display:none!important}:host([on=dark]) a{color:var(--pfe-theme--color--text--muted--on-dark,#d2d2d2)}:host([on=saturated]) a{color:var(--pfe-theme--color--text--muted--on-saturated,#d2d2d2)}`;
var w5 = j2;
function F4(p22) {
  return p22 instanceof HTMLAnchorElement;
}
__name(F4, "F");
function Q(p22) {
  return p22 instanceof Document || p22 instanceof ShadowRoot;
}
__name(Q, "Q");
var k6 = /* @__PURE__ */ __name(class extends n10 {
  constructor(e24) {
    super("stuck");
    this.stuck = e24;
  }
}, "k");
var x9 = /* @__PURE__ */ __name(class extends n10 {
  constructor(e24) {
    super("change");
    this.index = e24;
  }
}, "x");
var r18 = /* @__PURE__ */ __name(class extends s4 {
  constructor() {
    super(...arguments);
    this.logger = new n6(this);
    this.autobuild = false;
    this.horizontal = false;
    this.stuck = false;
    this.noHeader = false;
    this.srText = "Jump to section";
    this.accordionCollapseTiming = 750;
    this.containerInnerHTML = "";
    this.isBuilding = false;
    this.isVisible = false;
    this.shouldUpdateLightDOM = false;
    this._sections = null;
    this._clicked = false;
    this._observer = new MutationObserver(this._mutationHandler);
    this.css = new e12(this);
    this.slots = new l11(this, "heading", "logo", "cta");
    this.ariaMO = new MutationObserver((e24) => {
      for (let t15 of e24)
        for (let i22 of t15.addedNodes)
          (i22 instanceof HTMLOListElement || i22 instanceof HTMLUListElement) && i22.setAttribute("aria-labelledby", "heading");
    });
  }
  get isMobile() {
    if (this.mobileBreakpoint)
      return window.matchMedia(`(max-width: ${this.mobileBreakpoint})`).matches;
    let e24 = r18.breakpoint.lg.match(/([0-9]+)([a-z]*)/);
    return e24.length < 1 ? "991px" : window.matchMedia(`(max-width: ${parseInt(e24[1], 10) - 1}${e24[2]})`).matches;
  }
  get header() {
    let [e24] = this.slots.getSlotted("heading");
    return e24;
  }
  get cta() {
    let [e24] = this.slots.getSlotted("cta");
    return e24;
  }
  get logo() {
    let [e24] = this.slots.getSlotted("logo");
    return e24;
  }
  set panel(e24) {
    e24 && (this._panel = e24, this._panel.hasAttribute("scrolltarget") || this._panel.setAttribute("scrolltarget", this.id), this.dispatchEvent(new p14()), this.dispatchEvent(n12("pfe-jump-links-panel:change")));
  }
  get panel() {
    if (this._panel)
      return this._panel;
    if (this.id) {
      let i22 = this.getRootNode(), a20 = (Q(i22) ? i22 : document).querySelector(`[scrolltarget="${this.id}"],[pfe-c-scrolltarget="${this.id}"]`);
      if (a20)
        return a20;
    }
    let e24 = [...t11.instances], t15 = e24.filter((i22) => i22.getAttribute("scrolltarget") === this.id);
    return t15.length === 1 ? t15[0] : e24.length === 1 ? (this.id = n11(), e24[0].setAttribute("scrolltarget", this.id), e24[0]) : (e24.length > 1 ? this.logger.warn("Cannot locate which panel is connected to this navigation element.", this.id ? `Please add scrolltarget="${this.id}" to the appropriate panel.` : "") : this.logger.warn("Cannot locate any panels on this page. Please see documentation for connecting the navigation and panel."), null);
  }
  set sections(e24) {
    this._sections = e24, this.dispatchEvent(n12(""));
  }
  get sections() {
    if (this._sections)
      return this._sections;
    let { panel: e24 } = this;
    if (!e24 && this.autobuild)
      return null;
    if (!this.autobuild) {
      let t15 = [...this.querySelectorAll("ul > li > a[href]")];
      if (t15.length) {
        let i22 = t15.map((o24) => `[id="${o24.href.split("#").pop()}"]`);
        return e24?.querySelectorAll(i22.join(",")) || this.getRootNode().querySelectorAll(i22.join(","));
      } else
        return null;
    }
    return (e24?.querySelectorAll(".pfe-jump-links-panel__section") || e24?.shadowRoot?.querySelectorAll(".pfe-jump-links-panel__section") || e24?.querySelectorAll("[id]")) ?? null;
  }
  get links() {
    return [...this.container?.querySelectorAll("a") ?? []];
  }
  get items() {
    return [...this.shadowRoot?.querySelectorAll(".pfe-jump-links-nav__item") ?? []];
  }
  get offsetValue() {
    if (this.offset != null)
      return parseInt(this.offset.toString(), 10);
    let e24 = parseInt(this.css.getVariable("pfe-jump-links--offset") ?? "", 10);
    if (!Number.isNaN(e24) && e24 >= 0)
      return e24;
    let t15 = 0, i22 = parseInt(this.css.getVariable("pfe-navigation--Height--actual") ?? "", 10);
    if (!Number.isNaN(i22) && i22 > 0 && (t15 = i22), this.stuck && (this.isMobile || this.horizontal))
      return t15;
    let o24 = parseInt(this.css.getVariable("pfe-jump-links--Height--actual") ?? "", 10);
    return !Number.isNaN(o24) && o24 > 0 && (t15 = t15 + o24), t15;
  }
  connectedCallback() {
    super.connectedCallback(), r18.instances.add(this), this._attachListeners(), !this.autobuild && this._isValidLightDom() ? this.updateLightDOM() : this.autobuild && this.build(), this._observer.observe(this, { childList: true, subtree: true, characterData: true });
  }
  render() {
    let e24 = y`<nav part="nav">${this.isMobile ? "" : y`<header id="heading"><slot name="heading" class="pfe-jump-links-nav__heading" ?sr-only="${this.noHeader}"><h3>${this.srText || "Jump to section"}</h3></slot></header>`}${this.horizontal ? y`<slot name="logo" class="pfe-jump-links-nav__logo"></slot>` : ""}<div id="container" part="content">${o20(this.containerInnerHTML)}</div>${this.horizontal ? y`<slot name="cta" class="pfe-jump-links-nav__cta"></slot>` : ""}</nav>`;
    return this.isMobile ? y`<pfe-accordion><pfe-accordion-header id="heading"><slot name="heading" class="pfe-jump-links-nav__heading"><h3>${this.srText || "Jump to section"}</h3></slot></pfe-accordion-header><pfe-accordion-panel>${e24}</pfe-accordion-panel></pfe-accordion>` : e24;
  }
  firstUpdated() {
    this.container && this.ariaMO.observe(this.container, { childList: true }), this._scrollHandler();
    let e24 = this.querySelector("ul, ol");
    if (!e24)
      this.logger.warn("Navigation could not be built.");
    else {
      this._toShadowDOM(e24), this._updateOffset();
      let t15 = this._checkVisible(), i22 = this.getActive() ?? 0;
      t15 && this.active(i22);
    }
  }
  disconnectedCallback() {
    r18.instances.delete(this), super.disconnectedCallback(), this._detachListeners();
  }
  _attachListeners() {
    this.autobuild && document.addEventListener("", this._panelChangedHandler), window.addEventListener("resize", this._resizeHandler), window.addEventListener("scroll", this._scrollHandler, true), window.addEventListener("pfe-jump-links-nav:stuck", this._updateOffset);
  }
  _detachListeners() {
    this._observer.disconnect(), document.removeEventListener("pfe-jump-links-panel:change", this._panelChangedHandler), window.removeEventListener("resize", this._resizeHandler), window.removeEventListener("scroll", this._scrollHandler), window.removeEventListener("keyup", this._keyboardHandler), window.removeEventListener("pfe-jump-links-nav:stuck", this._updateOffset);
  }
  _buildItem(e24, t15 = false) {
    let i22 = document.createElement("li");
    i22.className = "pfe-jump-links-nav__item";
    let o24 = document.createElement("a");
    return o24.className = "pfe-jump-links-nav__link", o24.href = `#${e24.target}`, o24.setAttribute("data-target", e24.target), o24.innerHTML = e24.content ?? "", e24.subsection && i22.classList.add("has-sub-section"), t15 && i22.classList.add("sub-section"), i22.appendChild(o24), i22;
  }
  _buildWrapper(e24 = "pfe-jump-links-nav") {
    let t15 = document.createElement("ul");
    return t15.className = e24, t15;
  }
  _siblingJumpLinks(e24 = (t15) => t15 !== this) {
    return [...r18.instances].filter(e24);
  }
  _reportHeight() {
    let e24 = 0, t15 = this._siblingJumpLinks((o24) => o24.stuck && (o24.horizontal || o24.isMobile === true));
    t15.length > 0 && ({ height: e24 } = t15[t15.length - 1].getBoundingClientRect());
    let i22 = getComputedStyle(document.body).getPropertyValue("pfe-jump-links--Height--actual");
    (!i22 || parseInt(i22, 10) !== e24) && document.body.style.setProperty("pfe-jump-links--Height--actual", `${e24}px`);
  }
  _isValidLightDom() {
    let e24 = true;
    return !this.querySelector(":is(ul, ol)") && !this.autobuild && (this.logger.warn("\nThis component requires a list in the light DOM to .\nAlternatively, add the `autobuild` attribute to dynamically generate the list from the provided panel."), e24 = false), this.logo && !this.horizontal && this.logger.warn("The logo slot is NOT supported in vertical jump links."), this.cta && !this.horizontal && this.logger.warn("The link slot is NOT supported in vertical jump links."), e24;
  }
  _toShadowDOM(e24) {
    e24 && this.container && this.container?.innerHTML !== e24.outerHTML.toString() && (this.containerInnerHTML = e24.outerHTML.toString()), this.links.forEach((t15) => {
      t15.addEventListener("click", this._clickHandler);
    });
  }
  _checkVisible() {
    return this.isVisible = this.getBoundingClientRect().top <= document.documentElement.clientHeight && this.getBoundingClientRect().right >= 0 && this.getBoundingClientRect().bottom >= 0 && this.getBoundingClientRect().left <= document.documentElement.clientWidth, this.isVisible;
  }
  _updateOffset() {
    this._reportHeight();
    let e24 = this.horizontal ? 0 : 20;
    this.style.top = `${this.offsetValue + e24}px`;
  }
  _clickHandler(e24) {
    let t15 = e24.target;
    if (!F4(t15))
      return;
    let i22 = t15.closest(".pfe-jump-links-nav__item");
    if (this.active(i22), !this.sections)
      return;
    let o24 = [...this.sections].findIndex((a20) => a20.id === t15.hash.replace("#", ""));
    o24 < 0 || (e24.preventDefault(), this._clicked = true, history.replaceState({}, "", t15.href), this.scrollToSection(o24));
  }
  _stuckChanged(e24, t15) {
    e24 !== t15 && (this._reportHeight(), this.dispatchEvent(new k6(!!t15)), this.dispatchEvent(n12("pfe-jump-links-nav:stuck", { stuck: t15 })));
  }
  _scrollHandler() {
    this._clicked || (clearTimeout(this.scrollTimeout), this.scrollTimeout = window.setTimeout(() => {
      if (this._checkVisible(), !this.isVisible)
        return;
      this.stuck = this.getBoundingClientRect().top === this.offsetValue;
      let e24 = this.getActive() ?? -1;
      e24 >= 0 && e24 !== this.currentActive && (this.currentActive = e24, this.active(e24));
    }, 10));
  }
  _resizeHandler() {
    this.rebuild();
  }
  _mutationHandler() {
    this.autobuild || (this.shouldUpdateLightDOM = true, this.rebuild());
  }
  _panelChangedHandler() {
    !this.autobuild || (this.shouldUpdateLightDOM = true, this._sections = null, this.rebuild());
  }
  _keyboardHandler() {
  }
  scrollToSection(e24) {
    let t15 = this.sections?.[e24];
    if (!t15)
      return;
    let i22 = this.offsetValue;
    this.stuck = this.getBoundingClientRect().top === i22;
    let o24 = window.pageYOffset + t15.getBoundingClientRect().top;
    if (!t15.classList.contains("pfe-jump-links__section--spacer")) {
      o24 = o24 - i22;
      let l23 = 0;
      if (this.horizontal && ({ height: l23 } = this.getBoundingClientRect()), this.isMobile) {
        let c21 = this.shadowRoot?.querySelector("pfe-accordion-header");
        c21 && (l23 = c21.getBoundingClientRect().height - this.getBoundingClientRect().height);
      }
      l23 > 0 && (o24 = o24 - l23);
    }
    let a20 = 20;
    if (t15.hasAttribute("offset")) {
      let l23 = parseInt(t15.getAttribute("offset") ?? "", 10);
      Number.isNaN(l23) || (a20 = l23);
    } else
      this.panel && this.panel.offset && (a20 = this.panel.offset);
    o24 = o24 - a20, o24 < 0 && (o24 = 0), window.scroll({ top: o24, behavior: "smooth" }), this.closeAccordion(), this.stuck = this.getBoundingClientRect().top === i22, setTimeout(() => {
      t15.focus(), this._clicked = false;
    }, 1e3);
  }
  build(e24) {
    if (e24 ?? (e24 = this.sections), !e24)
      return;
    let t15 = [...e24];
    this.isBuilding = true;
    let i22, o24 = this._buildWrapper(), a20 = o24, l23 = a20;
    for (let c21 = 0; c21 < t15.length; c21++) {
      let d13 = t15[c21], u19 = d13.classList.contains("sub-section"), _7 = d13.classList.contains("has-sub-section"), { id: b12 } = d13;
      if (!b12) {
        let g12 = d13.previousElementSibling;
        g12 && g12.classList.contains("pfe-jump-links__section--spacer") && g12.id ? { id: b12 } = g12 : (d13.id = n11("pfe-jump-links--"), { id: b12 } = d13);
      }
      i22 = this._buildItem({ target: b12, content: d13.getAttribute("nav-label") || d13.textContent, subsection: _7 }, u19), a20.appendChild(i22), _7 && (l23 = a20, a20 = this._buildWrapper("sub-nav"), i22.appendChild(a20)), t15[c21 + 1] && !t15[c21 + 1].classList.contains("sub-section") && (a20 = l23 || o24);
    }
    this.isBuilding = false, this.innerHTML = "", this.appendChild(o24);
  }
  closeAccordion() {
    if (!this.isMobile)
      return;
    let e24 = this.shadowRoot?.querySelector("pfe-accordion");
    setTimeout(async function() {
      await customElements.whenDefined("pfe-accordion"), e24?.collapseAll();
    }, this.accordionCollapseTiming);
  }
  rebuild() {
    if (this.isBuilding)
      setTimeout(this.rebuild, 10);
    else {
      let e24 = this.shadowRoot?.querySelector("pfe-accordion");
      (this.isMobile && !e24 || !this.isMobile && e24) && this.render();
      let t15;
      this.autobuild && this.shouldUpdateLightDOM ? t15 = this.build() : t15 = this.querySelector("ul"), t15 && this.container && this.container?.innerHTML !== t15.outerHTML.toString() && (this.container.innerHTML = t15.outerHTML.toString()), this._updateOffset(), this.active(this.getActive()), this.items.forEach((i22) => {
        i22.querySelector("a")?.addEventListener("click", this._clickHandler);
      });
    }
    this.shouldUpdateLightDOM = false;
  }
  active(e24) {
    let { items: t15 } = this, i22 = typeof e24 == "number" ? e24 : t15.findIndex((a20) => a20 === e24);
    if (i22 < 0 || i22 >= t15.length || !t15[i22])
      return;
    this.clearActive(), this.currentActive = i22;
    let o24 = t15[i22].closest("li");
    if (o24) {
      let a20 = o24.closest("ul")?.closest("li"), l23 = o24.classList.contains("sub-section"), c21 = o24.classList.contains("has-sub-section");
      o24.setAttribute("active", ""), c21 ? o24.setAttribute("expand", "") : l23 && a20?.setAttribute("expand", "");
    }
    this.dispatchEvent(new x9(i22)), this.dispatchEvent(n12("pfe-jump-links-panel:active-navItem", { activeNavItem: i22 }));
  }
  getActive() {
    if (!this.sections)
      return;
    let e24 = [...this.sections], t15 = this.offsetValue, i22 = e24.filter((o24, a20) => {
      let l23 = window.innerHeight || document.documentElement.clientHeight, c21 = e24[a20 + 1], d13 = c21 ? c21.getBoundingClientRect().top : 0, u19 = o24.getBoundingClientRect().top;
      return u19 >= 0 && u19 <= l23 && (!c21 || d13 >= t15 && t15 - u19 < d13 - t15);
    });
    if (!(!i22 || i22.length === 0))
      return e24.indexOf(i22[0]);
  }
  inactive(e24) {
    let { items: t15 } = this, i22 = typeof e24 == "number" ? e24 : t15.findIndex((d13) => d13 === e24);
    if (i22 < 0 || i22 >= t15.length || !t15[i22])
      return;
    let o24 = t15[i22].closest("li"), a20 = o24?.closest("ul")?.closest("li"), l23 = o24?.classList.contains("sub-section"), c21 = o24?.classList.contains("has-sub-section");
    o24?.removeAttribute("active"), c21 ? o24?.removeAttribute("expand") : l23 && a20?.removeAttribute("expand");
  }
  clearActive() {
    let { items: e24 } = this;
    e24.forEach((t15) => this.inactive(t15));
  }
  updateItem(e24, t15 = false) {
    e24.classList.add("pfe-jump-links-nav__item", ...t15 ? ["sub-section"] : []), e24.querySelector("a")?.classList.add("pfe-jump-links-nav__link");
    let o24 = e24.querySelector("ul");
    o24 && (e24.classList.add("has-sub-section"), o24.querySelectorAll(":scope > li").forEach((a20) => this.updateItem(a20, true)));
  }
  updateLightDOM() {
    let e24 = this.querySelector("ul");
    e24 && (e24.classList.add("pfe-jump-links-nav"), e24.querySelectorAll(":scope > li").forEach((t15) => this.updateItem(t15)));
  }
}, "r");
r18.version = "2.0.0-next.4", r18.styles = [w5], r18.breakpoint = Object.freeze({ xs: "0px", sm: "576px", md: "768px", lg: "992px", xl: "1200px", "2xl": "1450px" }), r18.instances = /* @__PURE__ */ new Set(), n19([e5({ type: Boolean, reflect: true })], r18.prototype, "autobuild", 2), n19([e5({ type: Boolean, reflect: true })], r18.prototype, "horizontal", 2), n19([p3, e5({ type: Boolean, reflect: true })], r18.prototype, "stuck", 2), n19([e5({ type: Boolean, reflect: true, attribute: "no-header" })], r18.prototype, "noHeader", 2), n19([e5({ type: String, reflect: true, attribute: "sr-text" })], r18.prototype, "srText", 2), n19([c5(), e5({ reflect: true, attribute: "color-palette" })], r18.prototype, "colorPalette", 2), n19([d3({ alias: "colorPalette", attribute: "color" })], r18.prototype, "color", 2), n19([x2(), e5({ reflect: true })], r18.prototype, "on", 2), n19([e5({ type: Number, reflect: true })], r18.prototype, "offset", 2), n19([e5({ type: String, reflect: true, attribute: "mobile-breakpoint" })], r18.prototype, "mobileBreakpoint", 2), n19([e5({ type: Number, reflect: true, attribute: "accordion-collapse-timing" })], r18.prototype, "accordionCollapseTiming", 2), n19([i4("#container")], r18.prototype, "container", 2), n19([t3()], r18.prototype, "containerInnerHTML", 2), n19([o6], r18.prototype, "_attachListeners", 1), n19([o6], r18.prototype, "_detachListeners", 1), n19([o6], r18.prototype, "_buildItem", 1), n19([o6], r18.prototype, "_buildWrapper", 1), n19([o6], r18.prototype, "_siblingJumpLinks", 1), n19([o6], r18.prototype, "_reportHeight", 1), n19([o6], r18.prototype, "_isValidLightDom", 1), n19([o6], r18.prototype, "_toShadowDOM", 1), n19([o6], r18.prototype, "_checkVisible", 1), n19([o6], r18.prototype, "_updateOffset", 1), n19([o6], r18.prototype, "_clickHandler", 1), n19([o6], r18.prototype, "_stuckChanged", 1), n19([o6], r18.prototype, "_scrollHandler", 1), n19([o6], r18.prototype, "_resizeHandler", 1), n19([o6], r18.prototype, "_mutationHandler", 1), n19([o6], r18.prototype, "_panelChangedHandler", 1), n19([o6], r18.prototype, "scrollToSection", 1), n19([o6], r18.prototype, "build", 1), n19([o6], r18.prototype, "closeAccordion", 1), n19([o6], r18.prototype, "rebuild", 1), n19([o6], r18.prototype, "active", 1), n19([o6], r18.prototype, "getActive", 1), n19([o6], r18.prototype, "inactive", 1), n19([o6], r18.prototype, "clearActive", 1), n19([o6], r18.prototype, "updateItem", 1), n19([o6], r18.prototype, "updateLightDOM", 1), r18 = n19([e4("pfe-jump-links-nav"), d4()], r18);

// node_modules/@patternfly/pfe-jump-links/pfe-jump-links.js
init_decorators2();
init_decorators();
var s19 = Object.defineProperty;
var x10 = Object.getOwnPropertyDescriptor;
var n20 = /* @__PURE__ */ __name((t15, o24, p22, m24) => {
  for (var e24 = m24 > 1 ? void 0 : m24 ? x10(o24, p22) : o24, f18 = t15.length - 1, l23; f18 >= 0; f18--)
    (l23 = t15[f18]) && (e24 = (m24 ? l23(o24, p22, e24) : l23(e24)) || e24);
  return m24 && e24 && s19(o24, p22, e24), e24;
}, "n");
var r19 = /* @__PURE__ */ __name(class extends r18 {
}, "r");
r19 = n20([e4("pfe-jump-links"), d4()], r19);

// node_modules/@patternfly/pfe-markdown/pfe-markdown.js
init_lit();
init_decorators2();
init_decorators();

// node_modules/marked/lib/marked.esm.js
function getDefaults() {
  return {
    baseUrl: null,
    breaks: false,
    extensions: null,
    gfm: true,
    headerIds: true,
    headerPrefix: "",
    highlight: null,
    langPrefix: "language-",
    mangle: true,
    pedantic: false,
    renderer: null,
    sanitize: false,
    sanitizer: null,
    silent: false,
    smartLists: false,
    smartypants: false,
    tokenizer: null,
    walkTokens: null,
    xhtml: false
  };
}
__name(getDefaults, "getDefaults");
var defaults = getDefaults();
function changeDefaults(newDefaults) {
  defaults = newDefaults;
}
__name(changeDefaults, "changeDefaults");
var escapeTest = /[&<>"']/;
var escapeReplace = /[&<>"']/g;
var escapeTestNoEncode = /[<>"']|&(?!#?\w+;)/;
var escapeReplaceNoEncode = /[<>"']|&(?!#?\w+;)/g;
var escapeReplacements = {
  "&": "&amp;",
  "<": "&lt;",
  ">": "&gt;",
  '"': "&quot;",
  "'": "&#39;"
};
var getEscapeReplacement = /* @__PURE__ */ __name((ch) => escapeReplacements[ch], "getEscapeReplacement");
function escape2(html, encode) {
  if (encode) {
    if (escapeTest.test(html)) {
      return html.replace(escapeReplace, getEscapeReplacement);
    }
  } else {
    if (escapeTestNoEncode.test(html)) {
      return html.replace(escapeReplaceNoEncode, getEscapeReplacement);
    }
  }
  return html;
}
__name(escape2, "escape");
var unescapeTest = /&(#(?:\d+)|(?:#x[0-9A-Fa-f]+)|(?:\w+));?/ig;
function unescape(html) {
  return html.replace(unescapeTest, (_7, n24) => {
    n24 = n24.toLowerCase();
    if (n24 === "colon")
      return ":";
    if (n24.charAt(0) === "#") {
      return n24.charAt(1) === "x" ? String.fromCharCode(parseInt(n24.substring(2), 16)) : String.fromCharCode(+n24.substring(1));
    }
    return "";
  });
}
__name(unescape, "unescape");
var caret = /(^|[^\[])\^/g;
function edit(regex, opt) {
  regex = regex.source || regex;
  opt = opt || "";
  const obj = {
    replace: (name, val) => {
      val = val.source || val;
      val = val.replace(caret, "$1");
      regex = regex.replace(name, val);
      return obj;
    },
    getRegex: () => {
      return new RegExp(regex, opt);
    }
  };
  return obj;
}
__name(edit, "edit");
var nonWordAndColonTest = /[^\w:]/g;
var originIndependentUrl = /^$|^[a-z][a-z0-9+.-]*:|^[?#]/i;
function cleanUrl(sanitize, base, href) {
  if (sanitize) {
    let prot;
    try {
      prot = decodeURIComponent(unescape(href)).replace(nonWordAndColonTest, "").toLowerCase();
    } catch (e24) {
      return null;
    }
    if (prot.indexOf("javascript:") === 0 || prot.indexOf("vbscript:") === 0 || prot.indexOf("data:") === 0) {
      return null;
    }
  }
  if (base && !originIndependentUrl.test(href)) {
    href = resolveUrl(base, href);
  }
  try {
    href = encodeURI(href).replace(/%25/g, "%");
  } catch (e24) {
    return null;
  }
  return href;
}
__name(cleanUrl, "cleanUrl");
var baseUrls = {};
var justDomain = /^[^:]+:\/*[^/]*$/;
var protocol = /^([^:]+:)[\s\S]*$/;
var domain = /^([^:]+:\/*[^/]*)[\s\S]*$/;
function resolveUrl(base, href) {
  if (!baseUrls[" " + base]) {
    if (justDomain.test(base)) {
      baseUrls[" " + base] = base + "/";
    } else {
      baseUrls[" " + base] = rtrim(base, "/", true);
    }
  }
  base = baseUrls[" " + base];
  const relativeBase = base.indexOf(":") === -1;
  if (href.substring(0, 2) === "//") {
    if (relativeBase) {
      return href;
    }
    return base.replace(protocol, "$1") + href;
  } else if (href.charAt(0) === "/") {
    if (relativeBase) {
      return href;
    }
    return base.replace(domain, "$1") + href;
  } else {
    return base + href;
  }
}
__name(resolveUrl, "resolveUrl");
var noopTest = { exec: /* @__PURE__ */ __name(function noopTest2() {
}, "noopTest") };
function merge(obj) {
  let i22 = 1, target, key;
  for (; i22 < arguments.length; i22++) {
    target = arguments[i22];
    for (key in target) {
      if (Object.prototype.hasOwnProperty.call(target, key)) {
        obj[key] = target[key];
      }
    }
  }
  return obj;
}
__name(merge, "merge");
function splitCells(tableRow, count) {
  const row = tableRow.replace(/\|/g, (match, offset2, str) => {
    let escaped = false, curr = offset2;
    while (--curr >= 0 && str[curr] === "\\")
      escaped = !escaped;
    if (escaped) {
      return "|";
    } else {
      return " |";
    }
  }), cells = row.split(/ \|/);
  let i22 = 0;
  if (!cells[0].trim()) {
    cells.shift();
  }
  if (cells.length > 0 && !cells[cells.length - 1].trim()) {
    cells.pop();
  }
  if (cells.length > count) {
    cells.splice(count);
  } else {
    while (cells.length < count)
      cells.push("");
  }
  for (; i22 < cells.length; i22++) {
    cells[i22] = cells[i22].trim().replace(/\\\|/g, "|");
  }
  return cells;
}
__name(splitCells, "splitCells");
function rtrim(str, c21, invert) {
  const l23 = str.length;
  if (l23 === 0) {
    return "";
  }
  let suffLen = 0;
  while (suffLen < l23) {
    const currChar = str.charAt(l23 - suffLen - 1);
    if (currChar === c21 && !invert) {
      suffLen++;
    } else if (currChar !== c21 && invert) {
      suffLen++;
    } else {
      break;
    }
  }
  return str.substr(0, l23 - suffLen);
}
__name(rtrim, "rtrim");
function findClosingBracket(str, b12) {
  if (str.indexOf(b12[1]) === -1) {
    return -1;
  }
  const l23 = str.length;
  let level = 0, i22 = 0;
  for (; i22 < l23; i22++) {
    if (str[i22] === "\\") {
      i22++;
    } else if (str[i22] === b12[0]) {
      level++;
    } else if (str[i22] === b12[1]) {
      level--;
      if (level < 0) {
        return i22;
      }
    }
  }
  return -1;
}
__name(findClosingBracket, "findClosingBracket");
function checkSanitizeDeprecation(opt) {
  if (opt && opt.sanitize && !opt.silent) {
    console.warn("marked(): sanitize and sanitizer parameters are deprecated since version 0.7.0, should not be used and will be removed in the future. Read more here: https://marked.js.org/#/USING_ADVANCED.md#options");
  }
}
__name(checkSanitizeDeprecation, "checkSanitizeDeprecation");
function repeatString(pattern, count) {
  if (count < 1) {
    return "";
  }
  let result = "";
  while (count > 1) {
    if (count & 1) {
      result += pattern;
    }
    count >>= 1;
    pattern += pattern;
  }
  return result + pattern;
}
__name(repeatString, "repeatString");
function outputLink(cap, link, raw, lexer2) {
  const href = link.href;
  const title = link.title ? escape2(link.title) : null;
  const text = cap[1].replace(/\\([\[\]])/g, "$1");
  if (cap[0].charAt(0) !== "!") {
    lexer2.state.inLink = true;
    const token = {
      type: "link",
      raw,
      href,
      title,
      text,
      tokens: lexer2.inlineTokens(text, [])
    };
    lexer2.state.inLink = false;
    return token;
  } else {
    return {
      type: "image",
      raw,
      href,
      title,
      text: escape2(text)
    };
  }
}
__name(outputLink, "outputLink");
function indentCodeCompensation(raw, text) {
  const matchIndentToCode = raw.match(/^(\s+)(?:```)/);
  if (matchIndentToCode === null) {
    return text;
  }
  const indentToCode = matchIndentToCode[1];
  return text.split("\n").map((node) => {
    const matchIndentInNode = node.match(/^\s+/);
    if (matchIndentInNode === null) {
      return node;
    }
    const [indentInNode] = matchIndentInNode;
    if (indentInNode.length >= indentToCode.length) {
      return node.slice(indentToCode.length);
    }
    return node;
  }).join("\n");
}
__name(indentCodeCompensation, "indentCodeCompensation");
var Tokenizer = class {
  constructor(options3) {
    this.options = options3 || defaults;
  }
  space(src) {
    const cap = this.rules.block.newline.exec(src);
    if (cap && cap[0].length > 0) {
      return {
        type: "space",
        raw: cap[0]
      };
    }
  }
  code(src) {
    const cap = this.rules.block.code.exec(src);
    if (cap) {
      const text = cap[0].replace(/^ {1,4}/gm, "");
      return {
        type: "code",
        raw: cap[0],
        codeBlockStyle: "indented",
        text: !this.options.pedantic ? rtrim(text, "\n") : text
      };
    }
  }
  fences(src) {
    const cap = this.rules.block.fences.exec(src);
    if (cap) {
      const raw = cap[0];
      const text = indentCodeCompensation(raw, cap[3] || "");
      return {
        type: "code",
        raw,
        lang: cap[2] ? cap[2].trim() : cap[2],
        text
      };
    }
  }
  heading(src) {
    const cap = this.rules.block.heading.exec(src);
    if (cap) {
      let text = cap[2].trim();
      if (/#$/.test(text)) {
        const trimmed = rtrim(text, "#");
        if (this.options.pedantic) {
          text = trimmed.trim();
        } else if (!trimmed || / $/.test(trimmed)) {
          text = trimmed.trim();
        }
      }
      const token = {
        type: "heading",
        raw: cap[0],
        depth: cap[1].length,
        text,
        tokens: []
      };
      this.lexer.inline(token.text, token.tokens);
      return token;
    }
  }
  hr(src) {
    const cap = this.rules.block.hr.exec(src);
    if (cap) {
      return {
        type: "hr",
        raw: cap[0]
      };
    }
  }
  blockquote(src) {
    const cap = this.rules.block.blockquote.exec(src);
    if (cap) {
      const text = cap[0].replace(/^ *> ?/gm, "");
      return {
        type: "blockquote",
        raw: cap[0],
        tokens: this.lexer.blockTokens(text, []),
        text
      };
    }
  }
  list(src) {
    let cap = this.rules.block.list.exec(src);
    if (cap) {
      let raw, istask, ischecked, indent, i22, blankLine, endsWithBlankLine, line, nextLine, rawLine, itemContents, endEarly;
      let bull = cap[1].trim();
      const isordered = bull.length > 1;
      const list = {
        type: "list",
        raw: "",
        ordered: isordered,
        start: isordered ? +bull.slice(0, -1) : "",
        loose: false,
        items: []
      };
      bull = isordered ? `\\d{1,9}\\${bull.slice(-1)}` : `\\${bull}`;
      if (this.options.pedantic) {
        bull = isordered ? bull : "[*+-]";
      }
      const itemRegex = new RegExp(`^( {0,3}${bull})((?: [^\\n]*)?(?:\\n|$))`);
      while (src) {
        endEarly = false;
        if (!(cap = itemRegex.exec(src))) {
          break;
        }
        if (this.rules.block.hr.test(src)) {
          break;
        }
        raw = cap[0];
        src = src.substring(raw.length);
        line = cap[2].split("\n", 1)[0];
        nextLine = src.split("\n", 1)[0];
        if (this.options.pedantic) {
          indent = 2;
          itemContents = line.trimLeft();
        } else {
          indent = cap[2].search(/[^ ]/);
          indent = indent > 4 ? 1 : indent;
          itemContents = line.slice(indent);
          indent += cap[1].length;
        }
        blankLine = false;
        if (!line && /^ *$/.test(nextLine)) {
          raw += nextLine + "\n";
          src = src.substring(nextLine.length + 1);
          endEarly = true;
        }
        if (!endEarly) {
          const nextBulletRegex = new RegExp(`^ {0,${Math.min(3, indent - 1)}}(?:[*+-]|\\d{1,9}[.)])`);
          while (src) {
            rawLine = src.split("\n", 1)[0];
            line = rawLine;
            if (this.options.pedantic) {
              line = line.replace(/^ {1,4}(?=( {4})*[^ ])/g, "  ");
            }
            if (nextBulletRegex.test(line)) {
              break;
            }
            if (line.search(/[^ ]/) >= indent || !line.trim()) {
              itemContents += "\n" + line.slice(indent);
            } else if (!blankLine) {
              itemContents += "\n" + line;
            } else {
              break;
            }
            if (!blankLine && !line.trim()) {
              blankLine = true;
            }
            raw += rawLine + "\n";
            src = src.substring(rawLine.length + 1);
          }
        }
        if (!list.loose) {
          if (endsWithBlankLine) {
            list.loose = true;
          } else if (/\n *\n *$/.test(raw)) {
            endsWithBlankLine = true;
          }
        }
        if (this.options.gfm) {
          istask = /^\[[ xX]\] /.exec(itemContents);
          if (istask) {
            ischecked = istask[0] !== "[ ] ";
            itemContents = itemContents.replace(/^\[[ xX]\] +/, "");
          }
        }
        list.items.push({
          type: "list_item",
          raw,
          task: !!istask,
          checked: ischecked,
          loose: false,
          text: itemContents
        });
        list.raw += raw;
      }
      list.items[list.items.length - 1].raw = raw.trimRight();
      list.items[list.items.length - 1].text = itemContents.trimRight();
      list.raw = list.raw.trimRight();
      const l23 = list.items.length;
      for (i22 = 0; i22 < l23; i22++) {
        this.lexer.state.top = false;
        list.items[i22].tokens = this.lexer.blockTokens(list.items[i22].text, []);
        const spacers = list.items[i22].tokens.filter((t15) => t15.type === "space");
        const hasMultipleLineBreaks = spacers.every((t15) => {
          const chars = t15.raw.split("");
          let lineBreaks = 0;
          for (const char of chars) {
            if (char === "\n") {
              lineBreaks += 1;
            }
            if (lineBreaks > 1) {
              return true;
            }
          }
          return false;
        });
        if (!list.loose && spacers.length && hasMultipleLineBreaks) {
          list.loose = true;
          list.items[i22].loose = true;
        }
      }
      return list;
    }
  }
  html(src) {
    const cap = this.rules.block.html.exec(src);
    if (cap) {
      const token = {
        type: "html",
        raw: cap[0],
        pre: !this.options.sanitizer && (cap[1] === "pre" || cap[1] === "script" || cap[1] === "style"),
        text: cap[0]
      };
      if (this.options.sanitize) {
        token.type = "paragraph";
        token.text = this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape2(cap[0]);
        token.tokens = [];
        this.lexer.inline(token.text, token.tokens);
      }
      return token;
    }
  }
  def(src) {
    const cap = this.rules.block.def.exec(src);
    if (cap) {
      if (cap[3])
        cap[3] = cap[3].substring(1, cap[3].length - 1);
      const tag2 = cap[1].toLowerCase().replace(/\s+/g, " ");
      return {
        type: "def",
        tag: tag2,
        raw: cap[0],
        href: cap[2],
        title: cap[3]
      };
    }
  }
  table(src) {
    const cap = this.rules.block.table.exec(src);
    if (cap) {
      const item = {
        type: "table",
        header: splitCells(cap[1]).map((c21) => {
          return { text: c21 };
        }),
        align: cap[2].replace(/^ *|\| *$/g, "").split(/ *\| */),
        rows: cap[3] && cap[3].trim() ? cap[3].replace(/\n[ \t]*$/, "").split("\n") : []
      };
      if (item.header.length === item.align.length) {
        item.raw = cap[0];
        let l23 = item.align.length;
        let i22, j3, k7, row;
        for (i22 = 0; i22 < l23; i22++) {
          if (/^ *-+: *$/.test(item.align[i22])) {
            item.align[i22] = "right";
          } else if (/^ *:-+: *$/.test(item.align[i22])) {
            item.align[i22] = "center";
          } else if (/^ *:-+ *$/.test(item.align[i22])) {
            item.align[i22] = "left";
          } else {
            item.align[i22] = null;
          }
        }
        l23 = item.rows.length;
        for (i22 = 0; i22 < l23; i22++) {
          item.rows[i22] = splitCells(item.rows[i22], item.header.length).map((c21) => {
            return { text: c21 };
          });
        }
        l23 = item.header.length;
        for (j3 = 0; j3 < l23; j3++) {
          item.header[j3].tokens = [];
          this.lexer.inlineTokens(item.header[j3].text, item.header[j3].tokens);
        }
        l23 = item.rows.length;
        for (j3 = 0; j3 < l23; j3++) {
          row = item.rows[j3];
          for (k7 = 0; k7 < row.length; k7++) {
            row[k7].tokens = [];
            this.lexer.inlineTokens(row[k7].text, row[k7].tokens);
          }
        }
        return item;
      }
    }
  }
  lheading(src) {
    const cap = this.rules.block.lheading.exec(src);
    if (cap) {
      const token = {
        type: "heading",
        raw: cap[0],
        depth: cap[2].charAt(0) === "=" ? 1 : 2,
        text: cap[1],
        tokens: []
      };
      this.lexer.inline(token.text, token.tokens);
      return token;
    }
  }
  paragraph(src) {
    const cap = this.rules.block.paragraph.exec(src);
    if (cap) {
      const token = {
        type: "paragraph",
        raw: cap[0],
        text: cap[1].charAt(cap[1].length - 1) === "\n" ? cap[1].slice(0, -1) : cap[1],
        tokens: []
      };
      this.lexer.inline(token.text, token.tokens);
      return token;
    }
  }
  text(src) {
    const cap = this.rules.block.text.exec(src);
    if (cap) {
      const token = {
        type: "text",
        raw: cap[0],
        text: cap[0],
        tokens: []
      };
      this.lexer.inline(token.text, token.tokens);
      return token;
    }
  }
  escape(src) {
    const cap = this.rules.inline.escape.exec(src);
    if (cap) {
      return {
        type: "escape",
        raw: cap[0],
        text: escape2(cap[1])
      };
    }
  }
  tag(src) {
    const cap = this.rules.inline.tag.exec(src);
    if (cap) {
      if (!this.lexer.state.inLink && /^<a /i.test(cap[0])) {
        this.lexer.state.inLink = true;
      } else if (this.lexer.state.inLink && /^<\/a>/i.test(cap[0])) {
        this.lexer.state.inLink = false;
      }
      if (!this.lexer.state.inRawBlock && /^<(pre|code|kbd|script)(\s|>)/i.test(cap[0])) {
        this.lexer.state.inRawBlock = true;
      } else if (this.lexer.state.inRawBlock && /^<\/(pre|code|kbd|script)(\s|>)/i.test(cap[0])) {
        this.lexer.state.inRawBlock = false;
      }
      return {
        type: this.options.sanitize ? "text" : "html",
        raw: cap[0],
        inLink: this.lexer.state.inLink,
        inRawBlock: this.lexer.state.inRawBlock,
        text: this.options.sanitize ? this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape2(cap[0]) : cap[0]
      };
    }
  }
  link(src) {
    const cap = this.rules.inline.link.exec(src);
    if (cap) {
      const trimmedUrl = cap[2].trim();
      if (!this.options.pedantic && /^</.test(trimmedUrl)) {
        if (!/>$/.test(trimmedUrl)) {
          return;
        }
        const rtrimSlash = rtrim(trimmedUrl.slice(0, -1), "\\");
        if ((trimmedUrl.length - rtrimSlash.length) % 2 === 0) {
          return;
        }
      } else {
        const lastParenIndex = findClosingBracket(cap[2], "()");
        if (lastParenIndex > -1) {
          const start2 = cap[0].indexOf("!") === 0 ? 5 : 4;
          const linkLen = start2 + cap[1].length + lastParenIndex;
          cap[2] = cap[2].substring(0, lastParenIndex);
          cap[0] = cap[0].substring(0, linkLen).trim();
          cap[3] = "";
        }
      }
      let href = cap[2];
      let title = "";
      if (this.options.pedantic) {
        const link = /^([^'"]*[^\s])\s+(['"])(.*)\2/.exec(href);
        if (link) {
          href = link[1];
          title = link[3];
        }
      } else {
        title = cap[3] ? cap[3].slice(1, -1) : "";
      }
      href = href.trim();
      if (/^</.test(href)) {
        if (this.options.pedantic && !/>$/.test(trimmedUrl)) {
          href = href.slice(1);
        } else {
          href = href.slice(1, -1);
        }
      }
      return outputLink(cap, {
        href: href ? href.replace(this.rules.inline._escapes, "$1") : href,
        title: title ? title.replace(this.rules.inline._escapes, "$1") : title
      }, cap[0], this.lexer);
    }
  }
  reflink(src, links) {
    let cap;
    if ((cap = this.rules.inline.reflink.exec(src)) || (cap = this.rules.inline.nolink.exec(src))) {
      let link = (cap[2] || cap[1]).replace(/\s+/g, " ");
      link = links[link.toLowerCase()];
      if (!link || !link.href) {
        const text = cap[0].charAt(0);
        return {
          type: "text",
          raw: text,
          text
        };
      }
      return outputLink(cap, link, cap[0], this.lexer);
    }
  }
  emStrong(src, maskedSrc, prevChar = "") {
    let match = this.rules.inline.emStrong.lDelim.exec(src);
    if (!match)
      return;
    if (match[3] && prevChar.match(/[\p{L}\p{N}]/u))
      return;
    const nextChar = match[1] || match[2] || "";
    if (!nextChar || nextChar && (prevChar === "" || this.rules.inline.punctuation.exec(prevChar))) {
      const lLength = match[0].length - 1;
      let rDelim, rLength, delimTotal = lLength, midDelimTotal = 0;
      const endReg = match[0][0] === "*" ? this.rules.inline.emStrong.rDelimAst : this.rules.inline.emStrong.rDelimUnd;
      endReg.lastIndex = 0;
      maskedSrc = maskedSrc.slice(-1 * src.length + lLength);
      while ((match = endReg.exec(maskedSrc)) != null) {
        rDelim = match[1] || match[2] || match[3] || match[4] || match[5] || match[6];
        if (!rDelim)
          continue;
        rLength = rDelim.length;
        if (match[3] || match[4]) {
          delimTotal += rLength;
          continue;
        } else if (match[5] || match[6]) {
          if (lLength % 3 && !((lLength + rLength) % 3)) {
            midDelimTotal += rLength;
            continue;
          }
        }
        delimTotal -= rLength;
        if (delimTotal > 0)
          continue;
        rLength = Math.min(rLength, rLength + delimTotal + midDelimTotal);
        if (Math.min(lLength, rLength) % 2) {
          const text2 = src.slice(1, lLength + match.index + rLength);
          return {
            type: "em",
            raw: src.slice(0, lLength + match.index + rLength + 1),
            text: text2,
            tokens: this.lexer.inlineTokens(text2, [])
          };
        }
        const text = src.slice(2, lLength + match.index + rLength - 1);
        return {
          type: "strong",
          raw: src.slice(0, lLength + match.index + rLength + 1),
          text,
          tokens: this.lexer.inlineTokens(text, [])
        };
      }
    }
  }
  codespan(src) {
    const cap = this.rules.inline.code.exec(src);
    if (cap) {
      let text = cap[2].replace(/\n/g, " ");
      const hasNonSpaceChars = /[^ ]/.test(text);
      const hasSpaceCharsOnBothEnds = /^ /.test(text) && / $/.test(text);
      if (hasNonSpaceChars && hasSpaceCharsOnBothEnds) {
        text = text.substring(1, text.length - 1);
      }
      text = escape2(text, true);
      return {
        type: "codespan",
        raw: cap[0],
        text
      };
    }
  }
  br(src) {
    const cap = this.rules.inline.br.exec(src);
    if (cap) {
      return {
        type: "br",
        raw: cap[0]
      };
    }
  }
  del(src) {
    const cap = this.rules.inline.del.exec(src);
    if (cap) {
      return {
        type: "del",
        raw: cap[0],
        text: cap[2],
        tokens: this.lexer.inlineTokens(cap[2], [])
      };
    }
  }
  autolink(src, mangle2) {
    const cap = this.rules.inline.autolink.exec(src);
    if (cap) {
      let text, href;
      if (cap[2] === "@") {
        text = escape2(this.options.mangle ? mangle2(cap[1]) : cap[1]);
        href = "mailto:" + text;
      } else {
        text = escape2(cap[1]);
        href = text;
      }
      return {
        type: "link",
        raw: cap[0],
        text,
        href,
        tokens: [
          {
            type: "text",
            raw: text,
            text
          }
        ]
      };
    }
  }
  url(src, mangle2) {
    let cap;
    if (cap = this.rules.inline.url.exec(src)) {
      let text, href;
      if (cap[2] === "@") {
        text = escape2(this.options.mangle ? mangle2(cap[0]) : cap[0]);
        href = "mailto:" + text;
      } else {
        let prevCapZero;
        do {
          prevCapZero = cap[0];
          cap[0] = this.rules.inline._backpedal.exec(cap[0])[0];
        } while (prevCapZero !== cap[0]);
        text = escape2(cap[0]);
        if (cap[1] === "www.") {
          href = "http://" + text;
        } else {
          href = text;
        }
      }
      return {
        type: "link",
        raw: cap[0],
        text,
        href,
        tokens: [
          {
            type: "text",
            raw: text,
            text
          }
        ]
      };
    }
  }
  inlineText(src, smartypants2) {
    const cap = this.rules.inline.text.exec(src);
    if (cap) {
      let text;
      if (this.lexer.state.inRawBlock) {
        text = this.options.sanitize ? this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape2(cap[0]) : cap[0];
      } else {
        text = escape2(this.options.smartypants ? smartypants2(cap[0]) : cap[0]);
      }
      return {
        type: "text",
        raw: cap[0],
        text
      };
    }
  }
};
__name(Tokenizer, "Tokenizer");
var block = {
  newline: /^(?: *(?:\n|$))+/,
  code: /^( {4}[^\n]+(?:\n(?: *(?:\n|$))*)?)+/,
  fences: /^ {0,3}(`{3,}(?=[^`\n]*\n)|~{3,})([^\n]*)\n(?:|([\s\S]*?)\n)(?: {0,3}\1[~`]* *(?=\n|$)|$)/,
  hr: /^ {0,3}((?:- *){3,}|(?:_ *){3,}|(?:\* *){3,})(?:\n+|$)/,
  heading: /^ {0,3}(#{1,6})(?=\s|$)(.*)(?:\n+|$)/,
  blockquote: /^( {0,3}> ?(paragraph|[^\n]*)(?:\n|$))+/,
  list: /^( {0,3}bull)( [^\n]+?)?(?:\n|$)/,
  html: "^ {0,3}(?:<(script|pre|style|textarea)[\\s>][\\s\\S]*?(?:</\\1>[^\\n]*\\n+|$)|comment[^\\n]*(\\n+|$)|<\\?[\\s\\S]*?(?:\\?>\\n*|$)|<![A-Z][\\s\\S]*?(?:>\\n*|$)|<!\\[CDATA\\[[\\s\\S]*?(?:\\]\\]>\\n*|$)|</?(tag)(?: +|\\n|/?>)[\\s\\S]*?(?:(?:\\n *)+\\n|$)|<(?!script|pre|style|textarea)([a-z][\\w-]*)(?:attribute)*? */?>(?=[ \\t]*(?:\\n|$))[\\s\\S]*?(?:(?:\\n *)+\\n|$)|</(?!script|pre|style|textarea)[a-z][\\w-]*\\s*>(?=[ \\t]*(?:\\n|$))[\\s\\S]*?(?:(?:\\n *)+\\n|$))",
  def: /^ {0,3}\[(label)\]: *(?:\n *)?<?([^\s>]+)>?(?:(?: +(?:\n *)?| *\n *)(title))? *(?:\n+|$)/,
  table: noopTest,
  lheading: /^([^\n]+)\n {0,3}(=+|-+) *(?:\n+|$)/,
  _paragraph: /^([^\n]+(?:\n(?!hr|heading|lheading|blockquote|fences|list|html|table| +\n)[^\n]+)*)/,
  text: /^[^\n]+/
};
block._label = /(?!\s*\])(?:\\.|[^\[\]\\])+/;
block._title = /(?:"(?:\\"?|[^"\\])*"|'[^'\n]*(?:\n[^'\n]+)*\n?'|\([^()]*\))/;
block.def = edit(block.def).replace("label", block._label).replace("title", block._title).getRegex();
block.bullet = /(?:[*+-]|\d{1,9}[.)])/;
block.listItemStart = edit(/^( *)(bull) */).replace("bull", block.bullet).getRegex();
block.list = edit(block.list).replace(/bull/g, block.bullet).replace("hr", "\\n+(?=\\1?(?:(?:- *){3,}|(?:_ *){3,}|(?:\\* *){3,})(?:\\n+|$))").replace("def", "\\n+(?=" + block.def.source + ")").getRegex();
block._tag = "address|article|aside|base|basefont|blockquote|body|caption|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option|p|param|section|source|summary|table|tbody|td|tfoot|th|thead|title|tr|track|ul";
block._comment = /<!--(?!-?>)[\s\S]*?(?:-->|$)/;
block.html = edit(block.html, "i").replace("comment", block._comment).replace("tag", block._tag).replace("attribute", / +[a-zA-Z:_][\w.:-]*(?: *= *"[^"\n]*"| *= *'[^'\n]*'| *= *[^\s"'=<>`]+)?/).getRegex();
block.paragraph = edit(block._paragraph).replace("hr", block.hr).replace("heading", " {0,3}#{1,6} ").replace("|lheading", "").replace("|table", "").replace("blockquote", " {0,3}>").replace("fences", " {0,3}(?:`{3,}(?=[^`\\n]*\\n)|~{3,})[^\\n]*\\n").replace("list", " {0,3}(?:[*+-]|1[.)]) ").replace("html", "</?(?:tag)(?: +|\\n|/?>)|<(?:script|pre|style|textarea|!--)").replace("tag", block._tag).getRegex();
block.blockquote = edit(block.blockquote).replace("paragraph", block.paragraph).getRegex();
block.normal = merge({}, block);
block.gfm = merge({}, block.normal, {
  table: "^ *([^\\n ].*\\|.*)\\n {0,3}(?:\\| *)?(:?-+:? *(?:\\| *:?-+:? *)*)(?:\\| *)?(?:\\n((?:(?! *\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\n|$))*)\\n*|$)"
});
block.gfm.table = edit(block.gfm.table).replace("hr", block.hr).replace("heading", " {0,3}#{1,6} ").replace("blockquote", " {0,3}>").replace("code", " {4}[^\\n]").replace("fences", " {0,3}(?:`{3,}(?=[^`\\n]*\\n)|~{3,})[^\\n]*\\n").replace("list", " {0,3}(?:[*+-]|1[.)]) ").replace("html", "</?(?:tag)(?: +|\\n|/?>)|<(?:script|pre|style|textarea|!--)").replace("tag", block._tag).getRegex();
block.gfm.paragraph = edit(block._paragraph).replace("hr", block.hr).replace("heading", " {0,3}#{1,6} ").replace("|lheading", "").replace("table", block.gfm.table).replace("blockquote", " {0,3}>").replace("fences", " {0,3}(?:`{3,}(?=[^`\\n]*\\n)|~{3,})[^\\n]*\\n").replace("list", " {0,3}(?:[*+-]|1[.)]) ").replace("html", "</?(?:tag)(?: +|\\n|/?>)|<(?:script|pre|style|textarea|!--)").replace("tag", block._tag).getRegex();
block.pedantic = merge({}, block.normal, {
  html: edit(
    `^ *(?:comment *(?:\\n|\\s*$)|<(tag)[\\s\\S]+?</\\1> *(?:\\n{2,}|\\s*$)|<tag(?:"[^"]*"|'[^']*'|\\s[^'"/>\\s]*)*?/?> *(?:\\n{2,}|\\s*$))`
  ).replace("comment", block._comment).replace(/tag/g, "(?!(?:a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)\\b)\\w+(?!:|[^\\w\\s@]*@)\\b").getRegex(),
  def: /^ *\[([^\]]+)\]: *<?([^\s>]+)>?(?: +(["(][^\n]+[")]))? *(?:\n+|$)/,
  heading: /^(#{1,6})(.*)(?:\n+|$)/,
  fences: noopTest,
  paragraph: edit(block.normal._paragraph).replace("hr", block.hr).replace("heading", " *#{1,6} *[^\n]").replace("lheading", block.lheading).replace("blockquote", " {0,3}>").replace("|fences", "").replace("|list", "").replace("|html", "").getRegex()
});
var inline = {
  escape: /^\\([!"#$%&'()*+,\-./:;<=>?@\[\]\\^_`{|}~])/,
  autolink: /^<(scheme:[^\s\x00-\x1f<>]*|email)>/,
  url: noopTest,
  tag: "^comment|^</[a-zA-Z][\\w:-]*\\s*>|^<[a-zA-Z][\\w-]*(?:attribute)*?\\s*/?>|^<\\?[\\s\\S]*?\\?>|^<![a-zA-Z]+\\s[\\s\\S]*?>|^<!\\[CDATA\\[[\\s\\S]*?\\]\\]>",
  link: /^!?\[(label)\]\(\s*(href)(?:\s+(title))?\s*\)/,
  reflink: /^!?\[(label)\]\[(ref)\]/,
  nolink: /^!?\[(ref)\](?:\[\])?/,
  reflinkSearch: "reflink|nolink(?!\\()",
  emStrong: {
    lDelim: /^(?:\*+(?:([punct_])|[^\s*]))|^_+(?:([punct*])|([^\s_]))/,
    rDelimAst: /^[^_*]*?\_\_[^_*]*?\*[^_*]*?(?=\_\_)|[punct_](\*+)(?=[\s]|$)|[^punct*_\s](\*+)(?=[punct_\s]|$)|[punct_\s](\*+)(?=[^punct*_\s])|[\s](\*+)(?=[punct_])|[punct_](\*+)(?=[punct_])|[^punct*_\s](\*+)(?=[^punct*_\s])/,
    rDelimUnd: /^[^_*]*?\*\*[^_*]*?\_[^_*]*?(?=\*\*)|[punct*](\_+)(?=[\s]|$)|[^punct*_\s](\_+)(?=[punct*\s]|$)|[punct*\s](\_+)(?=[^punct*_\s])|[\s](\_+)(?=[punct*])|[punct*](\_+)(?=[punct*])/
  },
  code: /^(`+)([^`]|[^`][\s\S]*?[^`])\1(?!`)/,
  br: /^( {2,}|\\)\n(?!\s*$)/,
  del: noopTest,
  text: /^(`+|[^`])(?:(?= {2,}\n)|[\s\S]*?(?:(?=[\\<!\[`*_]|\b_|$)|[^ ](?= {2,}\n)))/,
  punctuation: /^([\spunctuation])/
};
inline._punctuation = "!\"#$%&'()+\\-.,/:;<=>?@\\[\\]`^{|}~";
inline.punctuation = edit(inline.punctuation).replace(/punctuation/g, inline._punctuation).getRegex();
inline.blockSkip = /\[[^\]]*?\]\([^\)]*?\)|`[^`]*?`|<[^>]*?>/g;
inline.escapedEmSt = /\\\*|\\_/g;
inline._comment = edit(block._comment).replace("(?:-->|$)", "-->").getRegex();
inline.emStrong.lDelim = edit(inline.emStrong.lDelim).replace(/punct/g, inline._punctuation).getRegex();
inline.emStrong.rDelimAst = edit(inline.emStrong.rDelimAst, "g").replace(/punct/g, inline._punctuation).getRegex();
inline.emStrong.rDelimUnd = edit(inline.emStrong.rDelimUnd, "g").replace(/punct/g, inline._punctuation).getRegex();
inline._escapes = /\\([!"#$%&'()*+,\-./:;<=>?@\[\]\\^_`{|}~])/g;
inline._scheme = /[a-zA-Z][a-zA-Z0-9+.-]{1,31}/;
inline._email = /[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/;
inline.autolink = edit(inline.autolink).replace("scheme", inline._scheme).replace("email", inline._email).getRegex();
inline._attribute = /\s+[a-zA-Z:_][\w.:-]*(?:\s*=\s*"[^"]*"|\s*=\s*'[^']*'|\s*=\s*[^\s"'=<>`]+)?/;
inline.tag = edit(inline.tag).replace("comment", inline._comment).replace("attribute", inline._attribute).getRegex();
inline._label = /(?:\[(?:\\.|[^\[\]\\])*\]|\\.|`[^`]*`|[^\[\]\\`])*?/;
inline._href = /<(?:\\.|[^\n<>\\])+>|[^\s\x00-\x1f]*/;
inline._title = /"(?:\\"?|[^"\\])*"|'(?:\\'?|[^'\\])*'|\((?:\\\)?|[^)\\])*\)/;
inline.link = edit(inline.link).replace("label", inline._label).replace("href", inline._href).replace("title", inline._title).getRegex();
inline.reflink = edit(inline.reflink).replace("label", inline._label).replace("ref", block._label).getRegex();
inline.nolink = edit(inline.nolink).replace("ref", block._label).getRegex();
inline.reflinkSearch = edit(inline.reflinkSearch, "g").replace("reflink", inline.reflink).replace("nolink", inline.nolink).getRegex();
inline.normal = merge({}, inline);
inline.pedantic = merge({}, inline.normal, {
  strong: {
    start: /^__|\*\*/,
    middle: /^__(?=\S)([\s\S]*?\S)__(?!_)|^\*\*(?=\S)([\s\S]*?\S)\*\*(?!\*)/,
    endAst: /\*\*(?!\*)/g,
    endUnd: /__(?!_)/g
  },
  em: {
    start: /^_|\*/,
    middle: /^()\*(?=\S)([\s\S]*?\S)\*(?!\*)|^_(?=\S)([\s\S]*?\S)_(?!_)/,
    endAst: /\*(?!\*)/g,
    endUnd: /_(?!_)/g
  },
  link: edit(/^!?\[(label)\]\((.*?)\)/).replace("label", inline._label).getRegex(),
  reflink: edit(/^!?\[(label)\]\s*\[([^\]]*)\]/).replace("label", inline._label).getRegex()
});
inline.gfm = merge({}, inline.normal, {
  escape: edit(inline.escape).replace("])", "~|])").getRegex(),
  _extended_email: /[A-Za-z0-9._+-]+(@)[a-zA-Z0-9-_]+(?:\.[a-zA-Z0-9-_]*[a-zA-Z0-9])+(?![-_])/,
  url: /^((?:ftp|https?):\/\/|www\.)(?:[a-zA-Z0-9\-]+\.?)+[^\s<]*|^email/,
  _backpedal: /(?:[^?!.,:;*_~()&]+|\([^)]*\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_~)]+(?!$))+/,
  del: /^(~~?)(?=[^\s~])([\s\S]*?[^\s~])\1(?=[^~]|$)/,
  text: /^([`~]+|[^`~])(?:(?= {2,}\n)|(?=[a-zA-Z0-9.!#$%&'*+\/=?_`{\|}~-]+@)|[\s\S]*?(?:(?=[\\<!\[`*~_]|\b_|https?:\/\/|ftp:\/\/|www\.|$)|[^ ](?= {2,}\n)|[^a-zA-Z0-9.!#$%&'*+\/=?_`{\|}~-](?=[a-zA-Z0-9.!#$%&'*+\/=?_`{\|}~-]+@)))/
});
inline.gfm.url = edit(inline.gfm.url, "i").replace("email", inline.gfm._extended_email).getRegex();
inline.breaks = merge({}, inline.gfm, {
  br: edit(inline.br).replace("{2,}", "*").getRegex(),
  text: edit(inline.gfm.text).replace("\\b_", "\\b_| {2,}\\n").replace(/\{2,\}/g, "*").getRegex()
});
function smartypants(text) {
  return text.replace(/---/g, "\u2014").replace(/--/g, "\u2013").replace(/(^|[-\u2014/(\[{"\s])'/g, "$1\u2018").replace(/'/g, "\u2019").replace(/(^|[-\u2014/(\[{\u2018\s])"/g, "$1\u201C").replace(/"/g, "\u201D").replace(/\.{3}/g, "\u2026");
}
__name(smartypants, "smartypants");
function mangle(text) {
  let out = "", i22, ch;
  const l23 = text.length;
  for (i22 = 0; i22 < l23; i22++) {
    ch = text.charCodeAt(i22);
    if (Math.random() > 0.5) {
      ch = "x" + ch.toString(16);
    }
    out += "&#" + ch + ";";
  }
  return out;
}
__name(mangle, "mangle");
var Lexer = class {
  constructor(options3) {
    this.tokens = [];
    this.tokens.links = /* @__PURE__ */ Object.create(null);
    this.options = options3 || defaults;
    this.options.tokenizer = this.options.tokenizer || new Tokenizer();
    this.tokenizer = this.options.tokenizer;
    this.tokenizer.options = this.options;
    this.tokenizer.lexer = this;
    this.inlineQueue = [];
    this.state = {
      inLink: false,
      inRawBlock: false,
      top: true
    };
    const rules = {
      block: block.normal,
      inline: inline.normal
    };
    if (this.options.pedantic) {
      rules.block = block.pedantic;
      rules.inline = inline.pedantic;
    } else if (this.options.gfm) {
      rules.block = block.gfm;
      if (this.options.breaks) {
        rules.inline = inline.breaks;
      } else {
        rules.inline = inline.gfm;
      }
    }
    this.tokenizer.rules = rules;
  }
  static get rules() {
    return {
      block,
      inline
    };
  }
  static lex(src, options3) {
    const lexer2 = new Lexer(options3);
    return lexer2.lex(src);
  }
  static lexInline(src, options3) {
    const lexer2 = new Lexer(options3);
    return lexer2.inlineTokens(src);
  }
  lex(src) {
    src = src.replace(/\r\n|\r/g, "\n").replace(/\t/g, "    ");
    this.blockTokens(src, this.tokens);
    let next;
    while (next = this.inlineQueue.shift()) {
      this.inlineTokens(next.src, next.tokens);
    }
    return this.tokens;
  }
  blockTokens(src, tokens = []) {
    if (this.options.pedantic) {
      src = src.replace(/^ +$/gm, "");
    }
    let token, lastToken, cutSrc, lastParagraphClipped;
    while (src) {
      if (this.options.extensions && this.options.extensions.block && this.options.extensions.block.some((extTokenizer) => {
        if (token = extTokenizer.call({ lexer: this }, src, tokens)) {
          src = src.substring(token.raw.length);
          tokens.push(token);
          return true;
        }
        return false;
      })) {
        continue;
      }
      if (token = this.tokenizer.space(src)) {
        src = src.substring(token.raw.length);
        if (token.raw.length === 1 && tokens.length > 0) {
          tokens[tokens.length - 1].raw += "\n";
        } else {
          tokens.push(token);
        }
        continue;
      }
      if (token = this.tokenizer.code(src)) {
        src = src.substring(token.raw.length);
        lastToken = tokens[tokens.length - 1];
        if (lastToken && (lastToken.type === "paragraph" || lastToken.type === "text")) {
          lastToken.raw += "\n" + token.raw;
          lastToken.text += "\n" + token.text;
          this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;
        } else {
          tokens.push(token);
        }
        continue;
      }
      if (token = this.tokenizer.fences(src)) {
        src = src.substring(token.raw.length);
        tokens.push(token);
        continue;
      }
      if (token = this.tokenizer.heading(src)) {
        src = src.substring(token.raw.length);
        tokens.push(token);
        continue;
      }
      if (token = this.tokenizer.hr(src)) {
        src = src.substring(token.raw.length);
        tokens.push(token);
        continue;
      }
      if (token = this.tokenizer.blockquote(src)) {
        src = src.substring(token.raw.length);
        tokens.push(token);
        continue;
      }
      if (token = this.tokenizer.list(src)) {
        src = src.substring(token.raw.length);
        tokens.push(token);
        continue;
      }
      if (token = this.tokenizer.html(src)) {
        src = src.substring(token.raw.length);
        tokens.push(token);
        continue;
      }
      if (token = this.tokenizer.def(src)) {
        src = src.substring(token.raw.length);
        lastToken = tokens[tokens.length - 1];
        if (lastToken && (lastToken.type === "paragraph" || lastToken.type === "text")) {
          lastToken.raw += "\n" + token.raw;
          lastToken.text += "\n" + token.raw;
          this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;
        } else if (!this.tokens.links[token.tag]) {
          this.tokens.links[token.tag] = {
            href: token.href,
            title: token.title
          };
        }
        continue;
      }
      if (token = this.tokenizer.table(src)) {
        src = src.substring(token.raw.length);
        tokens.push(token);
        continue;
      }
      if (token = this.tokenizer.lheading(src)) {
        src = src.substring(token.raw.length);
        tokens.push(token);
        continue;
      }
      cutSrc = src;
      if (this.options.extensions && this.options.extensions.startBlock) {
        let startIndex = Infinity;
        const tempSrc = src.slice(1);
        let tempStart;
        this.options.extensions.startBlock.forEach(function(getStartIndex) {
          tempStart = getStartIndex.call({ lexer: this }, tempSrc);
          if (typeof tempStart === "number" && tempStart >= 0) {
            startIndex = Math.min(startIndex, tempStart);
          }
        });
        if (startIndex < Infinity && startIndex >= 0) {
          cutSrc = src.substring(0, startIndex + 1);
        }
      }
      if (this.state.top && (token = this.tokenizer.paragraph(cutSrc))) {
        lastToken = tokens[tokens.length - 1];
        if (lastParagraphClipped && lastToken.type === "paragraph") {
          lastToken.raw += "\n" + token.raw;
          lastToken.text += "\n" + token.text;
          this.inlineQueue.pop();
          this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;
        } else {
          tokens.push(token);
        }
        lastParagraphClipped = cutSrc.length !== src.length;
        src = src.substring(token.raw.length);
        continue;
      }
      if (token = this.tokenizer.text(src)) {
        src = src.substring(token.raw.length);
        lastToken = tokens[tokens.length - 1];
        if (lastToken && lastToken.type === "text") {
          lastToken.raw += "\n" + token.raw;
          lastToken.text += "\n" + token.text;
          this.inlineQueue.pop();
          this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;
        } else {
          tokens.push(token);
        }
        continue;
      }
      if (src) {
        const errMsg = "Infinite loop on byte: " + src.charCodeAt(0);
        if (this.options.silent) {
          console.error(errMsg);
          break;
        } else {
          throw new Error(errMsg);
        }
      }
    }
    this.state.top = true;
    return tokens;
  }
  inline(src, tokens) {
    this.inlineQueue.push({ src, tokens });
  }
  inlineTokens(src, tokens = []) {
    let token, lastToken, cutSrc;
    let maskedSrc = src;
    let match;
    let keepPrevChar, prevChar;
    if (this.tokens.links) {
      const links = Object.keys(this.tokens.links);
      if (links.length > 0) {
        while ((match = this.tokenizer.rules.inline.reflinkSearch.exec(maskedSrc)) != null) {
          if (links.includes(match[0].slice(match[0].lastIndexOf("[") + 1, -1))) {
            maskedSrc = maskedSrc.slice(0, match.index) + "[" + repeatString("a", match[0].length - 2) + "]" + maskedSrc.slice(this.tokenizer.rules.inline.reflinkSearch.lastIndex);
          }
        }
      }
    }
    while ((match = this.tokenizer.rules.inline.blockSkip.exec(maskedSrc)) != null) {
      maskedSrc = maskedSrc.slice(0, match.index) + "[" + repeatString("a", match[0].length - 2) + "]" + maskedSrc.slice(this.tokenizer.rules.inline.blockSkip.lastIndex);
    }
    while ((match = this.tokenizer.rules.inline.escapedEmSt.exec(maskedSrc)) != null) {
      maskedSrc = maskedSrc.slice(0, match.index) + "++" + maskedSrc.slice(this.tokenizer.rules.inline.escapedEmSt.lastIndex);
    }
    while (src) {
      if (!keepPrevChar) {
        prevChar = "";
      }
      keepPrevChar = false;
      if (this.options.extensions && this.options.extensions.inline && this.options.extensions.inline.some((extTokenizer) => {
        if (token = extTokenizer.call({ lexer: this }, src, tokens)) {
          src = src.substring(token.raw.length);
          tokens.push(token);
          return true;
        }
        return false;
      })) {
        continue;
      }
      if (token = this.tokenizer.escape(src)) {
        src = src.substring(token.raw.length);
        tokens.push(token);
        continue;
      }
      if (token = this.tokenizer.tag(src)) {
        src = src.substring(token.raw.length);
        lastToken = tokens[tokens.length - 1];
        if (lastToken && token.type === "text" && lastToken.type === "text") {
          lastToken.raw += token.raw;
          lastToken.text += token.text;
        } else {
          tokens.push(token);
        }
        continue;
      }
      if (token = this.tokenizer.link(src)) {
        src = src.substring(token.raw.length);
        tokens.push(token);
        continue;
      }
      if (token = this.tokenizer.reflink(src, this.tokens.links)) {
        src = src.substring(token.raw.length);
        lastToken = tokens[tokens.length - 1];
        if (lastToken && token.type === "text" && lastToken.type === "text") {
          lastToken.raw += token.raw;
          lastToken.text += token.text;
        } else {
          tokens.push(token);
        }
        continue;
      }
      if (token = this.tokenizer.emStrong(src, maskedSrc, prevChar)) {
        src = src.substring(token.raw.length);
        tokens.push(token);
        continue;
      }
      if (token = this.tokenizer.codespan(src)) {
        src = src.substring(token.raw.length);
        tokens.push(token);
        continue;
      }
      if (token = this.tokenizer.br(src)) {
        src = src.substring(token.raw.length);
        tokens.push(token);
        continue;
      }
      if (token = this.tokenizer.del(src)) {
        src = src.substring(token.raw.length);
        tokens.push(token);
        continue;
      }
      if (token = this.tokenizer.autolink(src, mangle)) {
        src = src.substring(token.raw.length);
        tokens.push(token);
        continue;
      }
      if (!this.state.inLink && (token = this.tokenizer.url(src, mangle))) {
        src = src.substring(token.raw.length);
        tokens.push(token);
        continue;
      }
      cutSrc = src;
      if (this.options.extensions && this.options.extensions.startInline) {
        let startIndex = Infinity;
        const tempSrc = src.slice(1);
        let tempStart;
        this.options.extensions.startInline.forEach(function(getStartIndex) {
          tempStart = getStartIndex.call({ lexer: this }, tempSrc);
          if (typeof tempStart === "number" && tempStart >= 0) {
            startIndex = Math.min(startIndex, tempStart);
          }
        });
        if (startIndex < Infinity && startIndex >= 0) {
          cutSrc = src.substring(0, startIndex + 1);
        }
      }
      if (token = this.tokenizer.inlineText(cutSrc, smartypants)) {
        src = src.substring(token.raw.length);
        if (token.raw.slice(-1) !== "_") {
          prevChar = token.raw.slice(-1);
        }
        keepPrevChar = true;
        lastToken = tokens[tokens.length - 1];
        if (lastToken && lastToken.type === "text") {
          lastToken.raw += token.raw;
          lastToken.text += token.text;
        } else {
          tokens.push(token);
        }
        continue;
      }
      if (src) {
        const errMsg = "Infinite loop on byte: " + src.charCodeAt(0);
        if (this.options.silent) {
          console.error(errMsg);
          break;
        } else {
          throw new Error(errMsg);
        }
      }
    }
    return tokens;
  }
};
__name(Lexer, "Lexer");
var Renderer = class {
  constructor(options3) {
    this.options = options3 || defaults;
  }
  code(code, infostring, escaped) {
    const lang = (infostring || "").match(/\S*/)[0];
    if (this.options.highlight) {
      const out = this.options.highlight(code, lang);
      if (out != null && out !== code) {
        escaped = true;
        code = out;
      }
    }
    code = code.replace(/\n$/, "") + "\n";
    if (!lang) {
      return "<pre><code>" + (escaped ? code : escape2(code, true)) + "</code></pre>\n";
    }
    return '<pre><code class="' + this.options.langPrefix + escape2(lang, true) + '">' + (escaped ? code : escape2(code, true)) + "</code></pre>\n";
  }
  blockquote(quote) {
    return "<blockquote>\n" + quote + "</blockquote>\n";
  }
  html(html) {
    return html;
  }
  heading(text, level, raw, slugger) {
    if (this.options.headerIds) {
      return "<h" + level + ' id="' + this.options.headerPrefix + slugger.slug(raw) + '">' + text + "</h" + level + ">\n";
    }
    return "<h" + level + ">" + text + "</h" + level + ">\n";
  }
  hr() {
    return this.options.xhtml ? "<hr/>\n" : "<hr>\n";
  }
  list(body, ordered, start2) {
    const type = ordered ? "ol" : "ul", startatt = ordered && start2 !== 1 ? ' start="' + start2 + '"' : "";
    return "<" + type + startatt + ">\n" + body + "</" + type + ">\n";
  }
  listitem(text) {
    return "<li>" + text + "</li>\n";
  }
  checkbox(checked) {
    return "<input " + (checked ? 'checked="" ' : "") + 'disabled="" type="checkbox"' + (this.options.xhtml ? " /" : "") + "> ";
  }
  paragraph(text) {
    return "<p>" + text + "</p>\n";
  }
  table(header, body) {
    if (body)
      body = "<tbody>" + body + "</tbody>";
    return "<table>\n<thead>\n" + header + "</thead>\n" + body + "</table>\n";
  }
  tablerow(content) {
    return "<tr>\n" + content + "</tr>\n";
  }
  tablecell(content, flags) {
    const type = flags.header ? "th" : "td";
    const tag2 = flags.align ? "<" + type + ' align="' + flags.align + '">' : "<" + type + ">";
    return tag2 + content + "</" + type + ">\n";
  }
  strong(text) {
    return "<strong>" + text + "</strong>";
  }
  em(text) {
    return "<em>" + text + "</em>";
  }
  codespan(text) {
    return "<code>" + text + "</code>";
  }
  br() {
    return this.options.xhtml ? "<br/>" : "<br>";
  }
  del(text) {
    return "<del>" + text + "</del>";
  }
  link(href, title, text) {
    href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);
    if (href === null) {
      return text;
    }
    let out = '<a href="' + escape2(href) + '"';
    if (title) {
      out += ' title="' + title + '"';
    }
    out += ">" + text + "</a>";
    return out;
  }
  image(href, title, text) {
    href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);
    if (href === null) {
      return text;
    }
    let out = '<img src="' + href + '" alt="' + text + '"';
    if (title) {
      out += ' title="' + title + '"';
    }
    out += this.options.xhtml ? "/>" : ">";
    return out;
  }
  text(text) {
    return text;
  }
};
__name(Renderer, "Renderer");
var TextRenderer = class {
  strong(text) {
    return text;
  }
  em(text) {
    return text;
  }
  codespan(text) {
    return text;
  }
  del(text) {
    return text;
  }
  html(text) {
    return text;
  }
  text(text) {
    return text;
  }
  link(href, title, text) {
    return "" + text;
  }
  image(href, title, text) {
    return "" + text;
  }
  br() {
    return "";
  }
};
__name(TextRenderer, "TextRenderer");
var Slugger = class {
  constructor() {
    this.seen = {};
  }
  serialize(value) {
    return value.toLowerCase().trim().replace(/<[!\/a-z].*?>/ig, "").replace(/[\u2000-\u206F\u2E00-\u2E7F\\'!"#$%&()*+,./:;<=>?@[\]^`{|}~]/g, "").replace(/\s/g, "-");
  }
  getNextSafeSlug(originalSlug, isDryRun) {
    let slug = originalSlug;
    let occurenceAccumulator = 0;
    if (this.seen.hasOwnProperty(slug)) {
      occurenceAccumulator = this.seen[originalSlug];
      do {
        occurenceAccumulator++;
        slug = originalSlug + "-" + occurenceAccumulator;
      } while (this.seen.hasOwnProperty(slug));
    }
    if (!isDryRun) {
      this.seen[originalSlug] = occurenceAccumulator;
      this.seen[slug] = 0;
    }
    return slug;
  }
  slug(value, options3 = {}) {
    const slug = this.serialize(value);
    return this.getNextSafeSlug(slug, options3.dryrun);
  }
};
__name(Slugger, "Slugger");
var Parser = class {
  constructor(options3) {
    this.options = options3 || defaults;
    this.options.renderer = this.options.renderer || new Renderer();
    this.renderer = this.options.renderer;
    this.renderer.options = this.options;
    this.textRenderer = new TextRenderer();
    this.slugger = new Slugger();
  }
  static parse(tokens, options3) {
    const parser2 = new Parser(options3);
    return parser2.parse(tokens);
  }
  static parseInline(tokens, options3) {
    const parser2 = new Parser(options3);
    return parser2.parseInline(tokens);
  }
  parse(tokens, top2 = true) {
    let out = "", i22, j3, k7, l23, l32, row, cell, header, body, token, ordered, start2, loose, itemBody, item, checked, task, checkbox, ret;
    const l24 = tokens.length;
    for (i22 = 0; i22 < l24; i22++) {
      token = tokens[i22];
      if (this.options.extensions && this.options.extensions.renderers && this.options.extensions.renderers[token.type]) {
        ret = this.options.extensions.renderers[token.type].call({ parser: this }, token);
        if (ret !== false || !["space", "hr", "heading", "code", "table", "blockquote", "list", "html", "paragraph", "text"].includes(token.type)) {
          out += ret || "";
          continue;
        }
      }
      switch (token.type) {
        case "space": {
          continue;
        }
        case "hr": {
          out += this.renderer.hr();
          continue;
        }
        case "heading": {
          out += this.renderer.heading(
            this.parseInline(token.tokens),
            token.depth,
            unescape(this.parseInline(token.tokens, this.textRenderer)),
            this.slugger
          );
          continue;
        }
        case "code": {
          out += this.renderer.code(
            token.text,
            token.lang,
            token.escaped
          );
          continue;
        }
        case "table": {
          header = "";
          cell = "";
          l23 = token.header.length;
          for (j3 = 0; j3 < l23; j3++) {
            cell += this.renderer.tablecell(
              this.parseInline(token.header[j3].tokens),
              { header: true, align: token.align[j3] }
            );
          }
          header += this.renderer.tablerow(cell);
          body = "";
          l23 = token.rows.length;
          for (j3 = 0; j3 < l23; j3++) {
            row = token.rows[j3];
            cell = "";
            l32 = row.length;
            for (k7 = 0; k7 < l32; k7++) {
              cell += this.renderer.tablecell(
                this.parseInline(row[k7].tokens),
                { header: false, align: token.align[k7] }
              );
            }
            body += this.renderer.tablerow(cell);
          }
          out += this.renderer.table(header, body);
          continue;
        }
        case "blockquote": {
          body = this.parse(token.tokens);
          out += this.renderer.blockquote(body);
          continue;
        }
        case "list": {
          ordered = token.ordered;
          start2 = token.start;
          loose = token.loose;
          l23 = token.items.length;
          body = "";
          for (j3 = 0; j3 < l23; j3++) {
            item = token.items[j3];
            checked = item.checked;
            task = item.task;
            itemBody = "";
            if (item.task) {
              checkbox = this.renderer.checkbox(checked);
              if (loose) {
                if (item.tokens.length > 0 && item.tokens[0].type === "paragraph") {
                  item.tokens[0].text = checkbox + " " + item.tokens[0].text;
                  if (item.tokens[0].tokens && item.tokens[0].tokens.length > 0 && item.tokens[0].tokens[0].type === "text") {
                    item.tokens[0].tokens[0].text = checkbox + " " + item.tokens[0].tokens[0].text;
                  }
                } else {
                  item.tokens.unshift({
                    type: "text",
                    text: checkbox
                  });
                }
              } else {
                itemBody += checkbox;
              }
            }
            itemBody += this.parse(item.tokens, loose);
            body += this.renderer.listitem(itemBody, task, checked);
          }
          out += this.renderer.list(body, ordered, start2);
          continue;
        }
        case "html": {
          out += this.renderer.html(token.text);
          continue;
        }
        case "paragraph": {
          out += this.renderer.paragraph(this.parseInline(token.tokens));
          continue;
        }
        case "text": {
          body = token.tokens ? this.parseInline(token.tokens) : token.text;
          while (i22 + 1 < l24 && tokens[i22 + 1].type === "text") {
            token = tokens[++i22];
            body += "\n" + (token.tokens ? this.parseInline(token.tokens) : token.text);
          }
          out += top2 ? this.renderer.paragraph(body) : body;
          continue;
        }
        default: {
          const errMsg = 'Token with "' + token.type + '" type was not found.';
          if (this.options.silent) {
            console.error(errMsg);
            return;
          } else {
            throw new Error(errMsg);
          }
        }
      }
    }
    return out;
  }
  parseInline(tokens, renderer) {
    renderer = renderer || this.renderer;
    let out = "", i22, token, ret;
    const l23 = tokens.length;
    for (i22 = 0; i22 < l23; i22++) {
      token = tokens[i22];
      if (this.options.extensions && this.options.extensions.renderers && this.options.extensions.renderers[token.type]) {
        ret = this.options.extensions.renderers[token.type].call({ parser: this }, token);
        if (ret !== false || !["escape", "html", "link", "image", "strong", "em", "codespan", "br", "del", "text"].includes(token.type)) {
          out += ret || "";
          continue;
        }
      }
      switch (token.type) {
        case "escape": {
          out += renderer.text(token.text);
          break;
        }
        case "html": {
          out += renderer.html(token.text);
          break;
        }
        case "link": {
          out += renderer.link(token.href, token.title, this.parseInline(token.tokens, renderer));
          break;
        }
        case "image": {
          out += renderer.image(token.href, token.title, token.text);
          break;
        }
        case "strong": {
          out += renderer.strong(this.parseInline(token.tokens, renderer));
          break;
        }
        case "em": {
          out += renderer.em(this.parseInline(token.tokens, renderer));
          break;
        }
        case "codespan": {
          out += renderer.codespan(token.text);
          break;
        }
        case "br": {
          out += renderer.br();
          break;
        }
        case "del": {
          out += renderer.del(this.parseInline(token.tokens, renderer));
          break;
        }
        case "text": {
          out += renderer.text(token.text);
          break;
        }
        default: {
          const errMsg = 'Token with "' + token.type + '" type was not found.';
          if (this.options.silent) {
            console.error(errMsg);
            return;
          } else {
            throw new Error(errMsg);
          }
        }
      }
    }
    return out;
  }
};
__name(Parser, "Parser");
function marked(src, opt, callback) {
  if (typeof src === "undefined" || src === null) {
    throw new Error("marked(): input parameter is undefined or null");
  }
  if (typeof src !== "string") {
    throw new Error("marked(): input parameter is of type " + Object.prototype.toString.call(src) + ", string expected");
  }
  if (typeof opt === "function") {
    callback = opt;
    opt = null;
  }
  opt = merge({}, marked.defaults, opt || {});
  checkSanitizeDeprecation(opt);
  if (callback) {
    const highlight2 = opt.highlight;
    let tokens;
    try {
      tokens = Lexer.lex(src, opt);
    } catch (e24) {
      return callback(e24);
    }
    const done = /* @__PURE__ */ __name(function(err) {
      let out;
      if (!err) {
        try {
          if (opt.walkTokens) {
            marked.walkTokens(tokens, opt.walkTokens);
          }
          out = Parser.parse(tokens, opt);
        } catch (e24) {
          err = e24;
        }
      }
      opt.highlight = highlight2;
      return err ? callback(err) : callback(null, out);
    }, "done");
    if (!highlight2 || highlight2.length < 3) {
      return done();
    }
    delete opt.highlight;
    if (!tokens.length)
      return done();
    let pending = 0;
    marked.walkTokens(tokens, function(token) {
      if (token.type === "code") {
        pending++;
        setTimeout(() => {
          highlight2(token.text, token.lang, function(err, code) {
            if (err) {
              return done(err);
            }
            if (code != null && code !== token.text) {
              token.text = code;
              token.escaped = true;
            }
            pending--;
            if (pending === 0) {
              done();
            }
          });
        }, 0);
      }
    });
    if (pending === 0) {
      done();
    }
    return;
  }
  try {
    const tokens = Lexer.lex(src, opt);
    if (opt.walkTokens) {
      marked.walkTokens(tokens, opt.walkTokens);
    }
    return Parser.parse(tokens, opt);
  } catch (e24) {
    e24.message += "\nPlease report this to https://github.com/markedjs/marked.";
    if (opt.silent) {
      return "<p>An error occurred:</p><pre>" + escape2(e24.message + "", true) + "</pre>";
    }
    throw e24;
  }
}
__name(marked, "marked");
marked.options = marked.setOptions = function(opt) {
  merge(marked.defaults, opt);
  changeDefaults(marked.defaults);
  return marked;
};
marked.getDefaults = getDefaults;
marked.defaults = defaults;
marked.use = function(...args) {
  const opts = merge({}, ...args);
  const extensions = marked.defaults.extensions || { renderers: {}, childTokens: {} };
  let hasExtensions;
  args.forEach((pack) => {
    if (pack.extensions) {
      hasExtensions = true;
      pack.extensions.forEach((ext) => {
        if (!ext.name) {
          throw new Error("extension name required");
        }
        if (ext.renderer) {
          const prevRenderer = extensions.renderers ? extensions.renderers[ext.name] : null;
          if (prevRenderer) {
            extensions.renderers[ext.name] = function(...args2) {
              let ret = ext.renderer.apply(this, args2);
              if (ret === false) {
                ret = prevRenderer.apply(this, args2);
              }
              return ret;
            };
          } else {
            extensions.renderers[ext.name] = ext.renderer;
          }
        }
        if (ext.tokenizer) {
          if (!ext.level || ext.level !== "block" && ext.level !== "inline") {
            throw new Error("extension level must be 'block' or 'inline'");
          }
          if (extensions[ext.level]) {
            extensions[ext.level].unshift(ext.tokenizer);
          } else {
            extensions[ext.level] = [ext.tokenizer];
          }
          if (ext.start) {
            if (ext.level === "block") {
              if (extensions.startBlock) {
                extensions.startBlock.push(ext.start);
              } else {
                extensions.startBlock = [ext.start];
              }
            } else if (ext.level === "inline") {
              if (extensions.startInline) {
                extensions.startInline.push(ext.start);
              } else {
                extensions.startInline = [ext.start];
              }
            }
          }
        }
        if (ext.childTokens) {
          extensions.childTokens[ext.name] = ext.childTokens;
        }
      });
    }
    if (pack.renderer) {
      const renderer = marked.defaults.renderer || new Renderer();
      for (const prop in pack.renderer) {
        const prevRenderer = renderer[prop];
        renderer[prop] = (...args2) => {
          let ret = pack.renderer[prop].apply(renderer, args2);
          if (ret === false) {
            ret = prevRenderer.apply(renderer, args2);
          }
          return ret;
        };
      }
      opts.renderer = renderer;
    }
    if (pack.tokenizer) {
      const tokenizer = marked.defaults.tokenizer || new Tokenizer();
      for (const prop in pack.tokenizer) {
        const prevTokenizer = tokenizer[prop];
        tokenizer[prop] = (...args2) => {
          let ret = pack.tokenizer[prop].apply(tokenizer, args2);
          if (ret === false) {
            ret = prevTokenizer.apply(tokenizer, args2);
          }
          return ret;
        };
      }
      opts.tokenizer = tokenizer;
    }
    if (pack.walkTokens) {
      const walkTokens2 = marked.defaults.walkTokens;
      opts.walkTokens = function(token) {
        pack.walkTokens.call(this, token);
        if (walkTokens2) {
          walkTokens2.call(this, token);
        }
      };
    }
    if (hasExtensions) {
      opts.extensions = extensions;
    }
    marked.setOptions(opts);
  });
};
marked.walkTokens = function(tokens, callback) {
  for (const token of tokens) {
    callback.call(marked, token);
    switch (token.type) {
      case "table": {
        for (const cell of token.header) {
          marked.walkTokens(cell.tokens, callback);
        }
        for (const row of token.rows) {
          for (const cell of row) {
            marked.walkTokens(cell.tokens, callback);
          }
        }
        break;
      }
      case "list": {
        marked.walkTokens(token.items, callback);
        break;
      }
      default: {
        if (marked.defaults.extensions && marked.defaults.extensions.childTokens && marked.defaults.extensions.childTokens[token.type]) {
          marked.defaults.extensions.childTokens[token.type].forEach(function(childTokens) {
            marked.walkTokens(token[childTokens], callback);
          });
        } else if (token.tokens) {
          marked.walkTokens(token.tokens, callback);
        }
      }
    }
  }
};
marked.parseInline = function(src, opt) {
  if (typeof src === "undefined" || src === null) {
    throw new Error("marked.parseInline(): input parameter is undefined or null");
  }
  if (typeof src !== "string") {
    throw new Error("marked.parseInline(): input parameter is of type " + Object.prototype.toString.call(src) + ", string expected");
  }
  opt = merge({}, marked.defaults, opt || {});
  checkSanitizeDeprecation(opt);
  try {
    const tokens = Lexer.lexInline(src, opt);
    if (opt.walkTokens) {
      marked.walkTokens(tokens, opt.walkTokens);
    }
    return Parser.parseInline(tokens, opt);
  } catch (e24) {
    e24.message += "\nPlease report this to https://github.com/markedjs/marked.";
    if (opt.silent) {
      return "<p>An error occurred:</p><pre>" + escape2(e24.message + "", true) + "</pre>";
    }
    throw e24;
  }
};
marked.Parser = Parser;
marked.parser = Parser.parse;
marked.Renderer = Renderer;
marked.TextRenderer = TextRenderer;
marked.Lexer = Lexer;
marked.lexer = Lexer.lex;
marked.Tokenizer = Tokenizer;
marked.Slugger = Slugger;
marked.parse = marked;
var options2 = marked.options;
var setOptions = marked.setOptions;
var use = marked.use;
var walkTokens = marked.walkTokens;
var parseInline = marked.parseInline;
var parser = Parser.parse;
var lexer = Lexer.lex;

// node_modules/@patternfly/pfe-markdown/pfe-markdown.js
init_lit();
var h17 = Object.defineProperty;
var c15 = Object.getOwnPropertyDescriptor;
var a18 = /* @__PURE__ */ __name((d13, s23, n24, t15) => {
  for (var r21 = t15 > 1 ? void 0 : t15 ? c15(s23, n24) : s23, e24 = d13.length - 1, o24; e24 >= 0; e24--)
    (o24 = d13[e24]) && (r21 = (t15 ? o24(s23, n24, r21) : o24(r21)) || r21);
  return t15 && r21 && h17(s23, n24, r21), r21;
}, "a");
var p15 = i`:host{display:block;color:var(--pfe-broadcasted--text,#3c3f42)}:host([hidden]){display:none}`;
var m20 = p15;
var i19 = /* @__PURE__ */ __name(class extends s4 {
  constructor() {
    super(...arguments);
    this.markdown = null;
    this._markdownRender = null;
    this._markdownContainer = null;
    this._observerConfig = { childList: true, subtree: true };
    this.observer = new MutationObserver(this.onMutation);
  }
  connectedCallback() {
    super.connectedCallback(), this._markdownRender = document.createElement("div"), this._markdownRender.setAttribute("pfe-markdown-render", ""), this.appendChild(this._markdownRender);
  }
  render() {
    return y`<slot @slotchange="${this.onSlotChange}"></slot>`;
  }
  disconnectedCallback() {
    super.disconnectedCallback(), this.observer?.disconnect();
  }
  onMutation() {
    this._markdownContainer?.textContent ? this.markdown = this._markdownContainer.textContent : this._markdownRender && (this._markdownRender.innerHTML = "");
  }
  onSlotChange() {
    this._markdownContainer || (this._markdownContainer = this.querySelector("[pfe-markdown-container]"), this._markdownContainer && (this._markdownContainer.style.display = "none"), this._init());
  }
  _init() {
    this._markdownContainer?.textContent && (this.markdown = this._markdownContainer.textContent), this._markdownContainer && this.observer.observe(this._markdownContainer, this._observerConfig);
  }
  _unindent(n24) {
    if (!n24)
      return n24;
    let t15 = n24.replace(/\t/g, "  ").split(`
`), r21 = t15.reduce((e24, o24) => {
      if (/^\s*$/.test(o24))
        return e24;
      let [{ length: l23 = 0 } = {}] = o24.match(/^(\s*)/) ?? [];
      return e24 === null || l23 < e24 ? l23 : e24;
    }, 0);
    return t15.map((e24) => e24.substr(r21)).join(`
`);
  }
  _markdownChanged(n24, t15) {
    t15 && this.renderMarkdown(this._unindent(t15));
  }
  renderMarkdown(n24) {
    this._markdownRender && (this._markdownRender.innerHTML = marked(n24 ?? ""));
  }
}, "i");
i19.version = "2.0.0-next.2", i19.styles = [m20], a18([p3, e5({ attribute: false })], i19.prototype, "markdown", 2), a18([o6], i19.prototype, "onMutation", 1), i19 = a18([e4("pfe-markdown"), d4()], i19);

// node_modules/@patternfly/pfe-number/pfe-number.js
init_lit();
init_decorators2();
init_decorators();

// node_modules/@patternfly/pfe-number/numeral.js
function n21(e24) {
  let t15, i22, l23, r21;
  if (n21.isNumeral(e24))
    t15 = e24.value();
  else if (e24 === 0 || typeof e24 > "u")
    t15 = 0;
  else if (e24 === null || Number.isNaN(e24))
    t15 = null;
  else if (typeof e24 == "string")
    if (u16.zeroFormat && e24 === u16.zeroFormat)
      t15 = 0;
    else if (u16.nullFormat && e24 === u16.nullFormat || !e24.replace(/[^0-9]+/g, "").length)
      t15 = null;
    else {
      for (i22 in p16)
        if (Object.prototype.hasOwnProperty.call(p16, i22) && (r21 = typeof p16[i22].regexps.unformat == "function" ? p16[i22].regexps.unformat() : p16[i22].regexps.unformat, r21 && e24.match(r21))) {
          l23 = p16[i22].unformat;
          break;
        }
      l23 = l23 || n21._.stringToNumber, t15 = l23(e24);
    }
  else
    t15 = Number(e24) || null;
  return new B3(e24, t15);
}
__name(n21, "n");
var $3 = { numberToFormat(e24, t15, i22) {
  let l23 = w6[n21.options.currentLocale], r21 = false, o24 = false, a20 = 0, s23 = "", f18 = 1e12, c21 = 1e9, N2 = 1e6, S4 = 1e3, h21 = "", x13 = false, m24, _7, O4, R6, j3, b12, d13, k7, T5, g12;
  if (e24 = e24 || 0, _7 = Math.abs(e24), n21._.includes(t15, "(") ? (r21 = true, t15 = t15.replace(/[\(|\)]/g, "")) : (n21._.includes(t15, "+") || n21._.includes(t15, "-")) && (k7 = n21._.includes(t15, "+") ? t15.indexOf("+") : e24 < 0 ? t15.indexOf("-") : -1, t15 = t15.replace(/[\+|\-]/g, "")), n21._.includes(t15, "a") && (m24 = t15.match(/a(k|m|b|t)?/), m24 = m24 ? m24[1] : false, n21._.includes(t15, " a") && (s23 = " "), t15 = t15.replace(new RegExp(`${s23}a[kmbt]?`), ""), _7 >= f18 && !m24 || m24 === "t" ? (s23 += l23.abbreviations.trillion, e24 = e24 / f18) : _7 < f18 && _7 >= c21 && !m24 || m24 === "b" ? (s23 += l23.abbreviations.billion, e24 = e24 / c21) : _7 < c21 && _7 >= N2 && !m24 || m24 === "m" ? (s23 += l23.abbreviations.million, e24 = e24 / N2) : (_7 < N2 && _7 >= S4 && !m24 || m24 === "k") && (s23 += l23.abbreviations.thousand, e24 = e24 / S4)), n21._.includes(t15, "[.]") && (o24 = true, t15 = t15.replace("[.]", ".")), b12 = e24.toString().split(".")[0], d13 = t15.split(".")[1], T5 = t15.indexOf(","), a20 = (t15.split(".")[0].split(",")[0].match(/0/g) || []).length, d13 ? (n21._.includes(d13, "[") ? (d13 = d13.replace("]", ""), d13 = d13.split("["), h21 = n21._.toFixed(e24, d13[0].length + d13[1].length, i22, d13[1].length)) : h21 = n21._.toFixed(e24, d13.length, i22), b12 = h21.split(".")[0], n21._.includes(h21, ".") ? h21 = l23.delimiters.decimal + h21.split(".")[1] : h21 = "", o24 && Number(h21.slice(1)) === 0 && (h21 = "")) : b12 = n21._.toFixed(e24, 0, i22), s23 && !m24 && Number(b12) >= 1e3 && s23 !== l23.abbreviations.trillion)
    switch (b12 = String(Number(b12) / 1e3), s23) {
      case l23.abbreviations.thousand:
        s23 = l23.abbreviations.million;
        break;
      case l23.abbreviations.million:
        s23 = l23.abbreviations.billion;
        break;
      case l23.abbreviations.billion:
        s23 = l23.abbreviations.trillion;
        break;
    }
  if (n21._.includes(b12, "-") && (b12 = b12.slice(1), x13 = true), b12.length < a20)
    for (let E5 = a20 - b12.length; E5 > 0; E5--)
      b12 = `0${b12}`;
  return T5 > -1 && (b12 = b12.toString().replace(/(\d)(?=(\d{3})+(?!\d))/g, `$1${l23.delimiters.thousands}`)), t15.indexOf(".") === 0 && (b12 = ""), g12 = b12 + h21 + (s23 || ""), r21 ? g12 = (r21 && x13 ? "(" : "") + g12 + (r21 && x13 ? ")" : "") : k7 >= 0 ? g12 = k7 === 0 ? (x13 ? "-" : "+") + g12 : g12 + (x13 ? "-" : "+") : x13 && (g12 = `-${g12}`), g12;
}, stringToNumber(e24) {
  let t15 = w6[u16.currentLocale], i22 = e24, l23 = { thousand: 3, million: 6, billion: 9, trillion: 12 }, r21, o24, a20, s23;
  if (u16.zeroFormat && e24 === u16.zeroFormat)
    o24 = 0;
  else if (u16.nullFormat && e24 === u16.nullFormat || !e24.replace(/[^0-9]+/g, "").length)
    o24 = null;
  else {
    o24 = 1, t15.delimiters.decimal !== "." && (e24 = e24.replace(/\./g, "").replace(t15.delimiters.decimal, "."));
    for (r21 in l23)
      if (s23 = new RegExp(`[^a-zA-Z]${t15.abbreviations[r21]}(?:\\)|(\\${t15.currency.symbol})?(?:\\))?)?$`), i22.match(s23)) {
        o24 *= Math.pow(10, l23[r21]);
        break;
      }
    o24 *= (e24.split("-").length + Math.min(e24.split("(").length - 1, e24.split(")").length - 1)) % 2 ? 1 : -1, e24 = e24.replace(/[^0-9\.]+/g, ""), o24 *= Number(e24);
  }
  return o24;
}, includes(e24, t15) {
  return e24.indexOf(t15) !== -1;
}, insert(e24, t15, i22) {
  return e24.slice(0, i22) + t15 + e24.slice(i22);
}, multiplier(e24) {
  let t15 = e24.toString().split(".");
  return t15.length < 2 ? 1 : Math.pow(10, t15[1].length);
}, correctionFactor() {
  return Array.prototype.slice.call(arguments).reduce(function(t15, i22) {
    let l23 = $3.multiplier(i22);
    return t15 > l23 ? t15 : l23;
  }, 1);
}, toFixed(e24, t15, i22, l23) {
  let r21 = e24.toString().split("."), o24 = t15 - (l23 || 0), a20, s23, f18, c21;
  return r21.length === 2 ? a20 = Math.min(Math.max(r21[1].length, o24), t15) : a20 = o24, f18 = Math.pow(10, a20), c21 = (i22(`${e24}e+${a20}`) / f18).toFixed(a20), l23 > t15 - a20 && (s23 = new RegExp(`\\.?0{1,${l23 - (t15 - a20)}}$`), c21 = c21.replace(s23, "")), c21;
} };
var L5 = "2.0.6";
var p16 = {};
var w6 = {};
var F5 = { currentLocale: "en", zeroFormat: null, nullFormat: null, defaultFormat: "0,0", scalePercentBy100: true };
var u16 = { currentLocale: F5.currentLocale, zeroFormat: F5.zeroFormat, nullFormat: F5.nullFormat, defaultFormat: F5.defaultFormat, scalePercentBy100: F5.scalePercentBy100 };
var B3 = /* @__PURE__ */ __name(class {
  constructor(t15, i22) {
    this._input = t15, this._value = i22;
  }
  clone() {
    return n21(this);
  }
  format(t15, i22) {
    let l23 = this._value, r21 = t15 || u16.defaultFormat, o24, a20, s23;
    if (i22 = i22 || Math.round, l23 === 0 && u16.zeroFormat !== null)
      a20 = u16.zeroFormat;
    else if (l23 === null && u16.nullFormat !== null)
      a20 = u16.nullFormat;
    else {
      for (o24 in p16)
        if (r21.match(p16[o24].regexps.format)) {
          s23 = p16[o24].format;
          break;
        }
      s23 = s23 || n21._.numberToFormat, a20 = s23(l23, r21, i22);
    }
    return a20;
  }
  value() {
    return this._value;
  }
  input() {
    return this._input;
  }
  set(t15) {
    return this._value = Number(t15), this;
  }
  add(t15) {
    let i22 = $3.correctionFactor.call(null, this._value, t15);
    function l23(r21, o24) {
      return r21 + Math.round(i22 * o24);
    }
    __name(l23, "l");
    return this._value = [this._value, t15].reduce(l23, 0) / i22, this;
  }
  subtract(t15) {
    let i22 = $3.correctionFactor.call(null, this._value, t15);
    function l23(r21, o24) {
      return r21 - Math.round(i22 * o24);
    }
    __name(l23, "l");
    return this._value = [t15].reduce(l23, Math.round(this._value * i22)) / i22, this;
  }
  multiply(t15) {
    function i22(l23, r21) {
      let o24 = $3.correctionFactor(l23, r21);
      return Math.round(l23 * o24) * Math.round(r21 * o24) / Math.round(o24 * o24);
    }
    __name(i22, "i");
    return this._value = [this._value, t15].reduce(i22, 1), this;
  }
  divide(t15) {
    function i22(l23, r21) {
      let o24 = $3.correctionFactor(l23, r21);
      return Math.round(l23 * o24) / Math.round(r21 * o24);
    }
    __name(i22, "i");
    return this._value = [this._value, t15].reduce(i22), this;
  }
  difference(t15) {
    return Math.abs(n21(this._value).subtract(t15).value());
  }
}, "B");
n21.version = L5;
n21.isNumeral = function(e24) {
  return e24 instanceof B3;
};
n21._ = $3;
n21.options = u16;
n21.formats = p16;
n21.locales = w6;
n21.locale = function(e24) {
  return e24 && (u16.currentLocale = e24.toLowerCase()), u16.currentLocale;
};
n21.localeData = function(e24) {
  if (!e24)
    return w6[u16.currentLocale];
  if (e24 = e24.toLowerCase(), !w6[e24])
    throw new Error(`Unknown locale : ${e24}`);
  return w6[e24];
};
n21.reset = function() {
  for (let e24 in F5)
    u16[e24] = F5[e24];
};
n21.zeroFormat = function(e24) {
  u16.zeroFormat = typeof e24 == "string" ? e24 : null;
};
n21.nullFormat = function(e24) {
  u16.nullFormat = typeof e24 == "string" ? e24 : null;
};
n21.defaultFormat = function(e24) {
  u16.defaultFormat = typeof e24 == "string" ? e24 : "0.0";
};
n21.register = function(e24, t15, i22) {
  if (t15 = t15.toLowerCase(), this[`${e24}s`][t15])
    throw new TypeError(`${t15} ${e24} already registered.`);
  return this[`${e24}s`][t15] = i22, i22;
};
n21.validate = function(e24, t15) {
  let i22, l23, r21, o24, a20, s23, f18, c21;
  if (typeof e24 != "string" && (e24 += "", console.warn && console.warn("Numeral.js: Value is not string. It has been co-erced to: ", e24)), e24 = e24.trim(), e24.match(/^\d+$/))
    return true;
  if (e24 === "")
    return false;
  try {
    f18 = n21.localeData(t15);
  } catch {
    f18 = n21.localeData(n21.locale());
  }
  return r21 = f18.currency.symbol, a20 = f18.abbreviations, i22 = f18.delimiters.decimal, f18.delimiters.thousands === "." ? l23 = "\\." : l23 = f18.delimiters.thousands, c21 = e24.match(/^[^\d]+/), c21 !== null && (e24 = e24.substr(1), c21[0] !== r21) || (c21 = e24.match(/[^\d]+$/), c21 !== null && (e24 = e24.slice(0, -1), c21[0] !== a20.thousand && c21[0] !== a20.million && c21[0] !== a20.billion && c21[0] !== a20.trillion)) ? false : (s23 = new RegExp(`${l23}{2}`), e24.match(/[^\d.,]/g) ? false : (o24 = e24.split(i22), o24.length > 2 ? false : o24.length < 2 ? !!o24[0].match(/^\d+.*\d$/) && !o24[0].match(s23) : o24[0].length === 1 ? !!o24[0].match(/^\d+$/) && !o24[0].match(s23) && !!o24[1].match(/^\d+$/) : !!o24[0].match(/^\d+.*\d$/) && !o24[0].match(s23) && !!o24[1].match(/^\d+$/)));
};
n21.fn = B3.prototype;
n21.register("locale", "en", { delimiters: { thousands: ",", decimal: "." }, abbreviations: { thousand: "k", million: "m", billion: "b", trillion: "t" }, ordinal(e24) {
  let t15 = e24 % 10;
  return ~~(e24 % 100 / 10) === 1 ? "th" : t15 === 1 ? "st" : t15 === 2 ? "nd" : t15 === 3 ? "rd" : "th";
}, currency: { symbol: "$" } });
n21.register("format", "bps", { regexps: { format: /(BPS)/, unformat: /(BPS)/ }, format(e24, t15, i22) {
  let l23 = n21._.includes(t15, " BPS") ? " " : "", r21;
  return e24 = e24 * 1e4, t15 = t15.replace(/\s?BPS/, ""), r21 = n21._.numberToFormat(e24, t15, i22), n21._.includes(r21, ")") ? (r21 = r21.split(""), r21.splice(-1, 0, `${l23}BPS`), r21 = r21.join("")) : r21 = `${r21 + l23}BPS`, r21;
}, unformat(e24) {
  return +(n21._.stringToNumber(e24) * 1e-4).toFixed(15);
} });
var y9 = { base: 1e3, suffixes: ["B", "KB", "MB", "GB", "TB", "PB", "EB", "ZB", "YB"] };
var M5 = { base: 1024, suffixes: ["B", "KiB", "MiB", "GiB", "TiB", "PiB", "EiB", "ZiB", "YiB"] };
var z4 = y9.suffixes.concat(M5.suffixes.filter(function(e24) {
  return y9.suffixes.indexOf(e24) < 0;
}));
var P3 = z4.join("|");
P3 = `(${P3.replace("B", "B(?!PS)")})`;
n21.register("format", "bytes", { regexps: { format: /([0\s]i?b)/, unformat: new RegExp(P3) }, format(e24, t15, i22) {
  let l23, r21 = n21._.includes(t15, "ib") ? M5 : y9, o24 = n21._.includes(t15, " b") || n21._.includes(t15, " ib") ? " " : "", a20, s23, f18;
  for (t15 = t15.replace(/\s?i?b/, ""), a20 = 0; a20 <= r21.suffixes.length; a20++)
    if (s23 = Math.pow(r21.base, a20), f18 = Math.pow(r21.base, a20 + 1), e24 === null || e24 === 0 || e24 >= s23 && e24 < f18) {
      o24 += r21.suffixes[a20], s23 > 0 && (e24 = e24 / s23);
      break;
    }
  return l23 = n21._.numberToFormat(e24, t15, i22), l23 + o24;
}, unformat(e24) {
  let t15 = n21._.stringToNumber(e24), i22, l23;
  if (t15) {
    for (i22 = y9.suffixes.length - 1; i22 >= 0; i22--) {
      if (n21._.includes(e24, y9.suffixes[i22])) {
        l23 = Math.pow(y9.base, i22);
        break;
      }
      if (n21._.includes(e24, M5.suffixes[i22])) {
        l23 = Math.pow(M5.base, i22);
        break;
      }
    }
    t15 *= l23 || 1;
  }
  return t15;
} });
n21.register("format", "currency", { regexps: { format: /(\$)/ }, format(e24, t15, i22) {
  let l23 = n21.locales[n21.options.currentLocale], r21 = { before: t15.match(/^([\+|\-|\(|\s|\$]*)/)[0], after: t15.match(/([\+|\-|\)|\s|\$]*)$/)[0] }, o24, a20, s23;
  for (t15 = t15.replace(/\s?\$\s?/, ""), o24 = n21._.numberToFormat(e24, t15, i22), e24 >= 0 ? (r21.before = r21.before.replace(/[\-\(]/, ""), r21.after = r21.after.replace(/[\-\)]/, "")) : e24 < 0 && !n21._.includes(r21.before, "-") && !n21._.includes(r21.before, "(") && (r21.before = `-${r21.before}`), s23 = 0; s23 < r21.before.length; s23++)
    switch (a20 = r21.before[s23], a20) {
      case "$":
        o24 = n21._.insert(o24, l23.currency.symbol, s23);
        break;
      case " ":
        o24 = n21._.insert(o24, " ", s23 + l23.currency.symbol.length - 1);
        break;
    }
  for (s23 = r21.after.length - 1; s23 >= 0; s23--)
    switch (a20 = r21.after[s23], a20) {
      case "$":
        o24 = s23 === r21.after.length - 1 ? o24 + l23.currency.symbol : n21._.insert(o24, l23.currency.symbol, -(r21.after.length - (1 + s23)));
        break;
      case " ":
        o24 = s23 === r21.after.length - 1 ? `${o24} ` : n21._.insert(o24, " ", -(r21.after.length - (1 + s23) + l23.currency.symbol.length - 1));
        break;
    }
  return o24;
} });
n21.register("format", "exponential", { regexps: { format: /(e\+|e-)/, unformat: /(e\+|e-)/ }, format(e24, t15, i22) {
  let l23, o24 = (typeof e24 == "number" && !Number.isNaN(e24) ? e24.toExponential() : "0e+0").split("e");
  return t15 = t15.replace(/e[\+|\-]{1}0/, ""), l23 = n21._.numberToFormat(Number(o24[0]), t15, i22), `${l23}e${o24[1]}`;
}, unformat(e24) {
  let t15 = n21._.includes(e24, "e+") ? e24.split("e+") : e24.split("e-"), i22 = Number(t15[0]), l23 = Number(t15[1]);
  l23 = n21._.includes(e24, "e-") ? l23 *= -1 : l23;
  function r21(o24, a20, s23, f18) {
    let c21 = n21._.correctionFactor(o24, a20);
    return o24 * c21 * (a20 * c21) / (c21 * c21);
  }
  __name(r21, "r");
  return [i22, Math.pow(10, l23)].reduce(r21, 1);
} });
n21.register("format", "ordinal", { regexps: { format: /(o)/ }, format(e24, t15, i22) {
  let l23 = n21.locales[n21.options.currentLocale], r21, o24 = n21._.includes(t15, " o") ? " " : "";
  return t15 = t15.replace(/\s?o/, ""), o24 += l23.ordinal(e24), r21 = n21._.numberToFormat(e24, t15, i22), r21 + o24;
} });
n21.register("format", "percentage", { regexps: { format: /(%)/, unformat: /(%)/ }, format(e24, t15, i22) {
  let l23 = n21._.includes(t15, " %") ? " " : "", r21;
  return n21.options.scalePercentBy100 && (e24 = e24 * 100), t15 = t15.replace(/\s?\%/, ""), r21 = n21._.numberToFormat(e24, t15, i22), n21._.includes(r21, ")") ? (r21 = r21.split(""), r21.splice(-1, 0, `${l23}%`), r21 = r21.join("")) : r21 = `${r21 + l23}%`, r21;
}, unformat(e24) {
  let t15 = n21._.stringToNumber(e24);
  return n21.options.scalePercentBy100 ? t15 * 0.01 : t15;
} });
n21.register("format", "time", { regexps: { format: /(:)/, unformat: /(:)/ }, format(e24, t15, i22) {
  let l23 = Math.floor(e24 / 60 / 60), r21 = Math.floor((e24 - l23 * 60 * 60) / 60), o24 = Math.round(e24 - l23 * 60 * 60 - r21 * 60);
  return `${l23}:${r21 < 10 ? `0${r21}` : r21}:${o24 < 10 ? `0${o24}` : o24}`;
}, unformat(e24) {
  let t15 = e24.split(":"), i22 = 0;
  return t15.length === 3 ? (i22 = i22 + Number(t15[0]) * 60 * 60, i22 = i22 + Number(t15[1]) * 60, i22 = i22 + Number(t15[2])) : t15.length === 2 && (i22 = i22 + Number(t15[0]) * 60, i22 = i22 + Number(t15[1])), Number(i22);
} });

// node_modules/@patternfly/pfe-number/pfe-number.js
init_lit();
var c16 = Object.defineProperty;
var h18 = Object.getOwnPropertyDescriptor;
var n22 = /* @__PURE__ */ __name((l23, a20, e24, s23) => {
  for (var r21 = s23 > 1 ? void 0 : s23 ? h18(a20, e24) : a20, i22 = l23.length - 1, o24; i22 >= 0; i22--)
    (o24 = l23[i22]) && (r21 = (s23 ? o24(a20, e24, r21) : o24(r21)) || r21);
  return s23 && r21 && c16(a20, e24, r21), r21;
}, "n");
var f13 = i`:host{display:inline;white-space:nowrap}`;
var m21 = f13;
n21.locales.en.delimiters.thousands = "\u202F";
var t12 = /* @__PURE__ */ __name(class extends s4 {
  constructor() {
    super(...arguments);
    this.type = "NONE";
  }
  static get types() {
    return { abbrev: "0a", ordinal: "0o", percent: "0%", bytes: "0[.][00] ib", e: "0[.00]e+0", thousands: "0,0[.][00]", NONE: void 0 };
  }
  connectedCallback() {
    super.connectedCallback(), this._setInitialNumber();
  }
  render() {
    return y`<span>${this.formatted}</span>`;
  }
  _updateNumber() {
    Number.isNaN(this.number) ? (this.textContent = "", this.formatted = "") : (this.textContent = this.number?.toString() ?? "", this.format = t12.types[this.type ?? "NONE"], this.formatted = this._format());
  }
  _setInitialNumber() {
    let e24 = parseFloat(this.textContent ?? "");
    Number.isNaN(e24) || (this.number = e24);
  }
  _format(e24 = this.number, s23 = this.format) {
    return e24 == null ? "" : n21(e24).format(s23);
  }
}, "t");
t12.version = "2.0.0-next.2", t12.styles = [m21], n22([p3("_updateNumber"), e5({ type: Number, reflect: true })], t12.prototype, "number", 2), n22([p3("_updateNumber"), e5({ type: String, reflect: true })], t12.prototype, "type", 2), n22([e5({ reflect: true })], t12.prototype, "format", 2), n22([t3()], t12.prototype, "formatted", 2), t12 = n22([e4("pfe-number"), d4()], t12);

// node_modules/@patternfly/pfe-page-status/pfe-page-status.js
init_lit();
init_decorators();
init_decorators2();
init_lit();
var p17 = Object.defineProperty;
var i20 = Object.getOwnPropertyDescriptor;
var n23 = /* @__PURE__ */ __name((a20, o24, s23, r21) => {
  for (var t15 = r21 > 1 ? void 0 : r21 ? i20(o24, s23) : o24, f18 = a20.length - 1, c21; f18 >= 0; f18--)
    (c21 = a20[f18]) && (t15 = (r21 ? c21(o24, s23, t15) : c21(t15)) || t15);
  return r21 && t15 && p17(o24, s23, t15), t15;
}, "n");
var u17 = i`:host{background-color:var(--pfe-status--BackgroundColor,var(--pfe-theme--color--feedback--default,#4f5255));position:fixed;right:var(--pfe-status--Right,0);top:0;height:100vh;display:flex;flex-direction:column;justify-content:center;align-items:center;width:3rem}:host([hidden]){display:none}#flag{transform:rotateZ(90deg)}#flag>span{color:var(--pfe-status--Color,var(--pfe-theme--color--text--on-dark,#fff));display:inline-block;text-transform:var(--pfe-status--TextTransform,uppercase);font-size:.875rem;font-family:var(--pfe-theme--font-family, "Red Hat Text", "RedHatText", "Overpass", Overpass, Arial, sans-serif);font-size:var(--pfe-theme--font-size, 1rem);font-weight:700;line-height:1em;white-space:nowrap}:host([status=important]){--pfe-status--BackgroundColor:var(--pfe-theme--color--feedback--important, #c9190b);--pfe-status--Color:var(--pfe-theme--color--text--on-dark, #fff)}:host([status=critical]){--pfe-status--BackgroundColor:var(--pfe-theme--color--feedback--critical, #a30000);--pfe-status--Color:var(--pfe-theme--color--text--on-dark, #fff)}:host([status=success]){--pfe-status--BackgroundColor:var(--pfe-theme--color--feedback--success, #3e8635);--pfe-status--Color:var(--pfe-theme--color--text--on-dark, #fff)}:host([status=info]){--pfe-status--BackgroundColor:var(--pfe-theme--color--feedback--info, #06c);--pfe-status--Color:var(--pfe-theme--color--text--on-dark, #fff)}:host([status=moderate]),:host([status=warning]){--pfe-status--BackgroundColor:var(--pfe-theme--color--feedback--moderate, #f0ab00);--pfe-status--Color:var(--pfe-theme--color--text, #151515)}:host([status=normal]){--pfe-status--BackgroundColor:var(--pfe-theme--color--ui-accent, #06c);--pfe-status--Color:var(--pfe-theme--color--ui-accent--text, #fff)}:host([status=accent]){--pfe-status--BackgroundColor:var(--pfe-theme--color--ui-accent, #06c);--pfe-status--Color:var(--pfe-theme--color--ui-accent--text, #fff)}`;
var l20 = u17;
var e20 = /* @__PURE__ */ __name(class extends s4 {
  constructor() {
    super(...arguments);
    this.status = "default";
  }
  render() {
    return y`<div id="flag" aria-hidden="true" part="container"><span><slot></slot></span></div>`;
  }
}, "e");
e20.version = "2.0.0-next.3", e20.styles = [l20], n23([e5({ type: String, reflect: true })], e20.prototype, "status", 2), e20 = n23([e4("pfe-page-status"), d4()], e20);

// node_modules/@patternfly/pfe-progress-indicator/pfe-progress-indicator.js
init_lit();
init_decorators();
init_decorators2();
init_lit();
init_logger();
var m22 = Object.defineProperty;
var c17 = Object.getOwnPropertyDescriptor;
var o21 = /* @__PURE__ */ __name((a20, i22, t15, s23) => {
  for (var r21 = s23 > 1 ? void 0 : s23 ? c17(i22, t15) : i22, n24 = a20.length - 1, d13; n24 >= 0; n24--)
    (d13 = a20[n24]) && (r21 = (s23 ? d13(i22, t15, r21) : d13(r21)) || r21);
  return s23 && r21 && m22(i22, t15, r21), r21;
}, "o");
var f14 = i`:host{display:inline-block;aspect-ratio:1;max-width:var(--pfe-progress-indicator-size,2rem);width:var(--pfe-progress-indicator-size,2rem)}:host([hidden]){display:none}::slotted(*),span{position:absolute;overflow:hidden;clip:rect(0,0,0,0);height:1px;width:1px;margin:-1px;padding:0;border:0 none}#container{aspect-ratio:1;max-width:var(--pfe-progress-indicator-size,2rem);width:var(--pfe-progress-indicator-size,2rem)}:host([indeterminate]) #container::after{content:"";animation:spin 1s linear infinite;box-sizing:border-box;border-style:var(--pfe-theme--surface--border-style,solid);border-width:var(--pfe-theme--surface--border-width--heavy,4px);border-color:var(--pfe-progress-indicator--background-color,rgba(0,0,0,.25));border-top-color:var(--pfe-progress-indicator--foreground-color,rgba(0,0,0,.75));border-radius:100%;display:inline-block;margin:0 auto;position:relative;vertical-align:middle;visibility:visible;width:var(--pfe-progress-indicator-size,2rem);aspect-ratio:1;transform:rotate(0)}:host([size=sm]){--pfe-progress-indicator-size:1rem}:host([size=sm]) #container{border-width:calc(var(--pfe-theme--surface--border-width--heavy,4px) * .75)}:host([size=md]){--pfe-progress-indicator-size:2rem}:host([size=md]) #container{border-width:calc(var(--pfe-theme--surface--border-width--heavy,4px) * 1)}:host([size=xl]){--pfe-progress-indicator-size:4rem}:host([size=xl]) #container{border-width:calc(var(--pfe-theme--surface--border-width--heavy,4px) * 1.5)}@keyframes spin{from{transform:rotate(0)}to{transform:rotate(360deg)}}`;
var p18 = f14;
var e21 = /* @__PURE__ */ __name(class extends s4 {
  constructor() {
    super(...arguments);
    this.logger = new n6(this);
    this.indeterminate = false;
    this.size = "md";
  }
  render() {
    return y`<div id="container"><span><slot @slotchange="${this._init}"></slot></span></div>`;
  }
  _init() {
    if (this.isConnected) {
      let [t15] = this.children;
      !t15 && !this.textContent?.trim() && this.logger.warn("You do not have a backup loading message.");
    }
  }
}, "e");
e21.version = "2.0.0-next.3", e21.styles = [p18], o21([e5({ type: Boolean, reflect: true })], e21.prototype, "indeterminate", 2), o21([e5({ reflect: true })], e21.prototype, "size", 2), o21([c6({ observe: false })], e21.prototype, "_init", 1), e21 = o21([e4("pfe-progress-indicator"), d4()], e21);

// node_modules/@patternfly/pfe-select/pfe-select.js
init_lit();
init_decorators();
init_core();
init_decorators2();
init_deprecatedCustomEvent();
init_logger();
init_lit();
var f15 = Object.defineProperty;
var m23 = Object.getOwnPropertyDescriptor;
var l21 = /* @__PURE__ */ __name((i22, a20, e24, t15) => {
  for (var r21 = t15 > 1 ? void 0 : t15 ? m23(a20, e24) : a20, n24 = i22.length - 1, s23; n24 >= 0; n24--)
    (s23 = i22[n24]) && (r21 = (t15 ? s23(a20, e24, r21) : s23(r21)) || r21);
  return t15 && r21 && f15(a20, e24, r21), r21;
}, "l");
var u18 = i`:host{position:relative;display:inline-block;width:100%;line-height:1.5em;font-weight:400;text-align:left;text-rendering:optimizelegibility;border-top:var(--pfe-select--BorderTop,var(--pfe-select--BorderWidth,var(--pfe-theme--ui--border-width,1px)) var(--pfe-theme--ui--border-style,solid) var(--pfe-select--BorderColor,var(--pfe-theme--color--surface--lighter,#f0f0f0)));border-right:var(--pfe-select--BorderRight,var(--pfe-select--BorderWidth,var(--pfe-theme--ui--border-width,1px)) var(--pfe-theme--ui--border-style,solid) var(--pfe-select--BorderColor,var(--pfe-theme--color--surface--lighter,#f0f0f0)));border-bottom:var(--pfe-select--BorderBottom,var(--pfe-select--BorderBottomWidth,var(--pfe-theme--ui--border-width,1px)) var(--pfe-theme--ui--border-style,solid) var(--pfe-select--BorderBottomColor,var(--pfe-theme--color--surface--darker,#3c3f42)));border-left:var(--pfe-select--BorderLeft,var(--pfe-select--BorderWidth,var(--pfe-theme--ui--border-width,1px)) var(--pfe-theme--ui--border-style,solid) var(--pfe-select--BorderColor,var(--pfe-theme--color--surface--lighter,#f0f0f0)));background-color:var(--pfe-select--BackgroundColor,var(--pfe-theme--color--surface--lightest,#fff));color:var(--pfe-select--Color,var(--pfe-theme--color--text,#151515))}:host *,:host ::after,:host ::before{box-sizing:border-box}:host::after{border-style:var(--pfe-theme--surface--border-style,solid);border-width:6px 6px 0;border-color:transparent;border-top-color:#3c3f42;display:inline-block;content:"";position:absolute;pointer-events:none;top:calc(var(--pfe-theme--container-padding,1rem) * .875);right:calc(var(--pfe-theme--container-padding,1rem) * .75)}:host([hidden]){display:none}:host(:hover){border-bottom:var(--pfe-select--BorderBottom--hover,var(--pfe-select--BorderBottomWidth,var(--pfe-theme--ui--border-width,1px)) var(--pfe-theme--ui--border-style,solid) var(--pfe-select--BorderBottomColor--hover,var(--pfe-theme--color--link,#06c)))}:host(:focus-within){border-bottom-width:calc(var(--pfe-theme--surface--border-width--heavy,4px)/ 2);border-bottom-color:var(--pfe-select--BorderBottomColor--hover,var(--pfe-theme--color--link,#06c))}:host(:focus-within) ::slotted(select){padding-bottom:calc(var(--pfe-theme-container-padding,1rem) * .438)}:host ::slotted(select){text-rendering:auto!important;background-color:var(--pfe-select--BackgroundColor,var(--pfe-theme--color--surface--lightest,#fff));color:var(--pfe-select--Color,var(--pfe-theme--color--text,#151515));border-radius:0;width:100%;min-width:100%;font-size:var(--pfe-theme--font-size, 1rem);font-weight:var(--pfe-theme--font-weight--normal,400);font-family:var(--pfe-select--FontFamily, var(--pfe-theme--font-family, "Red Hat Text", "RedHatText", "Overpass", Overpass, Arial, sans-serif));appearance:none;box-shadow:none;border:none;padding:calc(var(--pfe-theme--container-padding,1rem) * .5);padding-right:calc(var(--pfe-theme--container-padding,1rem) * 1.5)}:host([invalid]){border-bottom-width:calc(var(--pfe-theme--surface--border-width--heavy,4px)/ 2);border-bottom-color:var(--pfe-select--BorderBottomColor--error,var(--pfe-theme--color--feedback--critical,#a30000))}:host([invalid]) ::slotted(select){padding-bottom:calc(var(--pfe-theme--container-padding,1rem) * .438);background-image:url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 512 512'%3E%3Cpath fill='%23c9190b' d='M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zm-248 50c-25.405 0-46 20.595-46 46s20.595 46 46 46 46-20.595 46-46-20.595-46-46-46zm-43.673-165.346l7.418 136c.347 6.364 5.609 11.346 11.982 11.346h48.546c6.373 0 11.635-4.982 11.982-11.346l7.418-136c.375-6.874-5.098-12.654-11.982-12.654h-63.383c-6.884 0-12.356 5.78-11.981 12.654z'/%3E%3C/svg%3E");background-size:.875rem;background-repeat:no-repeat;background-position:calc(100% - (var(--pfe-theme--container-padding,1rem) * 2)) center}:host([invalid]){border-bottom-width:calc(var(--pfe-theme--surface--border-width--heavy,4px)/ 2);border-bottom-color:var(--pfe-select--BorderBottomColor--error,var(--pfe-theme--color--feedback--critical,#a30000))}:host([invalid]) ::slotted(select){padding-bottom:calc(var(--pfe-theme--container-padding,1rem) * .438);background-image:url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 512 512'%3E%3Cpath fill='%23c9190b' d='M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zm-248 50c-25.405 0-46 20.595-46 46s20.595 46 46 46 46-20.595 46-46-20.595-46-46-46zm-43.673-165.346l7.418 136c.347 6.364 5.609 11.346 11.982 11.346h48.546c6.373 0 11.635-4.982 11.982-11.346l7.418-136c.375-6.874-5.098-12.654-11.982-12.654h-63.383c-6.884 0-12.356 5.78-11.981 12.654z'/%3E%3C/svg%3E");background-size:.875rem;background-repeat:no-repeat;background-position:calc(100% - (var(--pfe-theme--container-padding,1rem) * 2)) center}`;
var c18 = u18;
var O3 = /* @__PURE__ */ __name((i22) => !!i22.selected, "O");
var d11 = /* @__PURE__ */ __name(class extends n10 {
  constructor(e24) {
    super("select");
    this.value = e24;
  }
}, "d");
var o22 = /* @__PURE__ */ __name(class extends s4 {
  constructor() {
    super(...arguments);
    this.invalid = false;
    this.logger = new n6(this);
    this._options = null;
  }
  get value() {
    return this._input?.value ?? "";
  }
  set value(e24) {
    this._input && (this._input.value = e24);
  }
  get pfeOptions() {
    return this.options ?? null;
  }
  set pfeOptions(e24) {
    this.options = e24;
  }
  get _input() {
    return this.querySelector("select");
  }
  connectedCallback() {
    super.connectedCallback(), this.options && this._modifyDOM();
  }
  render() {
    return y`<slot></slot>`;
  }
  _optionsChanged(e24, t15) {
    this._options = (t15?.filter(O3)?.length ?? 0) < 1 ? t15 : this._handleMultipleSelectedValues(t15 ?? []), this._modifyDOM();
  }
  disconnectedCallback() {
    super.disconnectedCallback(), this._input && this._input.removeEventListener("input", this._inputChanged);
  }
  _init() {
    if (!this._input) {
      this.logger.warn("The first child needs to be a select element");
      return;
    }
    this._input.addEventListener("change", this._inputChanged);
  }
  _invalidChanged(e24, t15) {
    this.querySelector("select")?.setAttribute("aria-invalid", String(!!t15));
  }
  _handleMultipleSelectedValues(e24) {
    this.logger.warn("The first 'selected' option will take precedence over others in case of multiple 'selected' options");
    let t15 = e24.findIndex((r21) => r21.selected);
    return e24.forEach((r21, n24) => {
      r21.selected = t15 === n24;
    }), e24;
  }
  _inputChanged() {
    let { value: e24 } = this;
    this.dispatchEvent(new d11(e24)), this.dispatchEvent(n12("pfe-select:change", { value: e24 }));
  }
  _modifyDOM() {
    let e24 = document.createElement("select");
    for (let t15 of this.options ?? [])
      e24.add(Object.assign(document.createElement("option"), t15), null);
    this._input ? this._input.parentNode?.replaceChild(e24, this._input) : this.appendChild(e24);
  }
  addOptions(e24) {
    this.options = this._options ? this._options.concat(e24) : e24;
  }
}, "o");
o22.version = "2.0.0-next.3", o22.styles = [c18], l21([p3, e5({ type: Boolean, reflect: true })], o22.prototype, "invalid", 2), l21([p3, e5({ attribute: false })], o22.prototype, "options", 2), l21([c6({ emptyWarning: "The first child in the light DOM must be a supported select tag" })], o22.prototype, "_init", 1), l21([o6], o22.prototype, "_inputChanged", 1), o22 = l21([e4("pfe-select"), d4()], o22);

// node_modules/@patternfly/pfe-tabs/pfe-tabs.js
init_lit();
init_decorators();
init_decorators2();
init_deprecatedCustomEvent();
init_logger();

// node_modules/@patternfly/pfe-tabs/pfe-tab.js
init_lit();
init_decorators();
init_decorators2();
init_random();
init_logger();
init_lit();
var c19 = Object.defineProperty;
var p19 = Object.getOwnPropertyDescriptor;
var o23 = /* @__PURE__ */ __name((i22, s23, r21, a20) => {
  for (var e24 = a20 > 1 ? void 0 : a20 ? p19(s23, r21) : s23, d13 = i22.length - 1, n24; d13 >= 0; d13--)
    (n24 = i22[d13]) && (e24 = (a20 ? n24(s23, r21, e24) : n24(e24)) || e24);
  return a20 && e24 && c19(s23, r21, e24), e24;
}, "o");
var v11 = i`:host{text-align:left;position:relative;display:block;cursor:pointer;margin:var(--pfe-tabs__tab--Margin,0 0 calc(var(--pfe-theme--ui--border-width,1px) * -1));padding:var(--pfe-tabs__tab--PaddingTop,var(--pfe-theme--container-padding,1rem)) var(--pfe-tabs__tab--PaddingRight,calc(var(--pfe-theme--container-padding,1rem) * 2)) var(--pfe-tabs__tab--PaddingBottom,var(--pfe-theme--container-padding,1rem)) var(--pfe-tabs__tab--PaddingLeft,calc(var(--pfe-theme--container-padding,1rem) * 2));border-style:var(--pfe-theme--ui--border-style,solid);border-width:var(--pfe-theme--ui--border-width,1px);border-color:transparent;border-bottom-width:var(--pfe-tabs--BorderWidth,var(--pfe-theme--ui--border-width--active,3px));background-color:var(--pfe-tabs--BackgroundColor--inactive,none);text-align:var(--pfe-tabs__tab--TextAlign,center);text-transform:var(--pfe-tabs__tab--TextTransform,none);color:var(--pfe-tabs--Color,var(--pfe-theme--color--text--muted,#6a6e73));font-size:var(--pfe-tabs__tab--FontSize, var(--pf-global--FontSize--md, 1rem));font-family:var(--pfe-tabs__tab--LineHeight, var(--pfe-theme--font-family, "Red Hat Text", "RedHatText", "Overpass", Overpass, Arial, sans-serif));line-height:var(--pfe-tabs__tab--LineHeight, var(--pfe-theme--line-height, 1.5));font-weight:var(--pfe-tabs__tab--FontWeight,var(--pfe-theme--font-weight--normal,400));--pf-c--FontSize:var(--pfe-tabs--FontSize)}:host #tab{display:inline-flex;align-items:center;height:100%}:host #tab *{font-size:inherit;font-weight:inherit;color:inherit;margin:0}:host([aria-selected=true]){background-color:var(--pfe-tabs--BackgroundColor,transparent);border-bottom-color:var(--pfe-tabs--BorderColor,var(--pfe-theme--color--ui-accent,#06c))}:host([aria-selected=true]) #tab *{color:var(--pfe-tabs--Color--focus)}:host(:active),:host(:hover){background-color:var(--pfe-tabs--BackgroundColor,transparent);border-bottom-color:var(--pfe-tabs--BorderColor--hover,#b8bbbe)}:host(:active) #tab *,:host(:hover) #tab *{color:var(--pfe-tabs--Color--focus)}@media screen and (min-width:768px){:host([vertical]){border-bottom-color:transparent;border-bottom-width:0;border-left-color:var(--pfe-theme--color--surface--border,#d2d2d2);border-left-width:var(--pfe-theme--ui--border-width,1px);padding:var(--pfe-theme--container-padding,1rem);--pfe-tabs--Margin:0 calc(var(--pfe-theme--ui--border-width, 1px) * -1) 0 0}:host([vertical][aria-selected=true]){border-left-color:var(--pfe-tabs--BorderColor,var(--pfe-theme--color--ui-accent,#06c));border-left-width:3px}:host([vertical]:not([variant=earth])){border-left:var(--pfe-theme--ui--border-width,1px) var(--pfe-theme--ui--border-style,solid) var(--pfe-theme--color--surface--border,#d2d2d2);text-align:left!important}:host([vertical]:not([variant=earth])[aria-selected=true]){border-right:var(--pfe-tabs--BorderWidth,var(--pfe-theme--ui--border-width--active,3px)) var(--pfe-theme--ui--border-style,solid) transparent;border-left:var(--pfe-tabs--BorderWidth,var(--pfe-theme--ui--border-width--active,3px)) var(--pfe-theme--ui--border-style,solid) var(--pfe-tabs--BorderColor,var(--pfe-theme--color--ui-accent,#06c));padding-left:calc(var(--pfe-theme--container-padding,1rem) - 2px)}:host([vertical]:not([variant=earth])[aria-selected=false]){border-right:var(--pfe-tabs--BorderWidth,var(--pfe-theme--ui--border-width--active,3px)) var(--pfe-theme--ui--border-style,solid) transparent}:host([vertical]:not([variant=earth])[aria-selected=false]:hover){border-right:var(--pfe-tabs--BorderWidth,var(--pfe-theme--ui--border-width--active,3px)) var(--pfe-theme--ui--border-style,solid) transparent;border-bottom:0;border-left:var(--pfe-tabs--BorderWidth,var(--pfe-theme--ui--border-width--active,3px)) var(--pfe-theme--ui--border-style,solid) var(--pfe-tabs--BorderColor--hover,#b8bbbe);padding-left:calc(var(--pfe-theme--container-padding,1rem) - 2px)}}:host(:not([vertical])[variant=earth]:not([aria-selected=true]):first-of-type){border-left-color:transparent}:host(:not([vertical])[variant=earth]:not([aria-selected=true]):last-of-type){border-right-color:transparent}:host([variant=earth][aria-selected=false]){background-color:var(--pfe-tabs--BackgroundColor--inactive,var(--pfe-theme--color--surface--lighter,#f0f0f0));border-color:var(--pfe-theme--color--surface--border,#d2d2d2);border-top-width:var(--pfe-tabs--BorderWidth,var(--pfe-theme--ui--border-width--active,3px));border-top-color:transparent;border-bottom-color:var(--pfe-tabs--BorderColor--hover,#b8bbbe);border-bottom-width:var(--pfe-theme--ui--border-width,1px)}:host([variant=earth][aria-selected=false]:hover){border-top-color:var(--pfe-tabs--BorderColor--hover,#b8bbbe)}:host([variant=earth][aria-selected=true]){background-color:var(--pfe-tabs--BackgroundColor,var(--pfe-theme--color--surface--lightest,#fff));border-bottom:0;border-left-color:var(--pfe-theme--color--surface--border,#d2d2d2);border-right-color:var(--pfe-theme--color--surface--border,#d2d2d2);border-top:solid var(--pfe-tabs--BorderColor,var(--pfe-theme--color--ui-accent,#06c)) var(--pfe-tabs--BorderWidth,var(--pfe-theme--ui--border-width--active,3px))}:host([variant=earth][aria-selected=true]:last-of-type){border-right:var(--pfe-theme--ui--border-width,1px) var(--pfe-theme--ui--border-style,solid) var(--pfe-theme--color--surface--border,#d2d2d2)}@media screen and (min-width:768px){:host([vertical][variant=earth]){border-top:var(--pfe-theme--ui--border-width,1px) var(--pfe-theme--ui--border-style,solid) var(--pfe-theme--color--surface--border,#d2d2d2);border-bottom:var(--pfe-theme--ui--border-width,1px) var(--pfe-theme--ui--border-style,solid) var(--pfe-theme--color--surface--border,#d2d2d2);border-left-width:var(--pfe-theme--ui--border-width--active,3px);text-align:left}:host([vertical][variant=earth][aria-selected=false]:first-of-type){border-top-color:transparent;border-left:var(--pfe-tabs--BorderWidth,var(--pfe-theme--ui--border-width--active,3px)) var(--pfe-theme--ui--border-style,solid) transparent}:host([vertical][variant=earth][aria-selected=false]:last-of-type){border-bottom-color:transparent}:host([vertical][variant=earth][aria-selected=false]){border-right:0;border-bottom-color:transparent;border-left-color:transparent}:host([vertical][variant=earth][aria-selected=false]:hover){border-left-color:var(--pfe-tabs--BorderColor--hover,#b8bbbe);border-top-color:var(--pfe-theme--color--surface--border,#d2d2d2)}:host([vertical][variant=earth][aria-selected=false]:first-of-type:hover){border-left-color:var(--pfe-theme--color--surface--border,#d2d2d2);border-top-color:transparent}:host([vertical][variant=earth][aria-selected=true]){border-top-color:var(--pfe-theme--color--surface--border,#d2d2d2);border-left-color:var(--pfe-tabs--BorderColor,var(--pfe-theme--color--ui-accent,#06c));border-right-color:transparent;margin-right:-1px}}:host([on=dark][variant=earth]){--pfe-tabs--Color:var(--pfe-theme--color--text--on-dark, #fff);--pfe-tabs--Color--focus:var(--pfe-theme--color--text--on-dark, #fff);border-right-color:var(--pfe-theme--color--surface--border--darker,#6a6e73);border-left-color:var(--pfe-theme--color--surface--border--darker,#6a6e73)}:host([on=dark][variant=earth][aria-selected=false]){--pfe-tabs--Color:var(--pfe-theme--color--text--muted--on-dark, #d2d2d2);--pfe-tabs--BackgroundColor--inactive:var(--pfe-theme--color--surface--darker, #3c3f42)}:host([on=dark][variant=earth][aria-selected=true]){--pfe-tabs--Color--focus:var(--pfe-theme--color--text--on-dark, #fff);--pfe-tabs--BackgroundColor:var(--pfe-theme--color--surface--darkest, #151515)}:host([variant=earth][on=saturated]){--pfe-tabs--BackgroundColor:var(--pfe-theme--color--surface--accent, #004080);--pfe-tabs--BackgroundColor--inactive:var(--pfe-theme--color--surface--complement, #002952);border-right-color:var(--pfe-theme--color--surface--border--darker,#6a6e73);border-left-color:var(--pfe-theme--color--surface--border--darker,#6a6e73)}:host([variant=earth][on=saturated][aria-selected=false]){--pfe-tabs--Color:#6a6e73//!important}:host([variant=earth][on=saturated][aria-selected=true]){--pfe-tabs--Color:#151515}:host([variant=earth][on=saturated][aria-selected=false]:hover){--pfe-tabs--BackgroundColor:var(--pfe-theme--color--surface--complement, #002952);--pfe-tabs--Color:#6a6e73//!important}:host([on=saturated]:not([variant=earth])){--pfe-tabs--Color:var(--pfe-theme--color--text--on-saturated, #fff);--pfe-tabs--Color--focus:var(--pfe-theme--color--text--on-saturated, #fff)}:host([on=saturated]:not([variant=earth])[aria-selected=true]){--pfe-tabs--Color--focus:var(--pfe-theme--color--text--on-saturated, #fff);--pfe-tabs--BorderColor:var(--pfe-theme--color--ui-base--on-saturated, #fff)}:host([on=saturated]:not([variant=earth])[aria-selected=false]){--pfe-tabs--Color:var(--pfe-theme--color--text--muted--on-saturated, #d2d2d2)}:host([on=saturated]:not([variant=earth])[aria-selected=false]:hover){--pfe-tabs--BorderColor:var(--pfe-theme--color--surface--border, #d2d2d2)}:host([on=dark]:not([variant=earth])){--pfe-tabs--Color:var(--pfe-theme--color--text--on-dark, #fff);--pfe-tabs--Color--focus:var(--pfe-theme--color--text--on-dark, #fff)}:host([on=dark]:not([variant=earth])[aria-selected=false]){--pfe-tabs--Color:var(--pfe-theme--color--text--muted--on-saturated, #d2d2d2)}:host([on=dark]:not([variant=earth])[aria-selected=false]:hover){--pfe-tabs--BorderColor:var(--pfe-theme--color--surface--lightest, #fff);border-bottom-color:var(--pfe-theme--color--surface--base,#f0f0f0);--pfe-tabs__tab--BorderBottom:var(--pfe-tabs--BorderWidth, var(--pfe-theme--ui--border-width--active, 3px)) var(--pfe-theme--ui--border-style, solid) var(--pfe-theme--color--surface--border, #d2d2d2)}:host([on=dark]:not([variant=earth])[vertical][aria-selected=false]:hover){border-bottom-color:transparent}`;
var f16 = v11;
function E4(i22) {
  return i22 instanceof HTMLElement && i22.tagName === "SLOT";
}
__name(E4, "E");
var t13 = /* @__PURE__ */ __name(class extends s4 {
  constructor() {
    super(...arguments);
    this.selected = "false";
    this.variant = "wind";
    this.logger = new n6(this);
  }
  get tabindex() {
    return this.tabIndex;
  }
  set tabindex(r21) {
    this.tabIndex = r21;
  }
  connectedCallback() {
    super.connectedCallback(), this.setAttribute("role", "tab");
  }
  render() {
    return y`<span id="tab"></span>`;
  }
  _selectedChanged() {
    this.tabIndex = this.selected === "true" ? 0 : -1;
  }
  _init() {
    this._setTabContent(), this.id || (this.id = n11());
  }
  _getTabElement() {
    if (!this.firstElementChild && !this.firstChild) {
      this.logger.warn("No tab content provided");
      return;
    }
    if (this.firstElementChild && this.firstElementChild.tagName)
      if (E4(this.firstElementChild)) {
        let r21 = this.firstElementChild.assignedElements();
        if (r21.length === 0) {
          this.logger.warn("No heading information exists within this slot.");
          return;
        }
        r21.length > 1 && this.logger.warn("Tab heading currently only supports 1 heading tag.");
        let a20 = r21.filter((e24) => e24.tagName.match(/^H[1-6]/) || e24.tagName === "P");
        return a20.length > 0 ? a20[0] : void 0;
      } else {
        if (this.firstElementChild.tagName.match(/^H[1-6]/) || this.firstElementChild.tagName === "P")
          return this.firstElementChild;
        this.logger.warn("Tab heading should contain at least 1 heading tag for correct semantics.");
      }
  }
  async _setTabContent() {
    await this.updateComplete;
    let r21 = "", a20 = "h3", e24 = this._getTabElement();
    if (e24 && (r21 = e24?.textContent?.trim().replace(/\s+/g, " ") ?? "", a20 = e24.tagName.toLowerCase()), e24 || this.textContent?.trim().replace(/\s+/g, " ") && (r21 = this.textContent.trim().replace(/\s+/g, " ")), !r21) {
      this.logger.warn("There does not appear to be any content in the tab region.");
      return;
    }
    let d13 = document.createElement(a20);
    d13.textContent = r21, this._tabItem && (this._tabItem.innerHTML = "", this._tabItem.appendChild(d13));
  }
}, "t");
t13.version = "2.0.0-next.2", t13.styles = [f16], o23([p3, e5({ reflect: true, attribute: "aria-selected" })], t13.prototype, "selected", 2), o23([e5({ reflect: true, attribute: "aria-controls" })], t13.prototype, "controls", 2), o23([e5({ reflect: true })], t13.prototype, "variant", 2), o23([x2(), e5({ reflect: true })], t13.prototype, "on", 2), o23([i4("#tab")], t13.prototype, "_tabItem", 2), o23([c6({ observe: { characterData: true, childList: true, subtree: true } })], t13.prototype, "_init", 1), o23([o6], t13.prototype, "_getTabElement", 1), o23([o6], t13.prototype, "_setTabContent", 1), t13 = o23([e4("pfe-tab"), d4()], t13);

// node_modules/@patternfly/pfe-tabs/pfe-tab-panel.js
init_lit();
init_decorators();
init_decorators2();
init_random();
init_lit();
var l22 = Object.defineProperty;
var s20 = Object.getOwnPropertyDescriptor;
var a19 = /* @__PURE__ */ __name((i22, o24, d13, n24) => {
  for (var t15 = n24 > 1 ? void 0 : n24 ? s20(o24, d13) : o24, p22 = i22.length - 1, c21; p22 >= 0; p22--)
    (c21 = i22[p22]) && (t15 = (n24 ? c21(o24, d13, t15) : c21(t15)) || t15);
  return n24 && t15 && l22(o24, d13, t15), t15;
}, "a");
var h19 = i`:host{display:block;color:var(--pfe-broadcasted--text,#3c3f42)}:host(:focus){outline:0}:host [tabindex]{display:flex;height:100%}:host .container{margin:0;width:100%;background-color:var(--pfe-tabs__panel--BackgroundColor,transparent);border-top:var(--pfe-tabs__panel--BorderTop,0);border-right:var(--pfe-tabs__panel--BorderRight,0);border-bottom:var(--pfe-tabs__panel--BorderBottom,0);border-left:var(--pfe-tabs__panel--BorderLeft,0);padding-top:var(--pfe-tabs__panel--PaddingTop,calc(var(--pfe-theme--container-padding,1rem) * 3))}@media screen and (min-width:1200px){:host .container{padding-top:var(--pfe-tabs__panel--PaddingTop,calc(var(--pfe-theme--container-padding,1rem) * 3));padding-right:var(--pfe-tabs__panel--PaddingRight,0);padding-bottom:var(--pfe-tabs__panel--PaddingBottom,0);padding-left:var(--pfe-tabs__panel--PaddingLeft,0)}}:host .container::after{clear:both;content:"";display:table}:host([hidden]){display:none}:host([variant=earth]){background-color:var(--pfe-tabs__panel--BackgroundColor,var(--pfe-theme--color--surface--lightest,#fff))}:host([variant=earth]) .container{padding-top:var(--pfe-tabs__panel--PaddingTop,calc(var(--pfe-theme--container-padding,1rem) * 3));padding-right:var(--pfe-tabs__panel--PaddingRight,calc(var(--pfe-theme--container-padding,1rem) * 3));padding-bottom:var(--pfe-tabs__panel--PaddingBottom,calc(var(--pfe-theme--container-padding,1rem) * 3));padding-left:var(--pfe-tabs__panel--PaddingLeft,calc(var(--pfe-theme--container-padding,1rem) * 3))}@media screen and (min-width:768px){:host([variant=wind][vertical]) .container{padding-top:var(--pfe-tabs__panel--PaddingTop,0);padding-bottom:var(--pfe-tabs__panel--PaddingBottom,0);padding-right:var(--pfe-tabs__panel--PaddingRight,0);margin:0 calc(var(--pfe-theme--container-spacer,1rem) - 2px)}:host([variant=earth][vertical]){border-top:var(--pfe-tabs--BorderTop,0);border-left:var(--pfe-tabs--BorderLeft,var(--pfe-theme--ui--border-width,1px) var(--pfe-theme--ui--border-style,solid) var(--pfe-theme--color--surface--border,#d2d2d2));height:100%;background-color:var(--pfe-tabs__panel--BackgroundColor,var(--pfe-theme--color--surface--lightest,#fff))}:host([variant=earth][vertical]) .container{padding-left:var(--pfe-tabs__panel--PaddingLeft,calc(var(--pfe-theme--container-padding,1rem) * 3))}}:host([variant=earth]) .container{padding-top:var(--pfe-tabs__panel--PaddingTop,calc(var(--pfe-theme--container-padding,1rem) * 3));padding-right:var(--pfe-tabs__panel--PaddingRight,calc(var(--pfe-theme--container-padding,1rem) * 3));padding-bottom:var(--pfe-tabs__panel--PaddingBottom,calc(var(--pfe-theme--container-padding,1rem) * 3));padding-left:var(--pfe-tabs__panel--PaddingLeft,calc(var(--pfe-theme--container-padding,1rem) * 3))}:host([on=dark][variant=earth]){background-color:var(--pfe-tabs__panel--BackgroundColor,var(--pfe-theme--color--surface--darkest,#151515));--pfe-broadcasted--text:var(--pfe-theme--color--text--on-dark, #fff);--pfe-broadcasted--text--muted:var(--pfe-theme--color--text--muted--on-dark, #d2d2d2);--pfe-broadcasted--link:var(--pfe-theme--color--link--on-dark, #73bcf7);--pfe-broadcasted--link--hover:var(--pfe-theme--color--link--hover--on-dark, #bee1f4);--pfe-broadcasted--link--focus:var(--pfe-theme--color--link--focus--on-dark, #bee1f4);--pfe-broadcasted--link--visited:var(--pfe-theme--color--link--visited--on-dark, #bee1f4);--pfe-broadcasted--link-decoration:var(--pfe-theme--link-decoration--on-dark, none);--pfe-broadcasted--link-decoration--hover:var(--pfe-theme--link-decoration--hover--on-dark, underline);--pfe-broadcasted--link-decoration--focus:var(--pfe-theme--link-decoration--focus--on-dark, underline);--pfe-broadcasted--link-decoration--visited:var(--pfe-theme--link-decoration--visited--on-dark, none)}:host([on=saturated][variant=earth]){background-color:var(--pfe-tabs__panel--BackgroundColor,var(--pfe-theme--color--surface--accent,#004080));--pfe-broadcasted--text:var(--pfe-theme--color--text--on-saturated, #fff);--pfe-broadcasted--text--muted:var(--pfe-theme--color--text--muted--on-saturated, #d2d2d2);--pfe-broadcasted--link:var(--pfe-theme--color--link--on-saturated, #fff);--pfe-broadcasted--link--hover:var(--pfe-theme--color--link--hover--on-saturated, #fafafa);--pfe-broadcasted--link--focus:var(--pfe-theme--color--link--focus--on-saturated, #fafafa);--pfe-broadcasted--link--visited:var(--pfe-theme--color--link--visited--on-saturated, #d2d2d2);--pfe-broadcasted--link-decoration:var(--pfe-theme--link-decoration--on-saturated, underline);--pfe-broadcasted--link-decoration--hover:var(--pfe-theme--link-decoration--hover--on-saturated, underline);--pfe-broadcasted--link-decoration--focus:var(--pfe-theme--link-decoration--focus--on-saturated, underline);--pfe-broadcasted--link-decoration--visited:var(--pfe-theme--link-decoration--visited--on-saturated, underline)}:host([on=saturated]:not([variant=earth])){--pfe-broadcasted--text:var(--pfe-theme--color--text--on-saturated, #fff);--pfe-broadcasted--text--muted:var(--pfe-theme--color--text--muted--on-saturated, #d2d2d2);--pfe-broadcasted--link:var(--pfe-theme--color--link--on-saturated, #fff);--pfe-broadcasted--link--hover:var(--pfe-theme--color--link--hover--on-saturated, #fafafa);--pfe-broadcasted--link--focus:var(--pfe-theme--color--link--focus--on-saturated, #fafafa);--pfe-broadcasted--link--visited:var(--pfe-theme--color--link--visited--on-saturated, #d2d2d2);--pfe-broadcasted--link-decoration:var(--pfe-theme--link-decoration--on-saturated, underline);--pfe-broadcasted--link-decoration--hover:var(--pfe-theme--link-decoration--hover--on-saturated, underline);--pfe-broadcasted--link-decoration--focus:var(--pfe-theme--link-decoration--focus--on-saturated, underline);--pfe-broadcasted--link-decoration--visited:var(--pfe-theme--link-decoration--visited--on-saturated, underline)}:host([on=dark]:not([variant=earth])){--pfe-broadcasted--text:var(--pfe-theme--color--text--on-dark, #fff);--pfe-broadcasted--text--muted:var(--pfe-theme--color--text--muted--on-dark, #d2d2d2);--pfe-broadcasted--link:var(--pfe-theme--color--link--on-dark, #73bcf7);--pfe-broadcasted--link--hover:var(--pfe-theme--color--link--hover--on-dark, #bee1f4);--pfe-broadcasted--link--focus:var(--pfe-theme--color--link--focus--on-dark, #bee1f4);--pfe-broadcasted--link--visited:var(--pfe-theme--color--link--visited--on-dark, #bee1f4);--pfe-broadcasted--link-decoration:var(--pfe-theme--link-decoration--on-dark, none);--pfe-broadcasted--link-decoration--hover:var(--pfe-theme--link-decoration--hover--on-dark, underline);--pfe-broadcasted--link-decoration--focus:var(--pfe-theme--link-decoration--focus--on-dark, underline);--pfe-broadcasted--link-decoration--visited:var(--pfe-theme--link-decoration--visited--on-dark, none)}`;
var f17 = h19;
var e22 = /* @__PURE__ */ __name(class extends s4 {
  constructor() {
    super(...arguments);
    this.selected = false;
    this.hidden = false;
    this.role = "tabpanel";
    this.tabIndex = 0;
    this.variant = "wind";
  }
  get tabindex() {
    return this.tabIndex;
  }
  set tabindex(d13) {
    this.tabIndex = d13;
  }
  connectedCallback() {
    super.connectedCallback(), this.setAttribute("role", "tabpanel");
  }
  render() {
    return y`<div tabindex="-1" role="tabpanel"><div class="container" part="container"><slot></slot></div></div>`;
  }
  _init() {
    this.id || (this.id = n11()), this.previousElementSibling instanceof t13 && this.previousElementSibling.selected !== "true" && (this.hidden = true);
  }
}, "e");
e22.version = "2.0.0-next.2", e22.styles = [f17], a19([x2(), e5({ reflect: true })], e22.prototype, "on", 2), a19([e5({ type: Boolean, reflect: true, attribute: "aria-selected" })], e22.prototype, "selected", 2), a19([e5({ type: Boolean, reflect: true })], e22.prototype, "hidden", 2), a19([e5({ reflect: true })], e22.prototype, "role", 2), a19([e5({ type: Number })], e22.prototype, "tabIndex", 2), a19([e5({ attribute: "aria-labelledby", reflect: true })], e22.prototype, "labelledby", 2), a19([e5({ reflect: true })], e22.prototype, "variant", 2), a19([c6({ observe: { childList: true, subtree: true } })], e22.prototype, "_init", 1), e22 = a19([e4("pfe-tab-panel"), d4()], e22);

// node_modules/@patternfly/pfe-tabs/pfe-tabs.js
init_lit();
var g10 = Object.defineProperty;
var x11 = Object.getOwnPropertyDescriptor;
var s21 = /* @__PURE__ */ __name((c21, l23, t15, e24) => {
  for (var a20 = e24 > 1 ? void 0 : e24 ? x11(l23, t15) : l23, i22 = c21.length - 1, o24; i22 >= 0; i22--)
    (o24 = c21[i22]) && (a20 = (e24 ? o24(l23, t15, a20) : o24(a20)) || a20);
  return e24 && a20 && g10(l23, t15, a20), a20;
}, "s");
var y10 = i`:host{display:var(--pfe-tabs--Display,block);padding:var(--pfe-tabs--Padding,0)}:host .tabs{display:flex;flex-direction:var(--pfe-tabs__tabs--FlexDirection,row);width:var(--pfe-tabs__tabs--Width,auto);border-top:var(--pfe-tabs__tabs--BorderTop,0);border-right:var(--pfe-tabs__tabs--BorderRight,0);border-bottom:var(--pfe-tabs__tabs--BorderBottom,var(--pfe-theme--ui--border-width,1px) var(--pfe-theme--ui--border-style,solid) var(--pfe-tabs__tabs--BorderColor,var(--pfe-theme--color--surface--border,#d2d2d2)));border-left:var(--pfe-tabs__tabs--BorderLeft,0);padding:var(--pfe-tabs__tabs--Padding,0)}:host .panels{width:var(--pfe-tabs__panels--Width,auto)}:host(:not([vertical])[tab-align=center]) .tabs{justify-content:center}@media screen and (min-width:768px){:host([vertical]){--pfe-tabs--Display:flex;--pfe-tabs__tabs--FlexDirection:column;--pfe-tabs__tabs--Width:20%;--pfe-tabs__tabs--BorderRight:var(--pfe-theme--ui--border-width, 1px) var(--pfe-theme--ui--border-style, solid) var(--pfe-tabs--BorderColor);--pfe-tabs__tabs--BorderBottom:0;--pfe-tabs__panels--Width:80%;--pfe-tabs__panels--PaddingRight:var(--pfe-theme--container-padding, 1rem)}}:host([variant=earth]){--pfe-tabs__tabs--PaddingLeft:var(--pfe-theme--container-padding, 1rem)}:host([vertical]) .tabs-prefix,:host([vertical]) .tabs-suffix{left:0;top:0;content:" ";height:calc(var(--pfe-theme--container-padding,1rem) * 2);width:1px;position:relative}@media screen and (min-width:768px){:host([vertical]:not([variant=earth])) .tabs-prefix,:host([vertical]:not([variant=earth])) .tabs-suffix{background-color:var(--pfe-tabs__tabs--BorderColor,var(--pfe-theme--color--surface--border,#d2d2d2))}}:host(:not([vertical])[variant=earth]) .tabs-prefix{left:0;top:0;content:" ";height:1px;width:var(--pfe-theme--container-padding,1rem);position:relative}@media screen and (min-width:768px){:host(:not([vertical])[variant=earth]) .tabs-prefix{width:calc(var(--pfe-theme--container-padding,1rem) * 2)}}:host([hidden]){display:none}`;
var b10 = y10;
var r20 = /* @__PURE__ */ __name(class extends s4 {
  constructor() {
    super(...arguments);
    this.logger = new n6(this);
    this._linked = false;
    this._updateHistory = true;
    this._setFocus = false;
    this.variant = "wind";
    this.vertical = false;
    this.selectedIndex = 0;
    this.orientation = "horizontal";
    this.tabHistory = false;
    this.role = "tablist";
  }
  connectedCallback() {
    super.connectedCallback(), this.addEventListener("keydown", this._onKeyDown), this.addEventListener("click", this._onClick);
  }
  render() {
    return y`<div class="tabs" part="tabs"><div class="tabs-prefix"></div><slot name="tab"></slot><div class="tabs-suffix"></div></div><div class="panels" part="panels"><slot name="panel"></slot></div>`;
  }
  disconnectedCallback() {
    super.disconnectedCallback(), this.removeEventListener("keydown", this._onKeyDown), this._allTabs().forEach((t15) => t15.removeEventListener("click", this._onClick)), this.tabHistory && window.removeEventListener("popstate", this._popstateEventHandler);
  }
  _verticalChanged() {
    this.vertical ? this.orientation = "vertical" : this.orientation = "horizontal";
  }
  async _selectedIndexChanged(t15, e24) {
    e24 != null && t15 !== e24 && (await this.updateComplete, this._linkPanels(), this.selectIndex(e24), this._updateHistory = true);
  }
  _tabHistoryChanged() {
    this.tabHistory ? window.addEventListener("popstate", this._popstateEventHandler) : window.removeEventListener("popstate", this._popstateEventHandler);
  }
  async _init() {
    await this.updateComplete;
    let t15 = this._getTabIndexFromURL();
    this._linked = false, this._linkPanels(), this.role = "tablist", t15 > -1 && (this._setFocus = true, this.selectedIndex = t15);
  }
  _linkPanels() {
    this._linked || (this.updateAccessibility(), this._linked = true);
  }
  _allPanels() {
    return [...this.children].filter((t15) => t15.matches("pfe-tab-panel"));
  }
  _allTabs() {
    return [...this.children].filter((t15) => t15.matches("pfe-tab"));
  }
  _panelForTab(t15) {
    if (!t15 || !t15.controls)
      return null;
    let e24 = this.querySelector(`#${t15.controls}`);
    return e24 instanceof e22 ? e24 : null;
  }
  _prevTab() {
    let t15 = this._allTabs(), e24 = t15.findIndex((a20) => a20.selected === "true") - 1;
    return t15[(e24 + t15.length) % t15.length];
  }
  _firstTab() {
    return this._allTabs()[0];
  }
  _lastTab() {
    let t15 = this._allTabs();
    return t15[t15.length - 1];
  }
  _nextTab() {
    let t15 = this._allTabs(), e24 = t15.findIndex((a20) => a20.selected === "true") + 1;
    return t15[e24 % t15.length];
  }
  _getTabIndex(t15) {
    return t15 instanceof t13 ? this._allTabs().findIndex((a20) => a20.id === t15.id) : (this.logger.warn("No tab was provided to _getTabIndex; required to return the index value."), 0);
  }
  _selectTab(t15) {
    if (!t15)
      return;
    this.reset();
    let e24 = this._panelForTab(t15), a20 = false;
    e24 || this.logger.warn(`No panel was found for the selected tab${t15.id ? `: pfe-tab#${t15.id}` : ""}`), this.selected && this.selected !== t15 && (a20 = true, this.dispatchEvent(n12("pfe-tabs:hidden-tab", { tab: this.selected }))), t15.selected = "true", e24 && (e24.hidden = false), this.selected = t15, a20 && (this._setFocus && t15.focus(), this.dispatchEvent(n12("pfe-tabs:shown-tab", { tab: this.selected }))), this._setFocus = false;
  }
  _onKeyDown(t15) {
    if (!this._allTabs().find((o24) => o24 === t15.target) || t15.altKey)
      return;
    let i22;
    switch (t15.key) {
      case "ArrowLeft":
      case "ArrowUp":
        i22 = this._prevTab();
        break;
      case "ArrowRight":
      case "ArrowDown":
        i22 = this._nextTab();
        break;
      case "Home":
        i22 = this._firstTab();
        break;
      case "End":
        i22 = this._lastTab();
        break;
      default:
        return;
    }
    t15.preventDefault(), i22 ? (this.selectedIndex = this._getTabIndex(i22), this._setFocus = true) : this.logger.warn("No new tab could be found.");
  }
  _onClick(t15) {
    !this._allTabs().find((a20) => a20 === t15.currentTarget) || (this.selectedIndex = this._getTabIndex(t15.currentTarget));
  }
  _getTabIndexFromURL() {
    let t15 = new URLSearchParams(window.location.search), e24 = t15.has(this.id);
    if (t15 && e24) {
      let a20 = t15.get(this.id);
      return this._allTabs().findIndex((i22) => i22.id === a20);
    }
    return -1;
  }
  _popstateEventHandler() {
    let t15 = this._getTabIndexFromURL();
    this._updateHistory = false, t15 > -1 && (this.selectedIndex = t15);
  }
  select(t15) {
    if (!(t15 instanceof t13)) {
      this.logger.warn("the tab must be a pfe-tab element");
      return;
    }
    this.selectedIndex = this._getTabIndex(t15);
  }
  selectIndex(t15) {
    if (t15 == null)
      return;
    let e24 = typeof t15 == "string" ? parseInt(t15, 10) : t15, a20 = this._allTabs(), i22 = a20[e24];
    if (a20.length > 0 && !i22) {
      this.logger.warn(`tab ${t15} does not exist`);
      return;
    } else if (!a20 && !i22)
      return;
    if (this.selected && this.tabHistory && this._updateHistory) {
      let { pathname: o24 } = window.location, p22 = new URLSearchParams(window.location.search), { hash: m24 } = window.location;
      p22.set(this.id, i22.id), history.pushState({}, "", `${o24}?${p22.toString()}${m24}`);
    }
    return this._selectTab(i22), i22;
  }
  reset() {
    let t15 = this._allTabs(), e24 = this._allPanels();
    t15.forEach((a20) => a20.selected = "false"), e24.forEach((a20) => a20.hidden = true);
  }
  updateAccessibility() {
    this._allTabs().forEach((t15) => {
      let e24 = t15.nextElementSibling;
      if (!(e24 instanceof e22)) {
        this.logger.warn("not a sibling of a <pfe-tab-panel>");
        return;
      }
      t15.controls = e24.id, e24.labelledby = t15.id, t15.addEventListener("click", this._onClick);
    });
  }
}, "r");
r20.version = "2.0.0-next.2", r20.styles = [b10], s21([c5(), e5({ reflect: true, attribute: "color-palette" })], r20.prototype, "colorPalette", 2), s21([d3({ alias: "colorPalette", attribute: "color" })], r20.prototype, "color", 2), s21([x2(), e5({ reflect: true })], r20.prototype, "on", 2), s21([s5("pfe-tab", "pfe-tab-panel"), e5({ reflect: true })], r20.prototype, "variant", 2), s21([p3, s5("pfe-tab", "pfe-tab-panel"), e5({ type: Boolean, reflect: true })], r20.prototype, "vertical", 2), s21([p3, e5({ type: Number, reflect: true, attribute: "selected-index" })], r20.prototype, "selectedIndex", 2), s21([e5({ type: String, attribute: "aria-orientation", reflect: true })], r20.prototype, "orientation", 2), s21([e5({ reflect: true })], r20.prototype, "tabAlign", 2), s21([e5({ reflect: true, attribute: "aria-controls" })], r20.prototype, "controls", 2), s21([p3, e5({ type: Boolean, reflect: true, attribute: "tab-history" })], r20.prototype, "tabHistory", 2), s21([e5({ type: Boolean, reflect: true })], r20.prototype, "selected", 2), s21([e5({ reflect: true })], r20.prototype, "role", 2), s21([c6({ observe: { childList: true, subtree: true } })], r20.prototype, "_init", 1), s21([o6], r20.prototype, "_linkPanels", 1), s21([o6], r20.prototype, "_onKeyDown", 1), s21([o6], r20.prototype, "_onClick", 1), s21([o6], r20.prototype, "_popstateEventHandler", 1), r20 = s21([e4("pfe-tabs"), d4()], r20);

// node_modules/@patternfly/pfe-toast/pfe-toast.js
init_lit();
init_decorators();
init_core();
init_decorators2();
init_deprecatedCustomEvent();
init_lit();
var b11 = Object.defineProperty;
var g11 = Object.getOwnPropertyDescriptor;
var i21 = /* @__PURE__ */ __name((a20, r21, s23, t15) => {
  for (var o24 = t15 > 1 ? void 0 : t15 ? g11(r21, s23) : r21, l23 = a20.length - 1, c21; l23 >= 0; l23--)
    (c21 = a20[l23]) && (o24 = (t15 ? c21(r21, s23, o24) : c21(o24)) || o24);
  return t15 && o24 && b11(r21, s23, o24), o24;
}, "i");
var x12 = i`@charset "UTF-8";:host{align-items:stretch;display:flex;flex-flow:row wrap;justify-content:flex-start;position:absolute;right:var(--pfe-toast--Right,calc(-1 * (var(--pfe-toast--MaxWidth,500px) + var(--pfe-toast--Right--offset,50px))));top:var(--pfe-toast--Top,50px);transition:right var(--pfe-theme--animation-speed, .3s) var(--pfe-theme--animation-timing, cubic-bezier(.465, .183, .153, .946));will-change:right;max-width:var(--pfe-toast--MaxWidth,500px);min-width:var(--pfe-toast--MinWidth,250px)}@media only screen and (max-width:575px){:host{max-width:calc(var(--pfe-toast--MaxWidth,500px)/ 2);min-width:calc(var(--pfe-toast--MinWidth,250px)/ 2)}}:host([hidden]){display:none}:host(.open){--pfe-toast--Right:50px}:host(:not(.open)){--pfe-toast--Right:calc(-1 * var(--pfe-toast--MaxWidth, 500px) + var(--pfe-toast--Right--offset, 50px))}::slotted(:first-child){margin-top:0}::slotted(button){background:0 0;border-radius:0;display:inline-block;margin-bottom:0;margin-right:1rem;padding:(.5rem .75rem);text-align:center}.pfe-toast__container{align-self:flex-start;flex:1 1 auto;align-items:flex-start;display:flex;flex-flow:row nowrap;justify-content:flex-start;background-color:var(--pfe-toast__container--BackgroundColor,var(--pfe-theme--color--surface--lightest,#fff));box-shadow:var(--pfe-toast__container--BoxShadow,var(--pfe-theme--box-shadow--lg,0 .1875rem .4375rem .1875rem rgba(3,3,3,.13),0 .6875rem 1.5rem 1rem rgba(3,3,3,.12)));color:var(--pfe-toast__container--Color,var(--pfe-theme--color--text,#151515));padding:var(--pfe-toast__container--Padding,var(--pfe-theme--container-padding,1rem))}.pfe-toast__content{flex:1 1 auto}.pfe-toast__close{flex:0 0 auto;background-color:transparent;border:none;cursor:pointer;margin:0;padding:var(--pfe-toast__close--Padding,var(--pfe-toast__close--PaddingTop,0) var(--pfe-toast__close--PaddingRight,0) var(--pfe-toast__close--PaddingBottom,0) var(--pfe-toast__close--PaddingLeft,0))}.pfe-toast__close>svg{fill:var(--pfe-toast__close--svg--Fill,var(--pfe-theme--color--feedback--default--darkest,#3c3f42));height:var(--pfe-toast__close--svg--Height,12px);width:var(--pfe-toast__close--svg--Width,12px)}.pfe-toast__close:hover>svg{fill:var(--pfe-toast__close--svg--Fill--hover,#333)}`;
var h20 = x12;
var p20 = /* @__PURE__ */ __name(class extends n10 {
  constructor() {
    super("open");
  }
}, "p");
var d12 = /* @__PURE__ */ __name(class extends n10 {
  constructor() {
    super("close");
  }
}, "d");
var e23 = /* @__PURE__ */ __name(class extends s4 {
  constructor() {
    super(...arguments);
    this.closeLabel = "Close";
    this.doesAutoDismiss = !!this.autoDismiss;
    this.isOpen = false;
  }
  static async toast(s23) {
    let t15 = document.createElement("pfe-toast");
    return t15.append(s23), t15.addEventListener("close", () => t15.remove(), { once: true }), document.body.append(t15), t15.open(), await t15.updateComplete, t15;
  }
  connectedCallback() {
    super.connectedCallback(), this.hidden = true, this._setAccessibility(), this.addEventListener("keydown", this._keydownHandler);
  }
  render() {
    return y`<div class="pfe-toast__container" part="container"><div class="pfe-toast__content" part="content"><slot></slot></div><button part="close-button" class="pfe-toast__close" aria-label="${l14(this.closeLabel)}" @click="${this.close}"><svg version="1.1" xmlns="http://www.w3.org/2000/svg" width="32" height="32" viewBox="-11 11 22 23"><path d="M30 16.669v-1.331c0-0.363-0.131-0.675-0.394-0.938s-0.575-0.394-0.938-0.394h-10.669v-10.65c0-0.362-0.131-0.675-0.394-0.938s-0.575-0.394-0.938-0.394h-1.331c-0.363 0-0.675 0.131-0.938 0.394s-0.394 0.575-0.394 0.938v10.644h-10.675c-0.362 0-0.675 0.131-0.938 0.394s-0.394 0.575-0.394 0.938v1.331c0 0.363 0.131 0.675 0.394 0.938s0.575 0.394 0.938 0.394h10.669v10.644c0 0.363 0.131 0.675 0.394 0.938 0.262 0.262 0.575 0.394 0.938 0.394h1.331c0.363 0 0.675-0.131 0.938-0.394s0.394-0.575 0.394-0.938v-10.637h10.669c0.363 0 0.675-0.131 0.938-0.394 0.269-0.262 0.4-0.575 0.4-0.938z" transform="rotate(45)"/></svg></button></div>`;
  }
  disconnectedCallback() {
    super.disconnectedCallback(), this.removeEventListener("keydown", this._keydownHandler);
  }
  _setAccessibility() {
    this.doesAutoDismiss = !!this.autoDismiss, this.doesAutoDismiss ? (this.removeAttribute("aria-label"), this.removeAttribute("aria-describedby"), this.setAttribute("role", "alert"), this.setAttribute("aria-live", "polite"), this.setAttribute("aria-atomic", "true")) : (this.removeAttribute("aria-live"), this.removeAttribute("aria-atomic"), this.setAttribute("role", "alertdialog"), this.hasAttribute("aria-label") || this.setAttribute("aria-label", "Alert dialog"), this.setAttribute("aria-describedby", "pfe-toast__content"));
  }
  _toMilliseconds(s23 = "") {
    let t15 = s23.match(/\d+/) || [8e3];
    return (s23.match(/\D+/) || "")[0] === "s" ? Number(t15[0]) * 1e3 : Number(t15[0]);
  }
  _keydownHandler(s23) {
    let { target: t15 } = s23, { key: o24 } = s23;
    switch (o24) {
      case "Escape":
      case "Esc":
        s23.preventDefault(), this.close();
        break;
      case "Enter":
        t15 === this._toastCloseButton && s23.preventDefault(), this.close();
        break;
      default:
        break;
    }
  }
  open() {
    return this.isOpen = true, this.hidden = false, setTimeout(() => this.classList.add("open"), 500), this.dispatchEvent(new p20()), this.dispatchEvent(n12("pfe-toast:open")), this.doesAutoDismiss && setTimeout(this.close, this._toMilliseconds(this.autoDismiss)), this;
  }
  close() {
    return this.isOpen = false, setTimeout(() => {
      this.classList.remove("open"), this.hidden = true;
    }, 500), this.dispatchEvent(new d12()), this.dispatchEvent(n12("pfe-toast:close")), this;
  }
  toggle() {
    return this.isOpen ? this.close() : this.open(), this;
  }
}, "e");
e23.version = "2.0.0-next.2", e23.styles = [h20], i21([p3("_setAccessibility"), e5({ attribute: "auto-dismiss", reflect: true })], e23.prototype, "autoDismiss", 2), i21([e5({ attribute: "close-label", reflect: true })], e23.prototype, "closeLabel", 2), i21([t3()], e23.prototype, "doesAutoDismiss", 2), i21([t3()], e23.prototype, "isOpen", 2), i21([i4(".pfe-toast__close")], e23.prototype, "_toastCloseButton", 2), i21([o6], e23.prototype, "_keydownHandler", 1), i21([o6], e23.prototype, "open", 1), i21([o6], e23.prototype, "close", 1), i21([o6], e23.prototype, "toggle", 1), e23 = i21([e4("pfe-toast"), d4()], e23);

// node_modules/@patternfly/pfe-tooltip/pfe-tooltip.js
init_decorators();
var p21 = Object.defineProperty;
var c20 = Object.getOwnPropertyDescriptor;
var s22 = /* @__PURE__ */ __name((r21, a20, m24, o24) => {
  for (var e24 = o24 > 1 ? void 0 : o24 ? c20(a20, m24) : a20, l23 = r21.length - 1, n24; l23 >= 0; l23--)
    (n24 = r21[l23]) && (e24 = (o24 ? n24(a20, m24, e24) : n24(e24)) || e24);
  return o24 && e24 && p21(a20, m24, e24), e24;
}, "s");
var t14 = /* @__PURE__ */ __name(class extends l16 {
}, "t");
t14.version = "1.1.0-next.0", t14 = s22([e4("pfe-tooltip")], t14);
export {
  h6 as AccordionCollapseEvent,
  p7 as AccordionExpandEvent,
  L4 as AutocompleteClearEvent,
  I2 as AutocompleteSearchEvent,
  M3 as AutocompleteSelectEvent,
  H2 as AutocompleteShowEvent,
  o as CSSResult,
  ContextProvider,
  s16 as CtaSelectEvent,
  f10 as DropdownChangeEvent,
  s4 as LitElement,
  h7 as ModalCancelEvent,
  g3 as ModalCloseEvent,
  m8 as ModalOpenEvent,
  r12 as PfeAccordion,
  o14 as PfeAutocomplete,
  s11 as PfeAvatar,
  o15 as PfeBadge,
  e13 as PfeBand,
  o17 as PfeButton,
  e14 as PfeCard,
  e15 as PfeCollapse,
  e16 as PfeCta,
  r16 as PfeDatetime,
  r17 as PfeDropdown,
  e17 as PfeHealthIndex,
  o9 as PfeIcon,
  e18 as PfeIconPanel,
  r19 as PfeJumpLinks,
  r18 as PfeJumpLinksNav,
  t11 as PfeJumpLinksPanel,
  i19 as PfeMarkdown,
  t7 as PfeModal,
  t12 as PfeNumber,
  e20 as PfePageStatus,
  e21 as PfeProgressIndicator,
  o22 as PfeSelect,
  r20 as PfeTabs,
  e23 as PfeToast,
  t14 as PfeTooltip,
  d as ReactiveElement,
  RhAlert,
  RhBlockquote,
  RhCta,
  RhDemo,
  RhDialog,
  RhSecondaryNav,
  RhStat,
  RhTooltip,
  d11 as SelectChangeEvent,
  d12 as ToastCloseEvent,
  p20 as ToastOpenEvent,
  r4 as UpdatingElement,
  h3 as _$LE,
  z as _$LH,
  S as adoptStyles,
  i as css,
  n2 as defaultConverter,
  c as getCompatibleStyle,
  y as html,
  x as noChange,
  a as notEqual,
  b as nothing,
  A as render,
  e as supportsAdoptingStyleSheets,
  w as svg,
  r as unsafeCSS
};
/*! For license information please see rhds.min.js.LEGAL.txt */
//# sourceMappingURL=rhds.min.js.map
