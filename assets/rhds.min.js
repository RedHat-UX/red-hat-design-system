var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __name = (target, value) => __defProp(target, "name", { value, configurable: true });
var __esm = (fn2, res) => function __init() {
  return fn2 && (res = (0, fn2[__getOwnPropNames(fn2)[0]])(fn2 = 0)), res;
};
var __commonJS = (cb, mod) => function __require() {
  return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;
};
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
  mod
));

// node_modules/tslib/tslib.js
var require_tslib = __commonJS({
  "node_modules/tslib/tslib.js"(exports, module) {
    var __extends2;
    var __assign2;
    var __rest2;
    var __decorate2;
    var __param2;
    var __metadata2;
    var __awaiter2;
    var __generator2;
    var __exportStar2;
    var __values2;
    var __read2;
    var __spread2;
    var __spreadArrays2;
    var __spreadArray2;
    var __await2;
    var __asyncGenerator2;
    var __asyncDelegator2;
    var __asyncValues2;
    var __makeTemplateObject2;
    var __importStar2;
    var __importDefault2;
    var __classPrivateFieldGet2;
    var __classPrivateFieldSet2;
    var __classPrivateFieldIn2;
    var __createBinding2;
    (function(factory) {
      var root = typeof global === "object" ? global : typeof self === "object" ? self : typeof this === "object" ? this : {};
      if (typeof define === "function" && define.amd) {
        define("tslib", ["exports"], function(exports2) {
          factory(createExporter(root, createExporter(exports2)));
        });
      } else if (typeof module === "object" && typeof module.exports === "object") {
        factory(createExporter(root, createExporter(module.exports)));
      } else {
        factory(createExporter(root));
      }
      function createExporter(exports2, previous) {
        if (exports2 !== root) {
          if (typeof Object.create === "function") {
            Object.defineProperty(exports2, "__esModule", { value: true });
          } else {
            exports2.__esModule = true;
          }
        }
        return function(id, v13) {
          return exports2[id] = previous ? previous(id, v13) : v13;
        };
      }
      __name(createExporter, "createExporter");
    })(function(exporter) {
      var extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d17, b16) {
        d17.__proto__ = b16;
      } || function(d17, b16) {
        for (var p22 in b16)
          if (Object.prototype.hasOwnProperty.call(b16, p22))
            d17[p22] = b16[p22];
      };
      __extends2 = /* @__PURE__ */ __name(function(d17, b16) {
        if (typeof b16 !== "function" && b16 !== null)
          throw new TypeError("Class extends value " + String(b16) + " is not a constructor or null");
        extendStatics(d17, b16);
        function __() {
          this.constructor = d17;
        }
        __name(__, "__");
        d17.prototype = b16 === null ? Object.create(b16) : (__.prototype = b16.prototype, new __());
      }, "__extends");
      __assign2 = Object.assign || function(t16) {
        for (var s20, i25 = 1, n25 = arguments.length; i25 < n25; i25++) {
          s20 = arguments[i25];
          for (var p22 in s20)
            if (Object.prototype.hasOwnProperty.call(s20, p22))
              t16[p22] = s20[p22];
        }
        return t16;
      };
      __rest2 = /* @__PURE__ */ __name(function(s20, e25) {
        var t16 = {};
        for (var p22 in s20)
          if (Object.prototype.hasOwnProperty.call(s20, p22) && e25.indexOf(p22) < 0)
            t16[p22] = s20[p22];
        if (s20 != null && typeof Object.getOwnPropertySymbols === "function")
          for (var i25 = 0, p22 = Object.getOwnPropertySymbols(s20); i25 < p22.length; i25++) {
            if (e25.indexOf(p22[i25]) < 0 && Object.prototype.propertyIsEnumerable.call(s20, p22[i25]))
              t16[p22[i25]] = s20[p22[i25]];
          }
        return t16;
      }, "__rest");
      __decorate2 = /* @__PURE__ */ __name(function(decorators, target, key, desc) {
        var c23 = arguments.length, r18 = c23 < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d17;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
          r18 = Reflect.decorate(decorators, target, key, desc);
        else
          for (var i25 = decorators.length - 1; i25 >= 0; i25--)
            if (d17 = decorators[i25])
              r18 = (c23 < 3 ? d17(r18) : c23 > 3 ? d17(target, key, r18) : d17(target, key)) || r18;
        return c23 > 3 && r18 && Object.defineProperty(target, key, r18), r18;
      }, "__decorate");
      __param2 = /* @__PURE__ */ __name(function(paramIndex, decorator) {
        return function(target, key) {
          decorator(target, key, paramIndex);
        };
      }, "__param");
      __metadata2 = /* @__PURE__ */ __name(function(metadataKey, metadataValue) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
          return Reflect.metadata(metadataKey, metadataValue);
      }, "__metadata");
      __awaiter2 = /* @__PURE__ */ __name(function(thisArg, _arguments, P3, generator) {
        function adopt(value) {
          return value instanceof P3 ? value : new P3(function(resolve) {
            resolve(value);
          });
        }
        __name(adopt, "adopt");
        return new (P3 || (P3 = Promise))(function(resolve, reject) {
          function fulfilled(value) {
            try {
              step(generator.next(value));
            } catch (e25) {
              reject(e25);
            }
          }
          __name(fulfilled, "fulfilled");
          function rejected(value) {
            try {
              step(generator["throw"](value));
            } catch (e25) {
              reject(e25);
            }
          }
          __name(rejected, "rejected");
          function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
          }
          __name(step, "step");
          step((generator = generator.apply(thisArg, _arguments || [])).next());
        });
      }, "__awaiter");
      __generator2 = /* @__PURE__ */ __name(function(thisArg, body) {
        var _8 = { label: 0, sent: function() {
          if (t16[0] & 1)
            throw t16[1];
          return t16[1];
        }, trys: [], ops: [] }, f25, y13, t16, g13;
        return g13 = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g13[Symbol.iterator] = function() {
          return this;
        }), g13;
        function verb(n25) {
          return function(v13) {
            return step([n25, v13]);
          };
        }
        __name(verb, "verb");
        function step(op) {
          if (f25)
            throw new TypeError("Generator is already executing.");
          while (g13 && (g13 = 0, op[0] && (_8 = 0)), _8)
            try {
              if (f25 = 1, y13 && (t16 = op[0] & 2 ? y13["return"] : op[0] ? y13["throw"] || ((t16 = y13["return"]) && t16.call(y13), 0) : y13.next) && !(t16 = t16.call(y13, op[1])).done)
                return t16;
              if (y13 = 0, t16)
                op = [op[0] & 2, t16.value];
              switch (op[0]) {
                case 0:
                case 1:
                  t16 = op;
                  break;
                case 4:
                  _8.label++;
                  return { value: op[1], done: false };
                case 5:
                  _8.label++;
                  y13 = op[1];
                  op = [0];
                  continue;
                case 7:
                  op = _8.ops.pop();
                  _8.trys.pop();
                  continue;
                default:
                  if (!(t16 = _8.trys, t16 = t16.length > 0 && t16[t16.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                    _8 = 0;
                    continue;
                  }
                  if (op[0] === 3 && (!t16 || op[1] > t16[0] && op[1] < t16[3])) {
                    _8.label = op[1];
                    break;
                  }
                  if (op[0] === 6 && _8.label < t16[1]) {
                    _8.label = t16[1];
                    t16 = op;
                    break;
                  }
                  if (t16 && _8.label < t16[2]) {
                    _8.label = t16[2];
                    _8.ops.push(op);
                    break;
                  }
                  if (t16[2])
                    _8.ops.pop();
                  _8.trys.pop();
                  continue;
              }
              op = body.call(thisArg, _8);
            } catch (e25) {
              op = [6, e25];
              y13 = 0;
            } finally {
              f25 = t16 = 0;
            }
          if (op[0] & 5)
            throw op[1];
          return { value: op[0] ? op[1] : void 0, done: true };
        }
        __name(step, "step");
      }, "__generator");
      __exportStar2 = /* @__PURE__ */ __name(function(m26, o21) {
        for (var p22 in m26)
          if (p22 !== "default" && !Object.prototype.hasOwnProperty.call(o21, p22))
            __createBinding2(o21, m26, p22);
      }, "__exportStar");
      __createBinding2 = Object.create ? function(o21, m26, k7, k22) {
        if (k22 === void 0)
          k22 = k7;
        var desc = Object.getOwnPropertyDescriptor(m26, k7);
        if (!desc || ("get" in desc ? !m26.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m26[k7];
          } };
        }
        Object.defineProperty(o21, k22, desc);
      } : function(o21, m26, k7, k22) {
        if (k22 === void 0)
          k22 = k7;
        o21[k22] = m26[k7];
      };
      __values2 = /* @__PURE__ */ __name(function(o21) {
        var s20 = typeof Symbol === "function" && Symbol.iterator, m26 = s20 && o21[s20], i25 = 0;
        if (m26)
          return m26.call(o21);
        if (o21 && typeof o21.length === "number")
          return {
            next: function() {
              if (o21 && i25 >= o21.length)
                o21 = void 0;
              return { value: o21 && o21[i25++], done: !o21 };
            }
          };
        throw new TypeError(s20 ? "Object is not iterable." : "Symbol.iterator is not defined.");
      }, "__values");
      __read2 = /* @__PURE__ */ __name(function(o21, n25) {
        var m26 = typeof Symbol === "function" && o21[Symbol.iterator];
        if (!m26)
          return o21;
        var i25 = m26.call(o21), r18, ar = [], e25;
        try {
          while ((n25 === void 0 || n25-- > 0) && !(r18 = i25.next()).done)
            ar.push(r18.value);
        } catch (error) {
          e25 = { error };
        } finally {
          try {
            if (r18 && !r18.done && (m26 = i25["return"]))
              m26.call(i25);
          } finally {
            if (e25)
              throw e25.error;
          }
        }
        return ar;
      }, "__read");
      __spread2 = /* @__PURE__ */ __name(function() {
        for (var ar = [], i25 = 0; i25 < arguments.length; i25++)
          ar = ar.concat(__read2(arguments[i25]));
        return ar;
      }, "__spread");
      __spreadArrays2 = /* @__PURE__ */ __name(function() {
        for (var s20 = 0, i25 = 0, il = arguments.length; i25 < il; i25++)
          s20 += arguments[i25].length;
        for (var r18 = Array(s20), k7 = 0, i25 = 0; i25 < il; i25++)
          for (var a19 = arguments[i25], j3 = 0, jl = a19.length; j3 < jl; j3++, k7++)
            r18[k7] = a19[j3];
        return r18;
      }, "__spreadArrays");
      __spreadArray2 = /* @__PURE__ */ __name(function(to, from, pack) {
        if (pack || arguments.length === 2)
          for (var i25 = 0, l25 = from.length, ar; i25 < l25; i25++) {
            if (ar || !(i25 in from)) {
              if (!ar)
                ar = Array.prototype.slice.call(from, 0, i25);
              ar[i25] = from[i25];
            }
          }
        return to.concat(ar || Array.prototype.slice.call(from));
      }, "__spreadArray");
      __await2 = /* @__PURE__ */ __name(function(v13) {
        return this instanceof __await2 ? (this.v = v13, this) : new __await2(v13);
      }, "__await");
      __asyncGenerator2 = /* @__PURE__ */ __name(function(thisArg, _arguments, generator) {
        if (!Symbol.asyncIterator)
          throw new TypeError("Symbol.asyncIterator is not defined.");
        var g13 = generator.apply(thisArg, _arguments || []), i25, q = [];
        return i25 = {}, verb("next"), verb("throw"), verb("return"), i25[Symbol.asyncIterator] = function() {
          return this;
        }, i25;
        function verb(n25) {
          if (g13[n25])
            i25[n25] = function(v13) {
              return new Promise(function(a19, b16) {
                q.push([n25, v13, a19, b16]) > 1 || resume(n25, v13);
              });
            };
        }
        __name(verb, "verb");
        function resume(n25, v13) {
          try {
            step(g13[n25](v13));
          } catch (e25) {
            settle(q[0][3], e25);
          }
        }
        __name(resume, "resume");
        function step(r18) {
          r18.value instanceof __await2 ? Promise.resolve(r18.value.v).then(fulfill, reject) : settle(q[0][2], r18);
        }
        __name(step, "step");
        function fulfill(value) {
          resume("next", value);
        }
        __name(fulfill, "fulfill");
        function reject(value) {
          resume("throw", value);
        }
        __name(reject, "reject");
        function settle(f25, v13) {
          if (f25(v13), q.shift(), q.length)
            resume(q[0][0], q[0][1]);
        }
        __name(settle, "settle");
      }, "__asyncGenerator");
      __asyncDelegator2 = /* @__PURE__ */ __name(function(o21) {
        var i25, p22;
        return i25 = {}, verb("next"), verb("throw", function(e25) {
          throw e25;
        }), verb("return"), i25[Symbol.iterator] = function() {
          return this;
        }, i25;
        function verb(n25, f25) {
          i25[n25] = o21[n25] ? function(v13) {
            return (p22 = !p22) ? { value: __await2(o21[n25](v13)), done: n25 === "return" } : f25 ? f25(v13) : v13;
          } : f25;
        }
        __name(verb, "verb");
      }, "__asyncDelegator");
      __asyncValues2 = /* @__PURE__ */ __name(function(o21) {
        if (!Symbol.asyncIterator)
          throw new TypeError("Symbol.asyncIterator is not defined.");
        var m26 = o21[Symbol.asyncIterator], i25;
        return m26 ? m26.call(o21) : (o21 = typeof __values2 === "function" ? __values2(o21) : o21[Symbol.iterator](), i25 = {}, verb("next"), verb("throw"), verb("return"), i25[Symbol.asyncIterator] = function() {
          return this;
        }, i25);
        function verb(n25) {
          i25[n25] = o21[n25] && function(v13) {
            return new Promise(function(resolve, reject) {
              v13 = o21[n25](v13), settle(resolve, reject, v13.done, v13.value);
            });
          };
        }
        __name(verb, "verb");
        function settle(resolve, reject, d17, v13) {
          Promise.resolve(v13).then(function(v14) {
            resolve({ value: v14, done: d17 });
          }, reject);
        }
        __name(settle, "settle");
      }, "__asyncValues");
      __makeTemplateObject2 = /* @__PURE__ */ __name(function(cooked, raw) {
        if (Object.defineProperty) {
          Object.defineProperty(cooked, "raw", { value: raw });
        } else {
          cooked.raw = raw;
        }
        return cooked;
      }, "__makeTemplateObject");
      var __setModuleDefault = Object.create ? function(o21, v13) {
        Object.defineProperty(o21, "default", { enumerable: true, value: v13 });
      } : function(o21, v13) {
        o21["default"] = v13;
      };
      __importStar2 = /* @__PURE__ */ __name(function(mod) {
        if (mod && mod.__esModule)
          return mod;
        var result = {};
        if (mod != null) {
          for (var k7 in mod)
            if (k7 !== "default" && Object.prototype.hasOwnProperty.call(mod, k7))
              __createBinding2(result, mod, k7);
        }
        __setModuleDefault(result, mod);
        return result;
      }, "__importStar");
      __importDefault2 = /* @__PURE__ */ __name(function(mod) {
        return mod && mod.__esModule ? mod : { "default": mod };
      }, "__importDefault");
      __classPrivateFieldGet2 = /* @__PURE__ */ __name(function(receiver, state, kind, f25) {
        if (kind === "a" && !f25)
          throw new TypeError("Private accessor was defined without a getter");
        if (typeof state === "function" ? receiver !== state || !f25 : !state.has(receiver))
          throw new TypeError("Cannot read private member from an object whose class did not declare it");
        return kind === "m" ? f25 : kind === "a" ? f25.call(receiver) : f25 ? f25.value : state.get(receiver);
      }, "__classPrivateFieldGet");
      __classPrivateFieldSet2 = /* @__PURE__ */ __name(function(receiver, state, value, kind, f25) {
        if (kind === "m")
          throw new TypeError("Private method is not writable");
        if (kind === "a" && !f25)
          throw new TypeError("Private accessor was defined without a setter");
        if (typeof state === "function" ? receiver !== state || !f25 : !state.has(receiver))
          throw new TypeError("Cannot write private member to an object whose class did not declare it");
        return kind === "a" ? f25.call(receiver, value) : f25 ? f25.value = value : state.set(receiver, value), value;
      }, "__classPrivateFieldSet");
      __classPrivateFieldIn2 = /* @__PURE__ */ __name(function(state, receiver) {
        if (receiver === null || typeof receiver !== "object" && typeof receiver !== "function")
          throw new TypeError("Cannot use 'in' operator on non-object");
        return typeof state === "function" ? receiver === state : state.has(receiver);
      }, "__classPrivateFieldIn");
      exporter("__extends", __extends2);
      exporter("__assign", __assign2);
      exporter("__rest", __rest2);
      exporter("__decorate", __decorate2);
      exporter("__param", __param2);
      exporter("__metadata", __metadata2);
      exporter("__awaiter", __awaiter2);
      exporter("__generator", __generator2);
      exporter("__exportStar", __exportStar2);
      exporter("__createBinding", __createBinding2);
      exporter("__values", __values2);
      exporter("__read", __read2);
      exporter("__spread", __spread2);
      exporter("__spreadArrays", __spreadArrays2);
      exporter("__spreadArray", __spreadArray2);
      exporter("__await", __await2);
      exporter("__asyncGenerator", __asyncGenerator2);
      exporter("__asyncDelegator", __asyncDelegator2);
      exporter("__asyncValues", __asyncValues2);
      exporter("__makeTemplateObject", __makeTemplateObject2);
      exporter("__importStar", __importStar2);
      exporter("__importDefault", __importDefault2);
      exporter("__classPrivateFieldGet", __classPrivateFieldGet2);
      exporter("__classPrivateFieldSet", __classPrivateFieldSet2);
      exporter("__classPrivateFieldIn", __classPrivateFieldIn2);
    });
  }
});

// node_modules/@lit/reactive-element/css-tag.js
var t, e, s, n, o, r, i, S, c;
var init_css_tag = __esm({
  "node_modules/@lit/reactive-element/css-tag.js"() {
    t = window;
    e = t.ShadowRoot && (void 0 === t.ShadyCSS || t.ShadyCSS.nativeShadow) && "adoptedStyleSheets" in Document.prototype && "replace" in CSSStyleSheet.prototype;
    s = Symbol();
    n = /* @__PURE__ */ new WeakMap();
    o = class {
      constructor(t16, e25, n25) {
        if (this._$cssResult$ = true, n25 !== s)
          throw Error("CSSResult is not constructable. Use `unsafeCSS` or `css` instead.");
        this.cssText = t16, this.t = e25;
      }
      get styleSheet() {
        let t16 = this.o;
        const s20 = this.t;
        if (e && void 0 === t16) {
          const e25 = void 0 !== s20 && 1 === s20.length;
          e25 && (t16 = n.get(s20)), void 0 === t16 && ((this.o = t16 = new CSSStyleSheet()).replaceSync(this.cssText), e25 && n.set(s20, t16));
        }
        return t16;
      }
      toString() {
        return this.cssText;
      }
    };
    __name(o, "o");
    r = /* @__PURE__ */ __name((t16) => new o("string" == typeof t16 ? t16 : t16 + "", void 0, s), "r");
    i = /* @__PURE__ */ __name((t16, ...e25) => {
      const n25 = 1 === t16.length ? t16[0] : e25.reduce((e26, s20, n26) => e26 + ((t17) => {
        if (true === t17._$cssResult$)
          return t17.cssText;
        if ("number" == typeof t17)
          return t17;
        throw Error("Value passed to 'css' function must be a 'css' function result: " + t17 + ". Use 'unsafeCSS' to pass non-literal values, but take care to ensure page security.");
      })(s20) + t16[n26 + 1], t16[0]);
      return new o(n25, t16, s);
    }, "i");
    S = /* @__PURE__ */ __name((s20, n25) => {
      e ? s20.adoptedStyleSheets = n25.map((t16) => t16 instanceof CSSStyleSheet ? t16 : t16.styleSheet) : n25.forEach((e25) => {
        const n26 = document.createElement("style"), o21 = t.litNonce;
        void 0 !== o21 && n26.setAttribute("nonce", o21), n26.textContent = e25.cssText, s20.appendChild(n26);
      });
    }, "S");
    c = e ? (t16) => t16 : (t16) => t16 instanceof CSSStyleSheet ? ((t17) => {
      let e25 = "";
      for (const s20 of t17.cssRules)
        e25 += s20.cssText;
      return r(e25);
    })(t16) : t16;
  }
});

// node_modules/@lit/reactive-element/reactive-element.js
var s2, e2, r2, h, o2, n2, a, l, d;
var init_reactive_element = __esm({
  "node_modules/@lit/reactive-element/reactive-element.js"() {
    init_css_tag();
    init_css_tag();
    e2 = window;
    r2 = e2.trustedTypes;
    h = r2 ? r2.emptyScript : "";
    o2 = e2.reactiveElementPolyfillSupport;
    n2 = { toAttribute(t16, i25) {
      switch (i25) {
        case Boolean:
          t16 = t16 ? h : null;
          break;
        case Object:
        case Array:
          t16 = null == t16 ? t16 : JSON.stringify(t16);
      }
      return t16;
    }, fromAttribute(t16, i25) {
      let s20 = t16;
      switch (i25) {
        case Boolean:
          s20 = null !== t16;
          break;
        case Number:
          s20 = null === t16 ? null : Number(t16);
          break;
        case Object:
        case Array:
          try {
            s20 = JSON.parse(t16);
          } catch (t17) {
            s20 = null;
          }
      }
      return s20;
    } };
    a = /* @__PURE__ */ __name((t16, i25) => i25 !== t16 && (i25 == i25 || t16 == t16), "a");
    l = { attribute: true, type: String, converter: n2, reflect: false, hasChanged: a };
    d = class extends HTMLElement {
      constructor() {
        super(), this._$Ei = /* @__PURE__ */ new Map(), this.isUpdatePending = false, this.hasUpdated = false, this._$El = null, this.u();
      }
      static addInitializer(t16) {
        var i25;
        this.finalize(), (null !== (i25 = this.h) && void 0 !== i25 ? i25 : this.h = []).push(t16);
      }
      static get observedAttributes() {
        this.finalize();
        const t16 = [];
        return this.elementProperties.forEach((i25, s20) => {
          const e25 = this._$Ep(s20, i25);
          void 0 !== e25 && (this._$Ev.set(e25, s20), t16.push(e25));
        }), t16;
      }
      static createProperty(t16, i25 = l) {
        if (i25.state && (i25.attribute = false), this.finalize(), this.elementProperties.set(t16, i25), !i25.noAccessor && !this.prototype.hasOwnProperty(t16)) {
          const s20 = "symbol" == typeof t16 ? Symbol() : "__" + t16, e25 = this.getPropertyDescriptor(t16, s20, i25);
          void 0 !== e25 && Object.defineProperty(this.prototype, t16, e25);
        }
      }
      static getPropertyDescriptor(t16, i25, s20) {
        return { get() {
          return this[i25];
        }, set(e25) {
          const r18 = this[t16];
          this[i25] = e25, this.requestUpdate(t16, r18, s20);
        }, configurable: true, enumerable: true };
      }
      static getPropertyOptions(t16) {
        return this.elementProperties.get(t16) || l;
      }
      static finalize() {
        if (this.hasOwnProperty("finalized"))
          return false;
        this.finalized = true;
        const t16 = Object.getPrototypeOf(this);
        if (t16.finalize(), void 0 !== t16.h && (this.h = [...t16.h]), this.elementProperties = new Map(t16.elementProperties), this._$Ev = /* @__PURE__ */ new Map(), this.hasOwnProperty("properties")) {
          const t17 = this.properties, i25 = [...Object.getOwnPropertyNames(t17), ...Object.getOwnPropertySymbols(t17)];
          for (const s20 of i25)
            this.createProperty(s20, t17[s20]);
        }
        return this.elementStyles = this.finalizeStyles(this.styles), true;
      }
      static finalizeStyles(i25) {
        const s20 = [];
        if (Array.isArray(i25)) {
          const e25 = new Set(i25.flat(1 / 0).reverse());
          for (const i26 of e25)
            s20.unshift(c(i26));
        } else
          void 0 !== i25 && s20.push(c(i25));
        return s20;
      }
      static _$Ep(t16, i25) {
        const s20 = i25.attribute;
        return false === s20 ? void 0 : "string" == typeof s20 ? s20 : "string" == typeof t16 ? t16.toLowerCase() : void 0;
      }
      u() {
        var t16;
        this._$E_ = new Promise((t17) => this.enableUpdating = t17), this._$AL = /* @__PURE__ */ new Map(), this._$Eg(), this.requestUpdate(), null === (t16 = this.constructor.h) || void 0 === t16 || t16.forEach((t17) => t17(this));
      }
      addController(t16) {
        var i25, s20;
        (null !== (i25 = this._$ES) && void 0 !== i25 ? i25 : this._$ES = []).push(t16), void 0 !== this.renderRoot && this.isConnected && (null === (s20 = t16.hostConnected) || void 0 === s20 || s20.call(t16));
      }
      removeController(t16) {
        var i25;
        null === (i25 = this._$ES) || void 0 === i25 || i25.splice(this._$ES.indexOf(t16) >>> 0, 1);
      }
      _$Eg() {
        this.constructor.elementProperties.forEach((t16, i25) => {
          this.hasOwnProperty(i25) && (this._$Ei.set(i25, this[i25]), delete this[i25]);
        });
      }
      createRenderRoot() {
        var t16;
        const s20 = null !== (t16 = this.shadowRoot) && void 0 !== t16 ? t16 : this.attachShadow(this.constructor.shadowRootOptions);
        return S(s20, this.constructor.elementStyles), s20;
      }
      connectedCallback() {
        var t16;
        void 0 === this.renderRoot && (this.renderRoot = this.createRenderRoot()), this.enableUpdating(true), null === (t16 = this._$ES) || void 0 === t16 || t16.forEach((t17) => {
          var i25;
          return null === (i25 = t17.hostConnected) || void 0 === i25 ? void 0 : i25.call(t17);
        });
      }
      enableUpdating(t16) {
      }
      disconnectedCallback() {
        var t16;
        null === (t16 = this._$ES) || void 0 === t16 || t16.forEach((t17) => {
          var i25;
          return null === (i25 = t17.hostDisconnected) || void 0 === i25 ? void 0 : i25.call(t17);
        });
      }
      attributeChangedCallback(t16, i25, s20) {
        this._$AK(t16, s20);
      }
      _$EO(t16, i25, s20 = l) {
        var e25;
        const r18 = this.constructor._$Ep(t16, s20);
        if (void 0 !== r18 && true === s20.reflect) {
          const h24 = (void 0 !== (null === (e25 = s20.converter) || void 0 === e25 ? void 0 : e25.toAttribute) ? s20.converter : n2).toAttribute(i25, s20.type);
          this._$El = t16, null == h24 ? this.removeAttribute(r18) : this.setAttribute(r18, h24), this._$El = null;
        }
      }
      _$AK(t16, i25) {
        var s20;
        const e25 = this.constructor, r18 = e25._$Ev.get(t16);
        if (void 0 !== r18 && this._$El !== r18) {
          const t17 = e25.getPropertyOptions(r18), h24 = "function" == typeof t17.converter ? { fromAttribute: t17.converter } : void 0 !== (null === (s20 = t17.converter) || void 0 === s20 ? void 0 : s20.fromAttribute) ? t17.converter : n2;
          this._$El = r18, this[r18] = h24.fromAttribute(i25, t17.type), this._$El = null;
        }
      }
      requestUpdate(t16, i25, s20) {
        let e25 = true;
        void 0 !== t16 && (((s20 = s20 || this.constructor.getPropertyOptions(t16)).hasChanged || a)(this[t16], i25) ? (this._$AL.has(t16) || this._$AL.set(t16, i25), true === s20.reflect && this._$El !== t16 && (void 0 === this._$EC && (this._$EC = /* @__PURE__ */ new Map()), this._$EC.set(t16, s20))) : e25 = false), !this.isUpdatePending && e25 && (this._$E_ = this._$Ej());
      }
      async _$Ej() {
        this.isUpdatePending = true;
        try {
          await this._$E_;
        } catch (t17) {
          Promise.reject(t17);
        }
        const t16 = this.scheduleUpdate();
        return null != t16 && await t16, !this.isUpdatePending;
      }
      scheduleUpdate() {
        return this.performUpdate();
      }
      performUpdate() {
        var t16;
        if (!this.isUpdatePending)
          return;
        this.hasUpdated, this._$Ei && (this._$Ei.forEach((t17, i26) => this[i26] = t17), this._$Ei = void 0);
        let i25 = false;
        const s20 = this._$AL;
        try {
          i25 = this.shouldUpdate(s20), i25 ? (this.willUpdate(s20), null === (t16 = this._$ES) || void 0 === t16 || t16.forEach((t17) => {
            var i26;
            return null === (i26 = t17.hostUpdate) || void 0 === i26 ? void 0 : i26.call(t17);
          }), this.update(s20)) : this._$Ek();
        } catch (t17) {
          throw i25 = false, this._$Ek(), t17;
        }
        i25 && this._$AE(s20);
      }
      willUpdate(t16) {
      }
      _$AE(t16) {
        var i25;
        null === (i25 = this._$ES) || void 0 === i25 || i25.forEach((t17) => {
          var i26;
          return null === (i26 = t17.hostUpdated) || void 0 === i26 ? void 0 : i26.call(t17);
        }), this.hasUpdated || (this.hasUpdated = true, this.firstUpdated(t16)), this.updated(t16);
      }
      _$Ek() {
        this._$AL = /* @__PURE__ */ new Map(), this.isUpdatePending = false;
      }
      get updateComplete() {
        return this.getUpdateComplete();
      }
      getUpdateComplete() {
        return this._$E_;
      }
      shouldUpdate(t16) {
        return true;
      }
      update(t16) {
        void 0 !== this._$EC && (this._$EC.forEach((t17, i25) => this._$EO(i25, this[i25], t17)), this._$EC = void 0), this._$Ek();
      }
      updated(t16) {
      }
      firstUpdated(t16) {
      }
    };
    __name(d, "d");
    d.finalized = true, d.elementProperties = /* @__PURE__ */ new Map(), d.elementStyles = [], d.shadowRootOptions = { mode: "open" }, null == o2 || o2({ ReactiveElement: d }), (null !== (s2 = e2.reactiveElementVersions) && void 0 !== s2 ? s2 : e2.reactiveElementVersions = []).push("1.4.2");
  }
});

// node_modules/lit-html/lit-html.js
function P(t16, i25, s20 = t16, e25) {
  var o21, n25, l25, h24;
  if (i25 === x)
    return i25;
  let r18 = void 0 !== e25 ? null === (o21 = s20._$Co) || void 0 === o21 ? void 0 : o21[e25] : s20._$Cl;
  const u21 = d2(i25) ? void 0 : i25._$litDirective$;
  return (null == r18 ? void 0 : r18.constructor) !== u21 && (null === (n25 = null == r18 ? void 0 : r18._$AO) || void 0 === n25 || n25.call(r18, false), void 0 === u21 ? r18 = void 0 : (r18 = new u21(t16), r18._$AT(t16, s20, e25)), void 0 !== e25 ? (null !== (l25 = (h24 = s20)._$Co) && void 0 !== l25 ? l25 : h24._$Co = [])[e25] = r18 : s20._$Cl = r18), void 0 !== r18 && (i25 = P(t16, r18._$AS(t16, i25.values), r18, e25)), i25;
}
var t2, i2, s3, e3, o3, n3, l2, h2, r3, d2, u, c2, v, a2, f, _, m, p, $, g, y, w, x, b, T, A, E, C, V, N, S2, M, R, k, H, I, L, z, Z;
var init_lit_html = __esm({
  "node_modules/lit-html/lit-html.js"() {
    i2 = window;
    s3 = i2.trustedTypes;
    e3 = s3 ? s3.createPolicy("lit-html", { createHTML: (t16) => t16 }) : void 0;
    o3 = `lit$${(Math.random() + "").slice(9)}$`;
    n3 = "?" + o3;
    l2 = `<${n3}>`;
    h2 = document;
    r3 = /* @__PURE__ */ __name((t16 = "") => h2.createComment(t16), "r");
    d2 = /* @__PURE__ */ __name((t16) => null === t16 || "object" != typeof t16 && "function" != typeof t16, "d");
    u = Array.isArray;
    c2 = /* @__PURE__ */ __name((t16) => u(t16) || "function" == typeof (null == t16 ? void 0 : t16[Symbol.iterator]), "c");
    v = /<(?:(!--|\/[^a-zA-Z])|(\/?[a-zA-Z][^>\s]*)|(\/?$))/g;
    a2 = /-->/g;
    f = />/g;
    _ = RegExp(`>|[ 	
\f\r](?:([^\\s"'>=/]+)([ 	
\f\r]*=[ 	
\f\r]*(?:[^ 	
\f\r"'\`<>=]|("|')|))|$)`, "g");
    m = /'/g;
    p = /"/g;
    $ = /^(?:script|style|textarea|title)$/i;
    g = /* @__PURE__ */ __name((t16) => (i25, ...s20) => ({ _$litType$: t16, strings: i25, values: s20 }), "g");
    y = g(1);
    w = g(2);
    x = Symbol.for("lit-noChange");
    b = Symbol.for("lit-nothing");
    T = /* @__PURE__ */ new WeakMap();
    A = h2.createTreeWalker(h2, 129, null, false);
    E = /* @__PURE__ */ __name((t16, i25) => {
      const s20 = t16.length - 1, n25 = [];
      let h24, r18 = 2 === i25 ? "<svg>" : "", d17 = v;
      for (let i26 = 0; i26 < s20; i26++) {
        const s21 = t16[i26];
        let e25, u22, c23 = -1, g13 = 0;
        for (; g13 < s21.length && (d17.lastIndex = g13, u22 = d17.exec(s21), null !== u22); )
          g13 = d17.lastIndex, d17 === v ? "!--" === u22[1] ? d17 = a2 : void 0 !== u22[1] ? d17 = f : void 0 !== u22[2] ? ($.test(u22[2]) && (h24 = RegExp("</" + u22[2], "g")), d17 = _) : void 0 !== u22[3] && (d17 = _) : d17 === _ ? ">" === u22[0] ? (d17 = null != h24 ? h24 : v, c23 = -1) : void 0 === u22[1] ? c23 = -2 : (c23 = d17.lastIndex - u22[2].length, e25 = u22[1], d17 = void 0 === u22[3] ? _ : '"' === u22[3] ? p : m) : d17 === p || d17 === m ? d17 = _ : d17 === a2 || d17 === f ? d17 = v : (d17 = _, h24 = void 0);
        const y13 = d17 === _ && t16[i26 + 1].startsWith("/>") ? " " : "";
        r18 += d17 === v ? s21 + l2 : c23 >= 0 ? (n25.push(e25), s21.slice(0, c23) + "$lit$" + s21.slice(c23) + o3 + y13) : s21 + o3 + (-2 === c23 ? (n25.push(void 0), i26) : y13);
      }
      const u21 = r18 + (t16[s20] || "<?>") + (2 === i25 ? "</svg>" : "");
      if (!Array.isArray(t16) || !t16.hasOwnProperty("raw"))
        throw Error("invalid template strings array");
      return [void 0 !== e3 ? e3.createHTML(u21) : u21, n25];
    }, "E");
    C = class {
      constructor({ strings: t16, _$litType$: i25 }, e25) {
        let l25;
        this.parts = [];
        let h24 = 0, d17 = 0;
        const u21 = t16.length - 1, c23 = this.parts, [v13, a19] = E(t16, i25);
        if (this.el = C.createElement(v13, e25), A.currentNode = this.el.content, 2 === i25) {
          const t17 = this.el.content, i26 = t17.firstChild;
          i26.remove(), t17.append(...i26.childNodes);
        }
        for (; null !== (l25 = A.nextNode()) && c23.length < u21; ) {
          if (1 === l25.nodeType) {
            if (l25.hasAttributes()) {
              const t17 = [];
              for (const i26 of l25.getAttributeNames())
                if (i26.endsWith("$lit$") || i26.startsWith(o3)) {
                  const s20 = a19[d17++];
                  if (t17.push(i26), void 0 !== s20) {
                    const t18 = l25.getAttribute(s20.toLowerCase() + "$lit$").split(o3), i27 = /([.?@])?(.*)/.exec(s20);
                    c23.push({ type: 1, index: h24, name: i27[2], strings: t18, ctor: "." === i27[1] ? M : "?" === i27[1] ? k : "@" === i27[1] ? H : S2 });
                  } else
                    c23.push({ type: 6, index: h24 });
                }
              for (const i26 of t17)
                l25.removeAttribute(i26);
            }
            if ($.test(l25.tagName)) {
              const t17 = l25.textContent.split(o3), i26 = t17.length - 1;
              if (i26 > 0) {
                l25.textContent = s3 ? s3.emptyScript : "";
                for (let s20 = 0; s20 < i26; s20++)
                  l25.append(t17[s20], r3()), A.nextNode(), c23.push({ type: 2, index: ++h24 });
                l25.append(t17[i26], r3());
              }
            }
          } else if (8 === l25.nodeType)
            if (l25.data === n3)
              c23.push({ type: 2, index: h24 });
            else {
              let t17 = -1;
              for (; -1 !== (t17 = l25.data.indexOf(o3, t17 + 1)); )
                c23.push({ type: 7, index: h24 }), t17 += o3.length - 1;
            }
          h24++;
        }
      }
      static createElement(t16, i25) {
        const s20 = h2.createElement("template");
        return s20.innerHTML = t16, s20;
      }
    };
    __name(C, "C");
    __name(P, "P");
    V = class {
      constructor(t16, i25) {
        this.u = [], this._$AN = void 0, this._$AD = t16, this._$AM = i25;
      }
      get parentNode() {
        return this._$AM.parentNode;
      }
      get _$AU() {
        return this._$AM._$AU;
      }
      v(t16) {
        var i25;
        const { el: { content: s20 }, parts: e25 } = this._$AD, o21 = (null !== (i25 = null == t16 ? void 0 : t16.creationScope) && void 0 !== i25 ? i25 : h2).importNode(s20, true);
        A.currentNode = o21;
        let n25 = A.nextNode(), l25 = 0, r18 = 0, d17 = e25[0];
        for (; void 0 !== d17; ) {
          if (l25 === d17.index) {
            let i26;
            2 === d17.type ? i26 = new N(n25, n25.nextSibling, this, t16) : 1 === d17.type ? i26 = new d17.ctor(n25, d17.name, d17.strings, this, t16) : 6 === d17.type && (i26 = new I(n25, this, t16)), this.u.push(i26), d17 = e25[++r18];
          }
          l25 !== (null == d17 ? void 0 : d17.index) && (n25 = A.nextNode(), l25++);
        }
        return o21;
      }
      p(t16) {
        let i25 = 0;
        for (const s20 of this.u)
          void 0 !== s20 && (void 0 !== s20.strings ? (s20._$AI(t16, s20, i25), i25 += s20.strings.length - 2) : s20._$AI(t16[i25])), i25++;
      }
    };
    __name(V, "V");
    N = class {
      constructor(t16, i25, s20, e25) {
        var o21;
        this.type = 2, this._$AH = b, this._$AN = void 0, this._$AA = t16, this._$AB = i25, this._$AM = s20, this.options = e25, this._$Cm = null === (o21 = null == e25 ? void 0 : e25.isConnected) || void 0 === o21 || o21;
      }
      get _$AU() {
        var t16, i25;
        return null !== (i25 = null === (t16 = this._$AM) || void 0 === t16 ? void 0 : t16._$AU) && void 0 !== i25 ? i25 : this._$Cm;
      }
      get parentNode() {
        let t16 = this._$AA.parentNode;
        const i25 = this._$AM;
        return void 0 !== i25 && 11 === t16.nodeType && (t16 = i25.parentNode), t16;
      }
      get startNode() {
        return this._$AA;
      }
      get endNode() {
        return this._$AB;
      }
      _$AI(t16, i25 = this) {
        t16 = P(this, t16, i25), d2(t16) ? t16 === b || null == t16 || "" === t16 ? (this._$AH !== b && this._$AR(), this._$AH = b) : t16 !== this._$AH && t16 !== x && this.g(t16) : void 0 !== t16._$litType$ ? this.$(t16) : void 0 !== t16.nodeType ? this.T(t16) : c2(t16) ? this.k(t16) : this.g(t16);
      }
      O(t16, i25 = this._$AB) {
        return this._$AA.parentNode.insertBefore(t16, i25);
      }
      T(t16) {
        this._$AH !== t16 && (this._$AR(), this._$AH = this.O(t16));
      }
      g(t16) {
        this._$AH !== b && d2(this._$AH) ? this._$AA.nextSibling.data = t16 : this.T(h2.createTextNode(t16)), this._$AH = t16;
      }
      $(t16) {
        var i25;
        const { values: s20, _$litType$: e25 } = t16, o21 = "number" == typeof e25 ? this._$AC(t16) : (void 0 === e25.el && (e25.el = C.createElement(e25.h, this.options)), e25);
        if ((null === (i25 = this._$AH) || void 0 === i25 ? void 0 : i25._$AD) === o21)
          this._$AH.p(s20);
        else {
          const t17 = new V(o21, this), i26 = t17.v(this.options);
          t17.p(s20), this.T(i26), this._$AH = t17;
        }
      }
      _$AC(t16) {
        let i25 = T.get(t16.strings);
        return void 0 === i25 && T.set(t16.strings, i25 = new C(t16)), i25;
      }
      k(t16) {
        u(this._$AH) || (this._$AH = [], this._$AR());
        const i25 = this._$AH;
        let s20, e25 = 0;
        for (const o21 of t16)
          e25 === i25.length ? i25.push(s20 = new N(this.O(r3()), this.O(r3()), this, this.options)) : s20 = i25[e25], s20._$AI(o21), e25++;
        e25 < i25.length && (this._$AR(s20 && s20._$AB.nextSibling, e25), i25.length = e25);
      }
      _$AR(t16 = this._$AA.nextSibling, i25) {
        var s20;
        for (null === (s20 = this._$AP) || void 0 === s20 || s20.call(this, false, true, i25); t16 && t16 !== this._$AB; ) {
          const i26 = t16.nextSibling;
          t16.remove(), t16 = i26;
        }
      }
      setConnected(t16) {
        var i25;
        void 0 === this._$AM && (this._$Cm = t16, null === (i25 = this._$AP) || void 0 === i25 || i25.call(this, t16));
      }
    };
    __name(N, "N");
    S2 = class {
      constructor(t16, i25, s20, e25, o21) {
        this.type = 1, this._$AH = b, this._$AN = void 0, this.element = t16, this.name = i25, this._$AM = e25, this.options = o21, s20.length > 2 || "" !== s20[0] || "" !== s20[1] ? (this._$AH = Array(s20.length - 1).fill(new String()), this.strings = s20) : this._$AH = b;
      }
      get tagName() {
        return this.element.tagName;
      }
      get _$AU() {
        return this._$AM._$AU;
      }
      _$AI(t16, i25 = this, s20, e25) {
        const o21 = this.strings;
        let n25 = false;
        if (void 0 === o21)
          t16 = P(this, t16, i25, 0), n25 = !d2(t16) || t16 !== this._$AH && t16 !== x, n25 && (this._$AH = t16);
        else {
          const e26 = t16;
          let l25, h24;
          for (t16 = o21[0], l25 = 0; l25 < o21.length - 1; l25++)
            h24 = P(this, e26[s20 + l25], i25, l25), h24 === x && (h24 = this._$AH[l25]), n25 || (n25 = !d2(h24) || h24 !== this._$AH[l25]), h24 === b ? t16 = b : t16 !== b && (t16 += (null != h24 ? h24 : "") + o21[l25 + 1]), this._$AH[l25] = h24;
        }
        n25 && !e25 && this.j(t16);
      }
      j(t16) {
        t16 === b ? this.element.removeAttribute(this.name) : this.element.setAttribute(this.name, null != t16 ? t16 : "");
      }
    };
    __name(S2, "S");
    M = class extends S2 {
      constructor() {
        super(...arguments), this.type = 3;
      }
      j(t16) {
        this.element[this.name] = t16 === b ? void 0 : t16;
      }
    };
    __name(M, "M");
    R = s3 ? s3.emptyScript : "";
    k = class extends S2 {
      constructor() {
        super(...arguments), this.type = 4;
      }
      j(t16) {
        t16 && t16 !== b ? this.element.setAttribute(this.name, R) : this.element.removeAttribute(this.name);
      }
    };
    __name(k, "k");
    H = class extends S2 {
      constructor(t16, i25, s20, e25, o21) {
        super(t16, i25, s20, e25, o21), this.type = 5;
      }
      _$AI(t16, i25 = this) {
        var s20;
        if ((t16 = null !== (s20 = P(this, t16, i25, 0)) && void 0 !== s20 ? s20 : b) === x)
          return;
        const e25 = this._$AH, o21 = t16 === b && e25 !== b || t16.capture !== e25.capture || t16.once !== e25.once || t16.passive !== e25.passive, n25 = t16 !== b && (e25 === b || o21);
        o21 && this.element.removeEventListener(this.name, this, e25), n25 && this.element.addEventListener(this.name, this, t16), this._$AH = t16;
      }
      handleEvent(t16) {
        var i25, s20;
        "function" == typeof this._$AH ? this._$AH.call(null !== (s20 = null === (i25 = this.options) || void 0 === i25 ? void 0 : i25.host) && void 0 !== s20 ? s20 : this.element, t16) : this._$AH.handleEvent(t16);
      }
    };
    __name(H, "H");
    I = class {
      constructor(t16, i25, s20) {
        this.element = t16, this.type = 6, this._$AN = void 0, this._$AM = i25, this.options = s20;
      }
      get _$AU() {
        return this._$AM._$AU;
      }
      _$AI(t16) {
        P(this, t16);
      }
    };
    __name(I, "I");
    L = { P: "$lit$", A: o3, M: n3, C: 1, L: E, R: V, D: c2, V: P, I: N, H: S2, N: k, U: H, B: M, F: I };
    z = i2.litHtmlPolyfillSupport;
    null == z || z(C, N), (null !== (t2 = i2.litHtmlVersions) && void 0 !== t2 ? t2 : i2.litHtmlVersions = []).push("2.4.0");
    Z = /* @__PURE__ */ __name((t16, i25, s20) => {
      var e25, o21;
      const n25 = null !== (e25 = null == s20 ? void 0 : s20.renderBefore) && void 0 !== e25 ? e25 : i25;
      let l25 = n25._$litPart$;
      if (void 0 === l25) {
        const t17 = null !== (o21 = null == s20 ? void 0 : s20.renderBefore) && void 0 !== o21 ? o21 : null;
        n25._$litPart$ = l25 = new N(i25.insertBefore(r3(), t17), t17, void 0, null != s20 ? s20 : {});
      }
      return l25._$AI(t16), l25;
    }, "Z");
  }
});

// node_modules/lit-element/lit-element.js
var l3, o4, r4, s4, n4, h3;
var init_lit_element = __esm({
  "node_modules/lit-element/lit-element.js"() {
    init_reactive_element();
    init_reactive_element();
    init_lit_html();
    init_lit_html();
    r4 = d;
    s4 = class extends d {
      constructor() {
        super(...arguments), this.renderOptions = { host: this }, this._$Do = void 0;
      }
      createRenderRoot() {
        var t16, e25;
        const i25 = super.createRenderRoot();
        return null !== (t16 = (e25 = this.renderOptions).renderBefore) && void 0 !== t16 || (e25.renderBefore = i25.firstChild), i25;
      }
      update(t16) {
        const i25 = this.render();
        this.hasUpdated || (this.renderOptions.isConnected = this.isConnected), super.update(t16), this._$Do = Z(i25, this.renderRoot, this.renderOptions);
      }
      connectedCallback() {
        var t16;
        super.connectedCallback(), null === (t16 = this._$Do) || void 0 === t16 || t16.setConnected(true);
      }
      disconnectedCallback() {
        var t16;
        super.disconnectedCallback(), null === (t16 = this._$Do) || void 0 === t16 || t16.setConnected(false);
      }
      render() {
        return x;
      }
    };
    __name(s4, "s");
    s4.finalized = true, s4._$litElement$ = true, null === (l3 = globalThis.litElementHydrateSupport) || void 0 === l3 || l3.call(globalThis, { LitElement: s4 });
    n4 = globalThis.litElementPolyfillSupport;
    null == n4 || n4({ LitElement: s4 });
    h3 = { _$AK: (t16, e25, i25) => {
      t16._$AK(e25, i25);
    }, _$AL: (t16) => t16._$AL };
    (null !== (o4 = globalThis.litElementVersions) && void 0 !== o4 ? o4 : globalThis.litElementVersions = []).push("3.2.2");
  }
});

// node_modules/lit-html/is-server.js
var o5;
var init_is_server = __esm({
  "node_modules/lit-html/is-server.js"() {
    o5 = false;
  }
});

// node_modules/lit/index.js
var init_lit = __esm({
  "node_modules/lit/index.js"() {
    init_reactive_element();
    init_lit_html();
    init_lit_element();
    init_is_server();
  }
});

// node_modules/@lit/reactive-element/decorators/custom-element.js
var e4;
var init_custom_element = __esm({
  "node_modules/@lit/reactive-element/decorators/custom-element.js"() {
    e4 = /* @__PURE__ */ __name((e25) => (n25) => "function" == typeof n25 ? ((e26, n26) => (customElements.define(e26, n26), n26))(e25, n25) : ((e26, n26) => {
      const { kind: t16, elements: s20 } = n26;
      return { kind: t16, elements: s20, finisher(n27) {
        customElements.define(e26, n27);
      } };
    })(e25, n25), "e");
  }
});

// node_modules/@lit/reactive-element/decorators/property.js
function e5(e25) {
  return (n25, t16) => void 0 !== t16 ? ((i25, e26, n26) => {
    e26.constructor.createProperty(n26, i25);
  })(e25, n25, t16) : i3(e25, n25);
}
var i3;
var init_property = __esm({
  "node_modules/@lit/reactive-element/decorators/property.js"() {
    i3 = /* @__PURE__ */ __name((i25, e25) => "method" === e25.kind && e25.descriptor && !("value" in e25.descriptor) ? { ...e25, finisher(n25) {
      n25.createProperty(e25.key, i25);
    } } : { kind: "field", key: Symbol(), placement: "own", descriptor: {}, originalKey: e25.key, initializer() {
      "function" == typeof e25.initializer && (this[e25.key] = e25.initializer.call(this));
    }, finisher(n25) {
      n25.createProperty(e25.key, i25);
    } }, "i");
    __name(e5, "e");
  }
});

// node_modules/@lit/reactive-element/decorators/state.js
function t3(t16) {
  return e5({ ...t16, state: true });
}
var init_state = __esm({
  "node_modules/@lit/reactive-element/decorators/state.js"() {
    init_property();
    __name(t3, "t");
  }
});

// node_modules/@lit/reactive-element/decorators/base.js
var o6;
var init_base = __esm({
  "node_modules/@lit/reactive-element/decorators/base.js"() {
    o6 = /* @__PURE__ */ __name(({ finisher: e25, descriptor: t16 }) => (o21, n25) => {
      var r18;
      if (void 0 === n25) {
        const n26 = null !== (r18 = o21.originalKey) && void 0 !== r18 ? r18 : o21.key, i25 = null != t16 ? { kind: "method", placement: "prototype", key: n26, descriptor: t16(o21.key) } : { ...o21, key: n26 };
        return null != e25 && (i25.finisher = function(t17) {
          e25(t17, n26);
        }), i25;
      }
      {
        const r19 = o21.constructor;
        void 0 !== t16 && Object.defineProperty(o21, n25, t16(n25)), null == e25 || e25(r19, n25);
      }
    }, "o");
  }
});

// node_modules/@lit/reactive-element/decorators/event-options.js
var init_event_options = __esm({
  "node_modules/@lit/reactive-element/decorators/event-options.js"() {
    init_base();
  }
});

// node_modules/@lit/reactive-element/decorators/query.js
function i4(i25, n25) {
  return o6({ descriptor: (o21) => {
    const t16 = { get() {
      var o22, n26;
      return null !== (n26 = null === (o22 = this.renderRoot) || void 0 === o22 ? void 0 : o22.querySelector(i25)) && void 0 !== n26 ? n26 : null;
    }, enumerable: true, configurable: true };
    if (n25) {
      const n26 = "symbol" == typeof o21 ? Symbol() : "__" + o21;
      t16.get = function() {
        var o22, t17;
        return void 0 === this[n26] && (this[n26] = null !== (t17 = null === (o22 = this.renderRoot) || void 0 === o22 ? void 0 : o22.querySelector(i25)) && void 0 !== t17 ? t17 : null), this[n26];
      };
    }
    return t16;
  } });
}
var init_query = __esm({
  "node_modules/@lit/reactive-element/decorators/query.js"() {
    init_base();
    __name(i4, "i");
  }
});

// node_modules/@lit/reactive-element/decorators/query-all.js
var init_query_all = __esm({
  "node_modules/@lit/reactive-element/decorators/query-all.js"() {
    init_base();
  }
});

// node_modules/@lit/reactive-element/decorators/query-async.js
var init_query_async = __esm({
  "node_modules/@lit/reactive-element/decorators/query-async.js"() {
    init_base();
  }
});

// node_modules/@lit/reactive-element/decorators/query-assigned-elements.js
var n5, e6;
var init_query_assigned_elements = __esm({
  "node_modules/@lit/reactive-element/decorators/query-assigned-elements.js"() {
    init_base();
    e6 = null != (null === (n5 = window.HTMLSlotElement) || void 0 === n5 ? void 0 : n5.prototype.assignedElements) ? (o21, n25) => o21.assignedElements(n25) : (o21, n25) => o21.assignedNodes(n25).filter((o22) => o22.nodeType === Node.ELEMENT_NODE);
  }
});

// node_modules/@lit/reactive-element/decorators/query-assigned-nodes.js
var init_query_assigned_nodes = __esm({
  "node_modules/@lit/reactive-element/decorators/query-assigned-nodes.js"() {
    init_base();
    init_query_assigned_elements();
  }
});

// node_modules/@patternfly/pfe-core/core.js
function r5(e25) {
  return document.head.querySelector(`meta[name="${e25}"]`)?.content;
}
function l5(e25 = o7) {
  return e25 !== o7 && (window.PfeConfig.trackPerformance = !!e25), window.PfeConfig.trackPerformance;
}
var o7, i5, n6, a3;
var init_core = __esm({
  "node_modules/@patternfly/pfe-core/core.js"() {
    o7 = Symbol();
    __name(r5, "r");
    __name(l5, "l");
    i5 = { fromAttribute(e25) {
      return typeof e25 != "string" ? null : e25.split(",").map((t16) => t16.trim()).map((t16) => parseInt(t16, 10));
    }, toAttribute(e25) {
      return e25.join(",");
    } };
    n6 = /* @__PURE__ */ __name(class extends Event {
      constructor(t16, f25) {
        super(t16, { bubbles: true, composed: true, ...f25 });
      }
    }, "n");
    a3 = document.body.hasAttribute("no-auto-reveal");
    window.PfeConfig = Object.assign(window.PfeConfig ?? {}, { trackPerformance: window.PfeConfig?.trackPerformance ?? r5("pfe-track-performance") === "true", autoReveal: window.PfeConfig?.autoReveal ?? (a3 ? !a3 : r5("pfe-auto-reveal") === "true"), get log() {
      return !!localStorage.pfeLog;
    }, set log(e25) {
      e25 ? localStorage.setItem("pfeLog", `${true}`) : localStorage.removeItem("pfeLog");
    } });
  }
});

// node_modules/@patternfly/pfe-core/decorators/bound.js
function o8(n25, e25, t16) {
  if (typeof t16?.value != "function")
    throw new TypeError(`Only methods can be decorated with @bound. <${e25 ?? n25.name}> is not a method!`);
  return { configurable: true, get() {
    let r18 = t16.value.bind(this);
    return Object.defineProperty(this, e25, { value: r18, configurable: true, writable: true }), r18;
  } };
}
var init_bound = __esm({
  "node_modules/@patternfly/pfe-core/decorators/bound.js"() {
    __name(o8, "o");
  }
});

// node_modules/@patternfly/pfe-core/functions/debounce.js
function a4(t16, l25, o21 = false) {
  let n25;
  return function(...e25) {
    let u21 = this, c23 = /* @__PURE__ */ __name(function() {
      n25 = null, o21 || t16.apply(u21, e25);
    }, "c"), i25 = o21 && !n25;
    clearTimeout(n25), n25 = window.setTimeout(c23, l25), i25 && t16.apply(u21, e25);
  };
}
var init_debounce = __esm({
  "node_modules/@patternfly/pfe-core/functions/debounce.js"() {
    __name(a4, "a");
  }
});

// node_modules/@patternfly/pfe-core/controllers/logger.js
var e7, n7;
var init_logger = __esm({
  "node_modules/@patternfly/pfe-core/controllers/logger.js"() {
    e7 = /* @__PURE__ */ __name(class {
      constructor(t16) {
        this.host = t16;
        if (e7.instances.get(t16))
          return e7.instances.get(t16);
        t16.addController(this), e7.instances.set(t16, this);
      }
      get prefix() {
        return `[${this.host.localName}${this.host.id ? `#${this.host.id}` : ""}]`;
      }
      static debugLog(t16 = null) {
        try {
          return t16 !== null && (e7.logDebug = !!t16, localStorage.pfeLog = !!t16), localStorage.pfeLog === "true";
        } catch {
          return e7.logDebug;
        }
      }
      static log(...t16) {
        e7.debugLog() && console.log(...t16);
      }
      static warn(...t16) {
        console.warn(...t16);
      }
      static error(...t16) {
        console.error([...t16].join(" "));
      }
      log(...t16) {
        e7.log(this.prefix, ...t16);
      }
      warn(...t16) {
        e7.warn(this.prefix, ...t16);
      }
      error(...t16) {
        e7.error(this.prefix, ...t16);
      }
      hostConnected() {
        this.log("connected");
      }
    }, "e");
    n7 = e7;
    n7.instances = /* @__PURE__ */ new WeakMap();
  }
});

// node_modules/@patternfly/pfe-core/controllers/cascade-controller.js
var p2, l6, h4, n8, c3;
var init_cascade_controller = __esm({
  "node_modules/@patternfly/pfe-core/controllers/cascade-controller.js"() {
    init_bound();
    init_debounce();
    init_logger();
    p2 = Object.defineProperty;
    l6 = Object.getOwnPropertyDescriptor;
    h4 = /* @__PURE__ */ __name((a19, t16, e25, s20) => {
      for (var i25 = s20 > 1 ? void 0 : s20 ? l6(t16, e25) : t16, o21 = a19.length - 1, r18; o21 >= 0; o21--)
        (r18 = a19[o21]) && (i25 = (s20 ? r18(t16, e25, i25) : r18(i25)) || i25);
      return s20 && i25 && p2(t16, e25, i25), i25;
    }, "h");
    n8 = /* @__PURE__ */ __name(class {
      constructor(t16, e25) {
        this.host = t16;
        this.options = e25;
        this.mo = new MutationObserver(this.parse);
        this.cache = /* @__PURE__ */ new Map();
        this.class = t16.constructor, this.logger = new n7(this.host), n8.instances.set(t16, this);
        let s20 = this.options?.properties ?? {};
        for (let [i25, o21] of Object.entries(s20))
          this.initProp(i25, o21);
        t16.addController(this), this.cascadeProperties = a4(this.cascadeProperties, 1);
      }
      hostUpdated() {
        this.cascadeProperties();
      }
      hostConnected() {
        this.mo.observe(this.host, { attributes: true, childList: true }), this.cascadeProperties();
      }
      hostDisconnected() {
        this.mo.disconnect();
      }
      cascadeProperties(t16 = this.host.children) {
        if (this.host.isConnected) {
          let e25 = this.cache.keys();
          if (!t16)
            return this._cascadeAttributes(e25, this.cache);
          for (let s20 of t16)
            if (s20 instanceof Element) {
              for (let i25 of e25)
                if (s20.matches(i25)) {
                  let o21 = this.cache.get(i25);
                  for (let r18 of o21 ?? [])
                    this._copyAttribute(r18, s20);
                }
            }
        }
      }
      initProp(t16, e25) {
        for (let s20 of [e25].flat(1 / 0).filter(Boolean)) {
          let { attribute: i25 } = this.class.getPropertyOptions(t16), o21 = typeof i25 == "string" ? i25 : t16.toLowerCase();
          this.cache.get(s20) ? this.cache.get(s20)?.push(o21) : this.cache.set(s20, [o21]);
        }
      }
      parse(t16) {
        for (let e25 of t16 ?? [])
          e25.type === "childList" && e25.addedNodes.length ? this.cascadeProperties(e25.addedNodes) : e25.type === "attributes" && this._cascadeAttributes(this.cache.keys(), this.cache);
      }
      async _copyAttribute(t16, e25) {
        this.logger.log(`copying ${t16} to ${e25}`);
        let s20 = this.host.getAttribute(t16);
        e25.isConnected && (s20 == null ? e25.removeAttribute(t16) : e25.setAttribute(t16, s20));
      }
      _cascadeAttributes(t16, e25) {
        for (let s20 of t16)
          for (let i25 of e25.get(s20) ?? [])
            this._cascadeAttribute(i25, s20);
      }
      _cascadeAttribute(t16, e25) {
        let s20 = [...this.host.querySelectorAll(e25), ...this.host.shadowRoot?.querySelectorAll(e25) ?? []];
        for (let i25 of s20)
          this._copyAttribute(t16, i25);
      }
    }, "n");
    c3 = n8;
    c3.instances = /* @__PURE__ */ new WeakMap(), h4([o8], c3.prototype, "parse", 1);
  }
});

// node_modules/@patternfly/pfe-core/decorators/cascades.js
function s5(...n25) {
  return function(r18, i25) {
    r18.constructor.addInitializer((o21) => {
      let e25 = o21;
      c3.instances.has(e25) || c3.instances.set(e25, new c3(e25)), c3.instances.get(e25)?.initProp(i25, n25);
    });
  };
}
var init_cascades = __esm({
  "node_modules/@patternfly/pfe-core/decorators/cascades.js"() {
    init_cascade_controller();
    __name(s5, "s");
  }
});

// node_modules/@patternfly/pfe-core/node_modules/lit/index.js
var init_lit2 = __esm({
  "node_modules/@patternfly/pfe-core/node_modules/lit/index.js"() {
    init_reactive_element();
    init_lit_html();
    init_lit_element();
  }
});

// node_modules/@patternfly/pfe-core/context.js
function r6(e25, t16) {
  return { name: e25, initialValue: t16 };
}
var n9;
var init_context = __esm({
  "node_modules/@patternfly/pfe-core/context.js"() {
    __name(r6, "r");
    n9 = /* @__PURE__ */ __name(class extends Event {
      constructor(o21, l25, x11) {
        super("context-request", { bubbles: true, composed: true });
        this.context = o21;
        this.callback = l25;
        this.multiple = x11;
      }
    }, "n");
  }
});

// node_modules/@patternfly/pfe-core/controllers/style-controller.js
var l7;
var init_style_controller = __esm({
  "node_modules/@patternfly/pfe-core/controllers/style-controller.js"() {
    init_lit2();
    l7 = /* @__PURE__ */ __name(class {
      constructor(t16, e25) {
        this.host = t16;
        this.styles = e25;
        this.stylesAdopted = false;
        t16.addController(this);
      }
      hostConnected() {
        if (this.stylesAdopted || !(this.host.renderRoot instanceof ShadowRoot))
          return;
        let t16 = [this.styles].flatMap((e25) => c(e25)).filter((e25) => !!e25);
        e ? this.host.renderRoot.adoptedStyleSheets = [...t16.map((e25) => e25 instanceof CSSStyleSheet ? e25 : e25.styleSheet), ...this.host.renderRoot.adoptedStyleSheets ?? []] : t16.forEach((e25) => {
          let s20 = document.createElement("style"), o21 = window.litNonce;
          o21 !== void 0 && s20.setAttribute("nonce", o21), s20.textContent = e25.cssText, this.host.renderRoot.appendChild(s20);
        }), this.stylesAdopted = true;
      }
    }, "l");
  }
});

// node_modules/@patternfly/pfe-core/controllers/color-context.js
var u2, m2, i6, k2, f2, h5, c4, n10, l8;
var init_color_context = __esm({
  "node_modules/@patternfly/pfe-core/controllers/color-context.js"() {
    init_lit2();
    init_context();
    init_bound();
    init_logger();
    init_style_controller();
    init_lit2();
    u2 = Object.defineProperty;
    m2 = Object.getOwnPropertyDescriptor;
    i6 = /* @__PURE__ */ __name((a19, o21, e25, t16) => {
      for (var r18 = t16 > 1 ? void 0 : t16 ? m2(o21, e25) : o21, d17 = a19.length - 1, p22; d17 >= 0; d17--)
        (p22 = a19[d17]) && (r18 = (t16 ? p22(o21, e25, r18) : p22(r18)) || r18);
      return t16 && r18 && u2(o21, e25, r18), r18;
    }, "i");
    k2 = i`:host(:is([on=dark])){--context:dark}:host(:is([on=light])){--context:light}:host(:is([on=saturated])){--context:saturated}:host(:is([color-palette=darker],[color-palette=darkest])){--context:dark;--pfe-broadcasted--text:var(--pfe-theme--color--text--on-dark, #fff);--pfe-broadcasted--text--muted:var(--pfe-theme--color--text--muted--on-dark, #d2d2d2);--pfe-broadcasted--link:var(--pfe-theme--color--link--on-dark, #73bcf7);--pfe-broadcasted--link--hover:var(--pfe-theme--color--link--hover--on-dark, #bee1f4);--pfe-broadcasted--link--focus:var(--pfe-theme--color--link--focus--on-dark, #bee1f4);--pfe-broadcasted--link--visited:var(--pfe-theme--color--link--visited--on-dark, #bee1f4);--pfe-broadcasted--link-decoration:var(--pfe-theme--link-decoration--on-dark, none);--pfe-broadcasted--link-decoration--hover:var(--pfe-theme--link-decoration--hover--on-dark, underline);--pfe-broadcasted--link-decoration--focus:var(--pfe-theme--link-decoration--focus--on-dark, underline);--pfe-broadcasted--link-decoration--visited:var(--pfe-theme--link-decoration--visited--on-dark, none)}:host(:is([color-palette=lighter],[color-palette=lightest],[color-palette=base])){--context:light;--pfe-broadcasted--text:var(--pfe-theme--color--text, #151515);--pfe-broadcasted--text--muted:var(--pfe-theme--color--text--muted, #6a6e73);--pfe-broadcasted--link:var(--pfe-theme--color--link, #06c);--pfe-broadcasted--link--hover:var(--pfe-theme--color--link--hover, #004080);--pfe-broadcasted--link--focus:var(--pfe-theme--color--link--focus, #004080);--pfe-broadcasted--link--visited:var(--pfe-theme--color--link--visited, #6753ac);--pfe-broadcasted--link-decoration:var(--pfe-theme--link-decoration, none);--pfe-broadcasted--link-decoration--hover:var(--pfe-theme--link-decoration--hover, underline);--pfe-broadcasted--link-decoration--focus:var(--pfe-theme--link-decoration--focus, underline);--pfe-broadcasted--link-decoration--visited:var(--pfe-theme--link-decoration--visited, none)}:host(:is([color-palette=accent],[color-palette=complement],[color-palette=saturated])){--context:saturated;--pfe-broadcasted--text:var(--pfe-theme--color--text--on-saturated, #fff);--pfe-broadcasted--text--muted:var(--pfe-theme--color--text--muted--on-saturated, #d2d2d2);--pfe-broadcasted--link:var(--pfe-theme--color--link--on-saturated, #fff);--pfe-broadcasted--link--hover:var(--pfe-theme--color--link--hover--on-saturated, #fafafa);--pfe-broadcasted--link--focus:var(--pfe-theme--color--link--focus--on-saturated, #fafafa);--pfe-broadcasted--link--visited:var(--pfe-theme--color--link--visited--on-saturated, #d2d2d2);--pfe-broadcasted--link-decoration:var(--pfe-theme--link-decoration--on-saturated, underline);--pfe-broadcasted--link-decoration--hover:var(--pfe-theme--link-decoration--hover--on-saturated, underline);--pfe-broadcasted--link-decoration--focus:var(--pfe-theme--link-decoration--focus--on-saturated, underline);--pfe-broadcasted--link-decoration--visited:var(--pfe-theme--link-decoration--visited--on-saturated, underline)}:host(:is([color-palette=lightest])){--pfe-context-background-color:var(--pfe-theme--color--surface--lightest, #fff)}:host(:is([color-palette=lighter])){--pfe-context-background-color:var(--pfe-theme--color--surface--lighter, #ededed)}:host(:is([color-palette=base])){--pfe-context-background-color:var(--pfe-theme--color--surface--base, #ededed)}:host(:is([color-palette=darker])){--pfe-context-background-color:var(--pfe-theme--color--surface--darker, #393f44)}:host(:is([color-palette=darkest])){--pfe-context-background-color:var(--pfe-theme--color--surface--darkest, #292e34)}:host(:is([color-palette=complement])){--pfe-context-background-color:var(--pfe-theme--color--surface--complement, #004368)}:host(:is([color-palette=accent])){--pfe-context-background-color:var(--pfe-theme--color--surface--accent, #00659c)}:host(:is([color-palette])){background-color:var(--pfe-context-background-color,var(--pfe-theme--color--surface--base))}`;
    f2 = k2;
    h5 = /* @__PURE__ */ new Map();
    c4 = /* @__PURE__ */ __name(class {
      constructor(o21, e25) {
        this.host = o21;
        this.prefix = "pfe-";
        this.last = null;
        this.prefix = e25?.prefix ?? "pfe-", this.context = r6(`${this.prefix}-color-context`), this.logger = new n7(o21), this.styleController = new l7(o21, f2), o21.addController(this);
      }
    }, "c");
    n10 = /* @__PURE__ */ __name(class extends c4 {
      constructor(e25, t16) {
        super(e25, t16);
        this.callbacks = /* @__PURE__ */ new Set();
        this.mo = new MutationObserver(() => this.update(this.contextVariable));
        this.style = window.getComputedStyle(e25), this.attribute = t16?.attribute ?? "color-palette";
      }
      get contextVariable() {
        return this.style.getPropertyValue("--context").trim() || null;
      }
      hostConnected() {
        this.host.addEventListener("context-request", this.onChildContextEvent), this.mo.observe(this.host, { attributes: true, attributeFilter: [this.attribute, "on"] }), this.update(this.contextVariable);
        for (let [e25, t16] of h5)
          e25.dispatchEvent(t16);
      }
      hostDisconnected() {
        this.callbacks.forEach((e25) => this.callbacks.delete(e25)), this.mo.disconnect();
      }
      isColorContextEvent(e25) {
        return e25.target !== this.host && e25.context.name === `${this.prefix}-color-context`;
      }
      onChildContextEvent(e25) {
        this.isColorContextEvent(e25) && (e25.stopPropagation(), e25.callback(this.contextVariable), e25.multiple && this.callbacks.add(e25.callback));
      }
      update(e25) {
        for (let t16 of this.callbacks)
          t16(e25);
      }
    }, "n");
    i6([o8], n10.prototype, "onChildContextEvent", 1), i6([o8], n10.prototype, "update", 1);
    l8 = /* @__PURE__ */ __name(class extends c4 {
      constructor(e25, t16) {
        super(e25, t16);
        this.override = null;
        this.attribute ?? (this.attribute = "on");
      }
      hostConnected() {
        let e25 = new n9(this.context, this.contextCallback, true);
        this.override = this.host.getAttribute(this.attribute), this.host.dispatchEvent(e25), h5.set(this.host, e25);
      }
      hostDisconnected() {
        this.dispose?.(), this.dispose = void 0, h5.delete(this.host);
      }
      contextCallback(e25, t16) {
        t16 && t16 !== this.dispose && (this.dispose?.(), this.dispose = t16), this.update(e25);
      }
      update(e25) {
        !this.override && e25 !== this.last && (this.last = e25, this.logger.log(`setting context from ${this.host.getAttribute(this.attribute)} to ${e25}`), e25 == null ? this.host.removeAttribute(this.attribute) : this.host.setAttribute(this.attribute, e25));
      }
    }, "l");
    i6([o8], l8.prototype, "contextCallback", 1), i6([o8], l8.prototype, "update", 1);
  }
});

// node_modules/@patternfly/pfe-core/decorators/color-context.js
function c5(t16) {
  return function(e25, r18) {
    e25.constructor.addInitializer((o21) => {
      o21.__colorContextProvider = new n10(o21, t16);
    });
  };
}
function C2(t16) {
  return function(e25, r18) {
    e25.constructor.addInitializer((o21) => {
      o21.__colorContextConsumer = new l8(o21, t16);
    });
  };
}
var init_color_context2 = __esm({
  "node_modules/@patternfly/pfe-core/decorators/color-context.js"() {
    init_color_context();
    __name(c5, "c");
    __name(C2, "C");
  }
});

// node_modules/@patternfly/pfe-core/decorators/deprecation.js
function d3(r18) {
  return function(e25, t16) {
    let { alias: a19, ...n25 } = r18, o21 = e25.constructor, l25 = o21.getPropertyOptions(a19);
    o21.createProperty(t16, { ...l25, ...n25 }), o21.addInitializer((s20) => {
      s20.addController(new i7(s20, r18, t16));
    });
  };
}
var i7;
var init_deprecation = __esm({
  "node_modules/@patternfly/pfe-core/decorators/deprecation.js"() {
    init_logger();
    __name(d3, "d");
    i7 = /* @__PURE__ */ __name(class {
      constructor(e25, t16, a19) {
        this.host = e25;
        this.options = t16;
        this.deprecatedKey = a19;
        this.logged = false;
        this.logger = new n7(e25);
      }
      hostUpdate() {
        let { deprecatedKey: e25, options: { alias: t16 } } = this;
        this.host[e25] && this.host[t16] !== this.host[e25] && (this.logged || (this.logger.warn(`${e25} is deprecated, use ${t16} instead`), this.logged = true), this.host[t16] = this.host[e25]);
      }
    }, "i");
  }
});

// node_modules/@patternfly/pfe-core/controllers/light-dom-controller.js
var i8;
var init_light_dom_controller = __esm({
  "node_modules/@patternfly/pfe-core/controllers/light-dom-controller.js"() {
    init_logger();
    i8 = /* @__PURE__ */ __name(class {
      constructor(t16, e25, s20) {
        this.host = t16;
        this.options = s20;
        this.initializer = e25.bind(t16), this.mo = new MutationObserver(this.initializer), this.logger = new n7(this.host), t16.addController(this);
      }
      hostConnected() {
        this.hasLightDOM() ? this.initializer() : this.options?.emptyWarning && this.logger.warn(this.options?.emptyWarning), this.initObserver();
      }
      hostDisconnected() {
        this.mo.disconnect();
      }
      initObserver() {
        (this.options?.observe ?? true) && this.mo.observe(this.host, typeof this.options?.observe != "object" ? { childList: true } : this.options?.observe);
      }
      hasLightDOM() {
        return this.host.children.length > 0 || (this.host.textContent ?? "").trim().length > 0;
      }
    }, "i");
  }
});

// node_modules/@patternfly/pfe-core/decorators/initializer.js
function c6(n25) {
  return function(t16, o21) {
    t16.constructor.addInitializer((e25) => {
      let i25 = t16[o21], r18 = new i8(e25, i25, n25);
      e25.isConnected && r18.hostConnected();
    });
  };
}
var init_initializer = __esm({
  "node_modules/@patternfly/pfe-core/decorators/initializer.js"() {
    init_light_dom_controller();
    __name(c6, "c");
  }
});

// node_modules/@patternfly/pfe-core/controllers/property-observer-controller.js
var l9, t4, a5;
var init_property_observer_controller = __esm({
  "node_modules/@patternfly/pfe-core/controllers/property-observer-controller.js"() {
    l9 = Symbol("observed properties controller");
    t4 = /* @__PURE__ */ __name(class {
      constructor(e25) {
        this.host = e25;
        this.values = /* @__PURE__ */ new Map();
        if (t4.hosts.get(e25))
          return t4.hosts.get(e25);
        e25.addController(this), e25[l9] = this;
      }
      delete(e25) {
        this.values.delete(e25);
      }
      hostUpdate() {
        for (let [e25, [o21, [r18, s20]]] of this.values)
          this.host[o21]?.(r18, s20), this.delete(e25);
      }
      hostUpdated() {
        this.host.removeController(this);
      }
      cache(e25, o21, ...r18) {
        this.values.set(e25, [o21, r18]);
      }
    }, "t");
    a5 = t4;
    a5.hosts = /* @__PURE__ */ new WeakMap();
  }
});

// node_modules/@patternfly/pfe-core/decorators/observed.js
function p3(...o21) {
  if (o21.length === 1) {
    let [e25] = o21;
    return function(t16, r18) {
      t16.constructor.addInitializer((n25) => new a5(n25)), c7(t16, r18, e25);
    };
  } else {
    let [e25, t16] = o21;
    e25.constructor.addInitializer((r18) => new a5(r18)), c7(e25, t16);
  }
}
function c7(o21, e25, t16) {
  let r18 = Object.getOwnPropertyDescriptor(o21, e25);
  Object.defineProperty(o21, e25, { ...r18, configurable: true, set(n25) {
    let i25 = this[e25];
    if (r18?.set?.call(this, n25), typeof t16 == "function")
      t16.call(this, i25, n25);
    else {
      let s20 = t16 || `_${e25}Changed`;
      this.hasUpdated ? this[s20]?.(i25, n25) : this[l9].cache(e25, s20, i25, n25);
    }
  } });
}
var init_observed = __esm({
  "node_modules/@patternfly/pfe-core/decorators/observed.js"() {
    init_property_observer_controller();
    __name(p3, "p");
    __name(c7, "c");
  }
});

// node_modules/@patternfly/pfe-core/functions/random.js
function n11(t16 = "pfe") {
  return `${t16}-${Math.random().toString(36).substr(2, 9)}`;
}
var init_random = __esm({
  "node_modules/@patternfly/pfe-core/functions/random.js"() {
    __name(n11, "n");
  }
});

// node_modules/@patternfly/pfe-core/controllers/perf-controller.js
var r7;
var init_perf_controller = __esm({
  "node_modules/@patternfly/pfe-core/controllers/perf-controller.js"() {
    init_random();
    r7 = /* @__PURE__ */ __name(class {
      constructor(e25) {
        this.host = e25;
        this.hasMeasured = false;
        e25.addController(this), e25.id ? e25.id.startsWith("pfe-") && !e25.id.startsWith(e25.localName) ? this.markId = e25.id.replace("pfe", e25.localName) : this.markId = `${e25.localName}-${e25.id}` : this.markId = n11(e25.localName), performance.mark(`${this.markId}-defined`);
      }
      hostUpdate() {
        this.hasMeasured || this.measure();
      }
      measure() {
        this.hasMeasured = true, performance.mark(`${this.markId}-rendered`), performance.measure(`${this.markId}-from-navigation-to-first-render`, void 0, `${this.markId}-rendered`), performance.measure(`${this.markId}-from-defined-to-first-render`, `${this.markId}-defined`, `${this.markId}-rendered`), this.host.removeController(this);
      }
    }, "r");
  }
});

// node_modules/@patternfly/pfe-core/decorators/pfelement.js
function m3(e25) {
  return typeof e25.addInitializer == "function";
}
async function f3(e25) {
  if (i9.add(e25), !a6) {
    for (a6 = true; i9.size; ) {
      let n25 = [];
      for (let o21 of i9)
        n25.push(o21.updateComplete), i9.delete(o21);
      await Promise.all(n25);
    }
    document.body.removeAttribute("unresolved");
  }
}
function d4(e25) {
  let n25 = e25?.attribute ?? "pfelement", o21 = e25?.className ?? "PFElement";
  return function(r18) {
    if (!m3(r18))
      throw new Error(`@pfelement may only decorate ReactiveElements. ${r18.name} is does not implement ReactiveElement.`);
    r18.addInitializer((t16) => {
      window.PfeConfig.autoReveal && f3(t16), t16.addController({ hostConnected() {
        t16.setAttribute(n25, ""), t16.classList.add(o21);
      } }), l5() && new r7(t16);
    });
  };
}
var a6, i9;
var init_pfelement = __esm({
  "node_modules/@patternfly/pfe-core/decorators/pfelement.js"() {
    init_core();
    init_perf_controller();
    __name(m3, "m");
    a6 = false;
    i9 = /* @__PURE__ */ new Set();
    __name(f3, "f");
    __name(d4, "d");
  }
});

// node_modules/@patternfly/pfe-core/decorators/time.js
var init_time = __esm({
  "node_modules/@patternfly/pfe-core/decorators/time.js"() {
  }
});

// node_modules/@patternfly/pfe-core/decorators/trace.js
var init_trace = __esm({
  "node_modules/@patternfly/pfe-core/decorators/trace.js"() {
  }
});

// node_modules/@patternfly/pfe-core/decorators.js
var init_decorators = __esm({
  "node_modules/@patternfly/pfe-core/decorators.js"() {
    init_bound();
    init_cascades();
    init_color_context2();
    init_deprecation();
    init_initializer();
    init_observed();
    init_pfelement();
    init_time();
    init_trace();
  }
});

// node_modules/@patternfly/pfe-icon/node_modules/lit/index.js
var init_lit3 = __esm({
  "node_modules/@patternfly/pfe-icon/node_modules/lit/index.js"() {
    init_reactive_element();
    init_lit_html();
    init_lit_element();
  }
});

// node_modules/@patternfly/pfe-icon/node_modules/lit/decorators.js
var init_decorators2 = __esm({
  "node_modules/@patternfly/pfe-icon/node_modules/lit/decorators.js"() {
    init_custom_element();
    init_property();
    init_state();
    init_event_options();
    init_query();
    init_query_all();
    init_query_async();
    init_query_assigned_elements();
    init_query_assigned_nodes();
  }
});

// node_modules/lit-html/directives/if-defined.js
var l10;
var init_if_defined = __esm({
  "node_modules/lit-html/directives/if-defined.js"() {
    init_lit_html();
    l10 = /* @__PURE__ */ __name((l25) => null != l25 ? l25 : b, "l");
  }
});

// node_modules/@patternfly/pfe-icon/node_modules/lit/directives/if-defined.js
var init_if_defined2 = __esm({
  "node_modules/@patternfly/pfe-icon/node_modules/lit/directives/if-defined.js"() {
    init_if_defined();
  }
});

// node_modules/@patternfly/pfe-icon/pfe-icon.js
var k3, C3, c8, u3, d5, p4, f4, b2, S3, z2, y2, v2, l11, h6, m4, x2, e9;
var init_pfe_icon = __esm({
  "node_modules/@patternfly/pfe-icon/pfe-icon.js"() {
    init_lit3();
    init_decorators2();
    init_if_defined2();
    init_observed();
    init_logger();
    init_lit3();
    k3 = Object.defineProperty;
    C3 = Object.getOwnPropertyDescriptor;
    c8 = /* @__PURE__ */ __name((n25, i25, t16, s20) => {
      for (var r18 = s20 > 1 ? void 0 : s20 ? C3(i25, t16) : i25, o21 = n25.length - 1, a19; o21 >= 0; o21--)
        (a19 = n25[o21]) && (r18 = (s20 ? a19(i25, t16, r18) : a19(r18)) || r18);
      return s20 && r18 && k3(i25, t16, r18), r18;
    }, "c");
    u3 = /* @__PURE__ */ __name((n25, i25, t16) => {
      if (!i25.has(n25))
        throw TypeError("Cannot " + t16);
    }, "u");
    d5 = /* @__PURE__ */ __name((n25, i25, t16) => (u3(n25, i25, "read from private field"), t16 ? t16.call(n25) : i25.get(n25)), "d");
    p4 = /* @__PURE__ */ __name((n25, i25, t16) => {
      if (i25.has(n25))
        throw TypeError("Cannot add the same private member more than once");
      i25 instanceof WeakSet ? i25.add(n25) : i25.set(n25, t16);
    }, "p");
    f4 = /* @__PURE__ */ __name((n25, i25, t16, s20) => (u3(n25, i25, "write to private field"), s20 ? s20.call(n25, t16) : i25.set(n25, t16), t16), "f");
    b2 = /* @__PURE__ */ __name((n25, i25, t16) => (u3(n25, i25, "access private method"), t16), "b");
    S3 = i`:host{position:relative;display:inline-block;line-height:0;height:fit-content!important;width:fit-content!important}:host([size=sm]) #container{--_size:var(--pf-global--icon--FontSize--sm, 10px)}:host([size=md]) #container{--_size:var(--pf-global--icon--FontSize--md, 18px)}:host([size=lg]) #container{--_size:var(--pf-global--icon--FontSize--lg, 24px)}:host([size=xl]) #container{--_size:var(--pf-global--icon--FontSize--xl, 54px)}#container{display:grid;grid-template:1fr/1fr;place-content:center}#container,svg{width:var(--pfe-icon--size,var(--_size));height:var(--pfe-icon--size,var(--_size));min-width:var(--pfe-icon--size,var(--_size));min-height:var(--pfe-icon--size,var(--_size))}#container.content ::slotted(*){display:none}svg{fill:currentcolor}`;
    z2 = S3;
    y2 = window.requestIdleCallback ?? window.requestAnimationFrame;
    v2 = /* @__PURE__ */ __name(class extends ErrorEvent {
      constructor(t16, s20) {
        super("error", { message: `Could not load icon at ${t16}` });
        this.originalError = s20;
      }
    }, "v");
    e9 = /* @__PURE__ */ __name(class extends s4 {
      constructor() {
        super(...arguments);
        p4(this, m4);
        this.set = e9.defaultIconSet;
        this.icon = "";
        this.size = "sm";
        this.loading = "lazy";
        p4(this, l11, false);
        p4(this, h6, new n7(this));
      }
      static addIconSet(t16, s20) {
        if (typeof s20 != "function")
          n7.warn("[PfeIcon.addIconSet(setName, getter)]: getter must be a function");
        else {
          this.getters.set(t16, s20);
          for (let r18 of this.instances)
            r18.load();
        }
      }
      connectedCallback() {
        super.connectedCallback(), e9.instances.add(this);
      }
      disconnectedCallback() {
        super.disconnectedCallback(), e9.instances.delete(this);
      }
      render() {
        let t16 = this.content ?? "";
        return y`<div id="container" aria-hidden="true">${t16}<span part="fallback" ?hidden="${!!t16}"><slot></slot></span></div>`;
      }
      async _iconChanged() {
        switch (this.loading) {
          case "idle":
            return void y2(() => this.load());
          case "lazy":
            return void b2(this, m4, x2).call(this);
          case "eager":
            return void this.load();
        }
      }
      async load() {
        let { set: t16, icon: s20 } = this, r18 = e9.getters.get(t16) ?? e9.getIconUrl, o21 = "UNKNOWN ICON";
        if (t16 && s20)
          try {
            ({ pathname: o21 } = r18(t16, s20));
            let a19 = await import(o21);
            this.content = a19.default instanceof Node ? a19.default.cloneNode(true) : a19.default, await this.updateComplete, this.dispatchEvent(new Event("load", { bubbles: true }));
          } catch (a19) {
            let E4 = new v2(o21, a19);
            d5(this, h6).error(a19.message), this.dispatchEvent(E4);
          }
      }
    }, "e");
    l11 = /* @__PURE__ */ new WeakMap(), h6 = /* @__PURE__ */ new WeakMap(), m4 = /* @__PURE__ */ new WeakSet(), x2 = /* @__PURE__ */ __name(function() {
      e9.io.observe(this), d5(this, l11) && this.load();
    }, "x"), e9.version = "2.0.0-next.5", e9.styles = [z2], e9.defaultIconSet = "fas", e9.getIconUrl = (t16, s20) => new URL(`./icons/${t16}/${s20}.js`, import.meta.url), e9.onIntersect = (t16) => t16.forEach(({ isIntersecting: s20, target: r18 }) => {
      let o21 = r18;
      f4(o21, l11, s20), y2(() => {
        d5(o21, l11) && o21.load();
      });
    }), e9.io = new IntersectionObserver(e9.onIntersect), e9.getters = /* @__PURE__ */ new Map(), e9.instances = /* @__PURE__ */ new Set(), c8([e5()], e9.prototype, "set", 2), c8([p3, e5({ reflect: true })], e9.prototype, "icon", 2), c8([e5({ reflect: true })], e9.prototype, "size", 2), c8([e5()], e9.prototype, "loading", 2), c8([t3()], e9.prototype, "content", 2), e9 = c8([e4("pfe-icon")], e9);
  }
});

// node_modules/@patternfly/pfe-accordion/node_modules/lit/decorators.js
var init_decorators3 = __esm({
  "node_modules/@patternfly/pfe-accordion/node_modules/lit/decorators.js"() {
    init_custom_element();
    init_property();
    init_state();
    init_event_options();
    init_query();
    init_query_all();
    init_query_async();
    init_query_assigned_elements();
    init_query_assigned_nodes();
  }
});

// node_modules/@patternfly/pfe-accordion/node_modules/lit/index.js
var init_lit4 = __esm({
  "node_modules/@patternfly/pfe-accordion/node_modules/lit/index.js"() {
    init_reactive_element();
    init_lit_html();
    init_lit_element();
  }
});

// node_modules/lit-html/static.js
var e10, l12, o10, s6, a7, n12, u4;
var init_static = __esm({
  "node_modules/lit-html/static.js"() {
    init_lit_html();
    e10 = Symbol.for("");
    l12 = /* @__PURE__ */ __name((t16) => {
      if ((null == t16 ? void 0 : t16.r) === e10)
        return null == t16 ? void 0 : t16._$litStatic$;
    }, "l");
    o10 = /* @__PURE__ */ __name((t16) => ({ _$litStatic$: t16, r: e10 }), "o");
    s6 = /* @__PURE__ */ new Map();
    a7 = /* @__PURE__ */ __name((t16) => (r18, ...e25) => {
      const o21 = e25.length;
      let i25, a19;
      const n25 = [], u21 = [];
      let c23, $3 = 0, f25 = false;
      for (; $3 < o21; ) {
        for (c23 = r18[$3]; $3 < o21 && void 0 !== (a19 = e25[$3], i25 = l12(a19)); )
          c23 += i25 + r18[++$3], f25 = true;
        u21.push(a19), n25.push(c23), $3++;
      }
      if ($3 === o21 && n25.push(r18[o21]), f25) {
        const t17 = n25.join("$$lit$$");
        void 0 === (r18 = s6.get(t17)) && (n25.raw = n25, s6.set(t17, r18 = n25)), e25 = u21;
      }
      return t16(r18, ...e25);
    }, "a");
    n12 = a7(y);
    u4 = a7(w);
  }
});

// node_modules/@patternfly/pfe-accordion/node_modules/lit/static-html.js
var init_static_html = __esm({
  "node_modules/@patternfly/pfe-accordion/node_modules/lit/static-html.js"() {
    init_static();
  }
});

// node_modules/@patternfly/pfe-accordion/node_modules/lit/directives/if-defined.js
var init_if_defined3 = __esm({
  "node_modules/@patternfly/pfe-accordion/node_modules/lit/directives/if-defined.js"() {
    init_if_defined();
  }
});

// node_modules/@patternfly/pfe-core/controllers/slot-controller.js
function u5(i25) {
  return i25.length === 1 && typeof i25[0] == "object" && i25[0] !== null;
}
var c9, m5, a8, p5, d6, l13;
var init_slot_controller = __esm({
  "node_modules/@patternfly/pfe-core/controllers/slot-controller.js"() {
    init_bound();
    init_logger();
    c9 = Object.defineProperty;
    m5 = Object.getOwnPropertyDescriptor;
    a8 = /* @__PURE__ */ __name((i25, t16, e25, o21) => {
      for (var s20 = o21 > 1 ? void 0 : o21 ? m5(t16, e25) : t16, n25 = i25.length - 1, r18; n25 >= 0; n25--)
        (r18 = i25[n25]) && (s20 = (o21 ? r18(t16, e25, s20) : r18(s20)) || s20);
      return o21 && s20 && c9(t16, e25, s20), s20;
    }, "a");
    __name(u5, "u");
    p5 = /* @__PURE__ */ __name((i25) => (t16) => i25 === l13.anonymous ? !t16.hasAttribute("slot") : t16.getAttribute("slot") === i25, "p");
    d6 = /* @__PURE__ */ __name(class {
      constructor(t16, ...e25) {
        this.host = t16;
        this.nodes = /* @__PURE__ */ new Map();
        this.firstUpdated = false;
        this.mo = new MutationObserver(this.onMutation);
        this.deprecations = {};
        if (this.logger = new n7(this.host), u5(e25)) {
          let [{ slots: o21, deprecations: s20 }] = e25;
          this.slotNames = o21, this.deprecations = s20 ?? {};
        } else
          e25.length >= 1 ? (this.slotNames = e25, this.deprecations = {}) : this.slotNames = [null];
        t16.addController(this);
      }
      hostConnected() {
        this.host.addEventListener("slotchange", this.onSlotChange), this.firstUpdated = false, this.mo.observe(this.host, { childList: true }), this.init();
      }
      hostUpdated() {
        this.firstUpdated || (this.slotNames.forEach(this.initSlot), this.firstUpdated = true);
      }
      hostDisconnected() {
        this.mo.disconnect();
      }
      hasSlotted(...t16) {
        return t16.length ? t16.some((e25) => this.nodes.get(e25)?.hasContent ?? false) : (this.logger.warn("Please provide at least one slot name for which to search."), false);
      }
      getSlotted(...t16) {
        return t16.length ? t16.flatMap((e25) => this.nodes.get(e25)?.elements ?? []) : this.nodes.get(d6.anonymous)?.elements ?? [];
      }
      onSlotChange(t16) {
        let e25 = t16.target.name;
        this.initSlot(e25), this.host.requestUpdate();
      }
      async onMutation(t16) {
        let e25 = [];
        for (let { addedNodes: o21, removedNodes: s20 } of t16)
          for (let n25 of [...o21, ...s20])
            n25 instanceof HTMLElement && n25.slot && (this.initSlot(n25.slot), e25.push(n25.slot));
        e25.length && this.host.requestUpdate();
      }
      getChildrenForSlot(t16) {
        return Array.from(this.host.children).filter(p5(t16));
      }
      initSlot(t16) {
        let e25 = t16 || d6.anonymous, o21 = this.nodes.get(e25)?.slot?.assignedElements?.() ?? this.getChildrenForSlot(e25), s20 = t16 ? `slot[name="${t16}"]` : "slot:not([name])", n25 = this.host.shadowRoot?.querySelector?.(s20) ?? null, r18 = !!o21.length;
        this.nodes.set(e25, { elements: o21, name: t16 ?? "", hasContent: r18, slot: n25 }), this.logger.log(t16, r18);
      }
      init() {
        this.nodes.clear(), this.slotNames.forEach(this.initSlot), Object.values(this.deprecations).forEach(this.initSlot), this.host.requestUpdate();
      }
    }, "d");
    l13 = d6;
    l13.anonymous = Symbol("anonymous slot"), a8([o8], l13.prototype, "onSlotChange", 1), a8([o8], l13.prototype, "onMutation", 1), a8([o8], l13.prototype, "initSlot", 1), a8([o8], l13.prototype, "init", 1);
  }
});

// node_modules/@patternfly/pfe-accordion/BaseAccordionHeader.js
var f5, u6, i11, b3, p6, N2, h7, t6;
var init_BaseAccordionHeader = __esm({
  "node_modules/@patternfly/pfe-accordion/BaseAccordionHeader.js"() {
    init_lit4();
    init_decorators3();
    init_static_html();
    init_if_defined3();
    init_core();
    init_decorators();
    init_random();
    init_slot_controller();
    init_logger();
    init_lit4();
    init_pfe_icon();
    f5 = Object.defineProperty;
    u6 = Object.getOwnPropertyDescriptor;
    i11 = /* @__PURE__ */ __name((o21, s20, e25, r18) => {
      for (var n25 = r18 > 1 ? void 0 : r18 ? u6(s20, e25) : s20, l25 = o21.length - 1, d17; l25 >= 0; l25--)
        (d17 = o21[l25]) && (n25 = (r18 ? d17(s20, e25, n25) : d17(n25)) || n25);
      return r18 && n25 && f5(s20, e25, n25), n25;
    }, "i");
    b3 = i`#heading{font-size:100%;padding:0;margin:0}a,button{cursor:pointer}.toggle,.toggle:after,.toggle:before{padding:0;margin:0}.toggle{position:relative;display:flex;align-items:center;justify-content:space-between;width:100%;border:0}.toggle:after{content:"";position:absolute;bottom:0;left:0}span{overflow:hidden;text-overflow:ellipsis;white-space:nowrap}`;
    p6 = b3;
    N2 = /* @__PURE__ */ __name((o21) => o21 instanceof HTMLElement && !!o21.tagName.match(/P|^H[1-6]/), "N");
    h7 = /* @__PURE__ */ __name(class extends n6 {
      constructor(e25, r18, n25) {
        super("change");
        this.expanded = e25;
        this.toggle = r18;
        this.accordion = n25;
      }
    }, "h");
    t6 = /* @__PURE__ */ __name(class extends s4 {
      constructor() {
        super();
        this.expanded = false;
        this.headingText = "";
        this.headingTag = "h3";
        this.slots = new l13(this, "accents", null);
        this.logger = new n7(this);
        this.addEventListener("click", this._clickHandler);
      }
      get ariaExpandedState() {
        return String(!!this.expanded);
      }
      connectedCallback() {
        super.connectedCallback(), this.hidden = true, this.id || (this.id = n11("pfe-accordion"));
      }
      async _init() {
        let e25 = await this._getHeaderElement();
        e25 !== this._generatedHtag && (this._generatedHtag = void 0), this.headingTag = e25?.tagName.toLowerCase() ?? "h3", this.headingText = e25?.textContent?.trim() ?? "", this.hidden = false;
      }
      render() {
        let e25 = o10(this.headingTag);
        return n12`
      <${e25} id="heading">${y`<button id="button" aria-expanded="${this.ariaExpandedState}" class="toggle"><span part="text">${this.headingText || y`<slot></slot>`} </span>${this.slots.hasSlotted("accents") ? y`<span part="accents"><slot name="accents"></slot></span>` : ""}<pfe-icon icon="${this.icon ?? "angle-right"}" part="icon" set="${this.iconSet ?? "fas"}" class="icon" size="1x"></pfe-icon></button>`}
      </${e25}>
    `;
      }
      disconnectedCallback() {
        super.disconnectedCallback(), this.removeEventListener("click", this._clickHandler);
      }
      async _getHeaderElement() {
        if (await this.updateComplete, !this.firstElementChild && !this.firstChild)
          return void this.logger.warn("No header content provided");
        if (this.firstElementChild) {
          let [e25, ...r18] = this.slots.getSlotted().filter(N2);
          if (e25)
            r18.length && this.logger.warn("Heading currently only supports 1 tag; extra tags will be ignored.");
          else
            return void this.logger.warn("No heading information was provided.");
          return e25;
        } else
          return this._generatedHtag || this.logger.warn("Header should contain at least 1 heading tag for correct semantics."), this._generatedHtag = document.createElement("h3"), this.firstChild?.nodeType === Node.TEXT_NODE ? this._generatedHtag.textContent = this.firstChild.textContent : this._generatedHtag.textContent = this.textContent, this._generatedHtag;
      }
      _clickHandler(e25) {
        let r18 = !this.expanded, n25 = e25.composedPath().find((l25) => l25.tagName === "PFE-ACCORDION");
        this.dispatchEvent(new h7(r18, this, n25));
      }
      _expandedChanged() {
        this.button?.setAttribute("aria-expanded", this.ariaExpandedState);
      }
    }, "t");
    t6.version = "2.0.0-next.8", t6.styles = [p6], t6.shadowRootOptions = { ...s4.shadowRootOptions, delegatesFocus: true }, i11([e5({ attribute: "aria-controls", reflect: true })], t6.prototype, "ariaControls", 2), i11([e5({ reflect: true })], t6.prototype, "bordered", 2), i11([e5({ reflect: true })], t6.prototype, "icon", 2), i11([e5({ reflect: true, attribute: "icon-set" })], t6.prototype, "iconSet", 2), i11([p3, e5({ type: Boolean, reflect: true })], t6.prototype, "expanded", 2), i11([e5({ reflect: true, attribute: "heading-text" })], t6.prototype, "headingText", 2), i11([e5({ reflect: true, attribute: "heading-tag" })], t6.prototype, "headingTag", 2), i11([C2(), e5({ reflect: true })], t6.prototype, "on", 2), i11([i4(".toggle")], t6.prototype, "button", 2), i11([c6()], t6.prototype, "_init", 1), i11([o8], t6.prototype, "_getHeaderElement", 1), i11([o8], t6.prototype, "_clickHandler", 1);
  }
});

// node_modules/@patternfly/pfe-accordion/BaseAccordionPanel.js
var m6, f6, r8, y3, p7, e11;
var init_BaseAccordionPanel = __esm({
  "node_modules/@patternfly/pfe-accordion/BaseAccordionPanel.js"() {
    init_lit4();
    init_decorators3();
    init_decorators();
    init_random();
    init_lit4();
    m6 = Object.defineProperty;
    f6 = Object.getOwnPropertyDescriptor;
    r8 = /* @__PURE__ */ __name((s20, o21, a19, i25) => {
      for (var t16 = i25 > 1 ? void 0 : i25 ? f6(o21, a19) : o21, n25 = s20.length - 1, d17; n25 >= 0; n25--)
        (d17 = s20[n25]) && (t16 = (i25 ? d17(o21, a19, t16) : d17(t16)) || t16);
      return i25 && t16 && m6(o21, a19, t16), t16;
    }, "r");
    y3 = i`:host{display:none;overflow:hidden;will-change:height}:host([expanded]){display:block;position:relative}:host(.animating){display:block;transition:height .3s ease-in-out}:host([fixed]){overflow-y:auto}.body{position:relative}.body:after{content:"";position:absolute;top:0;bottom:0;left:0}`;
    p7 = y3;
    e11 = /* @__PURE__ */ __name(class extends s4 {
      constructor() {
        super(...arguments);
        this.expanded = false;
      }
      connectedCallback() {
        super.connectedCallback(), this.id || (this.id = n11("panel")), this.setAttribute("role", "region");
      }
      render() {
        return y`<div tabindex="-1"><div id="container" class="content" part="container"><div class="body"><slot></slot></div></div></div>`;
      }
    }, "e");
    e11.styles = [p7], r8([e5({ reflect: true })], e11.prototype, "bordered", 2), r8([e5({ type: Boolean, reflect: true })], e11.prototype, "expanded", 2), r8([e5({ attribute: "aria-labelledby", reflect: true })], e11.prototype, "ariaLabelledby", 2), r8([C2(), e5({ reflect: true })], e11.prototype, "on", 2);
  }
});

// node_modules/@patternfly/pfe-accordion/BaseAccordion.js
var J, Q, h8, B, p8, l14, z3, a9, X, M2, le, T2, D, y4, m7, L2, _2, v3, F, I2, O, c10, u7, g2, b4, S4, j, R2, G, U, K, k4, Z2, H2, C4, f7, d7;
var init_BaseAccordion = __esm({
  "node_modules/@patternfly/pfe-accordion/BaseAccordion.js"() {
    init_lit4();
    init_decorators3();
    init_decorators();
    init_core();
    init_logger();
    init_lit4();
    init_BaseAccordionHeader();
    init_BaseAccordionPanel();
    J = Object.defineProperty;
    Q = Object.getOwnPropertyDescriptor;
    h8 = /* @__PURE__ */ __name((s20, n25, e25, t16) => {
      for (var r18 = t16 > 1 ? void 0 : t16 ? Q(n25, e25) : n25, o21 = s20.length - 1, i25; o21 >= 0; o21--)
        (i25 = s20[o21]) && (r18 = (t16 ? i25(n25, e25, r18) : i25(r18)) || r18);
      return t16 && r18 && J(n25, e25, r18), r18;
    }, "h");
    B = /* @__PURE__ */ __name((s20, n25, e25) => {
      if (!n25.has(s20))
        throw TypeError("Cannot " + e25);
    }, "B");
    p8 = /* @__PURE__ */ __name((s20, n25, e25) => (B(s20, n25, "read from private field"), e25 ? e25.call(s20) : n25.get(s20)), "p");
    l14 = /* @__PURE__ */ __name((s20, n25, e25) => {
      if (n25.has(s20))
        throw TypeError("Cannot add the same private member more than once");
      n25 instanceof WeakSet ? n25.add(s20) : n25.set(s20, e25);
    }, "l");
    z3 = /* @__PURE__ */ __name((s20, n25, e25, t16) => (B(s20, n25, "write to private field"), t16 ? t16.call(s20, e25) : n25.set(s20, e25), e25), "z");
    a9 = /* @__PURE__ */ __name((s20, n25, e25) => (B(s20, n25, "access private method"), e25), "a");
    X = i`:host{transition-property:box-shadow,border;transition-timing-function:ease-out;transition-duration:1ms}`;
    M2 = X;
    le = /^[0-9.]+(?<unit>[a-zA-Z]+)/g;
    T2 = /* @__PURE__ */ __name(class extends n6 {
      constructor(e25, t16) {
        super("expand");
        this.toggle = e25;
        this.panel = t16;
      }
    }, "T");
    D = /* @__PURE__ */ __name(class extends n6 {
      constructor(e25, t16) {
        super("collapse");
        this.toggle = e25;
        this.panel = t16;
      }
    }, "D");
    f7 = /* @__PURE__ */ __name(class extends s4 {
      constructor() {
        super(...arguments);
        l14(this, v3);
        l14(this, I2);
        l14(this, c10);
        l14(this, g2);
        l14(this, S4);
        l14(this, R2);
        l14(this, U);
        l14(this, k4);
        l14(this, H2);
        this.on = "light";
        this.history = false;
        this.expandedIndex = [];
        this._updateHistory = true;
        l14(this, y4, /* @__PURE__ */ new Set());
        this.initialized = false;
        l14(this, m7, new n7(this));
        l14(this, L2, getComputedStyle(this));
        l14(this, _2, a9(this, v3, F).call(this));
      }
      static isHeader(e25) {
        return e25 instanceof t6;
      }
      static isPanel(e25) {
        return e25 instanceof e11;
      }
      connectedCallback() {
        super.connectedCallback(), this.addEventListener("change", this._changeHandler), this.addEventListener("keydown", a9(this, I2, O));
      }
      render() {
        return y`<slot></slot>`;
      }
      disconnectedCallback() {
        super.disconnectedCallback(), window.removeEventListener("popstate", this._updateStateFromURL);
      }
      isAccordionPanel(e25) {
        return e25 instanceof Element;
      }
      _panelForHeader(e25) {
        let t16 = e25.nextElementSibling;
        if (!!t16) {
          if (!this.isAccordionPanel(t16)) {
            p8(this, m7).error("Sibling element to a header needs to be a panel");
            return;
          }
          return t16;
        }
      }
      async _init() {
        this.initialized || (await this.updateComplete, this.initialized = true), this.updateAccessibility(), this._updateStateFromURL();
      }
      _changeHandler(e25) {
        if (this.classList.contains("animating"))
          return;
        let t16 = a9(this, H2, C4).call(this, e25.target);
        e25.expanded ? this.expand(t16, e25.accordion) : this.collapse(t16), this._updateURLHistory();
      }
      _expandHeader(e25, t16) {
        t16 === void 0 && (t16 = a9(this, H2, C4).call(this, e25)), p8(this, y4).add(t16), e25.expanded = true;
      }
      async _expandPanel(e25) {
        if (!e25) {
          p8(this, m7).error("Trying to expand a panel that doesn't exist.");
          return;
        }
        if (e25.expanded)
          return;
        e25.expanded = true, e25.hidden = false, await e25.updateComplete;
        let t16 = e25.getBoundingClientRect();
        this._animate(e25, 0, t16.height);
      }
      _collapseHeader(e25) {
        let t16 = a9(this, H2, C4).call(this, e25);
        p8(this, y4).delete(t16), e25.expanded = false;
      }
      async _collapsePanel(e25) {
        if (!e25) {
          p8(this, m7).error("Trying to collapse a panel that doesn't exist");
          return;
        }
        if (await e25.updateComplete, !e25.expanded)
          return;
        let t16 = e25.getBoundingClientRect();
        e25.expanded = false, e25.hidden = true, this._animate(e25, t16.height, 0);
      }
      async _animate(e25, t16, r18) {
        if (e25) {
          let o21 = e25.previousElementSibling, i25 = a9(this, v3, F).call(this);
          i25 && z3(this, _2, i25);
          let P3 = p8(this, _2) ?? 0;
          o21?.classList.add("animating"), e25.classList.add("animating");
          let A2 = e25.animate({ height: [`${t16}px`, `${r18}px`] }, { duration: P3 });
          A2.play(), await A2.finished, o21?.classList.remove("animating"), e25.classList.remove("animating"), e25.style.removeProperty("height"), e25.hidden = !e25.expanded;
        }
      }
      async _expandedIndexChanged(e25, t16) {
        await this.updateComplete, !(e25 === t16 || !Array.isArray(t16)) && [...t16].reverse().forEach((r18) => this.expand(r18 - 1));
      }
      _getIndexesFromURL() {
        let e25 = new URLSearchParams(window.location.search);
        if (e25.has(this.id)) {
          let r18 = (e25.get(this.id) ?? "").split("-");
          return r18.length < 0 ? [] : r18.map((o21) => parseInt(o21.trim(), 10) - 1);
        }
      }
      _updateURLHistory() {
        if (!this.history || !this._updateHistory)
          return;
        if (!this.id) {
          p8(this, m7).error("The history feature cannot update the URL without an ID added to the accordion tag.");
          return;
        }
        let e25 = Array.from(p8(this, y4), (r18) => r18 + 1).sort((r18, o21) => r18 - o21).join("-"), t16 = new URL(window.location.href);
        p8(this, y4).size > 0 ? t16.searchParams.set(this.id, e25) : t16.searchParams.delete(this.id), history.replaceState({}, "", t16.toString());
      }
      _updateStateFromURL() {
        let e25 = this._getIndexesFromURL() ?? [];
        this._updateHistory = false, e25.forEach((t16) => this.expand(t16)), this._updateHistory = true;
      }
      updateAccessibility() {
        a9(this, c10, u7).call(this).forEach((t16) => {
          let r18 = this._panelForHeader(t16);
          r18 && (t16.setAttribute("aria-controls", r18.id), r18.setAttribute("aria-labelledby", t16.id), r18.hidden = !r18.expanded);
        });
      }
      toggle(e25) {
        a9(this, c10, u7).call(this)[e25].expanded ? this.collapse(e25) : this.expand(e25);
      }
      expand(e25, t16) {
        if (e25 == null || (e25 = parseInt(`${e25}`, 10), e25 === -1))
          return;
        let r18 = a9(this, c10, u7).call(this, t16), o21 = a9(this, g2, b4).call(this, t16);
        if (this.single === "true" && this._updateHistory) {
          let A2 = r18.filter((x11) => x11.expanded), q = o21.filter((x11) => x11.expanded);
          A2.forEach((x11) => this._collapseHeader(x11)), q.forEach((x11) => this._collapsePanel(x11));
        }
        let i25 = r18[e25];
        if (!i25)
          return;
        let P3 = this._panelForHeader(i25);
        !i25 || !P3 || (this._expandHeader(i25, e25), this._expandPanel(P3), i25.focus(), this.dispatchEvent(new T2(i25, P3)));
      }
      expandAll() {
        let e25 = a9(this, c10, u7).call(this), t16 = a9(this, g2, b4).call(this);
        e25.forEach((r18) => this._expandHeader(r18)), t16.forEach((r18) => this._expandPanel(r18));
      }
      collapse(e25) {
        let t16 = a9(this, c10, u7).call(this), r18 = a9(this, g2, b4).call(this), o21 = t16[e25], i25 = r18[e25];
        !o21 || !i25 || (this._collapseHeader(o21), this._collapsePanel(i25), this.dispatchEvent(new D(o21, i25)));
      }
      async collapseAll() {
        let e25 = a9(this, c10, u7).call(this), t16 = a9(this, g2, b4).call(this);
        await e25.forEach((r18) => this._collapseHeader(r18)), await t16.forEach((r18) => this._collapsePanel(r18));
      }
    }, "f");
    d7 = f7;
    y4 = /* @__PURE__ */ new WeakMap(), m7 = /* @__PURE__ */ new WeakMap(), L2 = /* @__PURE__ */ new WeakMap(), _2 = /* @__PURE__ */ new WeakMap(), v3 = /* @__PURE__ */ new WeakSet(), F = /* @__PURE__ */ __name(function() {
      if ("computedStyleMap" in this)
        return this.computedStyleMap().get("transition-duration")?.to("ms").value;
      {
        let { transitionDuration: e25 } = p8(this, L2), t16 = le.exec(e25)?.groups;
        if (!t16)
          return 0;
        let r18 = parseFloat(e25);
        return t16.unit === "s" ? r18 * 1e3 : r18;
      }
    }, "F"), I2 = /* @__PURE__ */ new WeakSet(), O = /* @__PURE__ */ __name(async function(e25) {
      let t16 = e25.target;
      if (!f7.isHeader(t16))
        return;
      let r18;
      switch (e25.key) {
        case "ArrowDown":
          e25.preventDefault(), r18 = a9(this, R2, G).call(this);
          break;
        case "ArrowUp":
          e25.preventDefault(), r18 = a9(this, S4, j).call(this);
          break;
        case "Home":
          e25.preventDefault(), r18 = a9(this, U, K).call(this);
          break;
        case "End":
          e25.preventDefault(), r18 = a9(this, k4, Z2).call(this);
          break;
        default:
          return;
      }
      r18?.focus?.();
    }, "O"), c10 = /* @__PURE__ */ new WeakSet(), u7 = /* @__PURE__ */ __name(function(e25) {
      return e25 !== void 0 ? Array.from(e25.children).filter(f7.isHeader) : Array.from(this.children).filter(f7.isHeader);
    }, "u"), g2 = /* @__PURE__ */ new WeakSet(), b4 = /* @__PURE__ */ __name(function(e25) {
      return e25 !== void 0 ? Array.from(e25.children).filter(f7.isPanel) : Array.from(this.children).filter(f7.isPanel);
    }, "b"), S4 = /* @__PURE__ */ new WeakSet(), j = /* @__PURE__ */ __name(function() {
      let e25 = a9(this, c10, u7).call(this), t16 = e25.findIndex((r18) => r18.matches(":focus,:focus-within")) - 1;
      return e25[(t16 + e25.length) % e25.length];
    }, "j"), R2 = /* @__PURE__ */ new WeakSet(), G = /* @__PURE__ */ __name(function() {
      let e25 = a9(this, c10, u7).call(this), t16 = e25.findIndex((r18) => r18.matches(":focus,:focus-within")) + 1;
      return e25[t16 % e25.length];
    }, "G"), U = /* @__PURE__ */ new WeakSet(), K = /* @__PURE__ */ __name(function() {
      return a9(this, c10, u7).call(this)[0];
    }, "K"), k4 = /* @__PURE__ */ new WeakSet(), Z2 = /* @__PURE__ */ __name(function() {
      let e25 = a9(this, c10, u7).call(this);
      return e25[e25.length - 1];
    }, "Z"), H2 = /* @__PURE__ */ new WeakSet(), C4 = /* @__PURE__ */ __name(function(e25) {
      return f7.isHeader(e25) ? a9(this, c10, u7).call(this).findIndex((r18) => r18.id === e25.id) : f7.isPanel(e25) ? a9(this, g2, b4).call(this).findIndex((r18) => r18.id === e25.id) : (p8(this, m7).warn("The _getIndex method expects to receive a header or panel element."), -1);
    }, "C"), d7.styles = [M2], h8([c5(), e5({ reflect: true, attribute: "color-palette" })], d7.prototype, "colorPalette", 2), h8([d3({ alias: "colorPalette", attribute: "color" })], d7.prototype, "color", 2), h8([C2(), e5({ reflect: true })], d7.prototype, "on", 2), h8([e5({ reflect: true })], d7.prototype, "single", 2), h8([p3, e5({ type: Boolean })], d7.prototype, "history", 2), h8([p3, e5({ attribute: "expanded-index", converter: i5 })], d7.prototype, "expandedIndex", 2), h8([t3()], d7.prototype, "_updateHistory", 2), h8([c6()], d7.prototype, "_init", 1), h8([o8], d7.prototype, "_changeHandler", 1), h8([o8], d7.prototype, "_getIndexesFromURL", 1), h8([o8], d7.prototype, "_updateURLHistory", 1), h8([o8], d7.prototype, "_updateStateFromURL", 1);
  }
});

// node_modules/@patternfly/pfe-accordion/pfe-accordion-header.js
var d8, f8, n13, s7, i12, a10;
var init_pfe_accordion_header = __esm({
  "node_modules/@patternfly/pfe-accordion/pfe-accordion-header.js"() {
    init_decorators3();
    init_pfe_icon();
    init_BaseAccordionHeader();
    init_lit4();
    d8 = Object.defineProperty;
    f8 = Object.getOwnPropertyDescriptor;
    n13 = /* @__PURE__ */ __name((t16, r18, g13, e25) => {
      for (var o21 = e25 > 1 ? void 0 : e25 ? f8(r18, g13) : r18, l25 = t16.length - 1, c23; l25 >= 0; l25--)
        (c23 = t16[l25]) && (o21 = (e25 ? c23(r18, g13, o21) : c23(o21)) || o21);
      return e25 && o21 && d8(r18, g13, o21), o21;
    }, "n");
    s7 = i`:host{--pfe-icon--size:var(--pf-c-accordion__toggle--IconSize, 10px);color:var(--pf-c-accordion__toggle--Color,var(--pf-global--Color--100,#151515));background-color:var(--pf-global--BackgroundColor--100,#fff)}:host([large]){--pf-c-accordion__toggle--PaddingTop:var(--pf-global--spacer--md, 1rem);--pf-c-accordion__toggle--PaddingRight:var(--pf-global--spacer--md, 1rem);--pf-c-accordion__toggle--PaddingBottom:var(--pf-global--spacer--md, 1rem);--pf-c-accordion__toggle--PaddingLeft:var(--pf-global--spacer--lg, 1.5rem);--pf-c-accordion__toggle--FontFamily:var(
      --pf-global--FontFamily--redhat-updated--heading--sans-serif,
      "RedHatDisplayUpdated",
      "Overpass",
      overpass,
      helvetica,
      arial,
      sans-serif
    );--pf-c-accordion__toggle--FontSize:var(--pf-global--FontSize--xl, 1.25rem);--pf-c-accordion__toggle--hover-text--Color:var(--pf-global--Color--100, #151515);--pf-c-accordion__toggle--active-text--Color:var(--pf-global--Color--100, #151515);--pf-c-accordion__toggle--active-text--FontWeight:var(--pf-global--FontWeight--normal, 400);--pf-c-accordion__toggle--focus-text--Color:var(--pf-global--Color--100, #151515);--pf-c-accordion__toggle--focus-text--FontWeight:var(--pf-global--FontWeight--normal, 400);--pf-c-accordion__toggle--expanded-text--Color:var(--pf-global--Color--100, #151515);--pf-c-accordion__toggle--expanded-text--FontWeight:var(--pf-global--FontWeight--normal, 400);--pfe-icon--size:var(--pf-c-accordion__toggle--IconSize, 12px)}#heading{font-weight:var(--pf-c-accordion__toggle--FontWeight,var(--pf-global--FontWeight--normal,400))}.toggle,.toggle:after,.toggle:before{background-color:var(--pf-c-accordion__toggle--BackgroundColor,transparent)}.icon{transition:var(--pf-c-accordion__toggle-icon--Transition, .2s ease-in 0s)}.toggle{padding:var(--pf-c-accordion__toggle--PaddingTop,var(--pf-global--spacer--md,.5rem)) var(--pf-c-accordion__toggle--PaddingRight,var(--pf-global--spacer--md,1rem)) var(--pf-c-accordion__toggle--PaddingBottom,var(--pf-global--spacer--sm,.5rem)) var(--pf-c-accordion__toggle--PaddingLeft,var(--pf-global--spacer--md,1rem));font-family:var(--pf-c-accordion__toggle--FontFamily, var(--pf-global--FontFamily--redhat-updated--heading--sans-serif, "RedHatTextUpdated", helvetica, arial, sans-serif));font-size:var(--pf-c-accordion__toggle--FontSize, var(--pf-global--FontSize--lg, 1rem));font-weight:var(--pf-c-accordion__toggle--FontWeight,var(--pf-global--FontWeight--normal,400));color:var(--pf-c-accordion__toggle--Color,var(--pf-global--Color--100,#151515))}.toggle[aria-expanded=true]{--pf-c-accordion__toggle--after--BackgroundColor:var(
      --pf-c-accordion__toggle--expanded--before--BackgroundColor,
      var(
        --pf-global--primary-color--100,
        #0066cc
      )
    )}.toggle:after{top:var(--pf-c-accordion__toggle--before--Top,-1px);width:var(--pf-c-accordion__toggle--before--Width,var(--pf-global--BorderWidth--lg,3px));background-color:var(--pf-c-accordion__toggle--after--BackgroundColor,transparent)}span{max-width:var(--pf-c-accordion__toggle-text--MaxWidth,calc(100% - var(--pf-global--spacer--lg,1.5rem)))}.toggle[aria-expanded=true] .icon{rotate:var(--pf-c-accordion__toggle--expanded-icon--Rotate,90deg)}.toggle:active,.toggle:focus,.toggle:hover{background-color:var(--pf-c-accordion__toggle--active--BackgroundColor,var(--pf-global--BackgroundColor--200,#f0f0f0))}.toggle:active span,.toggle:focus span,.toggle:hover span{color:var(--pf-c-accordion__toggle--active-text--Color,var(--pf-global--link--Color,#06c))}.toggle:active span,.toggle:focus span{font-weight:var(--pf-c-accordion__toggle--active-text--FontWeight,var(--pf-global--FontWeight--semi-bold,700))}`;
    i12 = s7;
    a10 = /* @__PURE__ */ __name(class extends t6 {
    }, "a");
    a10.version = "2.0.0-next.8", a10.styles = [...t6.styles, i12], a10 = n13([e4("pfe-accordion-header")], a10);
  }
});

// node_modules/@patternfly/pfe-accordion/pfe-accordion-panel.js
var f9, g3, l15, m8, t7, a11;
var init_pfe_accordion_panel = __esm({
  "node_modules/@patternfly/pfe-accordion/pfe-accordion-panel.js"() {
    init_decorators3();
    init_BaseAccordionPanel();
    init_lit4();
    f9 = Object.defineProperty;
    g3 = Object.getOwnPropertyDescriptor;
    l15 = /* @__PURE__ */ __name((c23, d17, n25, r18) => {
      for (var o21 = r18 > 1 ? void 0 : r18 ? g3(d17, n25) : d17, e25 = c23.length - 1, p22; e25 >= 0; e25--)
        (p22 = c23[e25]) && (o21 = (r18 ? p22(d17, n25, o21) : p22(o21)) || o21);
      return r18 && o21 && f9(d17, n25, o21), o21;
    }, "l");
    m8 = i`:host{color:var(--pf-global--Color--100,#151515);background-color:var(--pf-c-accordion--BackgroundColor,var(--pf-global--BackgroundColor--light-100,#fff))}.body{padding:var(--pf-c-accordion__panel-body--PaddingTop,var(--pf-global--spacer--sm,.5rem)) var(--pf-c-accordion__panel-body--PaddingRight,var(--pf-global--spacer--md,1rem)) var(--pf-c-accordion__panel-body--PaddingBottom,var(--pf-global--spacer--sm,.5rem)) var(--pf-c-accordion__panel-body--PaddingLeft,var(--pf-global--spacer--md,1rem))}.body:after{width:var(--pf-c-accordion__panel-body--before--Width,var(--pf-global--BorderWidth--lg,3px));background-color:var(--pf-c-accordion__panel-body--before--BackgroundColor,transparent)}:host([large]){--pf-c-accordion__panel-body--PaddingTop:var(
      --pf-c-accordion--m-display-lg__expanded-content-body--PaddingTop,
      0
    );--pf-c-accordion__panel-body--PaddingRight:var(
      --pf-c-accordion--m-display-lg__expanded-content-body--PaddingRight,
      1rem
    );--pf-c-accordion__panel-body--PaddingBottom:var(
      --pf-c-accordion--m-display-lg__expanded-content-body--PaddingBottom,
      1.5rem
    );--pf-c-accordion__panel-body--PaddingLeft:var(
      --pf-c-accordion--m-display-lg__expanded-content-body--PaddingLeft,
      1.5rem
    );--pf-c-accordion__panel--FontSize:var(
      --pf-c-accordion--m-display-lg__expanded-content--FontSize,
      1rem
    );--pf-c-accordion__panel--Color:var(
      --pf-c-accordion--m-display-lg__expanded-content--Color,
      #151515
    )}:host([large]) .body:last-child{--pf-c-accordion__panel-body--PaddingBottom:var(
      --pf-c-accordion--m-display-lg__expanded-content-body--last-child--PaddingBottom,
      1.5rem
    )}.content{color:var(--pf-c-accordion__panel--Color,var(--pf-global--Color--dark-200,#6a6e73));font-size:var(--pf-c-accordion__panel--FontSize, var(--pf-global--FontSize--sm, .875rem))}:host([fixed]){max-height:var(--pf-c-accordion__panel--m-fixed--MaxHeight,9.375rem)}.content[expanded],:host([expanded]) .content{--pf-c-accordion__panel-body--before--BackgroundColor:var(
      --pf-c-accordion__panel--content-body--before--BackgroundColor,
      var(--pf-global--primary-color--100, #0066cc)
    )}`;
    t7 = m8;
    a11 = /* @__PURE__ */ __name(class extends e11 {
    }, "a");
    a11.version = "2.0.0-next.8", a11.styles = [...e11.styles, t7], a11 = l15([e4("pfe-accordion-panel")], a11);
  }
});

// node_modules/@patternfly/pfe-accordion/pfe-accordion.js
var pfe_accordion_exports = {};
__export(pfe_accordion_exports, {
  PfeAccordion: () => o11
});
var b5, h9, d9, x3, i13, o11;
var init_pfe_accordion = __esm({
  "node_modules/@patternfly/pfe-accordion/pfe-accordion.js"() {
    init_cascades();
    init_decorators3();
    init_decorators3();
    init_BaseAccordion();
    init_pfe_accordion_header();
    init_pfe_accordion_panel();
    init_lit4();
    b5 = Object.defineProperty;
    h9 = Object.getOwnPropertyDescriptor;
    d9 = /* @__PURE__ */ __name((a19, r18, l25, t16) => {
      for (var e25 = t16 > 1 ? void 0 : t16 ? h9(r18, l25) : r18, s20 = a19.length - 1, c23; s20 >= 0; s20--)
        (c23 = a19[s20]) && (e25 = (t16 ? c23(r18, l25, e25) : c23(e25)) || e25);
      return t16 && e25 && b5(r18, l25, e25), e25;
    }, "d");
    x3 = i`:host{--accordion__bordered--Color:var(--rh-color-black-300, #d2d2d2);color:var(--pf-global--Color--100,#151515);background-color:var(--pf-global--BackgroundColor--100,#fff)}:host([bordered]) ::slotted(pfe-accordion-header:first-child),:host([large]) ::slotted(pfe-accordion-header:first-child){display:block;border-top:1px solid var(--accordion__bordered--Color);border-bottom:1px solid var(--accordion__bordered--Color)}:host([bordered]) ::slotted(pfe-accordion-header:not(:first-child)),:host([large]) ::slotted(pfe-accordion-header:not(:first-child)){display:block;border-bottom:1px solid var(--accordion__bordered--Color)}:host([bordered]) ::slotted(pfe-accordion-header:is([expanded])),:host([large]) ::slotted(pfe-accordion-header:is([expanded])){display:block;border-bottom:0}:host([bordered]) ::slotted(pfe-accordion-panel:is([expanded])),:host([large]) ::slotted(pfe-accordion-panel:is([expanded])){display:block;border-bottom:1px solid var(--accordion__bordered--Color)}`;
    i13 = x3;
    o11 = /* @__PURE__ */ __name(class extends d7 {
      constructor() {
        super(...arguments);
        this.fixed = false;
      }
    }, "o");
    o11.version = "2.0.0-next.8", o11.styles = [...d7.styles, i13], d9([s5("pfe-accordion-header", "pfe-accordion-panel"), e5({ reflect: true })], o11.prototype, "bordered", 2), d9([s5("pfe-accordion-header", "pfe-accordion-panel"), e5({ reflect: true })], o11.prototype, "large", 2), d9([e5({ type: Boolean, reflect: true })], o11.prototype, "fixed", 2), o11 = d9([e4("pfe-accordion")], o11);
  }
});

// node_modules/@lrnwebcomponents/code-sample/lib/themes/one-dark.js
var oneDark;
var init_one_dark = __esm({
  "node_modules/@lrnwebcomponents/code-sample/lib/themes/one-dark.js"() {
    init_lit();
    oneDark = y`
  <style>
    /*

  Atom One Dark by Daniel Gamage
  Original One Dark Syntax theme from https://github.com/atom/one-dark-syntax

  base:    #282c34
  mono-1:  #abb2bf
  mono-2:  #818896
  mono-3:  #5c6370
  hue-1:   #56b6c2
  hue-2:   #61aeee
  hue-3:   #c678dd
  hue-4:   #98c379
  hue-5:   #e06c75
  hue-5-2: #be5046
  hue-6:   #d19a66
  hue-6-2: #e6c07b

  */

    .hljs {
      display: block;
      overflow-x: auto;
      color: var(--code-sample-color, #abb2bf);
      background: var(--code-sample-background, #282c34);
    }

    .hljs-comment,
    .hljs-quote {
      color: #5c6370;
      font-style: italic;
    }

    .hljs-doctag,
    .hljs-keyword,
    .hljs-formula {
      color: #c678dd;
    }

    .hljs-section,
    .hljs-name,
    .hljs-selector-tag,
    .hljs-deletion,
    .hljs-subst,
    .hljs-tag {
      color: #e06c75;
    }

    .hljs-literal {
      color: #56b6c2;
    }

    .hljs-string,
    .hljs-regexp,
    .hljs-addition,
    .hljs-attribute,
    .hljs-meta-string {
      color: #98c379;
    }

    .hljs-built_in,
    .hljs-class .hljs-title {
      color: #e6c07b;
    }

    .hljs-attr,
    .hljs-variable,
    .hljs-template-variable,
    .hljs-type,
    .hljs-selector-class,
    .hljs-selector-attr,
    .hljs-selector-pseudo,
    .hljs-number {
      color: #d19a66;
    }

    .hljs-symbol,
    .hljs-bullet,
    .hljs-link,
    .hljs-meta,
    .hljs-selector-id,
    .hljs-title {
      color: #61aeee;
    }

    .hljs-emphasis {
      font-style: italic;
    }

    .hljs-strong {
      font-weight: bold;
    }

    .hljs-link {
      text-decoration: underline;
    }

    .hljs-params {
      color: #e6c07b;
    }
  </style>
`;
  }
});

// node_modules/@lrnwebcomponents/code-sample/lib/highlightjs/highlight.js
function escape(value) {
  return value.replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;");
}
function tag(node) {
  return node.nodeName.toLowerCase();
}
function testRe(re, lexeme) {
  var match = re && re.exec(lexeme);
  return match && match.index === 0;
}
function isNotHighlighted(language) {
  return noHighlightRe.test(language);
}
function blockLanguage(block2) {
  var i25, match, length, _class;
  var classes = block2.className + " ";
  classes += block2.parentNode ? block2.parentNode.className : "";
  match = languagePrefixRe.exec(classes);
  if (match) {
    return getLanguage(match[1]) ? match[1] : "no-highlight";
  }
  classes = classes.split(/\s+/);
  for (i25 = 0, length = classes.length; i25 < length; i25++) {
    _class = classes[i25];
    if (isNotHighlighted(_class) || getLanguage(_class)) {
      return _class;
    }
  }
}
function inherit(parent) {
  var key;
  var result = {};
  var objects = Array.prototype.slice.call(arguments, 1);
  for (key in parent)
    result[key] = parent[key];
  objects.forEach(function(obj) {
    for (key in obj)
      result[key] = obj[key];
  });
  return result;
}
function nodeStream(node) {
  var result = [];
  (/* @__PURE__ */ __name(function _nodeStream(node2, offset2) {
    for (var child = node2.firstChild; child; child = child.nextSibling) {
      if (child.nodeType === 3)
        offset2 += child.nodeValue.length;
      else if (child.nodeType === 1) {
        result.push({
          event: "start",
          offset: offset2,
          node: child
        });
        offset2 = _nodeStream(child, offset2);
        if (!tag(child).match(/br|hr|img|input/)) {
          result.push({
            event: "stop",
            offset: offset2,
            node: child
          });
        }
      }
    }
    return offset2;
  }, "_nodeStream"))(node, 0);
  return result;
}
function mergeStreams(original, highlighted, value) {
  var processed = 0;
  var result = "";
  var nodeStack = [];
  function selectStream() {
    if (!original.length || !highlighted.length) {
      return original.length ? original : highlighted;
    }
    if (original[0].offset !== highlighted[0].offset) {
      return original[0].offset < highlighted[0].offset ? original : highlighted;
    }
    return highlighted[0].event === "start" ? original : highlighted;
  }
  __name(selectStream, "selectStream");
  function open(node) {
    function attr_str(a19) {
      return " " + a19.nodeName + '="' + escape(a19.value).replace('"', "&quot;") + '"';
    }
    __name(attr_str, "attr_str");
    result += "<" + tag(node) + ArrayProto.map.call(node.attributes, attr_str).join("") + ">";
  }
  __name(open, "open");
  function close(node) {
    result += "</" + tag(node) + ">";
  }
  __name(close, "close");
  function render(event) {
    (event.event === "start" ? open : close)(event.node);
  }
  __name(render, "render");
  while (original.length || highlighted.length) {
    var stream = selectStream();
    result += escape(value.substring(processed, stream[0].offset));
    processed = stream[0].offset;
    if (stream === original) {
      nodeStack.reverse().forEach(close);
      do {
        render(stream.splice(0, 1)[0]);
        stream = selectStream();
      } while (stream === original && stream.length && stream[0].offset === processed);
      nodeStack.reverse().forEach(open);
    } else {
      if (stream[0].event === "start") {
        nodeStack.push(stream[0].node);
      } else {
        nodeStack.pop();
      }
      render(stream.splice(0, 1)[0]);
    }
  }
  return result + escape(value.substr(processed));
}
function expand_mode(mode) {
  if (mode.variants && !mode.cached_variants) {
    mode.cached_variants = mode.variants.map(function(variant) {
      return inherit(mode, { variants: null }, variant);
    });
  }
  return mode.cached_variants || mode.endsWithParent && [inherit(mode)] || [mode];
}
function compileLanguage(language) {
  function reStr(re) {
    return re && re.source || re;
  }
  __name(reStr, "reStr");
  function langRe(value, global2) {
    return new RegExp(
      reStr(value),
      "m" + (language.case_insensitive ? "i" : "") + (global2 ? "g" : "")
    );
  }
  __name(langRe, "langRe");
  function joinRe(regexps, separator) {
    var backreferenceRe = /\[(?:[^\\\]]|\\.)*\]|\(\??|\\([1-9][0-9]*)|\\./;
    var numCaptures = 0;
    var ret = "";
    for (var i25 = 0; i25 < regexps.length; i25++) {
      var offset2 = numCaptures;
      var re = reStr(regexps[i25]);
      if (i25 > 0) {
        ret += separator;
      }
      while (re.length > 0) {
        var match = backreferenceRe.exec(re);
        if (match == null) {
          ret += re;
          break;
        }
        ret += re.substring(0, match.index);
        re = re.substring(match.index + match[0].length);
        if (match[0][0] == "\\" && match[1]) {
          ret += "\\" + String(Number(match[1]) + offset2);
        } else {
          ret += match[0];
          if (match[0] == "(") {
            numCaptures++;
          }
        }
      }
    }
    return ret;
  }
  __name(joinRe, "joinRe");
  function compileMode(mode, parent) {
    if (mode.compiled)
      return;
    mode.compiled = true;
    mode.keywords = mode.keywords || mode.beginKeywords;
    if (mode.keywords) {
      var compiled_keywords = {};
      var flatten = /* @__PURE__ */ __name(function(className, str) {
        if (language.case_insensitive) {
          str = str.toLowerCase();
        }
        str.split(" ").forEach(function(kw) {
          var pair = kw.split("|");
          compiled_keywords[pair[0]] = [
            className,
            pair[1] ? Number(pair[1]) : 1
          ];
        });
      }, "flatten");
      if (typeof mode.keywords === "string") {
        flatten("keyword", mode.keywords);
      } else {
        objectKeys(mode.keywords).forEach(function(className) {
          flatten(className, mode.keywords[className]);
        });
      }
      mode.keywords = compiled_keywords;
    }
    mode.lexemesRe = langRe(mode.lexemes || /\w+/, true);
    if (parent) {
      if (mode.beginKeywords) {
        mode.begin = "\\b(" + mode.beginKeywords.split(" ").join("|") + ")\\b";
      }
      if (!mode.begin)
        mode.begin = /\B|\b/;
      mode.beginRe = langRe(mode.begin);
      if (mode.endSameAsBegin)
        mode.end = mode.begin;
      if (!mode.end && !mode.endsWithParent)
        mode.end = /\B|\b/;
      if (mode.end)
        mode.endRe = langRe(mode.end);
      mode.terminator_end = reStr(mode.end) || "";
      if (mode.endsWithParent && parent.terminator_end)
        mode.terminator_end += (mode.end ? "|" : "") + parent.terminator_end;
    }
    if (mode.illegal)
      mode.illegalRe = langRe(mode.illegal);
    if (mode.relevance == null)
      mode.relevance = 1;
    if (!mode.contains) {
      mode.contains = [];
    }
    mode.contains = Array.prototype.concat.apply(
      [],
      mode.contains.map(function(c23) {
        return expand_mode(c23 === "self" ? mode : c23);
      })
    );
    mode.contains.forEach(function(c23) {
      compileMode(c23, mode);
    });
    if (mode.starts) {
      compileMode(mode.starts, parent);
    }
    var terminators = mode.contains.map(function(c23) {
      return c23.beginKeywords ? "\\.?(?:" + c23.begin + ")\\.?" : c23.begin;
    }).concat([mode.terminator_end, mode.illegal]).map(reStr).filter(Boolean);
    mode.terminators = terminators.length ? langRe(joinRe(terminators, "|"), true) : {
      exec: function() {
        return null;
      }
    };
  }
  __name(compileMode, "compileMode");
  compileMode(language);
}
function highlight(name, value, ignore_illegals, continuation) {
  function escapeRe(value2) {
    return new RegExp(value2.replace(/[-\/\\^$*+?.()|[\]{}]/g, "\\$&"), "m");
  }
  __name(escapeRe, "escapeRe");
  function subMode(lexeme, mode) {
    var i25, length;
    for (i25 = 0, length = mode.contains.length; i25 < length; i25++) {
      if (testRe(mode.contains[i25].beginRe, lexeme)) {
        if (mode.contains[i25].endSameAsBegin) {
          mode.contains[i25].endRe = escapeRe(
            mode.contains[i25].beginRe.exec(lexeme)[0]
          );
        }
        return mode.contains[i25];
      }
    }
  }
  __name(subMode, "subMode");
  function endOfMode(mode, lexeme) {
    if (testRe(mode.endRe, lexeme)) {
      while (mode.endsParent && mode.parent) {
        mode = mode.parent;
      }
      return mode;
    }
    if (mode.endsWithParent) {
      return endOfMode(mode.parent, lexeme);
    }
  }
  __name(endOfMode, "endOfMode");
  function isIllegal(lexeme, mode) {
    return !ignore_illegals && testRe(mode.illegalRe, lexeme);
  }
  __name(isIllegal, "isIllegal");
  function keywordMatch(mode, match2) {
    var match_str = language.case_insensitive ? match2[0].toLowerCase() : match2[0];
    return mode.keywords.hasOwnProperty(match_str) && mode.keywords[match_str];
  }
  __name(keywordMatch, "keywordMatch");
  function buildSpan(classname, insideSpan, leaveOpen, noPrefix) {
    var classPrefix = noPrefix ? "" : options.classPrefix, openSpan = '<span class="' + classPrefix, closeSpan = leaveOpen ? "" : spanEndTag;
    openSpan += classname + '">';
    return openSpan + insideSpan + closeSpan;
  }
  __name(buildSpan, "buildSpan");
  function processKeywords() {
    var keyword_match, last_index, match2, result2;
    if (!top2.keywords)
      return escape(mode_buffer);
    result2 = "";
    last_index = 0;
    top2.lexemesRe.lastIndex = 0;
    match2 = top2.lexemesRe.exec(mode_buffer);
    while (match2) {
      result2 += escape(mode_buffer.substring(last_index, match2.index));
      keyword_match = keywordMatch(top2, match2);
      if (keyword_match) {
        relevance += keyword_match[1];
        result2 += buildSpan(keyword_match[0], escape(match2[0]));
      } else {
        result2 += escape(match2[0]);
      }
      last_index = top2.lexemesRe.lastIndex;
      match2 = top2.lexemesRe.exec(mode_buffer);
    }
    return result2 + escape(mode_buffer.substr(last_index));
  }
  __name(processKeywords, "processKeywords");
  function processSubLanguage() {
    var explicit = typeof top2.subLanguage === "string";
    if (explicit && !languages[top2.subLanguage]) {
      return escape(mode_buffer);
    }
    var result2 = explicit ? highlight(
      top2.subLanguage,
      mode_buffer,
      true,
      continuations[top2.subLanguage]
    ) : highlightAuto(
      mode_buffer,
      top2.subLanguage.length ? top2.subLanguage : void 0
    );
    if (top2.relevance > 0) {
      relevance += result2.relevance;
    }
    if (explicit) {
      continuations[top2.subLanguage] = result2.top;
    }
    return buildSpan(result2.language, result2.value, false, true);
  }
  __name(processSubLanguage, "processSubLanguage");
  function processBuffer() {
    result += top2.subLanguage != null ? processSubLanguage() : processKeywords();
    mode_buffer = "";
  }
  __name(processBuffer, "processBuffer");
  function startNewMode(mode) {
    result += mode.className ? buildSpan(mode.className, "", true) : "";
    top2 = Object.create(mode, { parent: { value: top2 } });
  }
  __name(startNewMode, "startNewMode");
  function processLexeme(buffer, lexeme) {
    mode_buffer += buffer;
    if (lexeme == null) {
      processBuffer();
      return 0;
    }
    var new_mode = subMode(lexeme, top2);
    if (new_mode) {
      if (new_mode.skip) {
        mode_buffer += lexeme;
      } else {
        if (new_mode.excludeBegin) {
          mode_buffer += lexeme;
        }
        processBuffer();
        if (!new_mode.returnBegin && !new_mode.excludeBegin) {
          mode_buffer = lexeme;
        }
      }
      startNewMode(new_mode, lexeme);
      return new_mode.returnBegin ? 0 : lexeme.length;
    }
    var end_mode = endOfMode(top2, lexeme);
    if (end_mode) {
      var origin = top2;
      if (origin.skip) {
        mode_buffer += lexeme;
      } else {
        if (!(origin.returnEnd || origin.excludeEnd)) {
          mode_buffer += lexeme;
        }
        processBuffer();
        if (origin.excludeEnd) {
          mode_buffer = lexeme;
        }
      }
      do {
        if (top2.className) {
          result += spanEndTag;
        }
        if (!top2.skip && !top2.subLanguage) {
          relevance += top2.relevance;
        }
        top2 = top2.parent;
      } while (top2 !== end_mode.parent);
      if (end_mode.starts) {
        if (end_mode.endSameAsBegin) {
          end_mode.starts.endRe = end_mode.endRe;
        }
        startNewMode(end_mode.starts, "");
      }
      return origin.returnEnd ? 0 : lexeme.length;
    }
    if (isIllegal(lexeme, top2))
      throw new Error(
        'Illegal lexeme "' + lexeme + '" for mode "' + (top2.className || "<unnamed>") + '"'
      );
    mode_buffer += lexeme;
    return lexeme.length || 1;
  }
  __name(processLexeme, "processLexeme");
  var language = getLanguage(name);
  if (!language) {
    throw new Error('Unknown language: "' + name + '"');
  }
  compileLanguage(language);
  var top2 = continuation || language;
  var continuations = {};
  var result = "", current;
  for (current = top2; current !== language; current = current.parent) {
    if (current.className) {
      result = buildSpan(current.className, "", true) + result;
    }
  }
  var mode_buffer = "";
  var relevance = 0;
  try {
    var match, count, index = 0;
    while (true) {
      top2.terminators.lastIndex = index;
      match = top2.terminators.exec(value);
      if (!match)
        break;
      count = processLexeme(value.substring(index, match.index), match[0]);
      index = match.index + count;
    }
    processLexeme(value.substr(index));
    for (current = top2; current.parent; current = current.parent) {
      if (current.className) {
        result += spanEndTag;
      }
    }
    return {
      relevance,
      value: result,
      language: name,
      top: top2
    };
  } catch (e25) {
    if (e25.message && e25.message.indexOf("Illegal") !== -1) {
      return {
        relevance: 0,
        value: escape(value)
      };
    } else {
      throw e25;
    }
  }
}
function highlightAuto(text, languageSubset) {
  languageSubset = languageSubset || options.languages || objectKeys(languages);
  var result = {
    relevance: 0,
    value: escape(text)
  };
  var second_best = result;
  languageSubset.filter(getLanguage).filter(autoDetection).forEach(function(name) {
    var current = highlight(name, text, false);
    current.language = name;
    if (current.relevance > second_best.relevance) {
      second_best = current;
    }
    if (current.relevance > result.relevance) {
      second_best = result;
      result = current;
    }
  });
  if (second_best.language) {
    result.second_best = second_best;
  }
  return result;
}
function fixMarkup(value) {
  return !(options.tabReplace || options.useBR) ? value : value.replace(fixMarkupRe, function(match, p1) {
    if (options.useBR && match === "\n") {
      return "<br>";
    } else if (options.tabReplace) {
      return p1.replace(/\t/g, options.tabReplace);
    }
    return "";
  });
}
function buildClassName(prevClassName, currentLang, resultLang) {
  var language = currentLang ? aliases[currentLang] : resultLang, result = [prevClassName.trim()];
  if (!prevClassName.match(/\bhljs\b/)) {
    result.push("hljs");
  }
  if (prevClassName.indexOf(language) === -1) {
    result.push(language);
  }
  return result.join(" ").trim();
}
function highlightBlock(block2) {
  var node, originalStream, result, resultNode, text;
  var language = blockLanguage(block2);
  if (isNotHighlighted(language))
    return;
  if (options.useBR) {
    node = document.createElementNS("http://www.w3.org/1999/xhtml", "div");
    node.innerHTML = block2.innerHTML.replace(/\n/g, "").replace(/<br[ \/]*>/g, "\n");
  } else {
    node = block2;
  }
  text = node.textContent;
  result = language ? highlight(language, text, true) : highlightAuto(text);
  originalStream = nodeStream(node);
  if (originalStream.length) {
    resultNode = document.createElementNS(
      "http://www.w3.org/1999/xhtml",
      "div"
    );
    resultNode.innerHTML = result.value;
    result.value = mergeStreams(originalStream, nodeStream(resultNode), text);
  }
  result.value = fixMarkup(result.value);
  block2.innerHTML = result.value;
  block2.className = buildClassName(block2.className, language, result.language);
  block2.result = {
    language: result.language,
    re: result.relevance
  };
  if (result.second_best) {
    block2.second_best = {
      language: result.second_best.language,
      re: result.second_best.relevance
    };
  }
}
function configure(user_options) {
  options = inherit(options, user_options);
}
function initHighlighting() {
  if (initHighlighting.called)
    return;
  initHighlighting.called = true;
  var blocks = document.querySelectorAll("pre code");
  ArrayProto.forEach.call(blocks, highlightBlock);
}
function initHighlightingOnLoad() {
  addEventListener("DOMContentLoaded", initHighlighting, false);
  addEventListener("load", initHighlighting, false);
}
function registerLanguage(name, language) {
  var lang = languages[name] = language(hljs);
  if (lang.aliases) {
    lang.aliases.forEach(function(alias) {
      aliases[alias] = name;
    });
  }
}
function listLanguages() {
  return objectKeys(languages);
}
function getLanguage(name) {
  name = (name || "").toLowerCase();
  return languages[name] || languages[aliases[name]];
}
function autoDetection(name) {
  var lang = getLanguage(name);
  return lang && !lang.disableAutodetect;
}
var hljs, ArrayProto, objectKeys, languages, aliases, noHighlightRe, languagePrefixRe, fixMarkupRe, spanEndTag, options;
var init_highlight = __esm({
  "node_modules/@lrnwebcomponents/code-sample/lib/highlightjs/highlight.js"() {
    hljs = {};
    ArrayProto = [];
    objectKeys = Object.keys;
    languages = {};
    aliases = {};
    noHighlightRe = /^(no-?highlight|plain|text)$/i;
    languagePrefixRe = /\blang(?:uage)?-([\w-]+)\b/i;
    fixMarkupRe = /((^(<[^>]+>|\t|)+|(?:\n)))/gm;
    spanEndTag = "</span>";
    options = {
      classPrefix: "hljs-",
      tabReplace: null,
      useBR: false,
      languages: void 0
    };
    __name(escape, "escape");
    __name(tag, "tag");
    __name(testRe, "testRe");
    __name(isNotHighlighted, "isNotHighlighted");
    __name(blockLanguage, "blockLanguage");
    __name(inherit, "inherit");
    __name(nodeStream, "nodeStream");
    __name(mergeStreams, "mergeStreams");
    __name(expand_mode, "expand_mode");
    __name(compileLanguage, "compileLanguage");
    __name(highlight, "highlight");
    __name(highlightAuto, "highlightAuto");
    __name(fixMarkup, "fixMarkup");
    __name(buildClassName, "buildClassName");
    __name(highlightBlock, "highlightBlock");
    __name(configure, "configure");
    __name(initHighlighting, "initHighlighting");
    __name(initHighlightingOnLoad, "initHighlightingOnLoad");
    __name(registerLanguage, "registerLanguage");
    __name(listLanguages, "listLanguages");
    __name(getLanguage, "getLanguage");
    __name(autoDetection, "autoDetection");
    hljs.highlight = highlight;
    hljs.highlightAuto = highlightAuto;
    hljs.fixMarkup = fixMarkup;
    hljs.highlightBlock = highlightBlock;
    hljs.configure = configure;
    hljs.initHighlighting = initHighlighting;
    hljs.initHighlightingOnLoad = initHighlightingOnLoad;
    hljs.registerLanguage = registerLanguage;
    hljs.listLanguages = listLanguages;
    hljs.getLanguage = getLanguage;
    hljs.autoDetection = autoDetection;
    hljs.inherit = inherit;
    hljs.IDENT_RE = "[a-zA-Z]\\w*";
    hljs.UNDERSCORE_IDENT_RE = "[a-zA-Z_]\\w*";
    hljs.NUMBER_RE = "\\b\\d+(\\.\\d+)?";
    hljs.C_NUMBER_RE = "(-?)(\\b0[xX][a-fA-F0-9]+|(\\b\\d+(\\.\\d*)?|\\.\\d+)([eE][-+]?\\d+)?)";
    hljs.BINARY_NUMBER_RE = "\\b(0b[01]+)";
    hljs.RE_STARTERS_RE = "!|!=|!==|%|%=|&|&&|&=|\\*|\\*=|\\+|\\+=|,|-|-=|/=|/|:|;|<<|<<=|<=|<|===|==|=|>>>=|>>=|>=|>>>|>>|>|\\?|\\[|\\{|\\(|\\^|\\^=|\\||\\|=|\\|\\||~";
    hljs.BACKSLASH_ESCAPE = {
      begin: "\\\\[\\s\\S]",
      relevance: 0
    };
    hljs.APOS_STRING_MODE = {
      className: "string",
      begin: "'",
      end: "'",
      illegal: "\\n",
      contains: [hljs.BACKSLASH_ESCAPE]
    };
    hljs.QUOTE_STRING_MODE = {
      className: "string",
      begin: '"',
      end: '"',
      illegal: "\\n",
      contains: [hljs.BACKSLASH_ESCAPE]
    };
    hljs.PHRASAL_WORDS_MODE = {
      begin: /\b(a|an|the|are|I'm|isn't|don't|doesn't|won't|but|just|should|pretty|simply|enough|gonna|going|wtf|so|such|will|you|your|they|like|more)\b/
    };
    hljs.COMMENT = function(begin, end2, inherits) {
      var mode = hljs.inherit(
        {
          className: "comment",
          begin,
          end: end2,
          contains: []
        },
        inherits || {}
      );
      mode.contains.push(hljs.PHRASAL_WORDS_MODE);
      mode.contains.push({
        className: "doctag",
        begin: "(?:TODO|FIXME|NOTE|BUG|XXX):",
        relevance: 0
      });
      return mode;
    };
    hljs.C_LINE_COMMENT_MODE = hljs.COMMENT("//", "$");
    hljs.C_BLOCK_COMMENT_MODE = hljs.COMMENT("/\\*", "\\*/");
    hljs.HASH_COMMENT_MODE = hljs.COMMENT("#", "$");
    hljs.NUMBER_MODE = {
      className: "number",
      begin: hljs.NUMBER_RE,
      relevance: 0
    };
    hljs.C_NUMBER_MODE = {
      className: "number",
      begin: hljs.C_NUMBER_RE,
      relevance: 0
    };
    hljs.BINARY_NUMBER_MODE = {
      className: "number",
      begin: hljs.BINARY_NUMBER_RE,
      relevance: 0
    };
    hljs.CSS_NUMBER_MODE = {
      className: "number",
      begin: hljs.NUMBER_RE + "(%|em|ex|ch|rem|vw|vh|vmin|vmax|cm|mm|in|pt|pc|px|deg|grad|rad|turn|s|ms|Hz|kHz|dpi|dpcm|dppx)?",
      relevance: 0
    };
    hljs.REGEXP_MODE = {
      className: "regexp",
      begin: /\//,
      end: /\/[gimuy]*/,
      illegal: /\n/,
      contains: [
        hljs.BACKSLASH_ESCAPE,
        {
          begin: /\[/,
          end: /\]/,
          relevance: 0,
          contains: [hljs.BACKSLASH_ESCAPE]
        }
      ]
    };
    hljs.TITLE_MODE = {
      className: "title",
      begin: hljs.IDENT_RE,
      relevance: 0
    };
    hljs.UNDERSCORE_TITLE_MODE = {
      className: "title",
      begin: hljs.UNDERSCORE_IDENT_RE,
      relevance: 0
    };
    hljs.METHOD_GUARD = {
      begin: "\\.\\s*" + hljs.UNDERSCORE_IDENT_RE,
      relevance: 0
    };
  }
});

// node_modules/@lrnwebcomponents/code-sample/lib/highlightjs/languages/javascript.js
function javascript(hljs2) {
  var IDENT_RE = "[A-Za-z$_][0-9A-Za-z$_]*";
  var KEYWORDS = {
    keyword: "in of if for while finally var new function do return void else break catch instanceof with throw case default try this switch continue typeof delete let yield const export super debugger as async await static import from as",
    literal: "true false null undefined NaN Infinity",
    built_in: "eval isFinite isNaN parseFloat parseInt decodeURI decodeURIComponent encodeURI encodeURIComponent escape unescape Object Function Boolean Error EvalError InternalError RangeError ReferenceError StopIteration SyntaxError TypeError URIError Number Math Date String RegExp Array Float32Array Float64Array Int16Array Int32Array Int8Array Uint16Array Uint32Array Uint8Array Uint8ClampedArray ArrayBuffer DataView JSON Intl arguments require module console window document Symbol Set Map WeakSet WeakMap Proxy Reflect Promise"
  };
  var NUMBER = {
    className: "number",
    variants: [
      { begin: "\\b(0[bB][01]+)" },
      { begin: "\\b(0[oO][0-7]+)" },
      { begin: hljs2.C_NUMBER_RE }
    ],
    relevance: 0
  };
  var SUBST = {
    className: "subst",
    begin: "\\$\\{",
    end: "\\}",
    keywords: KEYWORDS,
    contains: []
  };
  var TEMPLATE_STRING = {
    className: "string",
    begin: "`",
    end: "`",
    contains: [hljs2.BACKSLASH_ESCAPE, SUBST]
  };
  SUBST.contains = [
    hljs2.APOS_STRING_MODE,
    hljs2.QUOTE_STRING_MODE,
    TEMPLATE_STRING,
    NUMBER,
    hljs2.REGEXP_MODE
  ];
  var PARAMS_CONTAINS = SUBST.contains.concat([
    hljs2.C_BLOCK_COMMENT_MODE,
    hljs2.C_LINE_COMMENT_MODE
  ]);
  return {
    aliases: ["js", "jsx"],
    keywords: KEYWORDS,
    contains: [
      {
        className: "meta",
        relevance: 10,
        begin: /^\s*['"]use (strict|asm)['"]/
      },
      {
        className: "meta",
        begin: /^#!/,
        end: /$/
      },
      hljs2.APOS_STRING_MODE,
      hljs2.QUOTE_STRING_MODE,
      TEMPLATE_STRING,
      hljs2.C_LINE_COMMENT_MODE,
      hljs2.C_BLOCK_COMMENT_MODE,
      NUMBER,
      {
        begin: /[{,]\s*/,
        relevance: 0,
        contains: [
          {
            begin: IDENT_RE + "\\s*:",
            returnBegin: true,
            relevance: 0,
            contains: [{ className: "attr", begin: IDENT_RE, relevance: 0 }]
          }
        ]
      },
      {
        begin: "(" + hljs2.RE_STARTERS_RE + "|\\b(case|return|throw)\\b)\\s*",
        keywords: "return throw case",
        contains: [
          hljs2.C_LINE_COMMENT_MODE,
          hljs2.C_BLOCK_COMMENT_MODE,
          hljs2.REGEXP_MODE,
          {
            className: "function",
            begin: "(\\(.*?\\)|" + IDENT_RE + ")\\s*=>",
            returnBegin: true,
            end: "\\s*=>",
            contains: [
              {
                className: "params",
                variants: [
                  {
                    begin: IDENT_RE
                  },
                  {
                    begin: /\(\s*\)/
                  },
                  {
                    begin: /\(/,
                    end: /\)/,
                    excludeBegin: true,
                    excludeEnd: true,
                    keywords: KEYWORDS,
                    contains: PARAMS_CONTAINS
                  }
                ]
              }
            ]
          },
          {
            begin: /</,
            end: /(\/\w+|\w+\/)>/,
            subLanguage: "xml",
            contains: [
              { begin: /<\w+\s*\/>/, skip: true },
              {
                begin: /<\w+/,
                end: /(\/\w+|\w+\/)>/,
                skip: true,
                contains: [{ begin: /<\w+\s*\/>/, skip: true }, "self"]
              }
            ]
          }
        ],
        relevance: 0
      },
      {
        className: "function",
        beginKeywords: "function",
        end: /\{/,
        excludeEnd: true,
        contains: [
          hljs2.inherit(hljs2.TITLE_MODE, { begin: IDENT_RE }),
          {
            className: "params",
            begin: /\(/,
            end: /\)/,
            excludeBegin: true,
            excludeEnd: true,
            contains: PARAMS_CONTAINS
          }
        ],
        illegal: /\[|%/
      },
      {
        begin: /\$[(.]/
      },
      hljs2.METHOD_GUARD,
      {
        className: "class",
        beginKeywords: "class",
        end: /[{;=]/,
        excludeEnd: true,
        illegal: /[:"\[\]]/,
        contains: [{ beginKeywords: "extends" }, hljs2.UNDERSCORE_TITLE_MODE]
      },
      {
        beginKeywords: "constructor get set",
        end: /\{/,
        excludeEnd: true
      }
    ],
    illegal: /#(?!!)/
  };
}
var init_javascript = __esm({
  "node_modules/@lrnwebcomponents/code-sample/lib/highlightjs/languages/javascript.js"() {
    __name(javascript, "javascript");
  }
});

// node_modules/@lrnwebcomponents/code-sample/lib/highlightjs/languages/yaml.js
function yaml(hljs2) {
  var LITERALS = "true false yes no null";
  var keyPrefix = "^[ \\-]*";
  var keyName = "[a-zA-Z_][\\w\\-]*";
  var KEY = {
    className: "attr",
    variants: [
      { begin: keyPrefix + keyName + ":" },
      { begin: keyPrefix + '"' + keyName + '":' },
      { begin: keyPrefix + "'" + keyName + "':" }
    ]
  };
  var TEMPLATE_VARIABLES = {
    className: "template-variable",
    variants: [
      { begin: "{{", end: "}}" },
      { begin: "%{", end: "}" }
    ]
  };
  var STRING = {
    className: "string",
    relevance: 0,
    variants: [
      { begin: /'/, end: /'/ },
      { begin: /"/, end: /"/ },
      { begin: /\S+/ }
    ],
    contains: [hljs2.BACKSLASH_ESCAPE, TEMPLATE_VARIABLES]
  };
  return {
    case_insensitive: true,
    aliases: ["yml", "YAML", "yaml"],
    contains: [
      KEY,
      {
        className: "meta",
        begin: "^---s*$",
        relevance: 10
      },
      {
        className: "string",
        begin: "[\\|>] *$",
        returnEnd: true,
        contains: STRING.contains,
        end: KEY.variants[0].begin
      },
      {
        begin: "<%[%=-]?",
        end: "[%-]?%>",
        subLanguage: "ruby",
        excludeBegin: true,
        excludeEnd: true,
        relevance: 0
      },
      {
        className: "type",
        begin: "!" + hljs2.UNDERSCORE_IDENT_RE
      },
      {
        className: "type",
        begin: "!!" + hljs2.UNDERSCORE_IDENT_RE
      },
      {
        className: "meta",
        begin: "&" + hljs2.UNDERSCORE_IDENT_RE + "$"
      },
      {
        className: "meta",
        begin: "\\*" + hljs2.UNDERSCORE_IDENT_RE + "$"
      },
      {
        className: "bullet",
        begin: "^ *-",
        relevance: 0
      },
      hljs2.HASH_COMMENT_MODE,
      {
        beginKeywords: LITERALS,
        keywords: { literal: LITERALS }
      },
      hljs2.C_NUMBER_MODE,
      STRING
    ]
  };
}
var init_yaml = __esm({
  "node_modules/@lrnwebcomponents/code-sample/lib/highlightjs/languages/yaml.js"() {
    __name(yaml, "yaml");
  }
});

// node_modules/@lrnwebcomponents/code-sample/lib/highlightjs/languages/json.js
function jsonLang(hljs2) {
  var LITERALS = { literal: "true false null" };
  var TYPES = [hljs2.QUOTE_STRING_MODE, hljs2.C_NUMBER_MODE];
  var VALUE_CONTAINER = {
    end: ",",
    endsWithParent: true,
    excludeEnd: true,
    contains: TYPES,
    keywords: LITERALS
  };
  var OBJECT = {
    begin: "{",
    end: "}",
    contains: [
      {
        className: "attr",
        begin: /"/,
        end: /"/,
        contains: [hljs2.BACKSLASH_ESCAPE],
        illegal: "\\n"
      },
      hljs2.inherit(VALUE_CONTAINER, { begin: /:/ })
    ],
    illegal: "\\S"
  };
  var ARRAY = {
    begin: "\\[",
    end: "\\]",
    contains: [hljs2.inherit(VALUE_CONTAINER)],
    illegal: "\\S"
  };
  TYPES.splice(TYPES.length, 0, OBJECT, ARRAY);
  return {
    contains: TYPES,
    keywords: LITERALS,
    illegal: "\\S"
  };
}
var init_json = __esm({
  "node_modules/@lrnwebcomponents/code-sample/lib/highlightjs/languages/json.js"() {
    __name(jsonLang, "jsonLang");
  }
});

// node_modules/@lrnwebcomponents/code-sample/lib/highlightjs/languages/css.js
function cssLang(hljs2) {
  var IDENT_RE = "[a-zA-Z-][a-zA-Z0-9_-]*";
  var RULE = {
    begin: /[A-Z\_\.\-]+\s*:/,
    returnBegin: true,
    end: ";",
    endsWithParent: true,
    contains: [
      {
        className: "attribute",
        begin: /\S/,
        end: ":",
        excludeEnd: true,
        starts: {
          endsWithParent: true,
          excludeEnd: true,
          contains: [
            {
              begin: /[\w-]+\(/,
              returnBegin: true,
              contains: [
                {
                  className: "built_in",
                  begin: /[\w-]+/
                },
                {
                  begin: /\(/,
                  end: /\)/,
                  contains: [hljs2.APOS_STRING_MODE, hljs2.QUOTE_STRING_MODE]
                }
              ]
            },
            hljs2.CSS_NUMBER_MODE,
            hljs2.QUOTE_STRING_MODE,
            hljs2.APOS_STRING_MODE,
            hljs2.C_BLOCK_COMMENT_MODE,
            {
              className: "number",
              begin: "#[0-9A-Fa-f]+"
            },
            {
              className: "meta",
              begin: "!important"
            }
          ]
        }
      }
    ]
  };
  return {
    case_insensitive: true,
    illegal: /[=\/|'\$]/,
    contains: [
      hljs2.C_BLOCK_COMMENT_MODE,
      {
        className: "selector-id",
        begin: /#[A-Za-z0-9_-]+/
      },
      {
        className: "selector-class",
        begin: /\.[A-Za-z0-9_-]+/
      },
      {
        className: "selector-attr",
        begin: /\[/,
        end: /\]/,
        illegal: "$"
      },
      {
        className: "selector-pseudo",
        begin: /:(:)?[a-zA-Z0-9\_\-\+\(\)"'.]+/
      },
      {
        begin: "@(font-face|page)",
        lexemes: "[a-z-]+",
        keywords: "font-face page"
      },
      {
        begin: "@",
        end: "[{;]",
        illegal: /:/,
        contains: [
          {
            className: "keyword",
            begin: /\w+/
          },
          {
            begin: /\s/,
            endsWithParent: true,
            excludeEnd: true,
            relevance: 0,
            contains: [
              hljs2.APOS_STRING_MODE,
              hljs2.QUOTE_STRING_MODE,
              hljs2.CSS_NUMBER_MODE
            ]
          }
        ]
      },
      {
        className: "selector-tag",
        begin: IDENT_RE,
        relevance: 0
      },
      {
        begin: "{",
        end: "}",
        illegal: /\S/,
        contains: [hljs2.C_BLOCK_COMMENT_MODE, RULE]
      }
    ]
  };
}
var init_css = __esm({
  "node_modules/@lrnwebcomponents/code-sample/lib/highlightjs/languages/css.js"() {
    __name(cssLang, "cssLang");
  }
});

// node_modules/@lrnwebcomponents/code-sample/lib/highlightjs/languages/php.js
function phpLang(hljs2) {
  var VARIABLE = {
    begin: "\\$+[a-zA-Z_\x7F-\xFF][a-zA-Z0-9_\x7F-\xFF]*"
  };
  var PREPROCESSOR = {
    className: "meta",
    begin: /<\?(php)?|\?>/
  };
  var STRING = {
    className: "string",
    contains: [hljs2.BACKSLASH_ESCAPE, PREPROCESSOR],
    variants: [
      {
        begin: 'b"',
        end: '"'
      },
      {
        begin: "b'",
        end: "'"
      },
      hljs2.inherit(hljs2.APOS_STRING_MODE, { illegal: null }),
      hljs2.inherit(hljs2.QUOTE_STRING_MODE, { illegal: null })
    ]
  };
  var NUMBER = { variants: [hljs2.BINARY_NUMBER_MODE, hljs2.C_NUMBER_MODE] };
  return {
    aliases: ["php", "php3", "php4", "php5", "php6", "php7"],
    case_insensitive: true,
    keywords: "and include_once list abstract global private echo interface as static endswitch array null if endwhile or const for endforeach self var while isset public protected exit foreach throw elseif include __FILE__ empty require_once do xor return parent clone use __CLASS__ __LINE__ else break print eval new catch __METHOD__ case exception default die require __FUNCTION__ enddeclare final try switch continue endfor endif declare unset true false trait goto instanceof insteadof __DIR__ __NAMESPACE__ yield finally",
    contains: [
      hljs2.HASH_COMMENT_MODE,
      hljs2.COMMENT("//", "$", { contains: [PREPROCESSOR] }),
      hljs2.COMMENT("/\\*", "\\*/", {
        contains: [
          {
            className: "doctag",
            begin: "@[A-Za-z]+"
          }
        ]
      }),
      hljs2.COMMENT("__halt_compiler.+?;", false, {
        endsWithParent: true,
        keywords: "__halt_compiler",
        lexemes: hljs2.UNDERSCORE_IDENT_RE
      }),
      {
        className: "string",
        begin: /<<<['"]?\w+['"]?$/,
        end: /^\w+;?$/,
        contains: [
          hljs2.BACKSLASH_ESCAPE,
          {
            className: "subst",
            variants: [{ begin: /\$\w+/ }, { begin: /\{\$/, end: /\}/ }]
          }
        ]
      },
      PREPROCESSOR,
      {
        className: "keyword",
        begin: /\$this\b/
      },
      VARIABLE,
      {
        begin: /(::|->)+[a-zA-Z_\x7f-\xff][a-zA-Z0-9_\x7f-\xff]*/
      },
      {
        className: "function",
        beginKeywords: "function",
        end: /[;{]/,
        excludeEnd: true,
        illegal: "\\$|\\[|%",
        contains: [
          hljs2.UNDERSCORE_TITLE_MODE,
          {
            className: "params",
            begin: "\\(",
            end: "\\)",
            contains: [
              "self",
              VARIABLE,
              hljs2.C_BLOCK_COMMENT_MODE,
              STRING,
              NUMBER
            ]
          }
        ]
      },
      {
        className: "class",
        beginKeywords: "class interface",
        end: "{",
        excludeEnd: true,
        illegal: /[:\(\$"]/,
        contains: [
          { beginKeywords: "extends implements" },
          hljs2.UNDERSCORE_TITLE_MODE
        ]
      },
      {
        beginKeywords: "namespace",
        end: ";",
        illegal: /[\.']/,
        contains: [hljs2.UNDERSCORE_TITLE_MODE]
      },
      {
        beginKeywords: "use",
        end: ";",
        contains: [hljs2.UNDERSCORE_TITLE_MODE]
      },
      {
        begin: "=>"
      },
      STRING,
      NUMBER
    ]
  };
}
var init_php = __esm({
  "node_modules/@lrnwebcomponents/code-sample/lib/highlightjs/languages/php.js"() {
    __name(phpLang, "phpLang");
  }
});

// node_modules/@lrnwebcomponents/code-sample/lib/highlightjs/languages/xml.js
var xml;
var init_xml = __esm({
  "node_modules/@lrnwebcomponents/code-sample/lib/highlightjs/languages/xml.js"() {
    xml = /* @__PURE__ */ __name(function(hljs2) {
      var XML_IDENT_RE = "[A-Za-z0-9\\._:-]+";
      var TAG_INTERNALS = {
        endsWithParent: true,
        illegal: /</,
        relevance: 0,
        contains: [
          {
            className: "attr",
            begin: XML_IDENT_RE,
            relevance: 0
          },
          {
            begin: /=\s*/,
            relevance: 0,
            contains: [
              {
                className: "string",
                endsParent: true,
                variants: [
                  { begin: /"/, end: /"/ },
                  { begin: /'/, end: /'/ },
                  { begin: /[^\s"'=<>`]+/ }
                ]
              }
            ]
          }
        ]
      };
      return {
        aliases: ["html", "xhtml", "rss", "atom", "xjb", "xsd", "xsl", "plist"],
        case_insensitive: true,
        contains: [
          {
            className: "meta",
            begin: "<!DOCTYPE",
            end: ">",
            relevance: 10,
            contains: [{ begin: "\\[", end: "\\]" }]
          },
          hljs2.COMMENT("<!--", "-->", {
            relevance: 10
          }),
          {
            begin: "<\\!\\[CDATA\\[",
            end: "\\]\\]>",
            relevance: 10
          },
          {
            className: "meta",
            begin: /<\?xml/,
            end: /\?>/,
            relevance: 10
          },
          {
            begin: /<\?(php)?/,
            end: /\?>/,
            subLanguage: "php",
            contains: [
              { begin: "/\\*", end: "\\*/", skip: true },
              { begin: 'b"', end: '"', skip: true },
              { begin: "b'", end: "'", skip: true },
              hljs2.inherit(hljs2.APOS_STRING_MODE, {
                illegal: null,
                className: null,
                contains: null,
                skip: true
              }),
              hljs2.inherit(hljs2.QUOTE_STRING_MODE, {
                illegal: null,
                className: null,
                contains: null,
                skip: true
              })
            ]
          },
          {
            className: "tag",
            begin: "<style(?=\\s|>|$)",
            end: ">",
            keywords: { name: "style" },
            contains: [TAG_INTERNALS],
            starts: {
              end: "</style>",
              returnEnd: true,
              subLanguage: ["css", "xml"]
            }
          },
          {
            className: "tag",
            begin: "<script(?=\\s|>|$)",
            end: ">",
            keywords: { name: "script" },
            contains: [TAG_INTERNALS],
            starts: {
              end: "<\/script>",
              returnEnd: true,
              subLanguage: ["actionscript", "javascript", "handlebars", "xml"]
            }
          },
          {
            className: "tag",
            begin: "</?",
            end: "/?>",
            contains: [
              {
                className: "name",
                begin: /[^\/><\s]+/,
                relevance: 0
              },
              TAG_INTERNALS
            ]
          }
        ]
      };
    }, "xml");
  }
});

// node_modules/@lrnwebcomponents/code-sample/code-sample.js
var code_sample_exports = {};
__export(code_sample_exports, {
  CodeSample: () => CodeSample
});
var CodeSample;
var init_code_sample = __esm({
  "node_modules/@lrnwebcomponents/code-sample/code-sample.js"() {
    init_lit();
    init_one_dark();
    init_highlight();
    init_javascript();
    init_yaml();
    init_json();
    init_css();
    init_php();
    init_xml();
    hljs.registerLanguage("javascript", javascript);
    hljs.registerLanguage("json", jsonLang);
    hljs.registerLanguage("css", cssLang);
    hljs.registerLanguage("php", phpLang);
    hljs.registerLanguage("yaml", yaml);
    hljs.registerLanguage("xml", xml);
    hljs.registerLanguage("html", xml);
    window["hljs"] = hljs;
    CodeSample = class extends s4 {
      static get styles() {
        return [
          i`
        :host {
          display: block;
        }

        :host([hidden]),
        [hidden] {
          display: none;
        }

        pre {
          margin: 0;
        }

        pre,
        code {
          font-family: var(
            --code-sample-font-family,
            Operator Mono,
            Inconsolata,
            Roboto Mono,
            monaco,
            consolas,
            monospace
          );
          font-size: var(--code-sample-font-size, 0.875rem);
        }

        .hljs {
          padding: 0 1.25rem;
          line-height: var(--code-sample-line-height, 1.3);
        }

        .demo:not(:empty) {
          padding: var(--code-sample-demo-padding, 0 0 1.25rem);
        }

        #code-container {
          position: relative;
        }

        button {
          background: var(--code-sample-copy-button-bg-color, #e0e0e0);
          border: none;
          cursor: pointer;
          display: block;
          position: absolute;
          right: 0;
          top: 0;
          text-transform: uppercase;
        }
      `
        ];
      }
      render() {
        return y` <div id="theme"></div>
      <div id="demo" class="demo"></div>
      <slot></slot>
      <div id="code-container">
        <button
          type="button"
          ?hidden="${!this.copyClipboardButton}"
          id="copyButton"
          title="Copy to clipboard"
          @click="${this._copyToClipboard}"
        >
          Copy
        </button>
        <pre id="code"></pre>
      </div>`;
      }
      static get haxProperties() {
        return {
          type: "element",
          canScale: true,
          canPosition: true,
          canEditSource: true,
          gizmo: {
            title: "Code sample",
            description: "A sample of code highlighted in the page",
            icon: "icons:code",
            color: "blue",
            groups: ["Code", "Development"],
            meta: {
              author: "elmsln"
            }
          },
          settings: {
            configure: [
              {
                property: "type",
                title: "Code highlighting",
                description: "Syntax highlighting to apply to the code area",
                inputMethod: "select",
                options: {
                  javascript: "JavaScript",
                  css: "CSS",
                  html: "HTML",
                  xml: "XML",
                  json: "JSON data",
                  php: "PHP",
                  yaml: "YAML"
                }
              },
              {
                slot: "",
                slotWrapper: "template",
                slotAttributes: {
                  "preserve-content": "preserve-content"
                },
                title: "Source",
                description: "The URL for this video.",
                inputMethod: "code-editor"
              },
              {
                property: "copyClipboardButton",
                title: "Copy to clipboard button",
                description: "button in top right that says copy to clipboard",
                inputMethod: "boolean"
              }
            ],
            advanced: []
          },
          saveOptions: {
            unsetAttributes: ["theme"]
          },
          demoSchema: [
            {
              tag: "code-sample",
              content: '<template preserve-content="preserve-content">const great = "example";</template>',
              properties: {
                "copy-clipboard-button": "copy-clipboard-button"
              }
            }
          ]
        };
      }
      static get properties() {
        return {
          ...super.properties,
          copyClipboardButton: {
            type: Boolean,
            attribute: "copy-clipboard-button"
          },
          theme: {
            type: Object
          },
          type: {
            type: String,
            reflect: true
          }
        };
      }
      static get tag() {
        return "code-sample";
      }
      constructor() {
        super();
        this._observer = null;
        this.theme = oneDark;
        this.type = "html";
        this.copyClipboardButton = false;
      }
      haxHooks() {
        return {
          gizmoRegistration: "haxgizmoRegistration"
        };
      }
      haxgizmoRegistration(store) {
        let list = [
          "javascript",
          "js",
          "json",
          "css",
          "php",
          "yaml",
          "xml",
          "html"
        ];
        for (var i25 in list) {
          store.keyboardShortcuts["```" + list[i25]] = {
            tag: "code-sample",
            properties: {
              type: list[i25] === "js" ? "javascript" : list[i25]
            },
            content: `<template preserve-content="preserve-content">${this.getExample(
              list[i25]
            )}</template>`
          };
        }
        store.keyboardShortcuts["```"] = store.keyboardShortcuts["```html"];
      }
      getExample(type) {
        switch (type) {
          case "css":
            return `
  .the-cheet[is="tothelimit"] {
    padding: 8px;
    margin: 4px;
  }
`;
            break;
          case "html":
            return `
  <blockquote>
  Dear Strongbad,
  In 5th grade I have to watch a <em>lame hygiene movie</em>. I was thinking
  you could make a <strong id="bad">better movie about hygiene</strong> than the cruddy school version.
  Your friend,
  John
  </blockquote>
`;
            break;
          case "javascript":
          case "js":
            return `const everyBody = "to the limit";
  let theCheat = true;
  if (theCheat) {
    return \`is \${everyBody}\`;
  }`;
            break;
          case "xml":
            return `<IAmLike>
  <ComeOn>fhqwhgads</ComeOn>
</IAmLike>`;
            break;
          case "yaml":
            return `- CaracterList:
  - Homestar Runner
  - Strongbad
  - The Cheat`;
            break;
          case "php":
            return `  $MrTheCheat = "wins the big race";
if ($MrTheCheat) {
  return "HaVe A tRoPhY";
}`;
            break;
          case "json":
            return `{
  "mainMenu": [
    "Characters",
    "Games",
    "Toons",
    "Email",
    "Store"
  ]
}`;
            break;
        }
      }
      firstUpdated(changedProperties) {
        if (super.firstUpdated) {
          super.firstUpdated(changedProperties);
        }
        if (this.innerHTML == "") {
          this.innerHTML = '<template preserve-content="preserve-content">const great="example";</template>';
        }
        this._updateContent();
        setTimeout(() => {
          this._themeChanged(this.theme);
        }, 0);
      }
      connectedCallback() {
        super.connectedCallback();
        if (this.querySelector("template")) {
          this._observer = new MutationObserver((mutations) => {
            if (this.shadowRoot) {
              this._updateContent();
            }
          });
          this._observer.observe(this, {
            attributes: true,
            childList: true,
            subtree: true
          });
        } else if (this.childNodes.length) {
          console.error(
            "<code-sample>:",
            "content must be provided inside a <template> tag"
          );
        }
      }
      disconnectedCallback() {
        if (this._observer) {
          this._observer.disconnect();
          this._observer = null;
        }
        super.disconnectedCallback();
      }
      updated(changedProperties) {
        changedProperties.forEach((oldValue, propName) => {
          if (propName == "theme" && this.shadowRoot) {
            this._themeChanged(this[propName]);
          }
        });
      }
      _themeChanged(theme) {
        if (theme) {
          while (this.shadowRoot.querySelector("#theme").childNodes > 0) {
            this.shadowRoot.querySelector("#theme").removeChild(this.shadowRoot.querySelector("#theme").firstChild);
          }
          Z(theme, this.shadowRoot.querySelector("#theme"));
        }
      }
      _updateContent() {
        if (this._code && this._code.parentNode) {
          this._code.parentNode.removeChild(this._code);
        }
        let template = this._getCodeTemplate();
        if (!template) {
          template = document.createElement("template");
          template.setAttribute("preserve-content", "preserve-content");
          this.appendChild(template);
        }
        this._highlight(template.innerHTML);
      }
      _getCodeTemplate() {
        const nodes = this.children;
        return [].filter.call(
          nodes,
          (node) => node.nodeType === Node.ELEMENT_NODE
        )[0];
      }
      _highlight(str) {
        this._code = document.createElement("code");
        if (this.type)
          this._code.classList.add(this.type);
        this._code.innerHTML = this._entitize(this._cleanIndentation(str));
        if (this.shadowRoot && this.shadowRoot.querySelector("#code")) {
          this.shadowRoot.querySelector("#code").appendChild(this._code);
          hljs.highlightBlock(this._code);
        }
      }
      _cleanIndentation(str) {
        const pattern = str.match(/\s*\n[\t\s]*/);
        return str.replace(new RegExp(pattern, "g"), "\n");
      }
      _entitize(str) {
        return String(str).replace(/&lt;/g, "<").replace(/&gt;/g, ">").replace(/=""/g, "").replace(/=&gt;/g, "=>").replace(/</g, "&lt;").replace(/>/g, "&gt;").replace(/"/g, "&quot;");
      }
      _copyToClipboard(event) {
        const copyButton = event.target;
        const textarea = this._textAreaWithClonedContent();
        textarea.select();
        try {
          document.execCommand("copy", false);
          copyButton.textContent = "Done";
        } catch (err) {
          console.error(err);
          copyButton.textContent = "Error";
        }
        textarea.remove();
        setTimeout(() => {
          copyButton.textContent = "Copy";
        }, 1e3);
      }
      _textAreaWithClonedContent() {
        const textarea = document.createElement("textarea");
        document.body.appendChild(textarea);
        textarea.value = this._cleanIndentation(this._getCodeTemplate().innerHTML);
        return textarea;
      }
    };
    __name(CodeSample, "CodeSample");
    window.customElements.define(CodeSample.tag, CodeSample);
  }
});

// elements/rh-dialog/yt-api.js
var yt_api_exports = {};
__export(yt_api_exports, {
  pauseVideo: () => pauseVideo
});
async function getPlayer(iframe) {
  return new Promise((r18) => {
    let player = players.get(iframe);
    if (!player) {
      players.set(iframe, new window.YT.Player(iframe, {
        events: {
          onReady() {
            player = players.get(iframe);
            r18(player);
          }
        }
      }));
    } else {
      requestAnimationFrame(() => r18(player));
    }
  });
}
async function pauseVideo(iframe) {
  if (!iframe.src.match(/enablejsapi=1/)) {
    console.warn("Cannot pause video, please add `enablejsapi=1` to iframe url.");
    return;
  }
  if (!window.YT) {
    const tag2 = document.createElement("script");
    tag2.src = "https://www.youtube.com/iframe_api";
    const [firstScriptTag] = document.getElementsByTagName("script");
    firstScriptTag.parentNode?.insertBefore(tag2, firstScriptTag);
    const orig = window.onYouTubeIframeAPIReady;
    await new Promise((r18) => {
      window.onYouTubeIframeAPIReady = function() {
        r18(void 0);
      };
    });
    window.onYouTubeIframeAPIReady = orig;
  }
  const player = await getPlayer(iframe);
  player?.pauseVideo();
}
var players;
var init_yt_api = __esm({
  "elements/rh-dialog/yt-api.js"() {
    "use strict";
    players = /* @__PURE__ */ new WeakMap();
    __name(getPlayer, "getPlayer");
    __name(pauseVideo, "pauseVideo");
  }
});

// node_modules/tslib/modules/index.js
var import_tslib = __toESM(require_tslib(), 1);
var {
  __extends,
  __assign,
  __rest,
  __decorate,
  __param,
  __metadata,
  __awaiter,
  __generator,
  __exportStar,
  __createBinding,
  __values,
  __read,
  __spread,
  __spreadArrays,
  __spreadArray,
  __await,
  __asyncGenerator,
  __asyncDelegator,
  __asyncValues,
  __makeTemplateObject,
  __importStar,
  __importDefault,
  __classPrivateFieldGet,
  __classPrivateFieldSet,
  __classPrivateFieldIn
} = import_tslib.default;

// elements/rh-alert/rh-alert.js
init_lit();

// node_modules/lit/decorators.js
init_custom_element();
init_property();
init_state();
init_event_options();
init_query();
init_query_all();
init_query_async();
init_query_assigned_elements();
init_query_assigned_nodes();

// elements/rh-alert/rh-alert.js
init_core();

// elements/rh-alert/rh-alert.css.js
init_lit();
var styles = i`:host {
  --_background-color: var(--rh-color-cyan-50, #f2f9f9);
  --_border-color: var(--rh-color-cyan-300, #009596);
  --_header-color: var(--rh-color-cyan-500, #003737);
  --_icon-color: var(--rh-color-cyan-300, #009596);
  --_font-family: var(--rh-font-family-body-text, RedHatText, "Red Hat Text", "Noto Sans Arabic", "Noto Sans Hebrew", "Noto Sans JP", "Noto Sans KR", "Noto Sans Malayalam", "Noto Sans SC", "Noto Sans TC", "Noto Sans Thai", Overpass, Helvetica, Arial, sans-serif);

  display: block;
}

:host([hidden]) {
  display: none;
}

:host([state="info"]) {
  --_border-color: var(--rh-color-blue-250, #2b9af3);
  --_icon-color: var(--rh-color-blue-250, #2b9af3);
  --_header-color: var(--rh-color-blue-600, #002952);
  --_background-color: var(--rh-color-blue-50, #e7f1fa);
}

:host([state="success"]) {
  --_border-color: var(--rh-color-green-500, #3e8635);
  --_icon-color: var(--rh-color-green-500, #3e8635);
  --_header-color: var(--rh-color-green-600, #1e4f18);
  --_background-color: var(--rh-color-green-50, #f3faf2);
}

:host([state="warning"]) {
  --_border-color: var(--rh-color-gold-400, #f0ab00);
  --_icon-color: var(--rh-color-gold-400, #f0ab00);
  --_header-color: var(--rh-color-gold-600, #795600);
  --_background-color: var(--rh-color-gold-50, #fdf7e7);
}

:host([state="danger"]) {
  --_border-color: #c9190b; /* WARNING: not a recognized token value */
  --_icon-color: #c9190b; /* WARNING: not a recognized token value */
  --_header-color: #7d1007; /* WARNING: not a recognized token value */
  --_background-color: var(--rh-color-red-50, #faeae8);
}

:host([toast]) {
  --_background-color: var(--rh-color-surface-lightest, #ffffff);

  max-width: 550px;
}

#container {
  border-width: var(--rh-border-width-md, 2px);
  border-color: var(--_border-color);
  border-style: solid;
  background-color: var(--_background-color);
  padding: var(--rh-space-lg, 16px);
  display: grid;
  grid-template-columns: min-content 1fr;
  gap: var(--rh-space-xs, 4px);
  font-family: var(--_font-family);
}

#left-column {
  display: inline-block;
  vertical-align: top;
}

#middle-column {
  display: inline-block;
  vertical-align: top;
}

header {
  display: flex;
  align-items: center;
  justify-content: flex-start;
  margin-bottom: var(--rh-space-xs, 4px);
}

header ::slotted(:is(h1,h2,h3,h4,h5,h6)) {
  font-size: var(--rh-font-size-body-text-sm, 0.875rem);
  margin: 0;

  --rh-font-family-heading: var(--_font-family);
}

#header-actions {
  margin-right: var(--rh-space-xs, 4px);
}

#header {
  color: var(--_header-color);
  font-weight: var(--rh-font-weight-heading-medium, 500);
  flex: 1 1 auto;
}

#icon {
  display: flex;
  align-items: center;
  justify-content: center;
  width: var(--rh-font-size-body-text-2xl, 1.5rem);
  height: var(--rh-font-size-body-text-2xl, 1.5rem);
  color: var(--_icon-color);
}

#close-button {
  color: var(--rh-color-text-secondary-on-light, #6a6e73);
  background-color: transparent;
  border: none;
  height: var(--rh-length-xl, 24px);
  width: var(--rh-length-xl, 24px);
  cursor: pointer;
}

#close-button:hover {
  color: var(--rh-color-text-primary-on-light, #151515);
}

#description {
  font-size: var(--rh-font-size-body-text-sm, 0.875rem);
}

#description > ::slotted(*) {
  margin-top: var(--rh-space-md, 8px);
  margin-bottom: var(--rh-space-lg, 16px);
}

footer {
  margin-top: var(--rh-space-lg, 16px);
}

footer ::slotted([slot="actions"]) {
  margin-right: var(--actions-item--MarginRight, var(--rh-alert__actions--Gap, 24px)) !important;
  padding: 0;
  border: none;
  background-color: transparent;
  color: var(--rh-color-interactive-blue-darker, #0066cc);
  font-size: var(--rh-font-size-body-text-sm, 0.875rem);
  font-family: var(--_font-family);
}

/* TODO: separate focus and hover styles */
footer ::slotted([slot="actions"]:focus) {
  text-decoration: underline;
  color: var(--rh-color-interactive-blue-darkest, #004080);
}

footer ::slotted([slot="actions"]:hover) {
  cursor: pointer;
  text-decoration: underline;
  color: var(--rh-color-interactive-blue-darkest, #004080);
}

:host(:not([variant])) #container,
:host([toast]) #container {
  border-left: 0;
  border-bottom: none;
  border-right: 0;
}

:host([toast]) #container {
  box-shadow: var(--rh-box-shadow-lg, 0 6px 8px 2px rgba(21, 21, 21, 0.3));
}
`;
var rh_alert_css_default = styles;

// elements/rh-alert/rh-alert.js
var _RhAlert_instances;
var _RhAlert_closeHandler;
var ICONS = {
  default: { viewBox: "0 0 896 1024", path: "M448,0 C465.333333,0 480.333333,6.33333333 493,19 C505.666667,31.6666667 512,46.6666667 512,64 L512,106 L514.23,106.45 C587.89,121.39 648.48,157.24 696,214 C744,271.333333 768,338.666667 768,416 C768,500 780,568.666667 804,622 C818.666667,652.666667 841.333333,684 872,716 C873.773676,718.829136 875.780658,721.505113 878,724 C890,737.333333 896,752.333333 896,769 C896,785.666667 890,800.333333 878,813 C866,825.666667 850.666667,832 832,832 L63.3,832 C44.9533333,831.84 29.8533333,825.506667 18,813 C6,800.333333 0,785.666667 0,769 C0,752.333333 6,737.333333 18,724 L24,716 L25.06,714.9 C55.1933333,683.28 77.5066667,652.313333 92,622 C116,568.666667 128,500 128,416 C128,338.666667 152,271.333333 200,214 C248,156.666667 309.333333,120.666667 384,106 L384,63.31 C384.166667,46.27 390.5,31.5 403,19 C415.666667,6.33333333 430.666667,0 448,0 Z M576,896 L576,897.08 C575.74,932.6 563.073333,962.573333 538,987 C512.666667,1011.66667 482.666667,1024 448,1024 C413.333333,1024 383.333333,1011.66667 358,987 C332.666667,962.333333 320,932 320,896 L576,896 Z" },
  error: { viewBox: "0 0 512 512", path: "M256 8C119.043 8 8 119.083 8 256c0 136.997 111.043 248 248 248s248-111.003 248-248C504 119.083 392.957 8 256 8zm0 110c23.196 0 42 18.804 42 42s-18.804 42-42 42-42-18.804-42-42 18.804-42 42-42zm56 254c0 6.627-5.373 12-12 12h-88c-6.627 0-12-5.373-12-12v-24c0-6.627 5.373-12 12-12h12v-64h-12c-6.627 0-12-5.373-12-12v-24c0-6.627 5.373-12 12-12h64c6.627 0 12 5.373 12 12v100h12c6.627 0 12 5.373 12 12v24z" },
  success: { viewBox: "0 0 512 512", path: "M504 256c0 136.967-111.033 248-248 248S8 392.967 8 256 119.033 8 256 8s248 111.033 248 248zM227.314 387.314l184-184c6.248-6.248 6.248-16.379 0-22.627l-22.627-22.627c-6.248-6.249-16.379-6.249-22.628 0L216 308.118l-70.059-70.059c-6.248-6.248-16.379-6.248-22.628 0l-22.627 22.627c-6.248 6.248-6.248 16.379 0 22.627l104 104c6.249 6.249 16.379 6.249 22.628.001z" },
  warning: { viewBox: "0 0 576 512", path: "M569.517 440.013C587.975 472.007 564.806 512 527.94 512H48.054c-36.937 0-59.999-40.055-41.577-71.987L246.423 23.985c18.467-32.009 64.72-31.951 83.154 0l239.94 416.028zM288 354c-25.405 0-46 20.595-46 46s20.595 46 46 46 46-20.595 46-46-20.595-46-46-46zm-43.673-165.346l7.418 136c.347 6.364 5.609 11.346 11.982 11.346h48.546c6.373 0 11.635-4.982 11.982-11.346l7.418-136c.375-6.874-5.098-12.654-11.982-12.654h-63.383c-6.884 0-12.356 5.78-11.981 12.654z" },
  danger: { viewBox: "0 0 512 512", path: "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zm-248 50c-25.405 0-46 20.595-46 46s20.595 46 46 46 46-20.595 46-46-20.595-46-46-46zm-43.673-165.346l7.418 136c.347 6.364 5.609 11.346 11.982 11.346h48.546c6.373 0 11.635-4.982 11.982-11.346l7.418-136c.375-6.874-5.098-12.654-11.982-12.654h-63.383c-6.884 0-12.356 5.78-11.981 12.654z" },
  info: { viewBox: "0 0 512 512", path: "M256 8C119.043 8 8 119.083 8 256c0 136.997 111.043 248 248 248s248-111.003 248-248C504 119.083 392.957 8 256 8zm0 110c23.196 0 42 18.804 42 42s-18.804 42-42 42-42-18.804-42-42 18.804-42 42-42zm56 254c0 6.627-5.373 12-12 12h-88c-6.627 0-12-5.373-12-12v-24c0-6.627 5.373-12 12-12h12v-64h-12c-6.627 0-12-5.373-12-12v-24c0-6.627 5.373-12 12-12h64c6.627 0 12 5.373 12 12v100h12c6.627 0 12 5.373 12 12v24z" },
  close: { viewBox: "0 0 352 512", path: "M242.72 256l100.07-100.07c12.28-12.28 12.28-32.19 0-44.48l-22.24-22.24c-12.28-12.28-32.19-12.28-44.48 0L176 189.28 75.93 89.21c-12.28-12.28-32.19-12.28-44.48 0L9.21 111.45c-12.28 12.28-12.28 32.19 0 44.48L109.28 256 9.21 356.07c-12.28 12.28-12.28 32.19 0 44.48l22.24 22.24c12.28 12.28 32.2 12.28 44.48 0L176 322.72l100.07 100.07c12.28 12.28 32.2 12.28 44.48 0l22.24-22.24c12.28-12.28 12.28-32.19 0-44.48L242.72 256z" },
  get(name) {
    const { viewBox, path } = ICONS[name];
    return w`
      <svg
          aria-hidden="true"
          fill="currentColor"
          height="1em" width="1em"
          style="vertical-align:-0.125em"
          viewBox="${viewBox}">
        <path d="${path}"/>
      </svg>`;
  }
};
var AlertCloseEvent = class extends n6 {
  constructor() {
    super("close", {
      cancelable: true
    });
  }
};
__name(AlertCloseEvent, "AlertCloseEvent");
var RhAlert = /* @__PURE__ */ __name(class RhAlert2 extends s4 {
  constructor() {
    super(...arguments);
    _RhAlert_instances.add(this);
    this.state = "default";
    this.variant = false;
    this.toast = false;
    this.dismissable = false;
  }
  get icon() {
    return ICONS.get(this.state) ?? ``;
  }
  render() {
    return y`
      <div id="container" role="alert" aria-hidden="false">
        <div id="left-column">
          <div id="icon">${this.icon}</div>
        </div>
        <div id="middle-column">
          <header>
            <div id="header">
              <slot name="header"></slot>
            </div>
            ${this.dismissable ? y`
            <div id="header-actions">
              <button id="close-button" aria-label="Close" confirm @click=${__classPrivateFieldGet(this, _RhAlert_instances, "m", _RhAlert_closeHandler)}>${ICONS.get("close")}</button>
            </div>
            ` : ``}
          </header>
          <div id="description">
            <slot></slot>
          </div>
          <footer>
            <slot name="actions"></slot>
          </footer>
        </div>
      </div>
    `;
  }
}, "RhAlert");
_RhAlert_instances = /* @__PURE__ */ new WeakSet(), _RhAlert_closeHandler = /* @__PURE__ */ __name(function _RhAlert_closeHandler2() {
  const event = new AlertCloseEvent();
  if (this.dispatchEvent(event)) {
    this.remove();
    this.state = "error";
  }
}, "_RhAlert_closeHandler");
RhAlert.version = "{{version}}";
RhAlert.styles = rh_alert_css_default;
__decorate([
  e5({ reflect: true })
], RhAlert.prototype, "state", void 0);
__decorate([
  e5({ reflect: true, type: Boolean })
], RhAlert.prototype, "variant", void 0);
__decorate([
  e5({ reflect: true, type: Boolean })
], RhAlert.prototype, "toast", void 0);
__decorate([
  e5({ reflect: true, type: Boolean })
], RhAlert.prototype, "dismissable", void 0);
RhAlert = __decorate([
  e4("rh-alert")
], RhAlert);

// elements/rh-blockquote/rh-blockquote.js
init_lit();
init_decorators();

// elements/rh-blockquote/rh-blockquote.css.js
init_lit();
var styles2 = i`:host {
  color: var(--rh-color-black-900, #151515);
  margin: 0 auto;
  text-align: left;
  background-color: var(--rh-element-background-color);
  font-size: var(--rh-font-size-body-text-lg, 1.125rem);
  font-family: var(--rh-font-family-heading, RedHatDisplay, "Red Hat Display", "Noto Sans Arabic", "Noto Sans Hebrew", "Noto Sans JP", "Noto Sans KR", "Noto Sans Malayalam", "Noto Sans SC", "Noto Sans TC", "Noto Sans Thai", Overpass, Helvetica, Arial, sans-serif);
  line-height: var(--rh-line-height-body-text, 1.5);
  font-weight: var(--rh-font-weight-heading-regular, 300);
}

@media (min-width: 700px) {
  :host {
    font-size: var(--rh-font-size-body-text-xl, 1.25rem);
  }
}

blockquote {
  margin: 0;
}

blockquote ::slotted(p) {
  margin: var(--rh-length-lg, 1rem) 0;
}

figcaption {
  color: var(--rh-color-black-600, #6a6e73);
  font-family: var(--rh-font-family-text, "RedHatText", "Overpass", Overpass, Helvetica, Arial, sans-serif);
  font-size: var(--rh-font-size-body-text-sm, 0.875rem);
}

figcaption p {
  margin: 0;
}

#author {
  font-weight: var(--rh-font-weight-heading-bold, 700);
}

svg {
  color: var(--rh-color-brand-red-500, #ee0000);
}

:host([align="center"]) {
  text-align: center;
}

:host([size="large"]) {
  font-size: var(--rh-font-size-body-text-2xl, 1.5rem);
  line-height: var(--rh-line-height-heading, 1.3);
}

@media (min-width: 700px) {
  :host([size="large"]) {
    font-size: var(--rh-font-size-heading-md, 1.75rem);
  }
}

:host([highlight]) {
  --BorderWidth: 8px;
  --BorderColor: #43adaf;
  --BorderStyle: solid;
}

:host([highlight]) figure {
  border-inline-start: var(--BorderWidth) var(--BorderStyle) var(--BorderColor);
  padding-inline-start: var(--rh-length-xl, 24px);
}

:host([color-palette="darkest"]) {
  color: var(--rh-color-white, #ffffff);
}

:host([color-palette="darkest"]) svg {
  color: var(--rh-color-brand-red-400, #ff3333);
}

:host([color-palette="darkest"]) figcaption {
  color: var(--rh-color-black-300, #d2d2d2);
}
`;
var rh_blockquote_css_default = styles2;

// elements/rh-blockquote/rh-blockquote.js
var RhBlockquote = /* @__PURE__ */ __name(class RhBlockquote2 extends s4 {
  constructor() {
    super(...arguments);
    this.title = "Blockquote";
    this.colorPalette = "lightest";
    this.align = "inline-start";
    this.highlight = false;
    this.size = "default";
  }
  render() {
    const { align, highlight: highlight2, colorPalette, size } = this;
    return y`
      <figure id="container">
        <svg fill="currentColor" height="20px" width="29px" aria-hidden="true" role="img" viewBox="4.3799147605896 8.372319221496582 27.240171432495117 19.24776840209961">
          <g>
            <path d="M 10,15.38 H 5.63 C 5.7110461,11.992437 8.6223137,9.3690967 12,9.64 12.344668,9.6747086 12.649028,9.4157753 12.67,9.07 12.72,8.44 12.04,8.34 11.55,8.38 7.5982208,8.3522481 4.3799026,11.548123 4.38,15.5 V 27 C 4.3743,27.34475 4.6552502,27.6257 5,27.62 h 11 c 0.34475,0.0057 0.6257,-0.27525 0.62,-0.62 V 22 C 16.614493,18.346158 13.653842,15.385507 10,15.38 Z"></path>
            <path d="M 25,15.38 H 20.63 C 20.71105,11.992437 23.622314,9.3690967 27,9.64 27.342787,9.668766 27.643464,9.4129672 27.67,9.07 27.72,8.44 27.04,8.34 26.55,8.38 c -3.932267,0 -7.12,3.187733 -7.12,7.12 V 27 c -0.0057,0.34475 0.27525,0.6257 0.62,0.62 H 31 c 0.34475,0.0057 0.6257,-0.27525 0.62,-0.62 V 22 C 31.614493,18.346158 28.653842,15.385507 25,15.38 Z"></path>
          </g>
        </svg>
        <blockquote id="quote">
          <slot></slot>
        </blockquote>
        <figcaption>
          <p id="author"><slot name="author"></slot></p>
          <p id="title"><slot name="title"></slot></p>
        </figcaption>
      </figure>
    `;
  }
}, "RhBlockquote");
RhBlockquote.styles = rh_blockquote_css_default;
__decorate([
  e5({ type: String })
], RhBlockquote.prototype, "title", void 0);
__decorate([
  e5({ reflect: true, attribute: "color-palette" })
], RhBlockquote.prototype, "colorPalette", void 0);
__decorate([
  e5({ reflect: true })
], RhBlockquote.prototype, "align", void 0);
__decorate([
  e5({ reflect: true, type: Boolean })
], RhBlockquote.prototype, "highlight", void 0);
__decorate([
  e5({ reflect: true })
], RhBlockquote.prototype, "size", void 0);
RhBlockquote = __decorate([
  e4("rh-blockquote")
], RhBlockquote);

// elements/rh-context-provider/rh-context-provider.js
init_lit();

// lib/context/color.js
init_logger();
init_style_controller();

// lib/context/event.js
function createContext(name, initialValue) {
  return {
    name,
    initialValue
  };
}
__name(createContext, "createContext");
var ContextEvent = class extends Event {
  constructor(context, callback, multiple) {
    super("context-request", { bubbles: true, composed: true });
    this.context = context;
    this.callback = callback;
    this.multiple = multiple;
  }
};
__name(ContextEvent, "ContextEvent");

// lib/context/context-color.css.js
init_lit();
var styles3 = i`:host(:is([on=dark])) { --context: dark; }
:host(:is([on=light])) { --context: light; }
:host(:is([on=saturated])) { --context: saturated; }

/**
 * It's important for \`color-palette\` to take precedence over \`on\`
 * when setting \`--context\`, because a \`dark\` card that's on a \`light\`
 * background must create a new \`dark\` context for its descendents
 */

:host(:is([color-palette=darker],[color-palette=darkest])) {
  --context: dark;
  --rh-context-text: var(--rh-context-dark-color-text, #fff);
  --rh-context-text-muted: var(--rh-context-dark-color-text-muted, #d2d2d2);
  --rh-context-link: var(--rh-context-dark-color-text-link, #73bcf7);
  --rh-context-link-hover: var(--rh-context-dark-color-text-link-hover, #bee1f4);
  --rh-context-link-focus: var(--rh-context-dark-color-text-link-focus, #bee1f4);
  --rh-context-link-visited: var(--rh-context-dark-color-text-link-visited, #a18fff);
  --rh-context-link-visited-hover: var(--rh-context-dark-color-text-link-visited-hover, #cbc1ff);
  /* --rh-context-link-decoration: var(--rh-theme--link-decoration--on-dark, none); */
  /* --rh-context-link-decoration-hover: var(--rh-theme--link-decoration-hover--on-dark, underline); */
  /* --rh-context-link-decoration-focus: var(--rh-theme--link-decoration-focus--on-dark, underline); */
  /* --rh-context-link-decoration--visited: var(--rh-theme--link-decoration--visited--on-dark, none); */
}

:host(:is([color-palette=lighter],[color-palette=lightest],[color-palette=base])) {
  --context: light;
  --rh-context-text: var(--rh-context-light-color-text, #151515);
  --rh-context-text-muted: var(--rh-context-light-color-text-muted, #6a6e73);
  --rh-context-link: var(--rh-context-light-color-text-link, #06c);
  --rh-context-link-hover: var(--rh-context-light-color-text-link-hover, #004080);
  --rh-context-link-focus: var(--rh-context-light-color-text-link-focus, #004080);
  --rh-context-link-visited: var(--rh-context-light-color-text-link-visited, #6753ac);
  --rh-context-link-visited-hover: var(--rh-context-light-color-text-link-visited-hover, #1f0066);
  /* --rh-context-link-decoration: var(--rh-theme--link-decoration, none); */
  /* --rh-context-link-decoration-hover: var(--rh-theme--link-decoration-hover, underline); */
  /* --rh-context-link-decoration-focus: var(--rh-theme--link-decoration-focus, underline); */
  /* --rh-context-link-decoration--visited: var(--rh-theme--link-decoration--visited, none); */
}

/* FIXME: Saturated colours TBD */
/* :host(:is([color-palette=accent],[color-palette=complement],[color-palette=saturated])) { */
/*   --context: saturated; */
/*   --rh-context-text: var(--rh-theme--color--text--on-saturated, #fff); */
/*   --rh-context-text-muted: var(--rh-theme--color--text-muted--on-saturated, #d2d2d2); */
/*   --rh-context-link: var(--rh-theme--color--link-on-saturated, #fff); */
/*   --rh-context-link-hover: var(--rh-theme--color--link-hover--on-saturated, #fafafa); */
/*   --rh-context-link-focus: var(--rh-theme--color--link-focus--on-saturated, #fafafa); */
/*   --rh-context-link-visited: var(--rh-theme--color--link-visited--on-saturated, #d2d2d2); */
/*   --rh-context-link-decoration: var(--rh-theme--link-decoration--on-saturated, underline); */
/*   --rh-context-link-decoration-hover: var(--rh-theme--link-decoration-hover--on-saturated, underline); */
/*   --rh-context-link-decoration-focus: var(--rh-theme--link-decoration-focus--on-saturated, underline); */
/*   --rh-context-link-decoration--visited: var(--rh-theme--link-decoration--visited--on-saturated, underline); */
/* } */

:host(:is([color-palette=lightest])) {
  --rh-context-background-color: var(--rh-color-surface-lighest, #fff);
}

:host(:is([color-palette=lighter])) {
  --rh-context-background-color: var(--rh-color-surface-lighter, #f5f5f5);
}

:host(:is([color-palette=base])) {
  --rh-context-background-color: var(--rh-color-surface-lighest, #fff);
}

:host(:is([color-palette=darker])) {
  --rh-context-background-color: var(--rh-color-surface-darker, #212427);
}

:host(:is([color-palette=darkest])) {
  --rh-context-background-color: var(--rh-color-surface-darkest, #151515);
}

/* FIXME: Saturated colors TBD */
/* :host(:is([color-palette=complement])) { */
/*   --rh-context-background-color: var(--rh-color-surface-complement, #004368); */
/* } */
/**/
/* :host(:is([color-palette=accent])) { */
/*   --rh-context-background-color: var(--rh-color-surface-accent, #00659c); */
/* } */

/* QUESTION: should be specified per component? */
/* :host(:is([color-palette])) { */
/*   background-color: var(--rh-context-background-color, var(--rh-color-surface-base)); */
/* } */

`;
var context_color_css_default = styles3;

// lib/context/color.js
var _ColorContextProvider_instances;
var _ColorContextProvider_onChildContextEvent;
var contextEvents = /* @__PURE__ */ new Map();
var ColorContextController = class {
  constructor(host, options3) {
    this.host = host;
    this.prefix = "rh-";
    this.last = null;
    this.prefix = options3?.prefix ?? "rh-";
    this.context = createContext(`${this.prefix}-color-context`);
    this.logger = new n7(host);
    this.styleController = new l7(host, context_color_css_default);
    host.addController(this);
  }
};
__name(ColorContextController, "ColorContextController");
var ColorContextProvider = class extends ColorContextController {
  constructor(host, options3) {
    super(host, options3);
    _ColorContextProvider_instances.add(this);
    this.callbacks = /* @__PURE__ */ new Set();
    this.mo = new MutationObserver(() => this.update(this.contextVariable));
    this.style = window.getComputedStyle(host);
    this.attribute = options3?.attribute || "color-palette";
  }
  get contextVariable() {
    return this.style.getPropertyValue("--context").trim() || null;
  }
  hostConnected() {
    this.host.addEventListener("context-request", (e25) => __classPrivateFieldGet(this, _ColorContextProvider_instances, "m", _ColorContextProvider_onChildContextEvent).call(this, e25));
    this.mo.observe(this.host, { attributes: true, attributeFilter: [this.attribute, "on"] });
    this.update(this.contextVariable);
    for (const [host, fired] of contextEvents) {
      host.dispatchEvent(fired);
    }
  }
  hostDisconnected() {
    this.callbacks.forEach((x11) => this.callbacks.delete(x11));
    this.mo.disconnect();
  }
  isColorContextEvent(event) {
    return event.target !== this.host && event.context.name === `${this.prefix}-color-context`;
  }
  update(next) {
    for (const cb of this.callbacks) {
      cb(next);
    }
  }
};
__name(ColorContextProvider, "ColorContextProvider");
_ColorContextProvider_instances = /* @__PURE__ */ new WeakSet(), _ColorContextProvider_onChildContextEvent = /* @__PURE__ */ __name(function _ColorContextProvider_onChildContextEvent2(event) {
  if (this.isColorContextEvent(event)) {
    event.stopPropagation();
    event.callback(this.contextVariable);
    if (event.multiple) {
      this.callbacks.add(event.callback);
    }
  }
}, "_ColorContextProvider_onChildContextEvent");
var ColorContextConsumer = class extends ColorContextController {
  constructor(host, options3) {
    super(host, options3);
    this.options = options3;
    this.override = null;
    this.attribute ?? (this.attribute = options3?.attribute || "on");
    this.propertyName = options3?.propertyName;
  }
  hostConnected() {
    const event = new ContextEvent(this.context, (e25) => this.contextCallback(e25), true);
    this.override = this.options?.attribute !== false ? this.host[this.propertyName] : this.host.getAttribute(this.attribute);
    this.host.dispatchEvent(event);
    contextEvents.set(this.host, event);
  }
  hostDisconnected() {
    this.dispose?.();
    this.dispose = void 0;
    contextEvents.delete(this.host);
  }
  contextCallback(value, dispose) {
    if (dispose && dispose !== this.dispose) {
      this.dispose?.();
      this.dispose = dispose;
    }
    this.update(value);
  }
  update(next) {
    if (!this.override && next !== this.last) {
      this.last = next;
      this.logger.log(`setting context from ${this.host.getAttribute(this.attribute)} to ${next}`);
      if (next == null) {
        if (this.options?.attribute === false) {
          this.host[this.propertyName] = void 0;
        } else {
          this.host.removeAttribute(this.attribute);
        }
      } else {
        if (this.propertyName) {
          this.host[this.propertyName] = next;
        } else {
          this.host.setAttribute(this.attribute, next);
        }
      }
    }
  }
};
__name(ColorContextConsumer, "ColorContextConsumer");
function colorContextProvider(options3) {
  return function(proto, propertyName) {
    proto.constructor.addInitializer((instance) => {
      instance.__colorContextProvider = new ColorContextProvider(instance, { propertyName, ...options3 });
    });
  };
}
__name(colorContextProvider, "colorContextProvider");
function colorContextConsumer(options3) {
  return function(proto, propertyName) {
    proto.constructor.addInitializer((instance) => {
      instance.__colorContextConsumer = new ColorContextConsumer(instance, { propertyName, ...options3 });
    });
  };
}
__name(colorContextConsumer, "colorContextConsumer");

// elements/rh-context-provider/rh-context-provider.css.js
init_lit();
var styles4 = i`:host { display: block; }
div {
  background-color: var(--rh-context-background-color);
  color: var(--rh-context-text);
}
`;
var rh_context_provider_css_default = styles4;

// elements/rh-context-provider/rh-context-provider.js
var ContextProvider = /* @__PURE__ */ __name(class ContextProvider2 extends s4 {
  render() {
    return y`<div><slot></slot></div>`;
  }
}, "ContextProvider");
ContextProvider.styles = [context_color_css_default, rh_context_provider_css_default];
__decorate([
  colorContextProvider(),
  e5({ reflect: true, attribute: "color-palette" })
], ContextProvider.prototype, "colorPalette", void 0);
__decorate([
  colorContextConsumer(),
  e5({ reflect: true })
], ContextProvider.prototype, "on", void 0);
ContextProvider = __decorate([
  e4("rh-context-provider")
], ContextProvider);

// elements/rh-cta/rh-cta.js
init_lit();
init_logger();

// lib/DirController.js
var _DirController_instances;
var _DirController_getDirContext;
var DirController = class {
  constructor(host) {
    this.host = host;
    _DirController_instances.add(this);
    this.dir = __classPrivateFieldGet(this, _DirController_instances, "m", _DirController_getDirContext).call(this);
  }
  hostConnected() {
    this.dir = __classPrivateFieldGet(this, _DirController_instances, "m", _DirController_getDirContext).call(this);
  }
};
__name(DirController, "DirController");
_DirController_instances = /* @__PURE__ */ new WeakSet(), _DirController_getDirContext = /* @__PURE__ */ __name(function _DirController_getDirContext2() {
  let host = this.host;
  while (host) {
    const dirContext = host.closest("[dir]");
    if (dirContext?.hasAttribute("dir")) {
      return dirContext?.getAttribute("dir") || "ltr";
    } else {
      ({ host } = host?.getRootNode() ?? {});
    }
  }
  return "ltr";
}, "_DirController_getDirContext");

// node_modules/lit-html/directives/class-map.js
init_lit_html();

// node_modules/lit-html/directive.js
var t5 = { ATTRIBUTE: 1, CHILD: 2, PROPERTY: 3, BOOLEAN_ATTRIBUTE: 4, EVENT: 5, ELEMENT: 6 };
var e8 = /* @__PURE__ */ __name((t16) => (...e25) => ({ _$litDirective$: t16, values: e25 }), "e");
var i10 = class {
  constructor(t16) {
  }
  get _$AU() {
    return this._$AM._$AU;
  }
  _$AT(t16, e25, i25) {
    this._$Ct = t16, this._$AM = e25, this._$Ci = i25;
  }
  _$AS(t16, e25) {
    return this.update(t16, e25);
  }
  update(t16, e25) {
    return this.render(...e25);
  }
};
__name(i10, "i");

// node_modules/lit-html/directives/class-map.js
var o9 = e8(class extends i10 {
  constructor(t16) {
    var i25;
    if (super(t16), t16.type !== t5.ATTRIBUTE || "class" !== t16.name || (null === (i25 = t16.strings) || void 0 === i25 ? void 0 : i25.length) > 2)
      throw Error("`classMap()` can only be used in the `class` attribute and must be the only part in the attribute.");
  }
  render(t16) {
    return " " + Object.keys(t16).filter((i25) => t16[i25]).join(" ") + " ";
  }
  update(i25, [s20]) {
    var r18, o21;
    if (void 0 === this.nt) {
      this.nt = /* @__PURE__ */ new Set(), void 0 !== i25.strings && (this.st = new Set(i25.strings.join(" ").split(/\s/).filter((t16) => "" !== t16)));
      for (const t16 in s20)
        s20[t16] && !(null === (r18 = this.st) || void 0 === r18 ? void 0 : r18.has(t16)) && this.nt.add(t16);
      return this.render(s20);
    }
    const e25 = i25.element.classList;
    this.nt.forEach((t16) => {
      t16 in s20 || (e25.remove(t16), this.nt.delete(t16));
    });
    for (const t16 in s20) {
      const i26 = !!s20[t16];
      i26 === this.nt.has(t16) || (null === (o21 = this.st) || void 0 === o21 ? void 0 : o21.has(t16)) || (i26 ? (e25.add(t16), this.nt.add(t16)) : (e25.remove(t16), this.nt.delete(t16)));
    }
    return x;
  }
});

// elements/rh-cta/rh-cta.js
init_pfe_icon();

// elements/rh-cta/rh-cta.css.js
init_lit();
var styles5 = i`:host {
  display: inline-flex;
  position: relative;
  z-index: 0;
  align-items: center;
  max-width: max-content;
  background-color: var(--rh-cta-background-color);
  border-radius: var(--rh-border-radius-default, 3px);
  border-width: var(--rh-border-width-sm, 1px);
  border-color: var(--rh-cta-border-color, transparent);
  cursor: pointer;

  --rh-context-background-color: var(--rh-cta-background-color) !important;
}

::slotted(*) {
  white-space: normal;
  display: inline;
  padding: var(--rh-space-md, 8px) 0 !important;
  color: inherit !important;
  font-family: inherit !important;
  font-size: inherit !important;
  font-weight: inherit !important;
  line-height: inherit !important;
  text-decoration: inherit !important;
}

::slotted(button),
::slotted(input) {
  background-color: transparent;
  border: medium none;
  margin: 0;
  padding: 0;
  text-align: left;
}

#container {
  display: block;
  white-space: nowrap;
  min-width: 100%;
  color: var(--rh-cta-color);
  font-family: var(--rh-font-family-heading, RedHatDisplay, "Red Hat Display", "Noto Sans Arabic", "Noto Sans Hebrew", "Noto Sans JP", "Noto Sans KR", "Noto Sans Malayalam", "Noto Sans SC", "Noto Sans TC", "Noto Sans Thai", Overpass, Helvetica, Arial, sans-serif);
  font-size: var(--rh-font-size-text-xl, 1.125rem);
  font-weight: var(--rh-font-weight-bold, 600);
  line-height: var(--rh-line-height-lg, 1.5);
  text-decoration: var(--rh-cta-text-decoration);

  --_arrow-size: 13px;
}

/** Inner border */
#container:after {
  --_offset: 1px;

  content: "";
  display: block;
  height: calc(100% - var(--_offset) * 2);
  width: calc(100% - var(--_offset) * 2);
  box-sizing: border-box;
  position: absolute;
  top: var(--_offset);
  left: var(--_offset);
  z-index: -1;
  border-width: var(--rh-border-width-sm, 1px);
  border-radius: 2px;
  outline: none;
}

/** Default variant arrow icon */
svg {
  display: inline;
  fill: currentcolor;
  width: var(--_arrow-size);
  height: var(--_arrow-size);
  margin-bottom: -1px;
  padding-inline: 3px;
  translate: 0 0;
  transition: translate var(--_trans);

  --_trans:
    var(--rh-animation-speed, 0.3s)
    var(--rh-animation-timing, cubic-bezier(0.465, 0.183, 0.153, 0.946));
}

#container.rtl svg {
  rotate: 180deg;
}

/*****************************************************************************
 * FOCUS STATE                                                               *
 *****************************************************************************/

:host(:is(:focus, :focus-within)),
:host(:is(:focus, :focus-within)) ::slotted(*),
::slotted(:focus) {
  outline: none !important;
}

:host(:is(:focus, :focus-within)) {
  border-color: var(--rh-cta-focus-border-color);

  --rh-cta-inner-border-color: var(--rh-cta-focus-inner-border-color);
  --rh-cta-background-color: var(--rh-cta-focus-background-color) !important;
}

:host(:is(:focus, :focus-within)) #container {
  --rh-cta-color: var(--rh-cta-focus-color);
  --rh-cta-text-decoration: var(--rh-cta-focus-text-decoration);

  background-color:
    var(
      --rh-cta-focus-container-background-color,
      var(--rh-cta-focus-background-color)
    );
}

/*****************************************************************************
 * HOVER STATE                                                               *
 *****************************************************************************/

:host(:hover) {
  background-color: var(--rh-cta-hover-background-color);
  border-color: var(--rh-cta-hover-border-color);

  --rh-cta-inner-border-color: var(--rh-cta-hover-inner-border-color);
}

:host(:hover) #container {
  color: var(--rh-cta-hover-color);

  --rh-cta-text-decoration: var(--rh-cta-hover-text-decoration);
}

:host(:hover) #container svg {
  translate: 3px 0;
}

:host(:hover) #container.rtl svg {
  translate: -3px 0;
}

/*****************************************************************************
 * ACTIVE STATE                                                              *
 *****************************************************************************/

:host(:active) {
  background-color: var(--rh-cta-active-background-color);

  --rh-cta-inner-border-color: var(--rh-cta-active-inner-border-color) !important;
}

:host(:active) #container {
  --rh-cta-background-color:
    var(
      --rh-cta-active-container-background-color,
      var(--rh-cta-active-background-color)
    );
}

/*****************************************************************************
 * VARIANTS                                                                  *
 *****************************************************************************/

:host([variant]) #container {
  display: flex;
  flex-flow: row nowrap;
  align-items: center;
  height: 100%;
  background-color: transparent;
}

:host([variant\$="ary"]) ::slotted(*) {
  font-size: var(--rh-cta-font-size-priority, var(--rh-font-size-text-lg, 1rem));
  text-align: center;
}

:host([variant]) ::slotted(*) {
  padding: var(--rh-space-lg, 16px) var(--rh-space-xl, 24px) !important;
}

/* prefer to group state-bound styles */
/* stylelint-disable-next-line no-descending-specificity */
:host([variant]) #container svg {
  display: none;
}

/*****************************************************************************
 * DEFAULT
 *****************************************************************************/

:host(:not([variant])) {
  --rh-cta-background-color: transparent;
  --rh-cta-border-color: transparent;
  --rh-cta-color: var(--rh-color-interactive-blue, #0066cc);
  --rh-cta-hover-background-color: transparent;
  --rh-cta-hover-border-color: transparent;
  --rh-cta-hover-inner-border-color: transparent;
  --rh-cta-hover-color: var(--rh-context-color-link-hover, #004080);
  --rh-cta-hover-text-decoration: none;
  --rh-cta-focus-background-color: transparent;

  /* --rh-color-border-interactive-on-light with 10% opacity */
  --rh-cta-focus-container-background-color: #0066cc1a;
  --rh-cta-focus-border-color: transparent;
  --rh-cta-focus-color: var(--rh-context-light-color-focus, #0066cc);
  --rh-cta-focus-inner-border-color: transparent;
  --rh-cta-focus-text-decoration: none;

  /* --rh-color-border-interactive-on-light with 10% opacity */
  --rh-cta-active-container-background-color: #0066cc1a;
  --rh-cta-active-inner-border-color: transparent;
  --rh-cta-active-text-decoration: none;
}

:host(:not([variant])[on="dark"]) {
  --rh-cta-color: var(--rh-color-interactive-blue-lighter, #73bcf7);
  --rh-cta-hover-color: var(--rh-color-interactive-blue-lightest, #bee1f4);

  /* --rh-color-interactive-blue-lighter with 25% opacity */
  --rh-cta-focus-container-background-color: #73bcf740;
  --rh-cta-focus-border-color: transparent;
  --rh-cta-focus-color: var(--rh-color-interactive-blue-lighter, #73bcf7);
  --rh-cta-focus-inner-border-color: transparent;
  --rh-cta-focus-text-decoration: none;

  /* --rh-color-interactive-blue-lighter with 25% opacity */
  --rh-cta-active-container-background-color: #73bcf740;
  --rh-cta-active-text-decoration: none;
}

/*****************************************************************************
 * PRIMARY
 *****************************************************************************/

:host([variant="primary"]) {
  --rh-cta-background-color: var(--rh-color-brand-red-on-light, #ee0000);
  --rh-cta-border-color: var(--rh-color-brand-red-on-light, #ee0000);
  --rh-cta-color: var(--rh-color-text-primary-on-dark, #ffffff);
  --rh-cta-hover-background-color: var(--rh-color-brand-red-dark, #be0000);
  --rh-cta-hover-border-color: var(--rh-color-brand-red-dark, #be0000);
  --rh-cta-hover-color: var(--rh-color-text-primary-on-dark, #ffffff);
  --rh-cta-focus-background-color: var(--rh-color-brand-red-on-light, #ee0000);
  --rh-cta-focus-border-color: var(--rh-color-brand-red-on-light, #ee0000);
  --rh-cta-focus-color: var(--rh-color-text-primary-on-dark, #ffffff);
  --rh-cta-focus-inner-border-color: var(--rh-color-text-primary-on-dark, #ffffff);
  --rh-cta-active-background-color: var(--rh-color-brand-red-dark, #be0000);
  --rh-cta-active-inner-border-color: var(--rh-color-text-primary-on-dark, #ffffff);
}

/*****************************************************************************
 * SECONDARY
 *****************************************************************************/

:host([variant="secondary"]) {
  border-style: solid;

  --rh-cta-background-color: transparent;
  --rh-cta-border-color: var(--rh-color-surface-darkest, #151515);
  --rh-cta-color: var(--rh-color-text-primary-on-light, #151515);
  --rh-cta-hover-background-color: var(--rh-color-surface-darkest, #151515);
  --rh-cta-hover-border-color: var(--rh-color-surface-darkest, #151515);
  --rh-cta-hover-color: var(--rh-color-primary-on-dark, #ffffff);
  --rh-cta-focus-background-color: var(--rh-color-surface-light, #f0f0f0);
  --rh-cta-focus-border-color: var(--rh-color-surface-darkest, #151515);
  --rh-cta-focus-color: var(--rh-color-surface-darkest, #151515);
  --rh-cta-focus-inner-border-color: var(--rh-color-surface-darkest, #151515);
  --rh-cta-active-color: var(--rh-color-surface-lightest, #ffffff);
  --rh-cta-active-background-color: var(--rh-color-surface-darkest, #151515);
  --rh-cta-active-inner-border-color: var(--rh-color-surface-light, #f0f0f0);
}

:host([variant="secondary"][on="dark"]) {
  --rh-cta-border-color: var(--rh-color-border-strong-on-dark, #ffffff);
  --rh-cta-color: var(--rh-color-text-primary-on-dark, #ffffff);
  --rh-cta-hover-background-color: var(--rh-color-surface-lightest, #ffffff);
  --rh-cta-hover-border-color: var(--rh-color-surface-lightest, #ffffff);
  --rh-cta-hover-color: var(--rh-color-text-primary-on-light, #151515);
  --rh-cta-focus-background-color: var(--rh-color-surface-dark, #3c3f42);
  --rh-cta-focus-border-color: var(--rh-color-border-strong-on-dark, #ffffff);
  --rh-cta-focus-inner-border-color: var(--rh-color-border-strong-on-dark, #ffffff);
  --rh-cta-focus-color: var(--rh-color-text-primary-on-dark, #ffffff);
  --rh-cta-active-color: var(--rh-color-text-primary-on-light, #151515);
  --rh-cta-active-background-color: var(--rh-color-surface-lightest, #ffffff);
  --rh-cta-active-inner-border-color: var(--rh-color-border-strong-on-light, #151515);
}

/*****************************************************************************
 * BRICK
 *****************************************************************************/

:host([variant="brick"]) #container {
  font-weight: var(--rh-font-weight-body-text-regular, 400);
}

:host([variant="brick"]) {
  border-style: solid;

  --rh-cta-background-color: transparent;
  --rh-cta-border-color: var(--rh-color-border-subtle-on-light, #d2d2d2);
  --rh-cta-color: var(--rh-color-interactive-blue-darker, #0066cc);
  --rh-cta-hover-background-color: var(--rh-color-surface-lighter, #f5f5f5);
  --rh-cta-hover-border-color: var(--rh-color-border-subtle-on-light, #d2d2d2);
  --rh-cta-hover-color: var(--rh-color-interactive-blue-darkest, #004080);
  --rh-cta-hover-text-decoration: underline;
  --rh-cta-focus-color: var(--rh-color-interactive-blue-darker, #0066cc);
  --rh-cta-focus-border-color: var(--rh-color-border-subtle-on-light, #d2d2d2);
  --rh-cta-focus-inner-border-color: var(--rh-color-border-subtle-on-light, #d2d2d2);
  --rh-cta-focus-text-decoration: none;
  --rh-cta-active-background-color: var(--rh-color-surface-lighter, #f5f5f5);
  --rh-cta-active-inner-border-color: var(--rh-color-border-subtle-on-light, #d2d2d2);
  --rh-cta-active-text-decoration: underline;
}

:host([variant="brick"][on="dark"]) {
  --rh-cta-border-color: var(--rh-color-border-subtle-on-dark, #6a6e73);
  --rh-cta-color: var(--rh-color-interactive-blue-lighter, #73bcf7);
  --rh-cta-hover-background-color: var(--rh-color-surface-darker, #212427);
  --rh-cta-hover-border-color: var(--rh-color-border-subtle-on-dark, #6a6e73);
  --rh-cta-hover-color: var(--rh-color-interactive-blue-lightest, #bee1f4);
  --rh-cta-hover-text-decoration: underline;
  --rh-cta-focus-color: var(--rh-color-interactive-blue-lighter, #73bcf7);
  --rh-cta-focus-border-color: var(--rh-color-border-subtle-on-dark, #6a6e73);
  --rh-cta-focus-inner-border-color: var(--rh-color-border-subtle-on-dark, #6a6e73);
  --rh-cta-focus-text-decoration: none;
  --rh-cta-active-background-color: var(--rh-color-surface-darker, #212427);
  --rh-cta-active-inner-border-color: var(--rh-color-border-subtle-on-dark, #6a6e73);
  --rh-cta-active-text-decoration: underline;
}

/* chrome <= 103 */
@supports not (translate: 0 0) {
  svg {
    transform: translate(0, 0);
    transition: transform var(--_trans);
  }

  #container.rtl svg { transform: translate(0, 0) rotate(180deg); }
  :host(:hover) #container svg { transform: translate(3px, 0); }
  :host(:hover) #container.rtl svg { transform: translate(-3px, 0) rotate(180deg); }
}
`;
var rh_cta_css_default = styles5;

// elements/rh-cta/rh-cta.js
var _RhCta_instances;
var _RhCta_initializing;
var _RhCta_dir;
var _RhCta_logger;
var _RhCta_isDefault_get;
var supportedTags = ["a", "button"];
function isSupportedContent(el) {
  return !!el && supportedTags.includes(el.localName);
}
__name(isSupportedContent, "isSupportedContent");
var CONTENT = /* @__PURE__ */ new WeakMap();
function contentInitialized(el) {
  return !!el && !!CONTENT.get(el);
}
__name(contentInitialized, "contentInitialized");
function isButton(element) {
  return element.tagName.toLowerCase() === "button";
}
__name(isButton, "isButton");
var RhCta = /* @__PURE__ */ __name(class RhCta2 extends s4 {
  constructor() {
    super(...arguments);
    _RhCta_instances.add(this);
    this.cta = null;
    _RhCta_initializing.set(this, false);
    _RhCta_dir.set(this, new DirController(this));
    _RhCta_logger.set(this, new n7(this));
  }
  render() {
    const rtl = __classPrivateFieldGet(this, _RhCta_dir, "f").dir === "rtl";
    return y`
      <span id="container" part="container" class="${o9({ rtl })}">
        <slot @slotchange=${this.firstUpdated}></slot>${!__classPrivateFieldGet(this, _RhCta_instances, "a", _RhCta_isDefault_get) && !this.icon ? "" : this.icon ? y`
        <pfe-icon icon=${this.icon} size="sm"></pfe-icon>` : y`&nbsp;<svg xmlns="http://www.w3.org/2000/svg"
          viewBox="0 0 31.56 31.56" focusable="false" width="1em">
          <path d="M15.78 0l-3.1 3.1 10.5 10.49H0v4.38h23.18l-10.5 10.49 3.1 3.1 15.78-15.78L15.78 0z" />
        </svg>`}
      </span>
    `;
  }
  firstUpdated() {
    let [cta] = this.shadowRoot?.querySelector("slot")?.assignedElements() ?? [];
    while (cta instanceof HTMLSlotElement) {
      [cta] = cta.assignedElements();
    }
    if (contentInitialized(cta) || __classPrivateFieldGet(this, _RhCta_initializing, "f")) {
      return;
    }
    __classPrivateFieldSet(this, _RhCta_initializing, true, "f");
    if (!isSupportedContent(cta)) {
      return __classPrivateFieldGet(this, _RhCta_logger, "f").warn(`The first child in the light DOM must be a supported call-to-action tag (<a>, <button>)`);
    } else if (isButton(cta) && !this.variant) {
      return __classPrivateFieldGet(this, _RhCta_logger, "f").warn(`Button tag is not supported semantically by the default link styles`);
    } else {
      this.cta = cta;
      CONTENT.set(this.cta, true);
      __classPrivateFieldSet(this, _RhCta_initializing, false, "f");
    }
  }
}, "RhCta");
_RhCta_initializing = /* @__PURE__ */ new WeakMap(), _RhCta_dir = /* @__PURE__ */ new WeakMap(), _RhCta_logger = /* @__PURE__ */ new WeakMap(), _RhCta_instances = /* @__PURE__ */ new WeakSet(), _RhCta_isDefault_get = /* @__PURE__ */ __name(function _RhCta_isDefault_get2() {
  return !this.hasAttribute("variant");
}, "_RhCta_isDefault_get");
RhCta.version = "{{version}}";
RhCta.styles = [rh_cta_css_default];
__decorate([
  e5({ reflect: true })
], RhCta.prototype, "variant", void 0);
__decorate([
  colorContextProvider(),
  e5({ reflect: true, attribute: "color-palette" })
], RhCta.prototype, "colorPalette", void 0);
__decorate([
  colorContextConsumer(),
  e5({ reflect: true })
], RhCta.prototype, "on", void 0);
__decorate([
  e5({ reflect: true })
], RhCta.prototype, "icon", void 0);
RhCta = __decorate([
  e4("rh-cta")
], RhCta);

// elements/rh-demo/rh-demo.js
init_lit();

// elements/rh-demo/rh-demo.css.js
init_lit();
var styles6 = i`pfe-accordion {
  --pfe-accordion--MaxWidth--content: none;
}

code-sample {
  display: flex;
  flex: 1 1 auto;
  flex-direction: column;
}
`;
var rh_demo_css_default = styles6;

// elements/rh-demo/rh-demo.js
var RhDemo = /* @__PURE__ */ __name(class RhDemo2 extends s4 {
  constructor() {
    super();
    Promise.resolve().then(() => init_pfe_accordion());
    Promise.resolve().then(() => init_code_sample());
  }
  createRenderRoot() {
    return this;
  }
  firstUpdated() {
    this.syncCodeEditor();
  }
  syncCodeEditor() {
    const template = this.querySelector("template");
    if (template) {
      const output = this.renderRoot.querySelector(".rh-demo-code-area template");
      if (output) {
        output.innerHTML = template.innerHTML;
        this.syncPreview();
      }
    }
  }
  syncPreview() {
    const preview = this.renderRoot.querySelector(".rh-demo-preview-area");
    if (preview) {
      preview.innerHTML = this.renderRoot.querySelector(".rh-demo-code-area template")?.innerHTML || "";
    }
  }
  render() {
    return y`
      <div class="rh-demo-preview-area"></div>
      <div part="code" class="rh-demo-code-area">
        <pfe-accordion>
          <pfe-accordion-header>
            <h3>View code</h3>
          </pfe-accordion-header>
          <pfe-accordion-panel>
            <code-sample>
              <template></template>
            </code-sample>
          </pfe-accordion-panel>
        </pfe-accordion>
      </div>
    `;
  }
}, "RhDemo");
RhDemo.styles = rh_demo_css_default;
RhDemo = __decorate([
  e4("rh-demo")
], RhDemo);

// elements/rh-dialog/rh-dialog.js
init_lit();
init_observed();

// node_modules/@patternfly/pfe-modal/node_modules/lit/index.js
init_reactive_element();
init_lit_html();
init_lit_element();

// node_modules/@patternfly/pfe-modal/node_modules/lit/decorators.js
init_custom_element();
init_property();
init_state();
init_event_options();
init_query();
init_query_all();
init_query_async();
init_query_assigned_elements();
init_query_assigned_nodes();

// node_modules/@patternfly/pfe-modal/node_modules/lit/directives/if-defined.js
init_if_defined();

// node_modules/@patternfly/pfe-modal/pfe-modal.js
init_core();
init_decorators();
init_random();

// node_modules/@patternfly/pfe-core/functions/deprecatedCustomEvent.js
function n14(e25, t16) {
  return new CustomEvent(e25, { bubbles: true, composed: true, detail: t16 });
}
__name(n14, "n");

// node_modules/@patternfly/pfe-modal/pfe-modal.js
init_slot_controller();
var w2 = Object.defineProperty;
var k5 = Object.getOwnPropertyDescriptor;
var o12 = /* @__PURE__ */ __name((n25, d17, e25, r18) => {
  for (var a19 = r18 > 1 ? void 0 : r18 ? k5(d17, e25) : d17, l25 = n25.length - 1, i25; l25 >= 0; l25--)
    (i25 = n25[l25]) && (a19 = (r18 ? i25(d17, e25, a19) : i25(a19)) || a19);
  return r18 && a19 && w2(d17, e25, a19), a19;
}, "o");
var L3 = i`:host{display:block;position:relative}[hidden]{display:none!important}section{display:flex;position:fixed;height:100%;width:100%;top:0;left:0;align-items:center;justify-content:center;z-index:var(--pf-c-modal-box--ZIndex,var(--pf-global--ZIndex--xl,500))}#container{position:relative;max-height:inherit}[part=overlay]{position:fixed;height:100%;width:100%;top:0;left:0;background-color:var(--pf-c-backdrop--BackgroundColor,var(--pf-global--BackgroundColor--dark-transparent-100,rgba(3,3,3,.62)))}[part=dialog]{position:relative;margin:0 auto;width:var(--pf-c-modal-box--Width,calc(100% - var(--pf-global--spacer--xl,2rem)));max-width:var(--pf-c-modal-box--MaxWidth,calc(100% - var(--pf-global--spacer--xl,2rem)));max-height:var(--pf-c-modal-box--MaxHeight,calc(100% - var(--pf-global--spacer--2xl,3rem)));box-shadow:var(--pf-c-modal-box--BoxShadow,var(--pf-global--BoxShadow--xl,0 1rem 2rem 0 rgba(3,3,3,.16),0 0 .5rem 0 rgba(3,3,3,.1)));background-color:var(--pf-c-modal-box--BackgroundColor,var(--pf-global--BackgroundColor--100,var(--pf-global--BackgroundColor--100,#fff)));padding:var(--pf-global--spacer--lg,1.5rem);margin-inline:var(--pf-global--spacer--md,1rem)}:host([variant]) [part=dialog],:host([width]) [part=dialog]{margin-inline:0}:host([variant=small]) [part=dialog],:host([width=small]) [part=dialog]{--pf-c-modal-box--Width:var(--pf-c-modal-box--m-sm--sm--MaxWidth, 35rem)}:host([variant=medium]) [part=dialog],:host([width=medium]) [part=dialog]{--pf-c-modal-box--Width:var(--pf-c-modal-box--m-md--Width, 52.5rem)}:host([variant=large]) [part=dialog],:host([width=large]) [part=dialog]{--pf-c-modal-box--Width:var(--pf-c-modal-box--m-lg--lg--MaxWidth, 70rem)}[part=content]{overflow-y:auto;overscroll-behavior:contain;max-height:var(--pf-c-modal-box--MaxHeight,calc(100vh - var(--pf-global--spacer--2xl,3rem)));box-sizing:border-box}[part=content] ::slotted([slot=header]){margin-top:0!important}header{position:sticky;top:0;background-color:var(--pf-c-modal-box--BackgroundColor,var(--pf-global--BackgroundColor--100,var(--pf-global--BackgroundColor--100,#fff)))}header ::slotted(:is(h1,h2,h3,h4,h5,h6)[slot=header]){font-size:var(--pf-c-modal-box__title--FontSize, var(--pf-global--FontSize--2xl, 1.5rem));font-weight:var(--pf-global--FontWeight--normal,400);font-family:var(--pf-c-modal-box__title--FontFamily, var(--pf-global--FontFamily--heading--sans-serif, var(--pf-global--FontFamily--redhat-updated--heading--sans-serif, "RedHatDisplayUpdated", "Overpass", overpass, helvetica, arial, sans-serif)))}[part=close-button]{background-color:transparent;border:none;margin:0;padding:0;text-align:left;position:absolute;cursor:pointer;line-height:24px;padding-block:var(--pf-c-button--PaddingTop,var(--pf-global--spacer--form-element,0.375rem));padding-inline:var(--pf-c-button--PaddingRight,var(--pf-global--spacer--md,1rem));top:0;right:calc(var(--pf-global--spacer--lg,1.5rem)/ -3);color:var(--pf-c-button--m-plain--Color,var(--pf-global--Color--200,#6a6e73));font-size:var(--pf-c-button--FontSize, var(--pf-global--FontSize--md, 1rem))}[part=close-button]:is(:focus-within,:focus-visible,:hover){color:var(--pf-c-button--m-plain--focus--Color,var(--pf-global--Color--100,#151515))}[part=close-button]>svg{font-size:16px;width:var(--pf-global--spacer--md,1rem);aspect-ratio:1/1}:host([position=top]) #dialog{align-self:start;margin-block:var(--pf-c-modal-box--m-align-top--MarginTop,var(--pf-c-modal-box--m-align-top--spacer,2rem));margin-inline:var(--pf-global--spacer--md,1rem);width:100%;max-width:var(--pf-c-modal-box--m-align-top--MaxWidth,calc(100% - min(var(--pf-c-modal-box--m-align-top--spacer,2rem) * 2,var(--pf-global--spacer--xl,2rem))));max-height:var(--pf-c-modal-box--m-align-top--MaxHeight,calc(100% - min(var(--pf-c-modal-box--m-align-top--spacer,var(--pf-global--spacer--sm,.5rem)),var(--pf-global--spacer--2xl,3rem)) - var(--pf-c-modal-box--m-align-top--spacer,var(--pf-global--spacer--sm,.5rem))))}footer{display:flex;align-items:center;gap:var(--pf-global--spacer--xl,.5rem)}`;
var v4 = L3;
var h10 = /* @__PURE__ */ __name(class extends n6 {
  constructor() {
    super("cancel");
  }
}, "h");
var g4 = /* @__PURE__ */ __name(class extends n6 {
  constructor() {
    super("close");
  }
}, "g");
var m9 = /* @__PURE__ */ __name(class extends n6 {
  constructor(e25) {
    super("open");
    this.trigger = e25;
  }
}, "m");
var t8 = /* @__PURE__ */ __name(class extends s4 {
  constructor() {
    super(...arguments);
    this.open = false;
    this.returnValue = "";
    this.headerId = n11();
    this.triggerElement = null;
    this.header = null;
    this.body = [];
    this.headings = [];
    this.cancelling = false;
    this.slots = new l13(this, { slots: [null, "header", "description", "footer"], deprecations: { header: "pfe-modal--header" } });
  }
  connectedCallback() {
    super.connectedCallback(), this.addEventListener("keydown", this.onKeydown), this.addEventListener("click", this.onClick);
  }
  render() {
    let e25 = this.header || this.headings.length ? this.headerId : void 0, r18 = this.triggerElement ? this.triggerElement.innerText : void 0, a19 = this.slots.hasSlotted("header", "pfe-modal--header"), l25 = this.slots.hasSlotted("description"), i25 = this.slots.hasSlotted("footer");
    return y`<section ?hidden="${!this.open}"><div id="overlay" part="overlay" ?hidden="${!this.open}"></div><div id="dialog" part="dialog" tabindex="0" role="dialog" aria-labelledby="${l10(e25)}" aria-label="${l10(r18)}" ?hidden="${!this.open}"><div id="container"><div id="content" part="content" class="${o9({ hasHeader: a19, hasDescription: l25, hasFooter: i25 })}"><header part="header"><slot name="header"></slot><slot name="pfe-modal--header"></slot><div part="description" ?hidden="${!l25}"><slot name="description"></slot></div></header><slot></slot><footer ?hidden="${!i25}" part="footer"><slot name="footer"></slot></footer></div><button id="close-button" part="close-button" aria-label="Close dialog" @keydown="${this.onKeydown}" @click="${this.close}"><svg fill="currentColor" viewBox="0 0 352 512"><path d="M242.72 256l100.07-100.07c12.28-12.28 12.28-32.19 0-44.48l-22.24-22.24c-12.28-12.28-32.19-12.28-44.48 0L176 189.28 75.93 89.21c-12.28-12.28-32.19-12.28-44.48 0L9.21 111.45c-12.28 12.28-12.28 32.19 0 44.48L109.28 256 9.21 356.07c-12.28 12.28-12.28 32.19 0 44.48l22.24 22.24c12.28 12.28 32.2 12.28 44.48 0L176 322.72l100.07 100.07c12.28 12.28 32.2 12.28 44.48 0l22.24-22.24c12.28-12.28 12.28-32.19 0-44.48L242.72 256z"></path></svg></button></div></div></section>`;
  }
  disconnectedCallback() {
    super.disconnectedCallback(), this.removeEventListener("keydown", this.onKeydown), this.triggerElement?.removeEventListener("click", this.onTriggerClick);
  }
  async _init() {
    await this.updateComplete, this.header = this.querySelector('[slot$="header"]'), this.body = [...this.querySelectorAll("*:not([slot])")], this.headings = this.body.filter((e25) => e25.tagName.slice(0, 1) === "H"), this.triggerElement && (this.triggerElement.addEventListener("click", this.onTriggerClick), this.removeAttribute("hidden")), this.header ? this.header.id = this.headerId : this.headings.length > 0 && (this.headings[0].id = this.headerId);
  }
  async _openChanged(e25, r18) {
    if (!(e25 == null || r18 == null || e25 == r18))
      if (this.open)
        document.body.style.overflow = "hidden", await this.updateComplete, this.dialog?.focus(), this.dispatchEvent(new m9(this.triggerElement)), this.dispatchEvent(n14("pfe-modal:open", { open: true, ...this.triggerElement ? { trigger: this.triggerElement } : {} }));
      else {
        document.body.style.overflow = "auto";
        let { cancelling: a19 } = this;
        await this.updateComplete, this.triggerElement && this.triggerElement.focus(), this.dispatchEvent(a19 ? new h10() : new g4()), this.dispatchEvent(n14("pfe-modal:close", { open: false }));
      }
  }
  _triggerChanged() {
    this.trigger && (this.triggerElement = this.getRootNode().getElementById(this.trigger), this.triggerElement?.addEventListener("click", this.onTriggerClick));
  }
  onTriggerClick(e25) {
    e25.preventDefault(), this.showModal();
  }
  onClick(e25) {
    let { open: r18, overlay: a19, dialog: l25 } = this;
    if (r18) {
      let i25 = e25.composedPath(), { closeOnOutsideClick: E4 } = this.constructor;
      E4 && i25.includes(a19) && !i25.includes(l25) && (e25.preventDefault(), this.cancel());
    }
  }
  onKeydown(e25) {
    switch (e25.key) {
      case "Tab":
        e25.target === this.closeButton && (e25.preventDefault(), this.dialog?.focus());
        return;
      case "Escape":
      case "Esc":
        e25.preventDefault(), this.cancel();
        return;
      case "Enter":
        e25.target === this.triggerElement && (e25.preventDefault(), this.showModal());
        return;
    }
  }
  async cancel() {
    this.cancelling = true, this.open = false, await this.updateComplete, this.cancelling = false;
  }
  setTrigger(e25) {
    this.triggerElement = e25, this.triggerElement.addEventListener("click", this.onTriggerClick);
  }
  toggle() {
    this.open = !this.open;
  }
  show() {
    this.open = true;
  }
  showModal() {
    this.show();
  }
  close(e25) {
    typeof e25 == "string" && (this.returnValue = e25), this.open = false;
  }
}, "t");
t8.shadowRootOptions = { ...s4.shadowRootOptions, delegatesFocus: true }, t8.version = "2.0.0-next.6", t8.styles = [v4], t8.closeOnOutsideClick = false, o12([e5({ reflect: true })], t8.prototype, "variant", 2), o12([d3({ alias: "variant", attribute: "width" })], t8.prototype, "width", 2), o12([e5({ reflect: true })], t8.prototype, "position", 2), o12([p3, e5({ type: Boolean, reflect: true })], t8.prototype, "open", 2), o12([p3, e5()], t8.prototype, "trigger", 2), o12([i4("#overlay")], t8.prototype, "overlay", 2), o12([i4("#dialog")], t8.prototype, "dialog", 2), o12([i4("#close-button")], t8.prototype, "closeButton", 2), o12([c6()], t8.prototype, "_init", 1), o12([o8], t8.prototype, "onTriggerClick", 1), o12([o8], t8.prototype, "onClick", 1), o12([o8], t8.prototype, "onKeydown", 1), o12([o8], t8.prototype, "toggle", 1), o12([o8], t8.prototype, "show", 1), o12([o8], t8.prototype, "showModal", 1), o12([o8], t8.prototype, "close", 1), t8 = o12([e4("pfe-modal")], t8);

// lib/ScreenSizeController.js
init_bound();

// lib/tokens.js
init_lit();
var mobilePortraitBreakpoint = r`320px`;
var mobileLandscapeBreakpoint = r`576px`;
var tabletPortraitBreakpoint = r`768px`;
var tabletLandscapeBreakpoint = r`992px`;
var desktopSmallBreakpoint = r`1200px`;
var desktopLargeBreakpoint = r`1368px`;

// lib/ScreenSizeController.js
var ScreenSizeController = class {
  constructor(host, breakpoint, options3) {
    this.host = host;
    this.breakpoint = breakpoint;
    this.mobile = ScreenSizeController.queries.get("mobile")?.matches ?? false;
    this.matches = /* @__PURE__ */ new Set();
    this.host.addController(this);
    this.size = "mobilePortrait";
    this.breakpoint = breakpoint;
    this.onChange = options3?.onChange;
    for (const [key, list] of ScreenSizeController.queries) {
      if (key !== "mobile" && list.matches) {
        this.size = key;
        this.matches.add(key);
        this.evaluate();
      }
    }
  }
  hostConnected() {
    ScreenSizeController.instances.add(this);
  }
  hostDisconnected() {
    ScreenSizeController.instances.delete(this);
  }
  evaluate() {
    this.host.requestUpdate();
    if (this.breakpoint) {
      this.onChange?.(this.matches.has(this.breakpoint) ?? false);
    }
  }
};
__name(ScreenSizeController, "ScreenSizeController");
ScreenSizeController.instances = /* @__PURE__ */ new Set();
ScreenSizeController.queries = /* @__PURE__ */ new Map([
  ["mobile", matchMedia(`screen and (max-width: ${tabletPortraitBreakpoint})`)],
  ["mobilePortrait", matchMedia(`screen and (min-width: ${mobilePortraitBreakpoint})`)],
  ["mobileLandscape", matchMedia(`screen and (min-width: ${mobileLandscapeBreakpoint})`)],
  ["tabletPortrait", matchMedia(`screen and (min-width: ${tabletPortraitBreakpoint})`)],
  ["tabletLandscape", matchMedia(`screen and (min-width: ${tabletLandscapeBreakpoint})`)],
  ["desktopSmall", matchMedia(`screen and (min-width: ${tabletLandscapeBreakpoint}) and (max-width: ${desktopSmallBreakpoint})`)],
  ["desktopLarge", matchMedia(`screen and (min-width: ${desktopLargeBreakpoint})`)]
]);
__decorate([
  o8
], ScreenSizeController.prototype, "evaluate", null);
for (const [key, list] of ScreenSizeController.queries) {
  if (key === "mobile") {
    list.addEventListener("change", (event) => {
      for (const instance of ScreenSizeController.instances) {
        instance.mobile = event.matches;
        instance.evaluate();
      }
    });
  } else {
    list.addEventListener("change", (event) => {
      for (const instance of ScreenSizeController.instances) {
        if (event.matches) {
          instance.size = key;
          instance.matches.add(key);
        } else {
          instance.matches.delete(key);
        }
        instance.evaluate();
      }
    });
  }
}

// elements/rh-dialog/rh-dialog.css.js
init_lit();
var styles7 = i`#rhds-wrapper {
  display: contents;
  font-family: "Red Hat Text", RedHatText, Overpass, Helvetica, sans-serif;

  --offset: var(--rh-space-md, 8px);
  --offset-top: var(--offset);
  --offset-right: var(--offset);
}

header ::slotted(:is(h1, h2, h3, h4, h5, h6)[slot="header"]) {
  font-family: "Red Hat Display", RedHatDisplay, Overpass, Helvetica, sans-serif;
}

[part="dialog"] {
  background-color: var(--rh-color-surface-lightest, #ffffff);
  max-width: min(90%, 1140px);
  border-radius: var(--rh-border-radius-default, 3px);
  color: var(--rh-color-text-primary-on-light, #151515);
  font-family: inherit;
}

[part="content"] {
  border-radius: var(--rh-border-radius-default, 3px);
}

[part="close-button"] {
  /* NB: hardcoded, no token colour matches this (yet) */
  color: var(--rh-dialog-close-button-color, #6a6e73);
}

[part="close-button"]:is(:hover, :focus-within, :focus-visible) svg:is(svg, :hover) {
  fill: var(--rh-color-black-900, #151515);
}

:host([type="video"]) {
  --rh-dialog-close-button-color: white;
}

:host([type="video"]) [part="close-button"] {
  top: var(--offset-top);
  right: var(--offset-right);
  padding: var(--rh-space-sm, 6px);
  color: var(--rh-dialog-close-button-color, #6a6e73);
}

:host([type="video"]) [part="content"] {
  overflow: hidden;
}

:host([type="video"][open]) [part="overlay"] {
  background-color: #151515;
  opacity: 0.65;
}

:host([type="video"][open]) [part="dialog"] {
  --_aspect-ratio: var(--rh-modal-video-aspect-ratio, 16/9);

  aspect-ratio: var(--_aspect-ratio);
  max-width: min(90%, calc(90vh * var(--_aspect-ratio) + var(--offset-top)));
  padding: 0;
  margin: 0;
}

:host([type="video"]) #rhds-wrapper.mobile [part="close-button"] {
  --offset-right: var(--rh-space-sm, 6px);
}

:host([type="video"]) #container,
:host([type="video"]) [part="content"],
:host([type="video"]) ::slotted(:not([slot])) {
  aspect-ratio: var(--rh-modal-video-aspect-ratio, 16/9);

  /* account for a 1px descrepency between dialog and container aspect ratio */
  width: calc(100% + 1px);
  position: absolute;
  inset: 0;
  max-height: none;
}
`;
var rh_dialog_css_default = styles7;

// elements/rh-dialog/rh-dialog.js
var _RhDialog_screenSize;
var RhDialog = /* @__PURE__ */ __name(class RhDialog2 extends t8 {
  constructor() {
    super(...arguments);
    _RhDialog_screenSize.set(this, new ScreenSizeController(this));
    this.open = false;
  }
  render() {
    const { mobile } = __classPrivateFieldGet(this, _RhDialog_screenSize, "f");
    return y`
      <div id="rhds-wrapper" class=${o9({ mobile })}>
        ${super.render()}
      </div>
    `;
  }
  async _openChanged(oldValue, newValue) {
    super._openChanged(oldValue, newValue);
    if (this.type === "video" && oldValue === true && newValue === false) {
      this.querySelector("video")?.pause?.();
      const iframe = this.querySelector("iframe");
      if (iframe?.src.match(/youtube/)) {
        const { pauseVideo: pauseVideo2 } = await Promise.resolve().then(() => (init_yt_api(), yt_api_exports));
        pauseVideo2(iframe);
      }
    }
  }
}, "RhDialog");
_RhDialog_screenSize = /* @__PURE__ */ new WeakMap();
RhDialog.version = "{{version}}";
RhDialog.styles = [...t8.styles, rh_dialog_css_default];
RhDialog.closeOnOutsideClick = true;
__decorate([
  e5({ reflect: true })
], RhDialog.prototype, "type", void 0);
__decorate([
  p3,
  e5({ reflect: true, type: Boolean })
], RhDialog.prototype, "open", void 0);
RhDialog = __decorate([
  e4("rh-dialog")
], RhDialog);

// elements/rh-footer/RhFooter.js
init_lit();

// node_modules/lit/static-html.js
init_static();

// elements/rh-footer/RhFooter.js
init_random();
init_logger();

// elements/rh-footer/rh-footer.css.js
init_lit();
var styles8 = i`:host {
  /* apply sensible defaults based on redhat standards. */
  color: var(--rh-color-white, #ffffff);
  font-family: var(--rh-font-family-body-text, RedHatText, "Red Hat Text", "Noto Sans Arabic", "Noto Sans Hebrew", "Noto Sans JP", "Noto Sans KR", "Noto Sans Malayalam", "Noto Sans SC", "Noto Sans TC", "Noto Sans Thai", Overpass, Helvetica, Arial, sans-serif) !important;
  line-height: var(--rh-line-height-body-text, 1.5);
  font-weight: var(--_font-weight);
  font-size: initial;
  display: flex;
  flex-direction: column;
}

footer,
.global-base {
  --_icon-color: var(--rh-footer-icon-color, var(--rh-color-black-500, #8a8d90));
  --_icon-color-hover: var(--rh-footer-icon-color-hover, var(--rh-color-black-400, #b8bbbe));
  --_border-color: var(--rh-footer-border-color, var(--rh-color-black-600, #6a6e73));
  --_accent-color: var(--rh-footer-accent-color, var(--rh-color-brand-red-on-light, #ee0000));
  --_section-side-gap: var(--rh-footer-section-side-gap, var(--rh-space-2xl, 32px));
  --_accordion-background: var(--rh-color-white, #ffffff);
  --_logo-width: var(--rh-size-icon-04, 40px);
  --_font-weight: var(--rh-font-weight-body-text-regular, 400);

  /* Style Accordions */
  --pfe-accordion--Color: var(--_accordion-background);
  --pfe-accordion--Color--expanded: var(--_accordion-background);
  --pfe-accordion--Color--active: var(--_accordion-background);
  --pfe-accordion--BackgroundColor: transparent;
  --pfe-accordion--BackgroundColor--active: transparent;
  --pfe-accordion--BackgroundColor--expanded: var(--rh-color-surface-darkest, #151515);
  --pfe-accordion--BorderColor: var(--_border-color);
  --pfe-accordion--FontSize--header: initial;
  --pfe-accordion--FontWeight--header: var(--_font-weight);
  --pfe-accordion--accent--expanded: var(--_accent-color);
  --pfe-accordion--accent--active: var(--_accent-color);
}

pfe-accordion {
  --pfe-context-background-color: transparent;
}

* {
  box-sizing: border-box;
}

::slotted(:is(h1,h2,h3,h4,h5,h6)) {
  font-family: var(--rh-font-family-heading, RedHatDisplay, "Red Hat Display", "Noto Sans Arabic", "Noto Sans Hebrew", "Noto Sans JP", "Noto Sans KR", "Noto Sans Malayalam", "Noto Sans SC", "Noto Sans TC", "Noto Sans Thai", Overpass, Helvetica, Arial, sans-serif) !important;
}

/**
 * Debugging
 */
:host([debug]) *:not(.spacer, .base, a, svg) {
  /* make sure we have some */
  min-height: var(--rh-length-xl, 24px);
  position: relative;
  outline: var(--rh-length-3xs, 2px) dotted red;
}

:host([debug]) *:not(.spacer, .base, a, svg):after {
  content: attr(part);
  display: block;
  position: absolute;
  color: white;
  background-color: darkslategray;
  padding: var(--rh-space-xs, 4px);
  top: 0;
  right: 0;
  font-family: var(--rh-font-family-code, RedHatMono, "Red Hat Mono", "Courier New", Courier, monospace);
  font-size: var(--rh-font-size-code-xs, 0.75rem);
}

/**
 * Regions
 */
.section {
  padding: var(--rh-space-2xl, 32px) var(--_section-side-gap);
}

.header {
  background-color: var(--rh-color-surface-darker, #212427);

  /* children should flex wrap on mobile */
  display: flex;
  flex-wrap: wrap;
  gap: var(--rh-space-2xl, 32px);
  align-items: center;
  position: relative;
}

.header:after {
  display: block;
  content: "";
  background-color: var(--_border-color);
  height: var(--rh-length-4xs, 1px);
  position: absolute;
  bottom: 0;
  width: calc(100% - var(--_section-side-gap) * 2);
  left: var(--_section-side-gap);
}

.header-primary {
  flex: 1 1 auto;
}

.header-secondary {
  /* secondary should be push to the end */

  /* of the line on mobile */
  flex: 0 1 auto;
}

.main {
  background-color: var(--rh-color-surface-darker, #212427);
  display: grid;
  gap: var(--rh-space-2xl, 32px);
}

.main-secondary {
  display: grid;
  gap: var(--pf-global--spacer--xl, 32px);
  place-items: baseline;
  place-content: start;
}

.global-base {
  --rh-footer-link-font-size: var(--rh-font-size-body-text-xs, 0.75rem);

  /* reduce the line-height for global links */
  line-height: 100%;
  background-color: var(--rh-color-surface-darkest, #151515);
  display: grid;
  grid-template-columns: 1fr;
  grid-template-areas:
    "logo"
    "primary"
    "spacer"
    "secondary"
    "tertiary";
  gap: var(--rh-space-2xl, 32px) var(--rh-space-xl, 24px);
}

.global-logo {
  grid-area: logo;
  width: var(--_logo-width);
}

.global-logo-image {
  fill: var(--_icon-color);
}

.global-logo-image:is(:hover, :focus-within) {
  fill: var(--_icon-color-hover);
}

.global-primary {
  grid-area: primary;
}

.global-secondary {
  grid-area: secondary;
  color: var(--rh-color-text-secondary-on-dark, #d2d2d2);
  display: flex;
  flex-direction: column;
  gap: var(--rh-space-lg, 16px);
  justify-content: space-between;
}

.global-tertiary {
  grid-area: tertiary;
  display: grid;
  justify-content: start;
  align-items: start;
}

.global-links-primary {
  display: flex;
  flex-direction: column;
  gap: var(--rh-space-md, 8px) var(--rh-space-xl, 24px);
}

.global-links-secondary {
  display: flex;
  flex-direction: column;
  gap: var(--rh-space-md, 8px) var(--rh-space-xl, 24px);
}

/* reduce the font size of the content in these regions */
:is(.global-primary, .global-secondary, .global-tertiary) ::slotted(*) {
  font-size: var(--rh-font-size-body-text-xs, 0.75rem);
}

.logo {
  /* fix wierd problem where there is extra space below logo */
  line-height: 0px;
}

.social-links {
  display: flex;
  margin-inline-start: 0;
  padding-inline-start: 0;
}

.social-links rh-footer-links,
.social-links slot::slotted(rh-footer-links) {
  display: flex;
  flex-direction: row;
  gap: var(--rh-space-xl, 24px);
}

:is(.links, .global-links-primary, .global-links-secondary) ::slotted(ul) {
  padding: 0;
  margin: 0;
  display: contents;
}

.isMobile .links {
  --rh-footer-link-header-font-size: var(--rh-font-size-body-text-lg, 1.125rem);
}

.isMobile .links ::slotted(ul) {
  --rh-footer-link-font-size: 1em;

  display: grid;
  grid-template-columns: 1fr;
  gap: calc(var(--rh-space-2xl, 32px) / 2);
}

[part="base"]:not(.isMobile) .links {
  display: grid;
  grid-template-columns: repeat(1fr, 25%);
  grid-template-rows: repeat(1, min-content auto);
  grid-auto-columns: minmax(0, 1fr);
  row-gap: var(--rh-space-lg, 16px);
  column-gap: var(--rh-space-2xl, 32px);
  grid-auto-flow: column;
}

[part="base"]:not(.isMobile) .links ::slotted(:is(h2, h3, h4, h5, h6):nth-of-type(1)) {
  grid-column: 1/2;
  grid-row: 1/2;
}

[part="base"]:not(.isMobile) .links ::slotted(:is(h2, h3, h4, h5, h6):nth-of-type(2)) {
  grid-column: 2/3;
  grid-row: 1/2;
}

[part="base"]:not(.isMobile) .links ::slotted(:is(h2, h3, h4, h5, h6):nth-of-type(3)) {
  grid-column: 3/4;
  grid-row: 1/2;
}

[part="base"]:not(.isMobile) .links ::slotted(:is(h2, h3, h4, h5, h6):nth-of-type(4)) {
  grid-column: 4/5;
  grid-row: 1/2;
}

[part="base"]:not(.isMobile) .links ::slotted(:is(h2, h3, h4, h5, h6):nth-of-type(5)) {
  grid-column: 1/2;
  grid-row: 3/4;
}

[part="base"]:not(.isMobile) .links ::slotted(:is(h2, h3, h4, h5, h6):nth-of-type(6)) {
  grid-column: 2/3;
  grid-row: 3/4;
}

[part="base"]:not(.isMobile) .links ::slotted(:is(h2, h3, h4, h5, h6):nth-of-type(7)) {
  grid-column: 3/4;
  grid-row: 3/4;
}

[part="base"]:not(.isMobile) .links ::slotted(:is(h2, h3, h4, h5, h6):nth-of-type(8)) {
  grid-column: 4/5;
  grid-row: 3/4;
}

[part="base"]:not(.isMobile) .links ::slotted(:is(ul:nth-of-type(1))) {
  grid-column: 1/2;
  grid-row: 2/3;
}

[part="base"]:not(.isMobile) .links ::slotted(:is(ul:nth-of-type(2))) {
  grid-column: 2/3;
  grid-row: 2/3;
}

[part="base"]:not(.isMobile) .links ::slotted(:is(ul:nth-of-type(3))) {
  grid-column: 3/4;
  grid-row: 2/3;
}

[part="base"]:not(.isMobile) .links ::slotted(:is(ul:nth-of-type(4))) {
  grid-column: 4/5;
  grid-row: 2/3;
}

[part="base"]:not(.isMobile) .links ::slotted(:is(ul:nth-of-type(5))) {
  grid-column: 1/2;
  grid-row: 4/5;
}

[part="base"]:not(.isMobile) .links ::slotted(:is(ul:nth-of-type(6))) {
  grid-column: 2/3;
  grid-row: 4/5;
}

[part="base"]:not(.isMobile) .links ::slotted(:is(ul:nth-of-type(7))) {
  grid-column: 3/4;
  grid-row: 4/5;
}

[part="base"]:not(.isMobile) .links ::slotted(:is(ul:nth-of-type(8))) {
  grid-column: 4/5;
  grid-row: 4/5;
}

[part="base"]:not(.isMobile) .links ::slotted(ul) {
  gap: var(--rh-footer-links-gap, var(--rh-space-lg, 16px));
  display: flex;
  flex-direction: column;
}

#footer-logo {
  width: var(--_logo-width);
}

:is(.links, .global-links-primary, .global-links-secondary) ::slotted(:is(h1, h2, h3, h4, h5)) {
  font-weight: var(--rh-font-weight-heading-medium, 500) !important;
  margin-block: 0 !important;
  margin-block-start: var(--_link-header-margin, 0) !important;
  font-size:
    var(
      --rh-footer-link-header-font-size,
      var(--rh-font-size-body-text-sm, 0.875rem)
    ) !important;
  color: var(--rh-color-white, #ffffff) !important; 
}
`;
var rh_footer_css_default = styles8;

// elements/rh-footer/rh-footer-responsive.css.js
init_lit();
var responsiveStyles = i`
  @media screen and (min-width: ${tabletPortraitBreakpoint}) {
    .global-base {
      grid-template-columns: 4fr 4fr 4fr;
      grid-template-areas:
        'logo      logo      logo'
        'primary   primary   primary'
        'spacer    spacer    spacer'
        'secondary secondary secondary';
    }
    .global-base:is(.hasTertiary) {
      grid-template-columns: 4fr 4fr 4fr;
      grid-template-areas:
        'logo      logo      logo'
        'primary   primary   primary'
        'spacer    spacer    spacer'
        'secondary secondary tertiary';
    }
  }

  @media screen and (min-width: ${tabletLandscapeBreakpoint}) {
    /* :not(.nothing) is a hack to match CSS specificity with :is(.hasTertiary) */
    .global-base:not(.nothing) {
      grid-template-columns: auto 10fr 2fr;
      grid-template-rows: max-content max-content;
      grid-template-areas:
        'logo primary  tertiary'
        'logo secondary tertiary';
      gap: 24px 32px;
    }

    .global-primary {
      display: flex;
    }

    .main {
      padding-bottom: 64px;
    }
  }

  .spacer {
    grid-area: spacer;
    border-bottom: 1px solid var(--_border-color);
  }

  @media screen and (min-width: ${tabletLandscapeBreakpoint}) {
    .spacer {
      display: none;
    }
  }

  @media screen and (min-width: ${tabletLandscapeBreakpoint}) {
    .global-tertiary {
      display: grid;
      justify-content: flex-end;
      align-items: center;
    }
  }

  @media screen and (min-width: ${mobilePortraitBreakpoint}) {
    .global-links-primary {
      display: grid;
      grid-template-columns: 1fr 1fr;
    }
    .global-links-secondary {
      display: grid;
      grid-template-columns: 1fr 1fr;
    }
  }

  @media screen and (min-width: ${tabletPortraitBreakpoint}) {
    .global-links-primary {
      display: grid;
      grid-template-columns: 1fr 1fr 1fr;
    }

    .global-links-secondary {
      display: grid;
      grid-template-columns: 1fr 1fr 1fr;
    }

    .hasTertiary .global-links-secondary {
      display: grid;
      grid-template-columns: 1fr 1fr;
    }
  }

  @media screen and (min-width: ${tabletLandscapeBreakpoint}) {
    .global-links-primary {
      display: flex;
      flex-flow: row wrap;
      align-items: center;
    }
  }

  @media screen and (min-width: ${tabletLandscapeBreakpoint}) {
    :not(.hasTertiary) .global-links-secondary {
      display: flex;
      flex-direction: row;
      flex-wrap: wrap;
      gap: 8px 24px;
    }
  }

  @media screen and (max-width: ${tabletLandscapeBreakpoint}) {
    .global-logo {
      grid-area: logo;
    }

    .global-primary {
      grid-area: primary;
    }
  }

  @media screen and (max-width: ${tabletLandscapeBreakpoint}) {
    /* Equalize padding on mobile */
    .section {
      --_section-side-gap: var(--rh-footer-section-side-gap, var(--rh-space-2xl, 32px));
    }

    /* hide the header border on mobile */
    .header:after {
      display: none;
    }

    /* force the mobile links menu to go flush against the header */
    .main {
      padding-top: 0;
    }
  }

  @media screen and (min-width: ${tabletLandscapeBreakpoint}) and (max-width: ${desktopLargeBreakpoint}) {
    /* Equalize padding on mobile */
    .section {
      --_section-side-gap: var(--rh-footer-section-side-gap, var(--rh-space-2xl, 32px));
    }

    .header,
    .main {
      /* switch header to use grid instead */
      display: grid;
      grid-template-columns: 8fr 4fr;
    }
  }

  @media screen and (min-width: ${desktopLargeBreakpoint}) {
    .section {
      --_section-side-gap: var(--rh-footer-section-side-gap, var(--rh-space-2xl, 32px));
    }

    .header,
    .main {
      /* switch header to use grid instead */
      display: grid;
      grid-template-columns: 8fr 4fr;
    }
  }

  @media screen and (min-width: ${tabletPortraitBreakpoint}) {
    .isMobile .links ::slotted(ul) {
      grid-template-columns: 1fr 1fr;
    }
  }
`;

// lib/MatchMediaController.js
init_bound();
var MatchMediaController = class {
  constructor(host, mediaQuery = "", options3) {
    this.host = host;
    this.mediaQuery = mediaQuery;
    this.mediaQueryList = null;
    this.host.addController(this);
    this.mediaQueryList = matchMedia(mediaQuery);
    this.onChange = options3?.onChange;
  }
  hostConnected() {
    this.evaluate();
    this.mediaQueryList?.addEventListener("change", this.evaluate);
  }
  hostDisconnected() {
    this.mediaQueryList?.removeEventListener("change", this.evaluate);
  }
  evaluate() {
    this.host.requestUpdate();
    this.onChange?.(this.mediaQueryList ?? matchMedia(this.mediaQuery));
  }
};
__name(MatchMediaController, "MatchMediaController");
__decorate([
  o8
], MatchMediaController.prototype, "evaluate", null);

// elements/rh-footer/rh-footer-social-link.js
init_lit();
init_logger();

// elements/rh-footer/rh-footer-social-link.css.js
init_lit();
var styles9 = i`:host {
  display: block;

  --pfe-icon--color: var(--_icon-color);
  --pfe-icon--size: var(--rh-footer--social-icon--size, var(--rh-size-icon-02, 24px));
}

:host(:is(:hover, :focus-within)) {
  --pfe-icon--color: var(--_icon-color-hover);
}
`;
var rh_footer_social_link_css_default = styles9;

// elements/rh-footer/rh-footer-social-link.js
var RhFooterSocialLink = /* @__PURE__ */ __name(class RhFooterSocialLink2 extends s4 {
  constructor() {
    super();
    this.logger = new n7(this);
    this.icon = null;
    this.setAttribute("role", "listitem");
  }
  render() {
    return y`<slot></slot>`;
  }
  updated() {
    this.updateLightdom();
  }
  updateLightdom() {
    const oldDiv = this.querySelector("a");
    if (oldDiv) {
      const newDiv = oldDiv.cloneNode(true);
      newDiv.querySelectorAll("[_rendered]").forEach((i25) => i25.remove());
      newDiv.innerHTML = `<pfe-icon icon="${this.icon}" set="fab" loading="eager">${newDiv.innerHTML}</pfe-icon>`;
      newDiv.setAttribute("aria-label", newDiv.textContent || "");
      if (!newDiv.getAttribute("aria-label")) {
        this.logger.warn("Must add aria-label to links");
      }
      if (oldDiv.parentNode) {
        oldDiv.parentNode.replaceChild(newDiv, oldDiv);
      }
    }
  }
}, "RhFooterSocialLink");
RhFooterSocialLink.styles = rh_footer_social_link_css_default;
__decorate([
  e5()
], RhFooterSocialLink.prototype, "icon", void 0);
RhFooterSocialLink = __decorate([
  e4("rh-footer-social-link")
], RhFooterSocialLink);

// elements/rh-footer/rh-footer-links.js
init_lit();
init_slot_controller();
init_decorators();
init_logger();
init_random();

// elements/rh-footer/rh-footer-links.css.js
init_lit();
var styles10 = i`:host {
  display: flex;
  flex-direction: column;
  gap: 0.625em;
}

[part] {
  display: contents;
}

::slotted(:is(h1, h2, h3, h4, h5)) {
  font-weight: 500;
  font-size: 0.875em;
  margin-top: 0;
  margin-bottom: 0;
}

:host([header-hidden]) .header ::slotted(*) {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border: 0;
}
`;
var rh_footer_links_css_default = styles10;

// elements/rh-footer/rh-footer-links.js
var RhFooterLinks = /* @__PURE__ */ __name(class RhFooterLinks2 extends s4 {
  constructor() {
    super(...arguments);
    this.headerHidden = false;
    this.logger = new n7(this);
    this.slots = new l13(this, {
      slots: ["header"]
    });
  }
  updateAccessibility() {
    const header = this.querySelector('[slot="header"]');
    const ul = this.querySelector("ul");
    if (header && ul) {
      header.id || (header.id = n11("rh-footer-links"));
      ul.setAttribute("aria-labelledby", header.id);
    } else {
      this.logger.warn("This links set doesn't have a valid header associated with it.");
    }
  }
  render() {
    return y`
      <div part="header" class="header">
        <slot name="header"></slot>
      </div>
      <div part="default" class="default">
        <slot name="panel"></slot>
        <slot></slot>
      </div>
    `;
  }
}, "RhFooterLinks");
RhFooterLinks.styles = rh_footer_links_css_default;
__decorate([
  e5({ type: Boolean, attribute: "header-hidden", reflect: true })
], RhFooterLinks.prototype, "headerHidden", void 0);
__decorate([
  c6()
], RhFooterLinks.prototype, "updateAccessibility", null);
RhFooterLinks = __decorate([
  e4("rh-footer-links")
], RhFooterLinks);

// elements/rh-footer/rh-footer-block.js
init_lit();

// elements/rh-footer/rh-footer-block.css.js
init_lit();
var styles11 = i`:host {
  display: block;
  position: relative;
}

/** Add margin to blocks that aren't first in the sidebar. */

/** Add the separator to blocks in the middle */
:host(:not(:last-of-type, :first-of-type)):after {
  content: "";
  display: block;
  height: 1px;
  width: 100%;
  margin-block-start: var(--rh-space-2xl, 32px);
  background: var(--_border-color);
}

::slotted(*) {
  color: var(--rh-color-text-primary-on-dark, #ffffff);
  font-size: var(--rh-font-size-body-text-sm, 0.875rem);
  text-decoration: none;
  max-width: 650px;
}

::slotted(:is(h1, h2, h3, h4, h5)) {
  font-weight: var(--rh-font-weight-heading-medium, 500) !important;
  font-size: var(--rh-font-size-body-text-sm, 0.875rem) !important;
  margin-block: 0 var(--rh-space-lg, 16px) !important;
  color: var(--rh-color-white, #ffffff) !important; 
}

::slotted(:last-child) {
  margin-block-end: 0 !important;
}

.content ::slotted(*) {
  color: var(--rh-color-text-secondary-on-dark, #d2d2d2);
  font-family: var(--rh-font-family-body-text, RedHatText, "Red Hat Text", "Noto Sans Arabic", "Noto Sans Hebrew", "Noto Sans JP", "Noto Sans KR", "Noto Sans Malayalam", "Noto Sans SC", "Noto Sans TC", "Noto Sans Thai", Overpass, Helvetica, Arial, sans-serif);
  font-weight: var(--rh-font-weight-body-text-regular, 400);
}
`;
var rh_footer_block_css_default = styles11;

// elements/rh-footer/rh-footer-block.js
var RhFooterBlock = /* @__PURE__ */ __name(class RhFooterBlock2 extends s4 {
  render() {
    return y`
      <div class="base" part="base">
        <div class="header" part="header">
          <slot name="header"></slot>
        </div>
        <div class="content" part="content">
          <slot></slot>
        </div>
      </div>
    `;
  }
}, "RhFooterBlock");
RhFooterBlock.styles = rh_footer_block_css_default;
RhFooterBlock = __decorate([
  e4("rh-footer-block")
], RhFooterBlock);

// elements/rh-footer/rh-global-footer.js
init_slot_controller();
init_lit();

// elements/rh-footer/rh-footer-copyright.js
init_lit();

// elements/rh-footer/rh-footer-copyright.css.js
init_lit();
var styles12 = i`:host {
  flex: 1 1 auto;
  display: block;
  width: 100%;
}
`;
var rh_footer_copyright_css_default = styles12;

// elements/rh-footer/rh-footer-copyright.js
var currentYear = new Date().getFullYear();
var RhFooterCopyright = /* @__PURE__ */ __name(class RhFooterCopyright2 extends s4 {
  render() {
    return y`<slot>&copy; ${currentYear} Red Hat, Inc.</slot>`;
  }
}, "RhFooterCopyright");
RhFooterCopyright.styles = rh_footer_copyright_css_default;
RhFooterCopyright = __decorate([
  e4("rh-footer-copyright")
], RhFooterCopyright);

// elements/rh-footer/rh-global-footer.js
var _RhGlobalFooter_slots;
var RhGlobalFooter = /* @__PURE__ */ __name(class RhGlobalFooter2 extends s4 {
  constructor() {
    super(...arguments);
    this.colorPalette = "darker";
    _RhGlobalFooter_slots.set(this, new l13(this, {
      slots: ["primary-start", "primary-end", "secondary-start", "secondary-end", "links-primary", "links-secondary", "tertiary"]
    }));
  }
  render() {
    const hasTertiary = __classPrivateFieldGet(this, _RhGlobalFooter_slots, "f").hasSlotted("tertiary");
    return y`
      <div class="section global-base ${o9({ hasTertiary })}" part="section base">
        <slot name="base">
          <div class="global-logo" part="logo">
            <slot name="logo">
              <a class="global-logo-anchor"
                  part="logo-anchor"
                  href="/en"
                  alt="Visit Red Hat">
                <svg title="Red Hat logo"
                    class="global-logo-image"
                    part="logo-image"
                    data-name="Layer 1"
                    xmlns="http://www.w3.org/2000/svg"
                    viewBox="0 0 192 145">
                  <defs>
                    <style>
                      .band {
                        fill: transparent;
                      }
                    </style>
                  </defs>
                  <path class="band" d="M157.77,62.61a14,14,0,0,1,.31,3.42c0,14.88-18.1,17.46-30.61,17.46C78.83,83.49,42.53,53.26,42.53,44a6.43,6.43,0,0,1,.22-1.94l-3.66,9.06a18.45,18.45,0,0,0-1.51,7.33c0,18.11,41,45.48,87.74,45.48,20.69,0,36.43-7.76,36.43-21.77,0-1.08,0-1.94-1.73-10.13Z" />
                  <path class="cls-1" d="M127.47,83.49c12.51,0,30.61-2.58,30.61-17.46a14,14,0,0,0-.31-3.42l-7.45-32.36c-1.72-7.12-3.23-10.35-15.73-16.6C124.89,8.69,103.76.5,97.51.5,91.69.5,90,8,83.06,8c-6.68,0-11.64-5.6-17.89-5.6-6,0-9.91,4.09-12.93,12.5,0,0-8.41,23.72-9.49,27.16A6.43,6.43,0,0,0,42.53,44c0,9.22,36.3,39.45,84.94,39.45M160,72.07c1.73,8.19,1.73,9.05,1.73,10.13,0,14-15.74,21.77-36.43,21.77C78.54,104,37.58,76.6,37.58,58.49a18.45,18.45,0,0,1,1.51-7.33C22.27,52,.5,55,.5,74.22c0,31.48,74.59,70.28,133.65,70.28,45.28,0,56.7-20.48,56.7-36.65,0-12.72-11-27.16-30.83-35.78" />
                </svg>
              </a>
            </slot>
          </div>
          <div class="global-primary" part="primary">
            <slot name="primary">
              <div class="global-primary-start" part="primary-start" ?hidden=${!__classPrivateFieldGet(this, _RhGlobalFooter_slots, "f").hasSlotted("primary-start")}>
                <slot name="primary-start"></slot>
              </div>
              <div class="global-links-primary" part="links-primary" ?hidden=${!__classPrivateFieldGet(this, _RhGlobalFooter_slots, "f").hasSlotted("links-primary")}>
                <slot name="links-primary"></slot>
              </div>
              <div class="global-primary-end" part="primary-end" ?hidden=${!__classPrivateFieldGet(this, _RhGlobalFooter_slots, "f").hasSlotted("primary-end")}>
                <slot name="primary-end"></slot>
              </div>
            </slot>
          </div>
          <div class="spacer" part="spacer"></div>
          <div class="global-secondary" part="secondary">
            <slot name="secondary">
              <div class="global-secondary-start" part="secondary-start" ?hidden=${!__classPrivateFieldGet(this, _RhGlobalFooter_slots, "f").hasSlotted("secondary-start")}>
                <slot name="secondary-start"></slot>
              </div>
              <div class="global-links-secondary" part="links-secondary" ?hidden=${!__classPrivateFieldGet(this, _RhGlobalFooter_slots, "f").hasSlotted("links-secondary")}>
                <slot name="links-secondary"></slot>
              </div>
              <div class="global-secondary-end" part="secondary-end" ?hidden=${!__classPrivateFieldGet(this, _RhGlobalFooter_slots, "f").hasSlotted("secondary-end")}>
                <slot name="secondary-end"></slot>
              </div>
            </slot>
          </div>
          <div class="global-tertiary" part="tertiary" ?hidden=${!__classPrivateFieldGet(this, _RhGlobalFooter_slots, "f").hasSlotted("tertiary")}>
            <slot name="tertiary"></slot>
          </div>
        </slot>
      </div>
    `;
  }
}, "RhGlobalFooter");
_RhGlobalFooter_slots = /* @__PURE__ */ new WeakMap();
RhGlobalFooter.styles = [rh_footer_css_default, responsiveStyles];
__decorate([
  colorContextProvider(),
  e5({ reflect: true, attribute: "color-palette" })
], RhGlobalFooter.prototype, "colorPalette", void 0);
RhGlobalFooter = __decorate([
  e4("rh-global-footer")
], RhGlobalFooter);

// elements/rh-footer/RhFooter.js
init_pfe_icon();
init_pfe_accordion();
var _RhFooter_instances;
var _RhFooter_matchMedia;
var _RhFooter_logger;
var _RhFooter_renderLinksTemplate;
function isHeader(tagName) {
  return !!tagName.match(/^H[1-6]$/i);
}
__name(isHeader, "isHeader");
var RhFooter = class extends s4 {
  constructor() {
    super(...arguments);
    _RhFooter_instances.add(this);
    _RhFooter_matchMedia.set(this, new MatchMediaController(this, `(min-width: ${tabletLandscapeBreakpoint})`));
    _RhFooter_logger.set(this, new n7(this));
    this.colorPalette = "darker";
  }
  static getImportURL(relativeLocation) {
    const url = new URL(relativeLocation, import.meta.url);
    if (url.protocol === "file:") {
      return new URL(relativeLocation, window.location.href);
    }
    return url;
  }
  connectedCallback() {
    super.connectedCallback();
    this.updateAccessibility();
  }
  render() {
    const isMobile = !__classPrivateFieldGet(this, _RhFooter_matchMedia, "f").mediaQueryList?.matches;
    return y`
      <footer class="base ${o9({ isMobile })}" part="base">
        <slot name="base">
          <div class="section header" part="section header">
            <slot name="header">
              <div class="header-primary" part="header-primary">
                <slot name="header-primary">
                  <div class="logo" part="logo">
                    <slot name="logo">
                      <a href="/en">
                        <img alt="Red Hat" src="https://static.redhat.com/libs/redhat/brand-assets/2/corp/logo--on-dark.svg"/>
                      </a>
                    </slot>
                  </div>
                </slot>
              </div>
              <div class="header-secondary" part="header-secondary">
                <slot name="header-secondary">
                  <div class="social-links">
                    <rh-footer-links class="social-links-item"
                      part="social-links"
                      aria-label="Red Hat social media links">
                      <slot name="social-links"></slot>
                    </rh-footer-links>
                  </div>
                </slot>
              </div>
            </slot>
          </div>
          <div class="section main" part="section main">
            <slot name="main">
              <div class="main-primary" part="main-primary">
                <slot name="main-primary">
                  <div class="links" part="links">
                    ${__classPrivateFieldGet(this, _RhFooter_instances, "m", _RhFooter_renderLinksTemplate).call(this, isMobile)}
                  </div>
                </slot>
              </div>
              <div class="main-secondary" part="main-secondary">
                <slot name="main-secondary"></slot>
              </div>
            </slot>
          </div>
          <slot name="global"></slot>
        </slot>
      </footer>
    `;
  }
  updateAccessibility() {
    const listsSelector = ":is([slot^=links],[slot=footer-links-primary],[slot=footer-links-secondary]):is(ul)";
    for (const list of this.querySelectorAll(listsSelector)) {
      if (!list.hasAttribute("aria-labelledby")) {
        const header = isHeader(list.previousElementSibling?.tagName ?? "") ? list.previousElementSibling : null;
        if (!header) {
          return __classPrivateFieldGet(this, _RhFooter_logger, "f").warn("This links set doesn't have a valid header associated with it.");
        } else {
          header.id || (header.id = n11("rh-footer"));
          list.setAttribute("aria-labelledby", header.id);
        }
      }
    }
  }
};
__name(RhFooter, "RhFooter");
_RhFooter_matchMedia = /* @__PURE__ */ new WeakMap(), _RhFooter_logger = /* @__PURE__ */ new WeakMap(), _RhFooter_instances = /* @__PURE__ */ new WeakSet(), _RhFooter_renderLinksTemplate = /* @__PURE__ */ __name(function _RhFooter_renderLinksTemplate2(isMobile = false) {
  const children = Array.from(this.querySelectorAll(":scope > [slot^=links]"), (ref) => ({
    type: isHeader(ref.tagName) ? "header" : "panel",
    ref
  }));
  children.forEach(({ ref }, i25) => ref.setAttribute("slot", isMobile ? `links-${i25}` : "links"));
  return !(isMobile && children) ? y`
      <slot name="links"></slot>
      ` : y`
      <pfe-accordion on="dark" color-palette="darkest">${children.map((child, index) => n12`
        <pfe-accordion-${o10(child.type)} part="links-accordion-${child.type}">
          <slot name="links-${index}"></slot>
         </pfe-accordion-${o10(child.type)}>`)}
      </pfe-accordion>
    `;
}, "_RhFooter_renderLinksTemplate");
RhFooter.version = "{{version}}";
RhFooter.styles = [rh_footer_css_default, responsiveStyles];
__decorate([
  colorContextProvider(),
  e5({ reflect: true, attribute: "color-palette" })
], RhFooter.prototype, "colorPalette", void 0);

// elements/rh-footer/rh-footer.js
customElements.define("rh-footer", RhFooter);

// elements/rh-pagination/rh-pagination.js
init_lit();

// node_modules/lit/directives/if-defined.js
init_if_defined();

// elements/rh-pagination/rh-pagination.js
init_logger();

// elements/rh-pagination/rh-pagination.css.js
init_lit();
var styles13 = i`:host {
  display: block;
  min-height: 4em;
}

[hidden] {
  display: none !important;
}

#container {
  display: flex;
  gap: calc(var(--rh-space-xs, 4px) / 2);
  flex-wrap: wrap;
}

nav {
  display: contents;
}

svg {
  fill: currentcolor;
}

.stepper {
  display: flex;
  align-items: center;
  justify-content: center;
  height: 50px;
  width: 50px;
  background: var(--rh-color-surface-light, #f0f0f0);
  outline: none;
  color: var(--rh-pagination-stepper-color, var(--rh-color-black-600, #6a6e73));
  box-sizing: border-box;
}

.stepper:focus {
  border: 2px solid var(--rh-color-border-interactive-on-light, #0066cc);
}

.stepper svg {
  height: 14px;
}

:is(#next, #last) svg {
  rotate: 180deg;
}

.stepper[inert] {
  pointer-events: none;
  color: var(--rh-pagination-background-focused, var(--rh-color-black-300, #d2d2d2));
}

/* MOBILE styles */

.mobile .stepper:hover {
  background: var(--rh-color-black-300, #d2d2d2);
}

#numeric {
  margin-block-start: var(--rh-space-2xl, 32px);
  width: 100%;
  display: flex;
  align-items: center;
  flex: 1 1 100%;
  gap: 0.5em;
}

input {
  height: var(--rh-length-2xl, 32px);
  width: var(--rh-length-4xl, 64px);
  font-size: var(--rh-font-size-body-text-md, 1rem);
  background: var(--rh-color-surface-lightest, #ffffff);
  border: 1px solid var(--rh-color-black-300, #d2d2d2);
  border-block-end: 1px solid var(--rh-color-black-600, #6a6e73);
  box-sizing: border-box;
  padding: 2px;
}

input:focus {
  outline: none;
  border: 2px solid var(--rh-pagination-accent-color, var(--rh-color-interactive-blue, #0066cc));
  padding: 1px;
}

input:invalid {
  border-block-end: 1px solid var(--rh-color-border-danger-on-light, #ee0000);
}

:host([on="dark"]) input:invalid {
  border-block-end: 1px solid var(--rh-color-border-danger-on-dark, #ff3333);
}

#numeric a {
  text-decoration: none;
  color: var(--rh-color-interactive-blue-darker, #0066cc);
}

#numeric a:hover {
  color: var(--rh-color-interactive-blue-darkest, #004080);
}

#numeric a:visited {
  color: var(--rh-color-interactive-purple-darker, #6753ac);
}

#numeric a:visited:hover {
  color: var(--rh-color-interactive-purple-darkest, #1f0066);
}

@media (min-width: 700px) {
  #numeric {
    margin-block-start: 0;
    margin-inline-start: var(--rh-space-xl, 24px);
    flex: 1 0 0%;
  }

  #container {
    flex-wrap: nowrap;
  }
}
`;
var rh_pagination_css_default = styles13;

// elements/rh-pagination/rh-pagination.js
var _RhPagination_instances;
var _RhPagination_mo;
var _RhPagination_screen;
var _RhPagination_logger;
var _RhPagination_ol;
var _RhPagination_links;
var _RhPagination_firstLink;
var _RhPagination_lastLink;
var _RhPagination_nextLink;
var _RhPagination_prevLink;
var _RhPagination_currentLink;
var _RhPagination_currentIndex;
var _RhPagination_currentPage_get;
var _RhPagination_update;
var _RhPagination_getOverflow;
var _RhPagination_getCurrentLink;
var _RhPagination_updateLightDOMRefs;
var _RhPagination_checkValidity;
var _RhPagination_go;
var _RhPagination_onKeyup;
var _RhPagination_onChange;
var L1 = y`
  <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 9 14">
    <path d="M.3 6.26 6.24.3C6.63-.1 7.3-.1 7.7.3l.99.99c.4.4.4 1.07 0 1.48L4.49 7l4.2 4.22c.41.4.41 1.07 0 1.48l-.98 1c-.41.4-1.07.4-1.48 0L.31 7.73a1.05 1.05 0 0 1 0-1.48Z"/>
  </svg>`;
var L22 = y`
  <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 17.44 14">
    <path d="M8.7 6.26 14.66.3a1.05 1.05 0 0 1 1.49 0l.98.99c.42.4.42 1.07 0 1.48L12.92 7l4.2 4.22c.42.4.42 1.07 0 1.48l-.98 1c-.41.4-1.08.4-1.48 0L8.7 7.73a1.05 1.05 0 0 1 0-1.48zM.3 7.74l5.96 5.95c.4.41 1.07.41 1.48 0l.99-.99c.4-.4.4-1.07 0-1.48L4.52 7l4.21-4.22c.41-.4.41-1.07 0-1.48l-.99-1a1.05 1.05 0 0 0-1.48 0L.31 6.27a1.05 1.05 0 0 0 0 1.48z"/>
  </svg>`;
var RhPagination = /* @__PURE__ */ __name(class RhPagination2 extends s4 {
  constructor() {
    super(...arguments);
    _RhPagination_instances.add(this);
    this.overflow = null;
    this.label = "Page navigation";
    this.labelFirst = "first page";
    this.labelPrevious = "previous page";
    this.labelNext = "next page";
    this.labelLast = "last page";
    _RhPagination_mo.set(this, new MutationObserver(() => __classPrivateFieldGet(this, _RhPagination_instances, "m", _RhPagination_update).call(this)));
    _RhPagination_screen.set(this, new ScreenSizeController(this));
    _RhPagination_logger.set(this, new n7(this));
    _RhPagination_ol.set(this, this.querySelector("ol"));
    _RhPagination_links.set(this, __classPrivateFieldGet(this, _RhPagination_ol, "f")?.querySelectorAll("li a"));
    _RhPagination_firstLink.set(this, null);
    _RhPagination_lastLink.set(this, null);
    _RhPagination_nextLink.set(this, null);
    _RhPagination_prevLink.set(this, null);
    _RhPagination_currentLink.set(this, __classPrivateFieldGet(this, _RhPagination_instances, "m", _RhPagination_getCurrentLink).call(this));
    _RhPagination_currentIndex.set(this, 0);
  }
  connectedCallback() {
    super.connectedCallback();
    __classPrivateFieldGet(this, _RhPagination_mo, "f").observe(this, { childList: true, subtree: true });
  }
  disconnectedCallback() {
    super.disconnectedCallback();
    __classPrivateFieldGet(this, _RhPagination_mo, "f").disconnect();
  }
  update(changed) {
    __classPrivateFieldGet(this, _RhPagination_instances, "m", _RhPagination_update).call(this);
    super.update(changed);
  }
  render() {
    const { mobile, size } = __classPrivateFieldGet(this, _RhPagination_screen, "f");
    const { label, labelFirst, labelPrevious, labelNext, labelLast } = this;
    const firstHref = __classPrivateFieldGet(this, _RhPagination_currentLink, "f") === __classPrivateFieldGet(this, _RhPagination_firstLink, "f") ? void 0 : __classPrivateFieldGet(this, _RhPagination_firstLink, "f")?.href;
    const prevHref = __classPrivateFieldGet(this, _RhPagination_prevLink, "f")?.href;
    const nextHref = __classPrivateFieldGet(this, _RhPagination_nextLink, "f")?.href;
    const lastHref = __classPrivateFieldGet(this, _RhPagination_currentLink, "f") === __classPrivateFieldGet(this, _RhPagination_lastLink, "f") ? void 0 : __classPrivateFieldGet(this, _RhPagination_lastLink, "f")?.href;
    const currentPage = __classPrivateFieldGet(this, _RhPagination_instances, "a", _RhPagination_currentPage_get).toString();
    return y`
      <div id="container" class=${o9({ mobile, [size]: true })}>
        <a id="first" class="stepper" href=${l10(firstHref)} ?inert=${!firstHref} aria-label=${labelFirst}>${L22}</a>
        <a id="prev" class="stepper" href=${l10(prevHref)} ?inert=${!prevHref} aria-label=${labelPrevious}>${L1}</a>

        <nav ?hidden=${mobile} ?inert=${mobile} aria-label=${label}>
          <slot></slot>
        </nav>

        <a id="next" class="stepper" href=${l10(nextHref)} ?inert=${!nextHref} aria-label=${labelNext}>${L1}</a>
        <a id="last" class="stepper" href=${l10(lastHref)} ?inert=${!lastHref} aria-label=${labelLast}>${L22}</a>

        <div id="numeric">
          <span id="go-to-page">
            <slot name="go-to-page">Go to page</slot>
          </span>
          <input inputmode="numeric"
              required
              min=1 max=${__classPrivateFieldGet(this, _RhPagination_links, "f")?.length ?? 1}
              aria-labelledby="go-to-page"
              @change=${__classPrivateFieldGet(this, _RhPagination_instances, "m", _RhPagination_onChange)}
              @keyup=${__classPrivateFieldGet(this, _RhPagination_instances, "m", _RhPagination_onKeyup)}
              .value=${currentPage}>
          <slot name="out-of">of</slot>
          <a href=${l10(lastHref)}>${__classPrivateFieldGet(this, _RhPagination_links, "f")?.length}</a>
        </div>
      </div>
    `;
  }
  first() {
    return __classPrivateFieldGet(this, _RhPagination_instances, "m", _RhPagination_go).call(this, "first");
  }
  prev() {
    return __classPrivateFieldGet(this, _RhPagination_instances, "m", _RhPagination_go).call(this, "prev");
  }
  next() {
    return __classPrivateFieldGet(this, _RhPagination_instances, "m", _RhPagination_go).call(this, "next");
  }
  last() {
    return __classPrivateFieldGet(this, _RhPagination_instances, "m", _RhPagination_go).call(this, "last");
  }
  go(page) {
    return __classPrivateFieldGet(this, _RhPagination_instances, "m", _RhPagination_go).call(this, page);
  }
}, "RhPagination");
_RhPagination_mo = /* @__PURE__ */ new WeakMap(), _RhPagination_screen = /* @__PURE__ */ new WeakMap(), _RhPagination_logger = /* @__PURE__ */ new WeakMap(), _RhPagination_ol = /* @__PURE__ */ new WeakMap(), _RhPagination_links = /* @__PURE__ */ new WeakMap(), _RhPagination_firstLink = /* @__PURE__ */ new WeakMap(), _RhPagination_lastLink = /* @__PURE__ */ new WeakMap(), _RhPagination_nextLink = /* @__PURE__ */ new WeakMap(), _RhPagination_prevLink = /* @__PURE__ */ new WeakMap(), _RhPagination_currentLink = /* @__PURE__ */ new WeakMap(), _RhPagination_currentIndex = /* @__PURE__ */ new WeakMap(), _RhPagination_instances = /* @__PURE__ */ new WeakSet(), _RhPagination_currentPage_get = /* @__PURE__ */ __name(function _RhPagination_currentPage_get2() {
  return __classPrivateFieldGet(this, _RhPagination_currentIndex, "f") + 1;
}, "_RhPagination_currentPage_get"), _RhPagination_update = /* @__PURE__ */ __name(function _RhPagination_update2() {
  this.querySelector('[aria-current="page"]')?.removeAttribute("aria-current");
  __classPrivateFieldGet(this, _RhPagination_instances, "m", _RhPagination_updateLightDOMRefs).call(this);
  this.overflow = __classPrivateFieldGet(this, _RhPagination_instances, "m", _RhPagination_getOverflow).call(this);
  __classPrivateFieldGet(this, _RhPagination_instances, "m", _RhPagination_checkValidity).call(this);
}, "_RhPagination_update"), _RhPagination_getOverflow = /* @__PURE__ */ __name(function _RhPagination_getOverflow2() {
  const overflowAt = 9;
  const length = __classPrivateFieldGet(this, _RhPagination_links, "f")?.length ?? 0;
  if (length <= overflowAt) {
    return null;
  }
  const current = __classPrivateFieldGet(this, _RhPagination_currentIndex, "f") + 1;
  if (current > overflowAt - 4 && current < length - 4) {
    return "both";
  } else if (current <= overflowAt - 4) {
    return "end";
  } else {
    return "start";
  }
}, "_RhPagination_getOverflow"), _RhPagination_getCurrentLink = /* @__PURE__ */ __name(function _RhPagination_getCurrentLink2() {
  const ariaCurrent = this.querySelector('li a[aria-current="page"]');
  if (ariaCurrent) {
    return ariaCurrent;
  }
  for (const link of __classPrivateFieldGet(this, _RhPagination_links, "f") ?? []) {
    const url = new URL(link.href);
    if (url.pathname === location.pathname && url.search === location.search && url.hash === location.hash) {
      return link;
    }
  }
  __classPrivateFieldGet(this, _RhPagination_logger, "f").warn("could not determine current link");
  return null;
}, "_RhPagination_getCurrentLink"), _RhPagination_updateLightDOMRefs = /* @__PURE__ */ __name(function _RhPagination_updateLightDOMRefs2() {
  __classPrivateFieldSet(this, _RhPagination_ol, this.querySelector("ol"), "f");
  __classPrivateFieldSet(this, _RhPagination_links, this.querySelectorAll("li a"), "f");
  __classPrivateFieldSet(this, _RhPagination_firstLink, this.querySelector("li:first-child a"), "f");
  __classPrivateFieldSet(this, _RhPagination_lastLink, this.querySelector("li:last-child a"), "f");
  __classPrivateFieldSet(this, _RhPagination_currentLink, __classPrivateFieldGet(this, _RhPagination_instances, "m", _RhPagination_getCurrentLink).call(this), "f");
  if (__classPrivateFieldGet(this, _RhPagination_currentLink, "f")) {
    const links = Array.from(__classPrivateFieldGet(this, _RhPagination_links, "f"));
    __classPrivateFieldSet(this, _RhPagination_currentIndex, links.indexOf(__classPrivateFieldGet(this, _RhPagination_currentLink, "f")), "f");
    __classPrivateFieldSet(this, _RhPagination_prevLink, __classPrivateFieldGet(this, _RhPagination_links, "f")[__classPrivateFieldGet(this, _RhPagination_currentIndex, "f") - 1], "f");
    __classPrivateFieldSet(this, _RhPagination_nextLink, __classPrivateFieldGet(this, _RhPagination_links, "f")[__classPrivateFieldGet(this, _RhPagination_currentIndex, "f") + 1], "f");
    for (const link of this.querySelectorAll("[data-page]")) {
      link.removeAttribute("data-page");
    }
    __classPrivateFieldGet(this, _RhPagination_currentLink, "f").closest("li")?.setAttribute("data-page", "current");
    __classPrivateFieldGet(this, _RhPagination_prevLink, "f")?.closest("li")?.setAttribute("data-page", "previous");
    __classPrivateFieldGet(this, _RhPagination_nextLink, "f")?.closest("li")?.setAttribute("data-page", "next");
    if (__classPrivateFieldGet(this, _RhPagination_currentLink, "f")?.getAttribute("aria-current") !== "page") {
      __classPrivateFieldGet(this, _RhPagination_currentLink, "f")?.setAttribute("aria-current", "page");
    }
  }
}, "_RhPagination_updateLightDOMRefs"), _RhPagination_checkValidity = /* @__PURE__ */ __name(function _RhPagination_checkValidity2() {
  let message = "";
  if (!__classPrivateFieldGet(this, _RhPagination_ol, "f") || this.children.length > 1) {
    message = "must have a single <ol> element as it's only child";
  }
  if (this.input && __classPrivateFieldGet(this, _RhPagination_links, "f")) {
    if (Number.isNaN(__classPrivateFieldGet(this, _RhPagination_instances, "a", _RhPagination_currentPage_get))) {
      message = `${__classPrivateFieldGet(this, _RhPagination_instances, "a", _RhPagination_currentPage_get)} is not a valid page number`;
    } else if (__classPrivateFieldGet(this, _RhPagination_instances, "a", _RhPagination_currentPage_get) > __classPrivateFieldGet(this, _RhPagination_links, "f").length || __classPrivateFieldGet(this, _RhPagination_instances, "a", _RhPagination_currentPage_get) < 1) {
      message = `cannot navigate to page ${__classPrivateFieldGet(this, _RhPagination_instances, "a", _RhPagination_currentPage_get)}`;
    }
    this.input.setCustomValidity(message);
  }
  if (message) {
    __classPrivateFieldGet(this, _RhPagination_logger, "f").warn(this.input?.validationMessage || "could not navigate");
  }
  this.input?.reportValidity();
  return !message;
}, "_RhPagination_checkValidity"), _RhPagination_go = /* @__PURE__ */ __name(async function _RhPagination_go2(id) {
  await this.updateComplete;
  if (typeof id === "number") {
    const link = __classPrivateFieldGet(this, _RhPagination_links, "f")?.[id - 1];
    link?.click?.();
  } else {
    this.shadowRoot?.getElementById(id)?.click();
  }
  this.requestUpdate();
  await this.updateComplete;
  return __classPrivateFieldGet(this, _RhPagination_currentIndex, "f");
}, "_RhPagination_go"), _RhPagination_onKeyup = /* @__PURE__ */ __name(function _RhPagination_onKeyup2(event) {
  if (!(event.target instanceof HTMLInputElement) || !__classPrivateFieldGet(this, _RhPagination_links, "f")) {
    return;
  }
  const max2 = __classPrivateFieldGet(this, _RhPagination_links, "f").length.toString();
  const input = event.target;
  if (parseInt(input.value) > parseInt(max2)) {
    input.value = max2;
  }
}, "_RhPagination_onKeyup"), _RhPagination_onChange = /* @__PURE__ */ __name(function _RhPagination_onChange2() {
  if (!this.input || !__classPrivateFieldGet(this, _RhPagination_links, "f")) {
    return;
  }
  const inputNum = parseInt(this.input.value);
  __classPrivateFieldSet(this, _RhPagination_currentIndex, inputNum - 1, "f");
  if (__classPrivateFieldGet(this, _RhPagination_instances, "m", _RhPagination_checkValidity).call(this)) {
    __classPrivateFieldGet(this, _RhPagination_instances, "m", _RhPagination_go).call(this, __classPrivateFieldGet(this, _RhPagination_instances, "a", _RhPagination_currentPage_get));
  }
}, "_RhPagination_onChange");
RhPagination.version = "{{version}}";
RhPagination.styles = [rh_pagination_css_default];
__decorate([
  e5({ reflect: true })
], RhPagination.prototype, "overflow", void 0);
__decorate([
  e5()
], RhPagination.prototype, "label", void 0);
__decorate([
  e5({ attribute: "label-first" })
], RhPagination.prototype, "labelFirst", void 0);
__decorate([
  e5({ attribute: "label-previous" })
], RhPagination.prototype, "labelPrevious", void 0);
__decorate([
  e5({ attribute: "label-next" })
], RhPagination.prototype, "labelNext", void 0);
__decorate([
  e5({ attribute: "label-last" })
], RhPagination.prototype, "labelLast", void 0);
__decorate([
  i4("input")
], RhPagination.prototype, "input", void 0);
RhPagination = __decorate([
  e4("rh-pagination")
], RhPagination);

// elements/rh-secondary-nav/rh-secondary-nav.js
init_lit();
init_decorators();
init_logger();

// elements/rh-secondary-nav/rh-secondary-nav-menu-section.js
init_lit();
init_random();
init_logger();

// lib/functions.js
function isHeadingElement(node) {
  return node instanceof HTMLHeadingElement;
}
__name(isHeadingElement, "isHeadingElement");

// elements/rh-secondary-nav/rh-secondary-nav-menu-section.css.js
init_lit();
var styles14 = i`:host {
  display: block;
}

::slotted([slot="header"]) {
  padding: 0;
}

::slotted(:is(h1,h2,h3,h4,h5,h6)) {
  font-family: var(--rh-font-family-heading, RedHatDisplay, "Red Hat Display", "Noto Sans Arabic", "Noto Sans Hebrew", "Noto Sans JP", "Noto Sans KR", "Noto Sans Malayalam", "Noto Sans SC", "Noto Sans TC", "Noto Sans Thai", Overpass, Helvetica, Arial, sans-serif) !important;
}

::slotted([slot="links"]:is(ul, ol)) {
  list-style: none;
  margin: 0;
  padding: 0;
  display: flex;
  flex-direction: column;
  gap: var(--rh-font-size-body-text-md, 1rem);
}

::slotted([slot="cta"]) {
  padding: var(--rh-space-xl, 24px) 0 0;
}

::slotted([slot="cta"]:last-of-type) {
  padding: var(--rh-space-xl, 24px) 0;
}

@media screen and (min-width: 992px) {
  ::slotted([slot="header"]) {
    padding: 0;
  }

  ::slotted([slot="links"]) {
    padding: 0;
    margin: 0;
  }
}
`;
var rh_secondary_nav_menu_section_css_default = styles14;

// elements/rh-secondary-nav/rh-secondary-nav-menu-section.js
var _RhSecondaryNavMenuSection_instances;
var _RhSecondaryNavMenuSection_logger;
var _RhSecondaryNavMenuSection_updateAccessibility;
var RhSecondaryNavMenuSection = /* @__PURE__ */ __name(class RhSecondaryNavMenuSection2 extends s4 {
  constructor() {
    super(...arguments);
    _RhSecondaryNavMenuSection_instances.add(this);
    _RhSecondaryNavMenuSection_logger.set(this, new n7(this));
  }
  connectedCallback() {
    super.connectedCallback();
    __classPrivateFieldGet(this, _RhSecondaryNavMenuSection_instances, "m", _RhSecondaryNavMenuSection_updateAccessibility).call(this);
  }
  render() {
    return y`
      <section part="container">
        <slot name="header"></slot>
        <slot name="links"></slot>
        <slot name="cta"></slot>
      </section>
    `;
  }
}, "RhSecondaryNavMenuSection");
_RhSecondaryNavMenuSection_logger = /* @__PURE__ */ new WeakMap(), _RhSecondaryNavMenuSection_instances = /* @__PURE__ */ new WeakSet(), _RhSecondaryNavMenuSection_updateAccessibility = /* @__PURE__ */ __name(function _RhSecondaryNavMenuSection_updateAccessibility2() {
  const lists = this.querySelectorAll(':is([slot="links"]):is(ul, ol)');
  for (const list of lists) {
    if (!list.hasAttribute("aria-labelledby")) {
      const header = isHeadingElement(list.previousElementSibling) ? list.previousElementSibling : null;
      if (!header) {
        return __classPrivateFieldGet(this, _RhSecondaryNavMenuSection_logger, "f").warn("This links set doesn't have a valid header associated with it.");
      } else {
        header.id || (header.id = n11("rh-secondary-nav-menu-section"));
        list.setAttribute("aria-labelledby", header.id);
      }
    }
  }
}, "_RhSecondaryNavMenuSection_updateAccessibility");
RhSecondaryNavMenuSection.styles = [rh_secondary_nav_menu_section_css_default];
RhSecondaryNavMenuSection = __decorate([
  e4("rh-secondary-nav-menu-section")
], RhSecondaryNavMenuSection);

// elements/rh-secondary-nav/rh-secondary-nav-overlay.js
init_lit();
init_core();
init_decorators();

// elements/rh-secondary-nav/rh-secondary-nav-overlay.css.js
init_lit();
var styles15 = i`:host {
  position: fixed;
  background: rgb(21, 21, 21, 0.75);
  top: 0;
  width: 100vw;
  height: 100vh;
  z-index: var(--rh-secondary-nav-overlay-z-index, -1);
}

:host([open]) {
  display: block;
}

:host(:not([open])) {
  display: none;
}
`;
var rh_secondary_nav_overlay_css_default = styles15;

// elements/rh-secondary-nav/rh-secondary-nav-overlay.js
var SecondaryNavOverlayChangeEvent = class extends n6 {
  constructor(open, toggle) {
    super("overlay-change");
    this.open = open;
    this.toggle = toggle;
  }
};
__name(SecondaryNavOverlayChangeEvent, "SecondaryNavOverlayChangeEvent");
var RhSecondaryNavOverlay = /* @__PURE__ */ __name(class RhSecondaryNavOverlay2 extends s4 {
  constructor() {
    super(...arguments);
    this.open = false;
  }
  render() {
    return y``;
  }
  _openChanged(_oldValue, newValue) {
    this.toggleAttribute("open", newValue);
  }
}, "RhSecondaryNavOverlay");
RhSecondaryNavOverlay.styles = [rh_secondary_nav_overlay_css_default];
__decorate([
  p3,
  t3()
], RhSecondaryNavOverlay.prototype, "open", void 0);
RhSecondaryNavOverlay = __decorate([
  e4("rh-secondary-nav-overlay")
], RhSecondaryNavOverlay);

// elements/rh-secondary-nav/rh-secondary-nav-dropdown.js
init_lit();
init_core();
init_logger();
init_decorators();
init_slot_controller();
init_random();

// elements/rh-secondary-nav/rh-secondary-nav-menu.js
init_lit();
init_decorators();
init_random();

// elements/rh-secondary-nav/rh-secondary-nav-menu.css.js
init_lit();
var styles16 = i`:host {
  display: block;
}

#container {
  position: relative;
}

#container:not(:is(.visible)) {
  display: none;
}

#container.visible {
  background-color: var(--rh-color-surface-lightest, #ffffff);
}

#sections {
  padding: var(--rh-space-xl, 24px);
}

:host(:not([type="fixed-width"])) #sections {
  display: grid;
  grid-template-columns:
    var(
      --rh-secondary-nav-menu-section-grid,
      repeat(auto-fit, minmax(15.5rem, 1fr))
    );
  grid-template-rows: auto;
  gap: var(--rh-secondary-nav-menu-section-grid-gap, var(--rh-space-2xl, 32px));
}

::slotted(:is(ul, ol)) {
  list-style: none;
  margin: 0;
  padding: 0;
  display: flex;
  flex-direction: column;
  gap: var(--rh-font-size-body-text-md, 1rem);
}

@media screen and (min-width: 992px) {
  #container.visible {
    position: absolute;
    left: 0;
    right: 0;
    padding: 
      var(--rh-space-4xl, 64px)
      var(--rh-space-2xl, 32px)
      var(--rh-space-3xl, 48px);
    box-shadow: var(--rh-box-shadow-sm, 0 2px 4px 0 rgba(21, 21, 21, 0.2));
    z-index: -1;
    max-height: calc(100vh - (var(--rh-space-4xl, 64px)) - var(--_nav-min-height));
    overflow-y: scroll;
  }

  :host([layout="fixed-width"]) #container {
    position: absolute;
    top: var(--_nav-height);
    left: auto;
    right: auto;
    bottom: auto;
    margin-top: 0;
    padding: 0;
  }

  #sections {
    padding: 0;
    max-width: var(--rh-secondary-nav-menu-content-max-width, 1136px);
    margin: auto;
  }

  :host([layout="fixed-width"]) #sections {
    padding: var(--rh-space-2xl, 32px);
  }
}

@media screen and (min-width: 1200px) {
  #container.visible {
    padding: var(--rh-space-3xl, 48px) var(--rh-space-2xl, 32px);
  }
}

@media screen and (min-width: 1440px) {
  #container.visible {
    padding: var(--rh-space-3xl, 48px) var(--rh-space-4xl, 64px);
  }
}

@media screen and (min-width: 1600px) {
  #full-width {
    margin: auto;
  }
}
`;
var rh_secondary_nav_menu_css_default = styles16;

// elements/rh-secondary-nav/rh-secondary-nav-menu.js
var _RhSecondaryNavMenu_screenSize;
var RhSecondaryNavMenu = /* @__PURE__ */ __name(class RhSecondaryNavMenu2 extends s4 {
  constructor() {
    super(...arguments);
    this.layout = "full-width";
    _RhSecondaryNavMenu_screenSize.set(this, new ScreenSizeController(this));
    this._compact = false;
    this.screenSize = new ScreenSizeController(this, "tabletLandscape", {
      onChange: (matches) => {
        this._compact = !matches;
      }
    });
    this.visible = false;
  }
  connectedCallback() {
    super.connectedCallback();
    this.id || (this.id = n11("rh-secondary-nav-menu"));
  }
  render() {
    const classes = { "compact": this._compact, "visible": this.visible };
    return y`
      <div id="container" class="${o9(classes)}">${this.layout === "full-width" ? y`
        <div id="full-width" part="full-width">
          <div id="sections" part="sections">
            <slot></slot>
          </div>
        </div>` : y`
        <div id="fixed-width" part="fixed-width">
          <div id="sections" part="sections">
            <slot></slot>
          </div>
        </div>`}
      </div>
    `;
  }
}, "RhSecondaryNavMenu");
_RhSecondaryNavMenu_screenSize = /* @__PURE__ */ new WeakMap();
RhSecondaryNavMenu.styles = [rh_secondary_nav_menu_css_default];
__decorate([
  e5({ reflect: true })
], RhSecondaryNavMenu.prototype, "layout", void 0);
__decorate([
  i4("#container")
], RhSecondaryNavMenu.prototype, "_container", void 0);
__decorate([
  p3,
  t3()
], RhSecondaryNavMenu.prototype, "_compact", void 0);
__decorate([
  t3()
], RhSecondaryNavMenu.prototype, "visible", void 0);
RhSecondaryNavMenu = __decorate([
  e4("rh-secondary-nav-menu")
], RhSecondaryNavMenu);

// elements/rh-secondary-nav/rh-secondary-nav-dropdown.css.js
init_lit();
var styles17 = i`:host {
  display: block;
}

#container {
  border-inline-start: 3px solid transparent;
  border-inline-end: 1px solid transparent;
  display: block;
  height: 100%;
}

/*
 * Move expanded back to an attribute if we decide
 * that we are going to abstract this component
 */
#container.expanded {
  border-inline-start-color: var(--rh-color-text-brand-on-light, #ee0000);
  border-inline-end-color: var(--rh-color-border-subtle-on-light, #d2d2d2);
  box-shadow: var(--rh-box-shadow-sm, 0 2px 4px 0 rgba(21, 21, 21, 0.2));
}

::slotted([slot="link"]) {
  justify-content: space-between;
  position: relative;
  gap: calc(var(--rh-font-size-body-text-md, 1rem) / 2);
}

::slotted([slot="link"]):after {
  box-sizing: content-box !important;
  content: "";
  display: block;
  width: var(--_chevron-size);
  height: var(--_chevron-size);
  border-inline-end: var(--_chevron-thickness) solid var(--_chevron-color);
  border-block-end: var(--_chevron-thickness) solid var(--_chevron-color);
  transform: var(--_chevron-transform-collapsed);
}

#container.expanded ::slotted([slot="link"]):after {
  transform: var(--_chevron-transform-expanded);
}

@media screen and (min-width: 992px) {
  #container {
    border-inline-start: none;
    border-inline-end: none;
  }

  /*
 * Move expanded back to an attribute if we decide
 * that we are going to abstract this component
 */
  #container.expanded {
    box-shadow: none;
  }

  ::slotted([slot="link"][aria-expanded="true"]) {
    background: var(--rh-color-surface-lightest, #ffffff) !important;
    border-block-start-color: var(--rh-color-text-brand-on-light, #ee0000);
    color: var(--rh-color-text-primary-on-light, #151515);

    --_chevron-color: var(--rh-color-text-primary-on-light, #151515);
  }
}
`;
var rh_secondary_nav_dropdown_css_default = styles17;

// elements/rh-secondary-nav/rh-secondary-nav-dropdown.js
var _RhSecondaryNavDropdown_instances;
var _RhSecondaryNavDropdown_slots;
var _RhSecondaryNavDropdown_logger;
var _RhSecondaryNavDropdown_open;
var _RhSecondaryNavDropdown_close;
var SecondaryNavDropdownExpandEvent = class extends n6 {
  constructor(expanded, toggle) {
    super("expand-request");
    this.expanded = expanded;
    this.toggle = toggle;
  }
};
__name(SecondaryNavDropdownExpandEvent, "SecondaryNavDropdownExpandEvent");
var RhSecondaryNavDropdown = /* @__PURE__ */ __name(class RhSecondaryNavDropdown2 extends s4 {
  constructor() {
    super(...arguments);
    _RhSecondaryNavDropdown_instances.add(this);
    _RhSecondaryNavDropdown_slots.set(this, new l13(this, { slots: ["link", "menu"] }));
    _RhSecondaryNavDropdown_logger.set(this, new n7(this));
    this.expanded = false;
    this.colorPalette = "lighter";
  }
  connectedCallback() {
    super.connectedCallback();
    this.id || (this.id = n11("rh-secondary-nav-dropdown"));
    const [link] = __classPrivateFieldGet(this, _RhSecondaryNavDropdown_slots, "f").getSlotted("link");
    const [menu] = __classPrivateFieldGet(this, _RhSecondaryNavDropdown_slots, "f").getSlotted("menu");
    if (link === void 0) {
      __classPrivateFieldGet(this, _RhSecondaryNavDropdown_logger, "f").warn('[rh-secondary-nav-dropdown][slot="link"] expects a slotted <a> tag');
      return;
    }
    if (menu === void 0) {
      __classPrivateFieldGet(this, _RhSecondaryNavDropdown_logger, "f").warn('[rh-secondary-nav-dropdown][slot="menu"] expects a slotted <rh-secondary-nav-menu> tag');
      return;
    }
    link.setAttribute("role", "button");
    link.setAttribute("aria-expanded", "false");
    link.setAttribute("aria-controls", menu.id);
    link.addEventListener("click", this._clickHandler);
  }
  render() {
    const classes = { "expanded": this.expanded };
    return y`
      <div id="container" part="container" class="${o9(classes)}">
        <slot name="link"></slot>
        <slot name="menu"></slot>
      </div>
    `;
  }
  _expandedChanged(oldVal, newVal) {
    if (newVal === oldVal) {
      return;
    }
    newVal ? __classPrivateFieldGet(this, _RhSecondaryNavDropdown_instances, "m", _RhSecondaryNavDropdown_open).call(this) : __classPrivateFieldGet(this, _RhSecondaryNavDropdown_instances, "m", _RhSecondaryNavDropdown_close).call(this);
  }
  _clickHandler(event) {
    event.preventDefault();
    this.expanded = !this.expanded;
    this.dispatchEvent(new SecondaryNavDropdownExpandEvent(this.expanded, this));
  }
}, "RhSecondaryNavDropdown");
_RhSecondaryNavDropdown_slots = /* @__PURE__ */ new WeakMap(), _RhSecondaryNavDropdown_logger = /* @__PURE__ */ new WeakMap(), _RhSecondaryNavDropdown_instances = /* @__PURE__ */ new WeakSet(), _RhSecondaryNavDropdown_open = /* @__PURE__ */ __name(function _RhSecondaryNavDropdown_open2() {
  const link = __classPrivateFieldGet(this, _RhSecondaryNavDropdown_slots, "f").getSlotted("link").find((child) => child instanceof HTMLAnchorElement);
  link?.setAttribute("aria-expanded", "true");
  const menu = __classPrivateFieldGet(this, _RhSecondaryNavDropdown_slots, "f").getSlotted("menu").find((child) => child instanceof RhSecondaryNavMenu);
  menu.visible = true;
}, "_RhSecondaryNavDropdown_open"), _RhSecondaryNavDropdown_close = /* @__PURE__ */ __name(function _RhSecondaryNavDropdown_close2() {
  const link = __classPrivateFieldGet(this, _RhSecondaryNavDropdown_slots, "f").getSlotted("link").find((child) => child instanceof HTMLAnchorElement);
  link?.setAttribute("aria-expanded", "false");
  const menu = __classPrivateFieldGet(this, _RhSecondaryNavDropdown_slots, "f").getSlotted("menu").find((child) => child instanceof RhSecondaryNavMenu);
  menu.visible = false;
}, "_RhSecondaryNavDropdown_close");
RhSecondaryNavDropdown.styles = [rh_secondary_nav_dropdown_css_default];
__decorate([
  i4("#container")
], RhSecondaryNavDropdown.prototype, "_container", void 0);
__decorate([
  p3,
  t3()
], RhSecondaryNavDropdown.prototype, "expanded", void 0);
__decorate([
  colorContextProvider(),
  e5({ reflect: true, attribute: "color-palette" })
], RhSecondaryNavDropdown.prototype, "colorPalette", void 0);
__decorate([
  o8
], RhSecondaryNavDropdown.prototype, "_clickHandler", null);
RhSecondaryNavDropdown = __decorate([
  e4("rh-secondary-nav-dropdown")
], RhSecondaryNavDropdown);

// elements/rh-secondary-nav/rh-secondary-nav.css.js
init_lit();
var styles18 = i`:host {
  --_chevron-size: calc(var(--rh-font-size-body-text-md, 1rem) * 0.35);
  --_chevron-thickness: calc(var(--rh-font-size-body-text-md, 1rem) * 0.125);
  --_chevron-up: 45deg;
  --_chevron-down: -135deg;
  --_chevron-correction-x: calc(-1 * var(--rh-font-size-body-text-md, 1rem) / 16);
  --_chevron-correction-y: calc(-1 * var(--rh-font-size-body-text-md, 1rem) / 16);
  --_chevron-color: var(--rh-color-text-primary-on-light, #151515);
  --_chevron-transform-collapsed: 
      rotate(var(--_chevron-up)) 
      translate(var(--_chevron-correction-x), var(--_chevron-correction-x));
  --_chevron-transform-expanded: 
      rotate(var(--_chevron-down))
      translate(var(--_chevron-correction-y), var(--_chevron-correction-y));
  --_button-font-color: var(--rh-color-text-primary-on-light, #151515);
  --_nav-max-height: var(--_max-height, max-content);
  --_nav-min-height: var(--_min-height, 74px);

  z-index: var(--rh-secondary-nav-z-index, 102);
}

:host([color-palette="darker"]) {
  --_button-font-color: var(--rh-color-text-primary-on-dark, #ffffff);
  --_chevron-color: var(--rh-color-text-primary-on-dark, #ffffff);
}

nav {
  position: absolute;
  height: 100%;
  width: 100%;
  min-height: var(--_min-height);
  z-index: var(--rh-secondary-nav-z-index, 102);
}

:host([color-palette="darker"])nav.compact {
  border-block-end: 1px solid var(--rh-color-border-subtle-on-dark, #6a6e73);
}

nav.rtl {
  --_chevron-transform-collapsed: 
      rotate(calc(-1 * var(--_chevron-up))) 
      translate(calc(1 * var(--_chevron-correction-y)), var(--_chevron-correction-y));
  --_chevron-transform-expanded: 
      rotate(calc(-1 * var(--_chevron-down))) 
      translate(calc(1 * var(--_chevron-correction-x)), var(--_chevron-correction-x));
}

#container {
  display: grid;
  position: relative;
  z-index: var(--rh-secondary-nav-z-index, 102);
  background-color: var(--rh-color-surface-light, #f0f0f0);
  gap: 0 var(--rh-space-lg, 16px);
  grid-template-rows: minmax(var(--_nav-min-height), var(--_nav-max-height)) max-content max-content;
  grid-template-columns: 1fr max-content;
  grid-template-areas:
    "logo menu"
    "nav nav"
    "cta cta";
  height: fit-content;
  min-height: var(--_min-height);
  max-height: 100vh;
  overflow-y: auto;
}

#cta {
  grid-area: cta;
}

#container.expanded {
  --_chevron-color: var(--rh-color-text-primary-on-light, #151515);
}

:host([color-palette="darker"]) #container {
  background-color: var(--rh-color-surface-dark, #3c3f42);
}

#container.expanded ::slotted([slot="nav"]),
#container.expanded ::slotted([slot="cta"]) {
  display: flex !important;
}

#container.expanded ::slotted([slot="nav"]) {
  list-style: none;
  flex-direction: column;
  padding: 2rem 1rem 0;
  padding: 
    var(--rh-space-2xl, 32px)
    var(--rh-space-lg, 16px)
    0
    var(--rh-space-lg, 16px);
  margin: 0 !important;
}

nav.compact #container.expanded ::slotted([slot="nav"]) {
  background-color: var(--rh-color-surface-lightest, #ffffff);
}

#container.expanded ::slotted([slot="cta"]) {
  padding: 2rem 1rem;
}

nav.compact #container.expanded #cta {
  background-color: var(--rh-color-surface-lightest, #ffffff);
}

button {
  grid-area: menu;
  border: none;
  display: flex;
  height: 100%;
  align-items: center;
  font-family: var(--rh-font-family-body-text, RedHatText, "Red Hat Text", "Noto Sans Arabic", "Noto Sans Hebrew", "Noto Sans JP", "Noto Sans KR", "Noto Sans Malayalam", "Noto Sans SC", "Noto Sans TC", "Noto Sans Thai", Overpass, Helvetica, Arial, sans-serif);
  font-size: var(--rh-font-size-body-text-md, 1rem);
  padding: var(--rh-space-lg, 16px);
  border-block-start: var(--rh-border-width-lg, 3px) solid transparent;
  margin-inline-end: var(--rh-space-lg, 16px);
  color: var(--_button-font-color);
  background-color: var(--rh-color-surface-light, #f0f0f0);
  gap: var(--rh-space-md, 8px);
}

button:hover {
  border-block-start-color: var(--rh-color-text-brand-on-light, #ee0000);
}

button:after {
  box-sizing: content-box !important;
  content: "";
  display: block;
  width: var(--_chevron-size);
  height: var(--_chevron-size);
  border-inline-end: var(--_chevron-thickness) solid var(--_chevron-color);
  border-block-end: var(--_chevron-thickness) solid var(--_chevron-color);
  transform: var(--_chevron-transform-collapsed);
}

button[aria-expanded="true"]:after {
  transform: var(--_chevron-transform-expanded);
}

button:focus {
  border-block-start-color: var(--rh-color-text-brand-on-light, #ee0000);
}

:host([color-palette="darker"]) button {
  background-color: var(--rh-color-surface-dark, #3c3f42);
}

button:active,
button[aria-expanded="true"],
:host([color-palette="darker"]) button[aria-expanded="true"] {
  color: var(--rh-color-text-primary-on-light, #151515);
  background-color: var(--rh-color-surface-lightest, #ffffff);
  border-block-start-color: var(--rh-color-text-brand-on-light, #ee0000);
  border-block-end: none;
}

:host([color-palette="darker"]) button:active {
  color: var(--rh-color-text-primary-on-dark, #ffffff);
}

:host([color-palette="darker"]) button[aria-expanded="true"]:active {
  color: var(--rh-color-text-primary-on-light, #151515);
}

@media screen and (min-width: 768px) {
  button {
    margin-inline-end: var(--rh-space-2xl, 32px);
  }

  #container.expanded ::slotted([slot="nav"]) {
    padding: 
      var(--rh-space-2xl, 32px) 
      var(--rh-space-2xl, 32px)
      0 !important;
  }

  #container.expanded ::slotted([slot="cta"]) {
    padding: var(--rh-space-2xl, 32px) !important;
  }
}

@media screen and (min-width: 992px) {
  nav {
    position: relative;
  }

  #container {
    grid-template-areas: "logo nav cta";
    grid-template-rows: auto;
    grid-template-columns: max-content 1fr max-content;
    height: 100%;
    max-height: initial;
    overflow-y: initial;
  }

  #container.expanded ::slotted([slot="nav"]) {
    max-height: calc(100vh - var(--_nav-min-height));
  }

  button {
    display: none;
  }
}
`;
var rh_secondary_nav_css_default = styles18;

// elements/rh-secondary-nav/rh-secondary-nav.js
var _RhSecondaryNav_instances;
var _RhSecondaryNav_logger;
var _RhSecondaryNav_logoCopy;
var _RhSecondaryNav_dir;
var _RhSecondaryNav_getOpenDropdowns;
var _RhSecondaryNav_getDropdownIndex;
var _RhSecondaryNav_dropdownByIndex;
var _RhSecondaryNav_expand;
var _RhSecondaryNav_allDropdowns;
var _RhSecondaryNav_closeDropdown;
var _RhSecondaryNav_openDropdown;
var _RhSecondaryNav_updateAccessibility;
var _RhSecondaryNav_toggleMobileMenu;
var _RhSecondaryNav_setNavOrder;
var RhSecondaryNav_1;
var RhSecondaryNav = RhSecondaryNav_1 = /* @__PURE__ */ __name(class RhSecondaryNav2 extends s4 {
  constructor() {
    super(...arguments);
    _RhSecondaryNav_instances.add(this);
    _RhSecondaryNav_logger.set(this, new n7(this));
    _RhSecondaryNav_logoCopy.set(this, null);
    _RhSecondaryNav_dir.set(this, new DirController(this));
    this._compact = false;
    this.screenSize = new ScreenSizeController(this, "tabletLandscape", {
      onChange: (matches) => {
        this._compact = !matches;
      }
    });
    this._mobileMenuExpanded = false;
    this.mainNav = false;
    this.colorPalette = "lighter";
    this._ctaColorPalette = this.colorPalette;
  }
  static isDropdown(element) {
    return element instanceof RhSecondaryNavDropdown;
  }
  async connectedCallback() {
    super.connectedCallback();
    this.addEventListener("expand-request", this._dropdownChangeHandler);
    this.addEventListener("overlay-change", this._toggleNavOverlay);
    this.addEventListener("focusout", this._focusOutHandler);
    this.addEventListener("keydown", this._keyboardControls);
    __classPrivateFieldGet(this, _RhSecondaryNav_instances, "m", _RhSecondaryNav_updateAccessibility).call(this);
  }
  firstUpdated() {
    this._overlay.addEventListener("click", this._overlayClickHandler);
    if (this.colorPalette === "darker" && this._compact) {
      this._ctaColorPalette = "lightest";
    }
  }
  render() {
    const navClasses = { compact: this._compact, rtl: __classPrivateFieldGet(this, _RhSecondaryNav_dir, "f").dir === "rtl" };
    const containerClasses = { "expanded": this._mobileMenuExpanded };
    return y`
      <nav part="nav" class="${o9(navClasses)}" aria-label="${__classPrivateFieldGet(this, _RhSecondaryNav_instances, "m", _RhSecondaryNav_setNavOrder).call(this)}">
        ${__classPrivateFieldGet(this, _RhSecondaryNav_logoCopy, "f")}
        <div id="container" part="container" class="${o9(containerClasses)}">
          <slot name="logo" id="logo"></slot>
          <button aria-controls="container" aria-expanded="${this._mobileMenuExpanded}" @click="${__classPrivateFieldGet(this, _RhSecondaryNav_instances, "m", _RhSecondaryNav_toggleMobileMenu)}"><slot name="mobile-menu">Menu</slot></button>
          <slot name="nav"></slot>
          <div id="cta" part="cta">
            <rh-context-provider color-palette="${this._ctaColorPalette}">
              <slot name="cta"><slot>
            </rh-context-provider>
          </div>
        </div>
      </nav>
      <rh-secondary-nav-overlay></rh-secondary-nav-overlay>
    `;
  }
  open(index) {
    if (index == null) {
      return;
    }
    const dropdown = __classPrivateFieldGet(this, _RhSecondaryNav_instances, "m", _RhSecondaryNav_dropdownByIndex).call(this, index);
    if (dropdown && RhSecondaryNav_1.isDropdown(dropdown)) {
      this.close();
      __classPrivateFieldGet(this, _RhSecondaryNav_instances, "m", _RhSecondaryNav_expand).call(this, index);
      dropdown?.querySelector("a")?.focus();
      this._overlay.open = true;
    }
  }
  close() {
    const dropdowns = __classPrivateFieldGet(this, _RhSecondaryNav_instances, "m", _RhSecondaryNav_allDropdowns).call(this);
    dropdowns.forEach((dropdown) => __classPrivateFieldGet(this, _RhSecondaryNav_instances, "m", _RhSecondaryNav_closeDropdown).call(this, dropdown));
  }
  _dropdownChangeHandler(event) {
    if (event instanceof SecondaryNavDropdownExpandEvent) {
      const index = __classPrivateFieldGet(this, _RhSecondaryNav_instances, "m", _RhSecondaryNav_getDropdownIndex).call(this, event.target);
      if (index === null || index === void 0) {
        return;
      }
      this.close();
      if (event.expanded) {
        __classPrivateFieldGet(this, _RhSecondaryNav_instances, "m", _RhSecondaryNav_expand).call(this, index);
      }
      if (!this._nav?.classList.contains("compact")) {
        this.dispatchEvent(new SecondaryNavOverlayChangeEvent(event.expanded, event.toggle));
      }
    }
  }
  _focusOutHandler(event) {
    const target = event.relatedTarget;
    if (target?.closest("rh-secondary-nav") === this || target === null) {
      return;
    } else {
      if (this._compact) {
        this._mobileMenuExpanded = false;
      }
      this.close();
      this._overlay.open = false;
    }
  }
  _overlayClickHandler() {
    this.close();
    this._overlay.open = false;
    if (this._compact) {
      this._mobileMenuExpanded = false;
    }
  }
  __compactChanged(oldVal, newVal) {
    if (newVal === void 0 || newVal === oldVal) {
      return;
    }
    const dropdownsOpen = __classPrivateFieldGet(this, _RhSecondaryNav_instances, "m", _RhSecondaryNav_getOpenDropdowns).call(this).length;
    if (newVal === true) {
      if (dropdownsOpen > 0) {
        this._mobileMenuExpanded = true;
      }
      if (this.colorPalette === "darker") {
        this._ctaColorPalette = "lightest";
      }
    } else {
      this._mobileMenuExpanded = false;
      if (dropdownsOpen === 0) {
        if (this._overlay) {
          this._overlay.open = false;
        }
      }
      if (this.colorPalette === "darker") {
        this._ctaColorPalette = this.colorPalette;
      }
    }
  }
  _keyboardControls(event) {
    switch (event.key) {
      case "Escape":
        if (this._compact) {
          this._mobileMenuExpanded = false;
          this._mobileMenuButton?.focus();
        } else {
          const open = __classPrivateFieldGet(this, _RhSecondaryNav_instances, "m", _RhSecondaryNav_getOpenDropdowns).call(this);
          open[0].querySelector("a")?.focus();
        }
        this.close();
        this._overlay.open = false;
        break;
      default:
        break;
    }
  }
  _toggleNavOverlay(event) {
    if (event instanceof SecondaryNavOverlayChangeEvent) {
      if (this.contains(event.toggle)) {
        this._overlay.open = event.open;
      }
    }
  }
}, "RhSecondaryNav");
_RhSecondaryNav_logger = /* @__PURE__ */ new WeakMap(), _RhSecondaryNav_logoCopy = /* @__PURE__ */ new WeakMap(), _RhSecondaryNav_dir = /* @__PURE__ */ new WeakMap(), _RhSecondaryNav_instances = /* @__PURE__ */ new WeakSet(), _RhSecondaryNav_getOpenDropdowns = /* @__PURE__ */ __name(function _RhSecondaryNav_getOpenDropdowns2() {
  const dropdowns = __classPrivateFieldGet(this, _RhSecondaryNav_instances, "m", _RhSecondaryNav_allDropdowns).call(this);
  const openDropdowns = [];
  dropdowns.forEach((dropdown) => {
    if (dropdown.expanded) {
      openDropdowns.push(dropdown);
    }
  });
  return openDropdowns;
}, "_RhSecondaryNav_getOpenDropdowns"), _RhSecondaryNav_getDropdownIndex = /* @__PURE__ */ __name(function _RhSecondaryNav_getDropdownIndex2(element) {
  if (!RhSecondaryNav_1.isDropdown(element)) {
    __classPrivateFieldGet(this, _RhSecondaryNav_logger, "f").warn("The getDropdownIndex method expects to receive a dropdown element.");
    return;
  }
  const dropdowns = __classPrivateFieldGet(this, _RhSecondaryNav_instances, "m", _RhSecondaryNav_allDropdowns).call(this);
  const index = dropdowns.findIndex((dropdown) => dropdown.id === element.id);
  return index;
}, "_RhSecondaryNav_getDropdownIndex"), _RhSecondaryNav_dropdownByIndex = /* @__PURE__ */ __name(function _RhSecondaryNav_dropdownByIndex2(index) {
  const dropdowns = __classPrivateFieldGet(this, _RhSecondaryNav_instances, "m", _RhSecondaryNav_allDropdowns).call(this);
  if (dropdowns[index] === void 0) {
    __classPrivateFieldGet(this, _RhSecondaryNav_logger, "f").error("This dropdown index does not exist.");
    return;
  }
  return dropdowns[index];
}, "_RhSecondaryNav_dropdownByIndex"), _RhSecondaryNav_expand = /* @__PURE__ */ __name(function _RhSecondaryNav_expand2(index) {
  if (index == null) {
    return;
  }
  const dropdown = __classPrivateFieldGet(this, _RhSecondaryNav_instances, "m", _RhSecondaryNav_dropdownByIndex).call(this, index);
  if (dropdown && RhSecondaryNav_1.isDropdown(dropdown)) {
    __classPrivateFieldGet(this, _RhSecondaryNav_instances, "m", _RhSecondaryNav_openDropdown).call(this, dropdown);
  }
}, "_RhSecondaryNav_expand"), _RhSecondaryNav_allDropdowns = /* @__PURE__ */ __name(function _RhSecondaryNav_allDropdowns2() {
  return Array.from(this.querySelectorAll("rh-secondary-nav-dropdown")).filter(RhSecondaryNav_1.isDropdown);
}, "_RhSecondaryNav_allDropdowns"), _RhSecondaryNav_closeDropdown = /* @__PURE__ */ __name(function _RhSecondaryNav_closeDropdown2(dropdown) {
  if (dropdown.expanded === false) {
    return;
  }
  dropdown.expanded = false;
}, "_RhSecondaryNav_closeDropdown"), _RhSecondaryNav_openDropdown = /* @__PURE__ */ __name(function _RhSecondaryNav_openDropdown2(dropdown) {
  if (dropdown.expanded === true) {
    return;
  }
  dropdown.expanded = true;
}, "_RhSecondaryNav_openDropdown"), _RhSecondaryNav_updateAccessibility = /* @__PURE__ */ __name(function _RhSecondaryNav_updateAccessibility2() {
  this.removeAttribute("role");
  const nav = this.querySelector(':is([slot="nav"]):is(ul)');
  nav?.removeAttribute("aria-labelledby");
}, "_RhSecondaryNav_updateAccessibility"), _RhSecondaryNav_toggleMobileMenu = /* @__PURE__ */ __name(function _RhSecondaryNav_toggleMobileMenu2() {
  if (this._mobileMenuExpanded) {
    this._mobileMenuExpanded = false;
  } else {
    this._mobileMenuExpanded = true;
  }
  this.dispatchEvent(new SecondaryNavOverlayChangeEvent(this._mobileMenuExpanded, this));
}, "_RhSecondaryNav_toggleMobileMenu"), _RhSecondaryNav_setNavOrder = /* @__PURE__ */ __name(function _RhSecondaryNav_setNavOrder2() {
  return this.mainNav ? "main" : "secondary";
}, "_RhSecondaryNav_setNavOrder");
RhSecondaryNav.version = "{{version}}";
RhSecondaryNav.styles = [rh_secondary_nav_css_default];
__decorate([
  i4("rh-secondary-nav-overlay")
], RhSecondaryNav.prototype, "_overlay", void 0);
__decorate([
  i4("#container")
], RhSecondaryNav.prototype, "_container", void 0);
__decorate([
  i4("nav")
], RhSecondaryNav.prototype, "_nav", void 0);
__decorate([
  i4("button")
], RhSecondaryNav.prototype, "_mobileMenuButton", void 0);
__decorate([
  p3,
  t3()
], RhSecondaryNav.prototype, "_compact", void 0);
__decorate([
  t3()
], RhSecondaryNav.prototype, "_mobileMenuExpanded", void 0);
__decorate([
  e5({ reflect: true, attribute: "main", type: Boolean })
], RhSecondaryNav.prototype, "mainNav", void 0);
__decorate([
  colorContextProvider(),
  e5({ reflect: true, attribute: "color-palette" })
], RhSecondaryNav.prototype, "colorPalette", void 0);
__decorate([
  t3()
], RhSecondaryNav.prototype, "_ctaColorPalette", void 0);
__decorate([
  o8
], RhSecondaryNav.prototype, "_dropdownChangeHandler", null);
__decorate([
  o8
], RhSecondaryNav.prototype, "_focusOutHandler", null);
__decorate([
  o8
], RhSecondaryNav.prototype, "_overlayClickHandler", null);
__decorate([
  o8
], RhSecondaryNav.prototype, "_keyboardControls", null);
__decorate([
  o8
], RhSecondaryNav.prototype, "_toggleNavOverlay", null);
RhSecondaryNav = RhSecondaryNav_1 = __decorate([
  e4("rh-secondary-nav")
], RhSecondaryNav);

// elements/rh-spinner/rh-spinner.js
init_lit();

// node_modules/@patternfly/pfe-spinner/node_modules/lit/index.js
init_reactive_element();
init_lit_html();
init_lit_element();

// node_modules/@patternfly/pfe-spinner/node_modules/lit/decorators.js
init_custom_element();
init_property();
init_state();
init_event_options();
init_query();
init_query_all();
init_query_async();
init_query_assigned_elements();
init_query_assigned_nodes();

// node_modules/lit-html/directives/style-map.js
init_lit_html();
var i14 = e8(class extends i10 {
  constructor(t16) {
    var e25;
    if (super(t16), t16.type !== t5.ATTRIBUTE || "style" !== t16.name || (null === (e25 = t16.strings) || void 0 === e25 ? void 0 : e25.length) > 2)
      throw Error("The `styleMap` directive must be used in the `style` attribute and must be the only part in the attribute.");
  }
  render(t16) {
    return Object.keys(t16).reduce((e25, r18) => {
      const s20 = t16[r18];
      return null == s20 ? e25 : e25 + `${r18 = r18.replace(/(?:^(webkit|moz|ms|o)|)(?=[A-Z])/g, "-$&").toLowerCase()}:${s20};`;
    }, "");
  }
  update(e25, [r18]) {
    const { style: s20 } = e25.element;
    if (void 0 === this.vt) {
      this.vt = /* @__PURE__ */ new Set();
      for (const t16 in r18)
        this.vt.add(t16);
      return this.render(r18);
    }
    this.vt.forEach((t16) => {
      null == r18[t16] && (this.vt.delete(t16), t16.includes("-") ? s20.removeProperty(t16) : s20[t16] = "");
    });
    for (const t16 in r18) {
      const e26 = r18[t16];
      null != e26 && (this.vt.add(t16), t16.includes("-") ? s20.setProperty(t16, e26) : s20[t16] = e26);
    }
    return x;
  }
});

// node_modules/@patternfly/pfe-spinner/BaseSpinner.js
var c11 = Object.defineProperty;
var l16 = Object.getOwnPropertyDescriptor;
var p9 = /* @__PURE__ */ __name((n25, e25, a19, t16) => {
  for (var r18 = t16 > 1 ? void 0 : t16 ? l16(e25, a19) : e25, o21 = n25.length - 1, s20; o21 >= 0; o21--)
    (s20 = n25[o21]) && (r18 = (t16 ? s20(e25, a19, r18) : s20(r18)) || r18);
  return t16 && r18 && c11(e25, a19, r18), r18;
}, "p");
var h11 = i`:host{display:inline-block;width:min-content;min-height:0;aspect-ratio:1/1}svg{width:var(--pf-c-spinner--Width,var(--pf-c-spinner--diameter,var(--pf-global--icon--FontSize--xl,3.375rem)));height:var(--pf-c-spinner--Height,var(--pf-c-spinner--diameter,var(--pf-global--icon--FontSize--xl,3.375rem)));animation:pf-c-spinner-animation-rotate calc(var(--pf-c-spinner--AnimationDuration,1.4s) * 2) var(--pf-c-spinner--AnimationTimingFunction,linear) infinite;overflow:hidden}:host([size=sm]) svg{--pf-c-spinner--diameter:var(--pf-c-spinner--m-sm--diameter,
    var(--pf-global--icon--FontSize--sm, 0.625rem))}:host([size=md]) svg{--pf-c-spinner--diameter:var(--pf-c-spinner--m-md--diameter,
    var(--pf-global--icon--FontSize--md, 1.125rem))}:host([size=lg]) svg{--pf-c-spinner--diameter:var(--pf-c-spinner--m-lg--diameter,
    var(--pf-global--icon--FontSize--lg, 1.5rem))}:host([size=xl]) svg{--pf-c-spinner--diameter:var(--pf-c-spinner--m-xl--diameter,
    var(--pf-global--icon--FontSize--xl, 3.375rem))}circle{width:100%;height:100%;transform-origin:50% 50%;animation:pf-c-spinner-animation-dash var(--pf-c-spinner--AnimationDuration,1.4s) var(--pf-c-spinner__path--AnimationTimingFunction,ease-in-out) infinite;stroke:var(--pf-c-spinner--Color,var(--pf-global--primary-color--100,#06c));stroke-linecap:round;stroke-dasharray:283;stroke-dashoffset:280;stroke-width:var(--pf-c-spinner--stroke-width,10)}@keyframes pf-c-spinner-animation-rotate{0%{transform:rotate(0)}100%{transform:rotate(360deg)}}@keyframes pf-c-spinner-animation-dash{0%{stroke-dashoffset:280;transform:rotate(0)}15%{stroke-width:calc(var(--pf-c-spinner__path--StrokeWidth,10) - 4)}40%{stroke-dashoffset:150;stroke-dasharray:220}100%{stroke-dashoffset:280;transform:rotate(720deg)}}`;
var m10 = h11;
var i15 = /* @__PURE__ */ __name(class extends s4 {
  constructor() {
    super(...arguments);
    this.size = "xl";
  }
  render() {
    return y`<svg role="progressbar" viewBox="0 0 100 100" style="${i14({ "--pf-c-spinner--diameter": this.diameter })}"><circle cx="50" cy="50" r="45" fill="none"/></svg>`;
  }
}, "i");
i15.styles = [m10], p9([e5({ reflect: true })], i15.prototype, "size", 2), p9([e5({ reflect: true })], i15.prototype, "diameter", 2);

// elements/rh-spinner/rh-spinner.css.js
init_lit();
var styles19 = i`:host {
  display: inline-block;
  text-align: center;
  width: max-content;
  min-height: 0;
}

::slotted(*) {
  margin-top: var(--rh-space-lg, 16px);
}

svg {
  aspect-ratio: 1 / 1;
  width: var(--rh-length-4xl, 64px);
  stroke-width: var(--rh-length-sm, 6px);
  overflow: hidden;
  display: block;
  margin-left: auto;
  margin-right: auto;
}

circle {
  width: 100%;
  height: 100%;
  stroke-linecap: round;
}

circle.dash {
  transform-origin: 50% 50%;
  animation: rh-spinner-animation-dash 1.4s ease-out infinite;
  stroke: var(--rh-color-blue-400, #0066cc);
  stroke-dasharray: 283;
  stroke-dashoffset: 280;
  transform: rotate(-90deg);
}

circle.track {
  stroke: var(--rh-color-black-200, #f0f0f0);
  animation-duration: 0;
}

:host([size="lg"]) svg {
  width: var(--rh-size-icon-06, 64px);
  stroke-width: var(--rh-length-sm, 6px);
}

:host([size="lg"]) ::slotted(p) {
  font-size: var(--rh-font-size-body-text-lg, 1.125rem);
}

:host([size="md"]) svg {
  width: var(--rh-size-icon-04, 40px);
  stroke-width: var(--rh-length-xs, 4px);
}

:host([size="md"]) ::slotted(p) {
  font-size: var(--rh-font-size-body-text-md, 1rem);
}

:host([size="sm"]) svg {
  width: var(--rh-size-icon-01, 16px);
  stroke-width: var(--rh-length-2xs, 3px);
}

:host([size="sm"]) circle.dash {
  animation-name: rh-spinner-small-animation-dash;
  stroke-dasharray: 71;
  stroke-dashoffset: 71;
}

:host([size="sm"]) ::slotted(p) {
  font-size: var(--rh-font-size-body-text-sm, 0.875rem);
}

:host([on="dark"]) circle.dash {
  stroke: var(--rh-color-blue-200, #73bcf7);
}

:host([on="dark"]) circle.track {
  stroke: var(--rh-color-black-700, #3c3f42);
}

@keyframes rh-spinner-animation-dash {
  50% {
    stroke-dashoffset: 0;
  }

  75% {
    transform: rotate(280deg);
  }

  100% {
    stroke-dashoffset: -283;
  }
}

@keyframes rh-spinner-small-animation-dash {
  50% {
    stroke-dashoffset: 0;
  }

  75% {
    transform: rotate(280deg);
  }

  100% {
    stroke-dashoffset: -71;
  }
}
`;
var rh_spinner_css_default = styles19;

// elements/rh-spinner/rh-spinner.js
var RhSpinner = /* @__PURE__ */ __name(class RhSpinner2 extends i15 {
  constructor() {
    super(...arguments);
    this.size = "lg";
  }
  render() {
    return y`
      <svg role="status" viewBox="0 0 100 100" aria-live="polite">
        <circle class="track" cx="50" cy="50" r="40" fill="none" vector-effect="non-scaling-stroke" />
        <circle class="dash" cx="50" cy="50" r="40" fill="none" vector-effect="non-scaling-stroke" />
      </svg>
      <slot></slot>
    `;
  }
}, "RhSpinner");
RhSpinner.styles = [rh_spinner_css_default];
__decorate([
  colorContextProvider(),
  e5({ reflect: true, attribute: "color-palette" })
], RhSpinner.prototype, "colorPalette", void 0);
__decorate([
  colorContextConsumer(),
  e5({ reflect: true })
], RhSpinner.prototype, "on", void 0);
__decorate([
  e5({ reflect: true })
], RhSpinner.prototype, "size", void 0);
RhSpinner = __decorate([
  e4("rh-spinner")
], RhSpinner);

// elements/rh-stat/rh-stat.js
init_lit();
init_slot_controller();
init_logger();

// elements/rh-stat/rh-stat.css.js
init_lit();
var styles20 = i`:host {
  display: block;
}

div {
  width: 100%;
  height: 100%;
  display: flex;

  --_accent-color: var(--rh-color-brand-red, #ee0000);

  flex-direction: column;
  align-items: center;
  align-content: center;
  justify-content: space-around;
}

.dark {
  --_accent-color: #ffffff;
}

span,
::slotted(*) {
  display: block;
  text-align: center;
}

.hasIcon #icon {
  width: var(--rh-size-icon-04, 40px);
  height: var(--rh-size-icon-04, 40px);
  color: var(--rh-color-black-900, #151515);
}

.hasIcon ::slotted([slot="icon"]),
.hasIcon pfe-icon[size="md"] {
  order: 1;
  display: block;
  color: currentcolor;
  fill: currentcolor;
  margin-bottom: 16px;
  width: 100%;
  height: 100%;

  --pfe-icon--size: 100%;
}

.dark #icon {
  color: white;
}

#title {
  order: 1;
  color: var(--_accent-color);
  font-size: var(--rh-font-size-body-text-xl, 1.25rem);
  font-family: var(--rh-font-family-heading, RedHatDisplay, "Red Hat Display", "Noto Sans Arabic", "Noto Sans Hebrew", "Noto Sans JP", "Noto Sans KR", "Noto Sans Malayalam", "Noto Sans SC", "Noto Sans TC", "Noto Sans Thai", Overpass, Helvetica, Arial, sans-serif);
  font-weight: var(--rh-font-weight-regular, 400);
  text-transform: uppercase;
}

#statistic {
  order: 2;
  color: var(--_accent-color);
  font-size: var(--rh-font-size-heading-lg, 2.25rem);
  font-weight: var(--rh-font-weight-regular, 300);
  font-family: var(--rh-font-family-heading, RedHatDisplay, "Red Hat Display", "Noto Sans Arabic", "Noto Sans Hebrew", "Noto Sans JP", "Noto Sans KR", "Noto Sans Malayalam", "Noto Sans SC", "Noto Sans TC", "Noto Sans Thai", Overpass, Helvetica, Arial, sans-serif);
}

#content {
  order: 3;
  font-size: var(--rh-font-size-body-text-lg, 1.125rem);
  font-family: var(--rh-font-family-text, "RedHatText", "Overpass", Helvetica, Arial, sans-serif);
  margin-top: var(--rh-space-sm, 6px);
}

#cta {
  order: 4;
  font-size: var(--rh-font-size-body-text-lg, 1.125rem);
  font-family: var(--rh-font-family-heading, RedHatDisplay, "Red Hat Display", "Noto Sans Arabic", "Noto Sans Hebrew", "Noto Sans JP", "Noto Sans KR", "Noto Sans Malayalam", "Noto Sans SC", "Noto Sans TC", "Noto Sans Thai", Overpass, Helvetica, Arial, sans-serif);
  margin-top: var(--rh-space-lg, 16px);
}

:not(.hasIcon) #icon,
:not(.hasStatistic) #statistic,
:not(.hasTitle) #title,
:not(.hasCta) #cta {
  display: none;
}

:host([size="large"]) #statistic {
  font-size: var(--rh-font-size-heading-2xl, 3rem);
}

.isMobile #content {
  font-size: var(--rh-font-size-body-text-lg, 1.125rem);
}

.isMobile #statistic {
  font-size: 32px;
}

:host([top="statistic"]) #statistic {
  order: 1;
}

:host([top="statistic"]) #title {
  order: 2;
}
`;
var rh_stat_css_default = styles20;

// elements/rh-stat/rh-stat.js
var _RhStat_instances;
var _RhStat_screenSize;
var _RhStat_slots;
var _RhStat_mo;
var _RhStat_logger;
var _RhStat_updateIcons;
var _RhStat_onMutation;
var RhStat = /* @__PURE__ */ __name(class RhStat2 extends s4 {
  constructor() {
    super(...arguments);
    _RhStat_instances.add(this);
    this.top = "default";
    this.size = "default";
    this.isMobile = false;
    _RhStat_screenSize.set(this, new ScreenSizeController(this));
    _RhStat_slots.set(this, new l13(this, null, "icon", "title", "statistic", "cta"));
    _RhStat_mo.set(this, new MutationObserver(() => __classPrivateFieldGet(this, _RhStat_instances, "m", _RhStat_onMutation).call(this)));
    _RhStat_logger.set(this, new n7(this));
  }
  connectedCallback() {
    super.connectedCallback();
    __classPrivateFieldGet(this, _RhStat_instances, "m", _RhStat_updateIcons).call(this);
    __classPrivateFieldGet(this, _RhStat_mo, "f").observe(this, { childList: true });
    __classPrivateFieldGet(this, _RhStat_instances, "m", _RhStat_onMutation).call(this);
  }
  render() {
    const hasIcon = __classPrivateFieldGet(this, _RhStat_slots, "f").hasSlotted("icon") || !!this.icon;
    const hasTitle = __classPrivateFieldGet(this, _RhStat_slots, "f").hasSlotted("title");
    const hasStatistic = __classPrivateFieldGet(this, _RhStat_slots, "f").hasSlotted("statistic");
    const hasCta = __classPrivateFieldGet(this, _RhStat_slots, "f").hasSlotted("cta");
    const isMobile = !__classPrivateFieldGet(this, _RhStat_screenSize, "f").matches.has("tabletPortrait");
    const on = this.on ?? "light";
    return y`
      <div class="${o9({ isMobile, hasIcon, hasTitle, hasStatistic, hasCta, [on]: true })}">
        <span id="icon">
          <slot name="icon" @slotchange="${__classPrivateFieldGet(this, _RhStat_instances, "m", _RhStat_updateIcons)}">${!this.icon ? "" : y`
            <pfe-icon size=${this.size === "default" ? "md" : "lg"} icon=${this.icon} set="${this.getAttribute("icon-set")}"></pfe-icon>`}
          </slot>
        </span>
        <span id="title"><slot name="title"></slot></span>
        <span id="statistic"><slot name="statistic"></slot></span>
        <span id="content"><slot></slot></span>
        <span id="cta"><slot name="cta"></slot></span>
      </div>
    `;
  }
}, "RhStat");
_RhStat_screenSize = /* @__PURE__ */ new WeakMap(), _RhStat_slots = /* @__PURE__ */ new WeakMap(), _RhStat_mo = /* @__PURE__ */ new WeakMap(), _RhStat_logger = /* @__PURE__ */ new WeakMap(), _RhStat_instances = /* @__PURE__ */ new WeakSet(), _RhStat_updateIcons = /* @__PURE__ */ __name(function _RhStat_updateIcons2() {
  this.querySelector('pfe-icon[slot="icon"]')?.setAttribute?.("size", this.size === "default" ? "md" : "lg");
}, "_RhStat_updateIcons"), _RhStat_onMutation = /* @__PURE__ */ __name(function _RhStat_onMutation2() {
  if (!__classPrivateFieldGet(this, _RhStat_slots, "f").hasSlotted("stat")) {
    __classPrivateFieldGet(this, _RhStat_logger, "f").warn("Must contain stat content");
  }
  if (!this.querySelectorAll(":not([slot])").length) {
    __classPrivateFieldGet(this, _RhStat_logger, "f").warn("Must contain description content");
  }
}, "_RhStat_onMutation");
RhStat.version = "{{version}}";
RhStat.styles = [rh_stat_css_default];
__decorate([
  colorContextConsumer({ attribute: false }),
  t3()
], RhStat.prototype, "on", void 0);
__decorate([
  e5({ reflect: true, type: String })
], RhStat.prototype, "icon", void 0);
__decorate([
  e5({ reflect: true, type: String })
], RhStat.prototype, "top", void 0);
__decorate([
  e5({ reflect: true, type: String })
], RhStat.prototype, "size", void 0);
__decorate([
  e5({ type: Boolean, reflect: true, attribute: "is-mobile" })
], RhStat.prototype, "isMobile", void 0);
RhStat = __decorate([
  e4("rh-stat")
], RhStat);

// elements/rh-tag/rh-tag.js
init_lit();

// node_modules/@patternfly/pfe-label/node_modules/lit/index.js
init_reactive_element();
init_lit_html();
init_lit_element();

// node_modules/@patternfly/pfe-label/node_modules/lit/decorators.js
init_custom_element();
init_property();
init_state();
init_event_options();
init_query();
init_query_all();
init_query_async();
init_query_assigned_elements();
init_query_assigned_nodes();

// node_modules/@patternfly/pfe-label/BaseLabel.js
init_slot_controller();
var d10 = Object.defineProperty;
var f10 = Object.getOwnPropertyDescriptor;
var i16 = /* @__PURE__ */ __name((l25, r18, n25, e25) => {
  for (var t16 = e25 > 1 ? void 0 : e25 ? f10(r18, n25) : r18, s20 = l25.length - 1, a19; s20 >= 0; s20--)
    (a19 = l25[s20]) && (t16 = (e25 ? a19(r18, n25, t16) : a19(t16)) || t16);
  return e25 && t16 && d10(r18, n25, t16), t16;
}, "i");
var h12 = i`:host{position:relative;white-space:nowrap;border:0}::slotted(pfe-icon),pfe-icon{color:currentColor}#container,:host{display:inline-flex;align-items:center;vertical-align:middle}#container{overflow:hidden;text-overflow:ellipsis;white-space:nowrap;border-width:0}#container::before{position:absolute;top:0;right:0;bottom:0;left:0;pointer-events:none;content:""}[part=icon]{display:none;pointer-events:none}.hasIcon [part=icon]{display:inline-flex;width:1em}`;
var c12 = h12;
var o13 = /* @__PURE__ */ __name(class extends s4 {
  constructor() {
    super(...arguments);
    this.variant = "filled";
    this.color = "grey";
    this.icon = "";
    this.slots = new l13(this, null, "icon");
  }
  render() {
    let { icon: n25 } = this, e25 = this.slots.hasSlotted("icon") || !!n25;
    return y`<span id="container" class="${o9({ hasIcon: e25 })}"><span part="icon"><slot name="icon">${this.renderDefaultIcon()}</slot></span><span id="text"><slot></slot></span>${this.renderSuffix?.() ?? ""}</span>`;
  }
}, "o");
o13.styles = [c12], i16([e5({ reflect: true })], o13.prototype, "variant", 2), i16([e5({ reflect: true })], o13.prototype, "color", 2), i16([e5()], o13.prototype, "icon", 2);

// elements/rh-tag/rh-tag.js
init_pfe_icon();

// elements/rh-tag/rh-tag.css.js
init_lit();
var styles21 = i`:host {
  --_content-color: var(--rh-color-black-900, #151515);
  --_before-border-color: var(--rh-color-black-300, #d2d2d2);
  --_background-color: var(--rh-color-surface-lighter, #f5f5f5);
  --pfe-icon--color: currentcolor;

  position: relative;
  padding:
    var(--rh-tag-padding-block-start, var(--rh-space-xs, 4px))
    var(--rh-tag-padding-inline-end, var(--rh-space-md, 8px))
    var(--rh-tag-padding-block-end, var(--rh-space-xs, 4px))
    var(--rh-tag-padding-inline-start, var(--rh-space-md, 8px));
  font-size: var(--rh-font-size-body-text-sm, 0.875rem);
  color: var(--_content-color);
  white-space: nowrap;
  background-color: var(--_background-color);
  border: 0;
  border-radius: var(--rh-border-radius-pill, 64px);
}

:host,
#container {
  display: inline-flex;
  align-items: center;
  vertical-align: middle;
}

#container {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  max-width: 100%;
  color: var(--_content-color);
  border-width: 0;
}

#container:before {
  --pfe-icon--color: currentcolor;

  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  pointer-events: none;
  content: "";
  border-radius: var(--rh-border-radius-pill, 64px);
  border:
    var(--rh-border-width-sm, 1px)
    solid
    var(--_before-border-color);
}

:host([color="blue"]) {
  --_content-color: var(--rh-color-blue-600, #002952);
  --_background-color: var(--rh-color-blue-50, #e7f1fa);
  --_before-border-color: var(--rh-color-blue-100, #bee1f4);
}

:host([color="cyan"]) {
  --_content-color: var(--rh-color-cyan-500, #003737);
  --_background-color: var(--rh-color-cyan-50, #f2f9f9);
  --_before-border-color: var(--rh-color-cyan-100, #a2d9d9);
}

:host([color="green"]) {
  --_content-color: var(--rh-color-green-600, #1e4f18);
  --_background-color: var(--rh-color-green-50, #f3faf2);
  --_before-border-color: var(--rh-color-green-100, #bde5b8);
}

:host([color="orange"]) {
  --_content-color: var(--rh-color-orange-700, #3b1f00);
  --_background-color: var(--rh-color-orange-50, #fff6ec);
  --_before-border-color: var(--rh-color-orange-100, #f4b678);
}

:host([color="purple"]) {
  --_content-color: var(--rh-color-purple-700, #1f0066);
  --_background-color: var(--rh-color-purple-50, #f2f0fc);
  --_before-border-color: var(--rh-color-purple-100, #cbc1ff);
}

:host([color="red"]) {
  --_content-color: var(--rh-color-red-800, #5f0000);
  --_background-color: var(--rh-color-red-50, #faeae8);
  --_before-border-color: var(--rh-color-red-600, #be0000);
}

[part="icon"] {
  display: none;
  pointer-events: none;
  font-size: 0.875rem;

  --pfe-icon--size: 0.875rem;
}

.hasIcon [part="icon"] {
  display: inline-flex;
  margin-inline-end: var(--rh-tag-margin-inline-end, var(--rh-space-xs, 4px));
}

:host([color="blue"]) .hasIcon [part="icon"] {
  color: var(--rh-color-accent-base-on-light, #0066cc);
}

:host([color="cyan"]) .hasIcon [part="icon"] {
  color: var(--rh-color-cyan-300, #009596);
}

:host([color="green"]) .hasIcon [part="icon"] {
  color: var(--rh-color-green-500, #3e8635);
}

:host([color="orange"]) .hasIcon [part="icon"] {
  color: var(--rh-color-orange-300, #ec7a08);
}

:host([color="purple"]) .hasIcon [part="icon"] {
  color: var(--rh-color-purple-500, #6753ac);
}

:host([color="red"]) .hasIcon [part="icon"] {
  color: var(--rh-color-red-600, #be0000);
}
`;
var rh_tag_css_default = styles21;

// elements/rh-tag/rh-tag.js
var RhTag = /* @__PURE__ */ __name(class RhTag2 extends o13 {
  renderDefaultIcon() {
    return !this.icon ? "" : y`
      <pfe-icon ?hidden=${!this.icon} icon=${this.icon}></pfe-icon>
    `;
  }
  renderSuffix() {
    return y``;
  }
}, "RhTag");
RhTag.styles = [rh_tag_css_default];
RhTag = __decorate([
  e4("rh-tag")
], RhTag);

// elements/rh-tooltip/rh-tooltip.js
init_decorators();

// node_modules/@patternfly/pfe-tooltip/BaseTooltip.js
init_lit();
init_lit();

// node_modules/@popperjs/core/lib/enums.js
var top = "top";
var bottom = "bottom";
var right = "right";
var left = "left";
var auto = "auto";
var basePlacements = [top, bottom, right, left];
var start = "start";
var end = "end";
var clippingParents = "clippingParents";
var viewport = "viewport";
var popper = "popper";
var reference = "reference";
var variationPlacements = /* @__PURE__ */ basePlacements.reduce(function(acc, placement) {
  return acc.concat([placement + "-" + start, placement + "-" + end]);
}, []);
var placements = /* @__PURE__ */ [].concat(basePlacements, [auto]).reduce(function(acc, placement) {
  return acc.concat([placement, placement + "-" + start, placement + "-" + end]);
}, []);
var beforeRead = "beforeRead";
var read = "read";
var afterRead = "afterRead";
var beforeMain = "beforeMain";
var main = "main";
var afterMain = "afterMain";
var beforeWrite = "beforeWrite";
var write = "write";
var afterWrite = "afterWrite";
var modifierPhases = [beforeRead, read, afterRead, beforeMain, main, afterMain, beforeWrite, write, afterWrite];

// node_modules/@popperjs/core/lib/dom-utils/getNodeName.js
function getNodeName(element) {
  return element ? (element.nodeName || "").toLowerCase() : null;
}
__name(getNodeName, "getNodeName");

// node_modules/@popperjs/core/lib/dom-utils/getWindow.js
function getWindow(node) {
  if (node == null) {
    return window;
  }
  if (node.toString() !== "[object Window]") {
    var ownerDocument = node.ownerDocument;
    return ownerDocument ? ownerDocument.defaultView || window : window;
  }
  return node;
}
__name(getWindow, "getWindow");

// node_modules/@popperjs/core/lib/dom-utils/instanceOf.js
function isElement(node) {
  var OwnElement = getWindow(node).Element;
  return node instanceof OwnElement || node instanceof Element;
}
__name(isElement, "isElement");
function isHTMLElement(node) {
  var OwnElement = getWindow(node).HTMLElement;
  return node instanceof OwnElement || node instanceof HTMLElement;
}
__name(isHTMLElement, "isHTMLElement");
function isShadowRoot(node) {
  if (typeof ShadowRoot === "undefined") {
    return false;
  }
  var OwnElement = getWindow(node).ShadowRoot;
  return node instanceof OwnElement || node instanceof ShadowRoot;
}
__name(isShadowRoot, "isShadowRoot");

// node_modules/@popperjs/core/lib/modifiers/applyStyles.js
function applyStyles(_ref) {
  var state = _ref.state;
  Object.keys(state.elements).forEach(function(name) {
    var style = state.styles[name] || {};
    var attributes = state.attributes[name] || {};
    var element = state.elements[name];
    if (!isHTMLElement(element) || !getNodeName(element)) {
      return;
    }
    Object.assign(element.style, style);
    Object.keys(attributes).forEach(function(name2) {
      var value = attributes[name2];
      if (value === false) {
        element.removeAttribute(name2);
      } else {
        element.setAttribute(name2, value === true ? "" : value);
      }
    });
  });
}
__name(applyStyles, "applyStyles");
function effect(_ref2) {
  var state = _ref2.state;
  var initialStyles = {
    popper: {
      position: state.options.strategy,
      left: "0",
      top: "0",
      margin: "0"
    },
    arrow: {
      position: "absolute"
    },
    reference: {}
  };
  Object.assign(state.elements.popper.style, initialStyles.popper);
  state.styles = initialStyles;
  if (state.elements.arrow) {
    Object.assign(state.elements.arrow.style, initialStyles.arrow);
  }
  return function() {
    Object.keys(state.elements).forEach(function(name) {
      var element = state.elements[name];
      var attributes = state.attributes[name] || {};
      var styleProperties = Object.keys(state.styles.hasOwnProperty(name) ? state.styles[name] : initialStyles[name]);
      var style = styleProperties.reduce(function(style2, property) {
        style2[property] = "";
        return style2;
      }, {});
      if (!isHTMLElement(element) || !getNodeName(element)) {
        return;
      }
      Object.assign(element.style, style);
      Object.keys(attributes).forEach(function(attribute) {
        element.removeAttribute(attribute);
      });
    });
  };
}
__name(effect, "effect");
var applyStyles_default = {
  name: "applyStyles",
  enabled: true,
  phase: "write",
  fn: applyStyles,
  effect,
  requires: ["computeStyles"]
};

// node_modules/@popperjs/core/lib/utils/getBasePlacement.js
function getBasePlacement(placement) {
  return placement.split("-")[0];
}
__name(getBasePlacement, "getBasePlacement");

// node_modules/@popperjs/core/lib/utils/math.js
var max = Math.max;
var min = Math.min;
var round = Math.round;

// node_modules/@popperjs/core/lib/utils/userAgent.js
function getUAString() {
  var uaData = navigator.userAgentData;
  if (uaData != null && uaData.brands) {
    return uaData.brands.map(function(item) {
      return item.brand + "/" + item.version;
    }).join(" ");
  }
  return navigator.userAgent;
}
__name(getUAString, "getUAString");

// node_modules/@popperjs/core/lib/dom-utils/isLayoutViewport.js
function isLayoutViewport() {
  return !/^((?!chrome|android).)*safari/i.test(getUAString());
}
__name(isLayoutViewport, "isLayoutViewport");

// node_modules/@popperjs/core/lib/dom-utils/getBoundingClientRect.js
function getBoundingClientRect(element, includeScale, isFixedStrategy) {
  if (includeScale === void 0) {
    includeScale = false;
  }
  if (isFixedStrategy === void 0) {
    isFixedStrategy = false;
  }
  var clientRect = element.getBoundingClientRect();
  var scaleX = 1;
  var scaleY = 1;
  if (includeScale && isHTMLElement(element)) {
    scaleX = element.offsetWidth > 0 ? round(clientRect.width) / element.offsetWidth || 1 : 1;
    scaleY = element.offsetHeight > 0 ? round(clientRect.height) / element.offsetHeight || 1 : 1;
  }
  var _ref = isElement(element) ? getWindow(element) : window, visualViewport = _ref.visualViewport;
  var addVisualOffsets = !isLayoutViewport() && isFixedStrategy;
  var x11 = (clientRect.left + (addVisualOffsets && visualViewport ? visualViewport.offsetLeft : 0)) / scaleX;
  var y13 = (clientRect.top + (addVisualOffsets && visualViewport ? visualViewport.offsetTop : 0)) / scaleY;
  var width = clientRect.width / scaleX;
  var height = clientRect.height / scaleY;
  return {
    width,
    height,
    top: y13,
    right: x11 + width,
    bottom: y13 + height,
    left: x11,
    x: x11,
    y: y13
  };
}
__name(getBoundingClientRect, "getBoundingClientRect");

// node_modules/@popperjs/core/lib/dom-utils/getLayoutRect.js
function getLayoutRect(element) {
  var clientRect = getBoundingClientRect(element);
  var width = element.offsetWidth;
  var height = element.offsetHeight;
  if (Math.abs(clientRect.width - width) <= 1) {
    width = clientRect.width;
  }
  if (Math.abs(clientRect.height - height) <= 1) {
    height = clientRect.height;
  }
  return {
    x: element.offsetLeft,
    y: element.offsetTop,
    width,
    height
  };
}
__name(getLayoutRect, "getLayoutRect");

// node_modules/@popperjs/core/lib/dom-utils/contains.js
function contains(parent, child) {
  var rootNode = child.getRootNode && child.getRootNode();
  if (parent.contains(child)) {
    return true;
  } else if (rootNode && isShadowRoot(rootNode)) {
    var next = child;
    do {
      if (next && parent.isSameNode(next)) {
        return true;
      }
      next = next.parentNode || next.host;
    } while (next);
  }
  return false;
}
__name(contains, "contains");

// node_modules/@popperjs/core/lib/dom-utils/getComputedStyle.js
function getComputedStyle2(element) {
  return getWindow(element).getComputedStyle(element);
}
__name(getComputedStyle2, "getComputedStyle");

// node_modules/@popperjs/core/lib/dom-utils/isTableElement.js
function isTableElement(element) {
  return ["table", "td", "th"].indexOf(getNodeName(element)) >= 0;
}
__name(isTableElement, "isTableElement");

// node_modules/@popperjs/core/lib/dom-utils/getDocumentElement.js
function getDocumentElement(element) {
  return ((isElement(element) ? element.ownerDocument : element.document) || window.document).documentElement;
}
__name(getDocumentElement, "getDocumentElement");

// node_modules/@popperjs/core/lib/dom-utils/getParentNode.js
function getParentNode(element) {
  if (getNodeName(element) === "html") {
    return element;
  }
  return element.assignedSlot || element.parentNode || (isShadowRoot(element) ? element.host : null) || getDocumentElement(element);
}
__name(getParentNode, "getParentNode");

// node_modules/@popperjs/core/lib/dom-utils/getOffsetParent.js
function getTrueOffsetParent(element) {
  if (!isHTMLElement(element) || getComputedStyle2(element).position === "fixed") {
    return null;
  }
  return element.offsetParent;
}
__name(getTrueOffsetParent, "getTrueOffsetParent");
function getContainingBlock(element) {
  var isFirefox = /firefox/i.test(getUAString());
  var isIE = /Trident/i.test(getUAString());
  if (isIE && isHTMLElement(element)) {
    var elementCss = getComputedStyle2(element);
    if (elementCss.position === "fixed") {
      return null;
    }
  }
  var currentNode = getParentNode(element);
  if (isShadowRoot(currentNode)) {
    currentNode = currentNode.host;
  }
  while (isHTMLElement(currentNode) && ["html", "body"].indexOf(getNodeName(currentNode)) < 0) {
    var css = getComputedStyle2(currentNode);
    if (css.transform !== "none" || css.perspective !== "none" || css.contain === "paint" || ["transform", "perspective"].indexOf(css.willChange) !== -1 || isFirefox && css.willChange === "filter" || isFirefox && css.filter && css.filter !== "none") {
      return currentNode;
    } else {
      currentNode = currentNode.parentNode;
    }
  }
  return null;
}
__name(getContainingBlock, "getContainingBlock");
function getOffsetParent(element) {
  var window2 = getWindow(element);
  var offsetParent = getTrueOffsetParent(element);
  while (offsetParent && isTableElement(offsetParent) && getComputedStyle2(offsetParent).position === "static") {
    offsetParent = getTrueOffsetParent(offsetParent);
  }
  if (offsetParent && (getNodeName(offsetParent) === "html" || getNodeName(offsetParent) === "body" && getComputedStyle2(offsetParent).position === "static")) {
    return window2;
  }
  return offsetParent || getContainingBlock(element) || window2;
}
__name(getOffsetParent, "getOffsetParent");

// node_modules/@popperjs/core/lib/utils/getMainAxisFromPlacement.js
function getMainAxisFromPlacement(placement) {
  return ["top", "bottom"].indexOf(placement) >= 0 ? "x" : "y";
}
__name(getMainAxisFromPlacement, "getMainAxisFromPlacement");

// node_modules/@popperjs/core/lib/utils/within.js
function within(min2, value, max2) {
  return max(min2, min(value, max2));
}
__name(within, "within");
function withinMaxClamp(min2, value, max2) {
  var v13 = within(min2, value, max2);
  return v13 > max2 ? max2 : v13;
}
__name(withinMaxClamp, "withinMaxClamp");

// node_modules/@popperjs/core/lib/utils/getFreshSideObject.js
function getFreshSideObject() {
  return {
    top: 0,
    right: 0,
    bottom: 0,
    left: 0
  };
}
__name(getFreshSideObject, "getFreshSideObject");

// node_modules/@popperjs/core/lib/utils/mergePaddingObject.js
function mergePaddingObject(paddingObject) {
  return Object.assign({}, getFreshSideObject(), paddingObject);
}
__name(mergePaddingObject, "mergePaddingObject");

// node_modules/@popperjs/core/lib/utils/expandToHashMap.js
function expandToHashMap(value, keys) {
  return keys.reduce(function(hashMap, key) {
    hashMap[key] = value;
    return hashMap;
  }, {});
}
__name(expandToHashMap, "expandToHashMap");

// node_modules/@popperjs/core/lib/modifiers/arrow.js
var toPaddingObject = /* @__PURE__ */ __name(function toPaddingObject2(padding, state) {
  padding = typeof padding === "function" ? padding(Object.assign({}, state.rects, {
    placement: state.placement
  })) : padding;
  return mergePaddingObject(typeof padding !== "number" ? padding : expandToHashMap(padding, basePlacements));
}, "toPaddingObject");
function arrow(_ref) {
  var _state$modifiersData$;
  var state = _ref.state, name = _ref.name, options3 = _ref.options;
  var arrowElement = state.elements.arrow;
  var popperOffsets2 = state.modifiersData.popperOffsets;
  var basePlacement = getBasePlacement(state.placement);
  var axis = getMainAxisFromPlacement(basePlacement);
  var isVertical = [left, right].indexOf(basePlacement) >= 0;
  var len = isVertical ? "height" : "width";
  if (!arrowElement || !popperOffsets2) {
    return;
  }
  var paddingObject = toPaddingObject(options3.padding, state);
  var arrowRect = getLayoutRect(arrowElement);
  var minProp = axis === "y" ? top : left;
  var maxProp = axis === "y" ? bottom : right;
  var endDiff = state.rects.reference[len] + state.rects.reference[axis] - popperOffsets2[axis] - state.rects.popper[len];
  var startDiff = popperOffsets2[axis] - state.rects.reference[axis];
  var arrowOffsetParent = getOffsetParent(arrowElement);
  var clientSize = arrowOffsetParent ? axis === "y" ? arrowOffsetParent.clientHeight || 0 : arrowOffsetParent.clientWidth || 0 : 0;
  var centerToReference = endDiff / 2 - startDiff / 2;
  var min2 = paddingObject[minProp];
  var max2 = clientSize - arrowRect[len] - paddingObject[maxProp];
  var center = clientSize / 2 - arrowRect[len] / 2 + centerToReference;
  var offset2 = within(min2, center, max2);
  var axisProp = axis;
  state.modifiersData[name] = (_state$modifiersData$ = {}, _state$modifiersData$[axisProp] = offset2, _state$modifiersData$.centerOffset = offset2 - center, _state$modifiersData$);
}
__name(arrow, "arrow");
function effect2(_ref2) {
  var state = _ref2.state, options3 = _ref2.options;
  var _options$element = options3.element, arrowElement = _options$element === void 0 ? "[data-popper-arrow]" : _options$element;
  if (arrowElement == null) {
    return;
  }
  if (typeof arrowElement === "string") {
    arrowElement = state.elements.popper.querySelector(arrowElement);
    if (!arrowElement) {
      return;
    }
  }
  if (false) {
    if (!isHTMLElement(arrowElement)) {
      console.error(['Popper: "arrow" element must be an HTMLElement (not an SVGElement).', "To use an SVG arrow, wrap it in an HTMLElement that will be used as", "the arrow."].join(" "));
    }
  }
  if (!contains(state.elements.popper, arrowElement)) {
    if (false) {
      console.error(['Popper: "arrow" modifier\'s `element` must be a child of the popper', "element."].join(" "));
    }
    return;
  }
  state.elements.arrow = arrowElement;
}
__name(effect2, "effect");
var arrow_default = {
  name: "arrow",
  enabled: true,
  phase: "main",
  fn: arrow,
  effect: effect2,
  requires: ["popperOffsets"],
  requiresIfExists: ["preventOverflow"]
};

// node_modules/@popperjs/core/lib/utils/getVariation.js
function getVariation(placement) {
  return placement.split("-")[1];
}
__name(getVariation, "getVariation");

// node_modules/@popperjs/core/lib/modifiers/computeStyles.js
var unsetSides = {
  top: "auto",
  right: "auto",
  bottom: "auto",
  left: "auto"
};
function roundOffsetsByDPR(_ref) {
  var x11 = _ref.x, y13 = _ref.y;
  var win = window;
  var dpr = win.devicePixelRatio || 1;
  return {
    x: round(x11 * dpr) / dpr || 0,
    y: round(y13 * dpr) / dpr || 0
  };
}
__name(roundOffsetsByDPR, "roundOffsetsByDPR");
function mapToStyles(_ref2) {
  var _Object$assign2;
  var popper2 = _ref2.popper, popperRect = _ref2.popperRect, placement = _ref2.placement, variation = _ref2.variation, offsets = _ref2.offsets, position = _ref2.position, gpuAcceleration = _ref2.gpuAcceleration, adaptive = _ref2.adaptive, roundOffsets = _ref2.roundOffsets, isFixed = _ref2.isFixed;
  var _offsets$x = offsets.x, x11 = _offsets$x === void 0 ? 0 : _offsets$x, _offsets$y = offsets.y, y13 = _offsets$y === void 0 ? 0 : _offsets$y;
  var _ref3 = typeof roundOffsets === "function" ? roundOffsets({
    x: x11,
    y: y13
  }) : {
    x: x11,
    y: y13
  };
  x11 = _ref3.x;
  y13 = _ref3.y;
  var hasX = offsets.hasOwnProperty("x");
  var hasY = offsets.hasOwnProperty("y");
  var sideX = left;
  var sideY = top;
  var win = window;
  if (adaptive) {
    var offsetParent = getOffsetParent(popper2);
    var heightProp = "clientHeight";
    var widthProp = "clientWidth";
    if (offsetParent === getWindow(popper2)) {
      offsetParent = getDocumentElement(popper2);
      if (getComputedStyle2(offsetParent).position !== "static" && position === "absolute") {
        heightProp = "scrollHeight";
        widthProp = "scrollWidth";
      }
    }
    offsetParent = offsetParent;
    if (placement === top || (placement === left || placement === right) && variation === end) {
      sideY = bottom;
      var offsetY = isFixed && offsetParent === win && win.visualViewport ? win.visualViewport.height : offsetParent[heightProp];
      y13 -= offsetY - popperRect.height;
      y13 *= gpuAcceleration ? 1 : -1;
    }
    if (placement === left || (placement === top || placement === bottom) && variation === end) {
      sideX = right;
      var offsetX = isFixed && offsetParent === win && win.visualViewport ? win.visualViewport.width : offsetParent[widthProp];
      x11 -= offsetX - popperRect.width;
      x11 *= gpuAcceleration ? 1 : -1;
    }
  }
  var commonStyles = Object.assign({
    position
  }, adaptive && unsetSides);
  var _ref4 = roundOffsets === true ? roundOffsetsByDPR({
    x: x11,
    y: y13
  }) : {
    x: x11,
    y: y13
  };
  x11 = _ref4.x;
  y13 = _ref4.y;
  if (gpuAcceleration) {
    var _Object$assign;
    return Object.assign({}, commonStyles, (_Object$assign = {}, _Object$assign[sideY] = hasY ? "0" : "", _Object$assign[sideX] = hasX ? "0" : "", _Object$assign.transform = (win.devicePixelRatio || 1) <= 1 ? "translate(" + x11 + "px, " + y13 + "px)" : "translate3d(" + x11 + "px, " + y13 + "px, 0)", _Object$assign));
  }
  return Object.assign({}, commonStyles, (_Object$assign2 = {}, _Object$assign2[sideY] = hasY ? y13 + "px" : "", _Object$assign2[sideX] = hasX ? x11 + "px" : "", _Object$assign2.transform = "", _Object$assign2));
}
__name(mapToStyles, "mapToStyles");
function computeStyles(_ref5) {
  var state = _ref5.state, options3 = _ref5.options;
  var _options$gpuAccelerat = options3.gpuAcceleration, gpuAcceleration = _options$gpuAccelerat === void 0 ? true : _options$gpuAccelerat, _options$adaptive = options3.adaptive, adaptive = _options$adaptive === void 0 ? true : _options$adaptive, _options$roundOffsets = options3.roundOffsets, roundOffsets = _options$roundOffsets === void 0 ? true : _options$roundOffsets;
  if (false) {
    var transitionProperty = getComputedStyle2(state.elements.popper).transitionProperty || "";
    if (adaptive && ["transform", "top", "right", "bottom", "left"].some(function(property) {
      return transitionProperty.indexOf(property) >= 0;
    })) {
      console.warn(["Popper: Detected CSS transitions on at least one of the following", 'CSS properties: "transform", "top", "right", "bottom", "left".', "\n\n", 'Disable the "computeStyles" modifier\'s `adaptive` option to allow', "for smooth transitions, or remove these properties from the CSS", "transition declaration on the popper element if only transitioning", "opacity or background-color for example.", "\n\n", "We recommend using the popper element as a wrapper around an inner", "element that can have any CSS property transitioned for animations."].join(" "));
    }
  }
  var commonStyles = {
    placement: getBasePlacement(state.placement),
    variation: getVariation(state.placement),
    popper: state.elements.popper,
    popperRect: state.rects.popper,
    gpuAcceleration,
    isFixed: state.options.strategy === "fixed"
  };
  if (state.modifiersData.popperOffsets != null) {
    state.styles.popper = Object.assign({}, state.styles.popper, mapToStyles(Object.assign({}, commonStyles, {
      offsets: state.modifiersData.popperOffsets,
      position: state.options.strategy,
      adaptive,
      roundOffsets
    })));
  }
  if (state.modifiersData.arrow != null) {
    state.styles.arrow = Object.assign({}, state.styles.arrow, mapToStyles(Object.assign({}, commonStyles, {
      offsets: state.modifiersData.arrow,
      position: "absolute",
      adaptive: false,
      roundOffsets
    })));
  }
  state.attributes.popper = Object.assign({}, state.attributes.popper, {
    "data-popper-placement": state.placement
  });
}
__name(computeStyles, "computeStyles");
var computeStyles_default = {
  name: "computeStyles",
  enabled: true,
  phase: "beforeWrite",
  fn: computeStyles,
  data: {}
};

// node_modules/@popperjs/core/lib/modifiers/eventListeners.js
var passive = {
  passive: true
};
function effect3(_ref) {
  var state = _ref.state, instance = _ref.instance, options3 = _ref.options;
  var _options$scroll = options3.scroll, scroll = _options$scroll === void 0 ? true : _options$scroll, _options$resize = options3.resize, resize = _options$resize === void 0 ? true : _options$resize;
  var window2 = getWindow(state.elements.popper);
  var scrollParents = [].concat(state.scrollParents.reference, state.scrollParents.popper);
  if (scroll) {
    scrollParents.forEach(function(scrollParent) {
      scrollParent.addEventListener("scroll", instance.update, passive);
    });
  }
  if (resize) {
    window2.addEventListener("resize", instance.update, passive);
  }
  return function() {
    if (scroll) {
      scrollParents.forEach(function(scrollParent) {
        scrollParent.removeEventListener("scroll", instance.update, passive);
      });
    }
    if (resize) {
      window2.removeEventListener("resize", instance.update, passive);
    }
  };
}
__name(effect3, "effect");
var eventListeners_default = {
  name: "eventListeners",
  enabled: true,
  phase: "write",
  fn: /* @__PURE__ */ __name(function fn() {
  }, "fn"),
  effect: effect3,
  data: {}
};

// node_modules/@popperjs/core/lib/utils/getOppositePlacement.js
var hash = {
  left: "right",
  right: "left",
  bottom: "top",
  top: "bottom"
};
function getOppositePlacement(placement) {
  return placement.replace(/left|right|bottom|top/g, function(matched) {
    return hash[matched];
  });
}
__name(getOppositePlacement, "getOppositePlacement");

// node_modules/@popperjs/core/lib/utils/getOppositeVariationPlacement.js
var hash2 = {
  start: "end",
  end: "start"
};
function getOppositeVariationPlacement(placement) {
  return placement.replace(/start|end/g, function(matched) {
    return hash2[matched];
  });
}
__name(getOppositeVariationPlacement, "getOppositeVariationPlacement");

// node_modules/@popperjs/core/lib/dom-utils/getWindowScroll.js
function getWindowScroll(node) {
  var win = getWindow(node);
  var scrollLeft = win.pageXOffset;
  var scrollTop = win.pageYOffset;
  return {
    scrollLeft,
    scrollTop
  };
}
__name(getWindowScroll, "getWindowScroll");

// node_modules/@popperjs/core/lib/dom-utils/getWindowScrollBarX.js
function getWindowScrollBarX(element) {
  return getBoundingClientRect(getDocumentElement(element)).left + getWindowScroll(element).scrollLeft;
}
__name(getWindowScrollBarX, "getWindowScrollBarX");

// node_modules/@popperjs/core/lib/dom-utils/getViewportRect.js
function getViewportRect(element, strategy) {
  var win = getWindow(element);
  var html = getDocumentElement(element);
  var visualViewport = win.visualViewport;
  var width = html.clientWidth;
  var height = html.clientHeight;
  var x11 = 0;
  var y13 = 0;
  if (visualViewport) {
    width = visualViewport.width;
    height = visualViewport.height;
    var layoutViewport = isLayoutViewport();
    if (layoutViewport || !layoutViewport && strategy === "fixed") {
      x11 = visualViewport.offsetLeft;
      y13 = visualViewport.offsetTop;
    }
  }
  return {
    width,
    height,
    x: x11 + getWindowScrollBarX(element),
    y: y13
  };
}
__name(getViewportRect, "getViewportRect");

// node_modules/@popperjs/core/lib/dom-utils/getDocumentRect.js
function getDocumentRect(element) {
  var _element$ownerDocumen;
  var html = getDocumentElement(element);
  var winScroll = getWindowScroll(element);
  var body = (_element$ownerDocumen = element.ownerDocument) == null ? void 0 : _element$ownerDocumen.body;
  var width = max(html.scrollWidth, html.clientWidth, body ? body.scrollWidth : 0, body ? body.clientWidth : 0);
  var height = max(html.scrollHeight, html.clientHeight, body ? body.scrollHeight : 0, body ? body.clientHeight : 0);
  var x11 = -winScroll.scrollLeft + getWindowScrollBarX(element);
  var y13 = -winScroll.scrollTop;
  if (getComputedStyle2(body || html).direction === "rtl") {
    x11 += max(html.clientWidth, body ? body.clientWidth : 0) - width;
  }
  return {
    width,
    height,
    x: x11,
    y: y13
  };
}
__name(getDocumentRect, "getDocumentRect");

// node_modules/@popperjs/core/lib/dom-utils/isScrollParent.js
function isScrollParent(element) {
  var _getComputedStyle = getComputedStyle2(element), overflow = _getComputedStyle.overflow, overflowX = _getComputedStyle.overflowX, overflowY = _getComputedStyle.overflowY;
  return /auto|scroll|overlay|hidden/.test(overflow + overflowY + overflowX);
}
__name(isScrollParent, "isScrollParent");

// node_modules/@popperjs/core/lib/dom-utils/getScrollParent.js
function getScrollParent(node) {
  if (["html", "body", "#document"].indexOf(getNodeName(node)) >= 0) {
    return node.ownerDocument.body;
  }
  if (isHTMLElement(node) && isScrollParent(node)) {
    return node;
  }
  return getScrollParent(getParentNode(node));
}
__name(getScrollParent, "getScrollParent");

// node_modules/@popperjs/core/lib/dom-utils/listScrollParents.js
function listScrollParents(element, list) {
  var _element$ownerDocumen;
  if (list === void 0) {
    list = [];
  }
  var scrollParent = getScrollParent(element);
  var isBody = scrollParent === ((_element$ownerDocumen = element.ownerDocument) == null ? void 0 : _element$ownerDocumen.body);
  var win = getWindow(scrollParent);
  var target = isBody ? [win].concat(win.visualViewport || [], isScrollParent(scrollParent) ? scrollParent : []) : scrollParent;
  var updatedList = list.concat(target);
  return isBody ? updatedList : updatedList.concat(listScrollParents(getParentNode(target)));
}
__name(listScrollParents, "listScrollParents");

// node_modules/@popperjs/core/lib/utils/rectToClientRect.js
function rectToClientRect(rect) {
  return Object.assign({}, rect, {
    left: rect.x,
    top: rect.y,
    right: rect.x + rect.width,
    bottom: rect.y + rect.height
  });
}
__name(rectToClientRect, "rectToClientRect");

// node_modules/@popperjs/core/lib/dom-utils/getClippingRect.js
function getInnerBoundingClientRect(element, strategy) {
  var rect = getBoundingClientRect(element, false, strategy === "fixed");
  rect.top = rect.top + element.clientTop;
  rect.left = rect.left + element.clientLeft;
  rect.bottom = rect.top + element.clientHeight;
  rect.right = rect.left + element.clientWidth;
  rect.width = element.clientWidth;
  rect.height = element.clientHeight;
  rect.x = rect.left;
  rect.y = rect.top;
  return rect;
}
__name(getInnerBoundingClientRect, "getInnerBoundingClientRect");
function getClientRectFromMixedType(element, clippingParent, strategy) {
  return clippingParent === viewport ? rectToClientRect(getViewportRect(element, strategy)) : isElement(clippingParent) ? getInnerBoundingClientRect(clippingParent, strategy) : rectToClientRect(getDocumentRect(getDocumentElement(element)));
}
__name(getClientRectFromMixedType, "getClientRectFromMixedType");
function getClippingParents(element) {
  var clippingParents2 = listScrollParents(getParentNode(element));
  var canEscapeClipping = ["absolute", "fixed"].indexOf(getComputedStyle2(element).position) >= 0;
  var clipperElement = canEscapeClipping && isHTMLElement(element) ? getOffsetParent(element) : element;
  if (!isElement(clipperElement)) {
    return [];
  }
  return clippingParents2.filter(function(clippingParent) {
    return isElement(clippingParent) && contains(clippingParent, clipperElement) && getNodeName(clippingParent) !== "body";
  });
}
__name(getClippingParents, "getClippingParents");
function getClippingRect(element, boundary, rootBoundary, strategy) {
  var mainClippingParents = boundary === "clippingParents" ? getClippingParents(element) : [].concat(boundary);
  var clippingParents2 = [].concat(mainClippingParents, [rootBoundary]);
  var firstClippingParent = clippingParents2[0];
  var clippingRect = clippingParents2.reduce(function(accRect, clippingParent) {
    var rect = getClientRectFromMixedType(element, clippingParent, strategy);
    accRect.top = max(rect.top, accRect.top);
    accRect.right = min(rect.right, accRect.right);
    accRect.bottom = min(rect.bottom, accRect.bottom);
    accRect.left = max(rect.left, accRect.left);
    return accRect;
  }, getClientRectFromMixedType(element, firstClippingParent, strategy));
  clippingRect.width = clippingRect.right - clippingRect.left;
  clippingRect.height = clippingRect.bottom - clippingRect.top;
  clippingRect.x = clippingRect.left;
  clippingRect.y = clippingRect.top;
  return clippingRect;
}
__name(getClippingRect, "getClippingRect");

// node_modules/@popperjs/core/lib/utils/computeOffsets.js
function computeOffsets(_ref) {
  var reference2 = _ref.reference, element = _ref.element, placement = _ref.placement;
  var basePlacement = placement ? getBasePlacement(placement) : null;
  var variation = placement ? getVariation(placement) : null;
  var commonX = reference2.x + reference2.width / 2 - element.width / 2;
  var commonY = reference2.y + reference2.height / 2 - element.height / 2;
  var offsets;
  switch (basePlacement) {
    case top:
      offsets = {
        x: commonX,
        y: reference2.y - element.height
      };
      break;
    case bottom:
      offsets = {
        x: commonX,
        y: reference2.y + reference2.height
      };
      break;
    case right:
      offsets = {
        x: reference2.x + reference2.width,
        y: commonY
      };
      break;
    case left:
      offsets = {
        x: reference2.x - element.width,
        y: commonY
      };
      break;
    default:
      offsets = {
        x: reference2.x,
        y: reference2.y
      };
  }
  var mainAxis = basePlacement ? getMainAxisFromPlacement(basePlacement) : null;
  if (mainAxis != null) {
    var len = mainAxis === "y" ? "height" : "width";
    switch (variation) {
      case start:
        offsets[mainAxis] = offsets[mainAxis] - (reference2[len] / 2 - element[len] / 2);
        break;
      case end:
        offsets[mainAxis] = offsets[mainAxis] + (reference2[len] / 2 - element[len] / 2);
        break;
      default:
    }
  }
  return offsets;
}
__name(computeOffsets, "computeOffsets");

// node_modules/@popperjs/core/lib/utils/detectOverflow.js
function detectOverflow(state, options3) {
  if (options3 === void 0) {
    options3 = {};
  }
  var _options = options3, _options$placement = _options.placement, placement = _options$placement === void 0 ? state.placement : _options$placement, _options$strategy = _options.strategy, strategy = _options$strategy === void 0 ? state.strategy : _options$strategy, _options$boundary = _options.boundary, boundary = _options$boundary === void 0 ? clippingParents : _options$boundary, _options$rootBoundary = _options.rootBoundary, rootBoundary = _options$rootBoundary === void 0 ? viewport : _options$rootBoundary, _options$elementConte = _options.elementContext, elementContext = _options$elementConte === void 0 ? popper : _options$elementConte, _options$altBoundary = _options.altBoundary, altBoundary = _options$altBoundary === void 0 ? false : _options$altBoundary, _options$padding = _options.padding, padding = _options$padding === void 0 ? 0 : _options$padding;
  var paddingObject = mergePaddingObject(typeof padding !== "number" ? padding : expandToHashMap(padding, basePlacements));
  var altContext = elementContext === popper ? reference : popper;
  var popperRect = state.rects.popper;
  var element = state.elements[altBoundary ? altContext : elementContext];
  var clippingClientRect = getClippingRect(isElement(element) ? element : element.contextElement || getDocumentElement(state.elements.popper), boundary, rootBoundary, strategy);
  var referenceClientRect = getBoundingClientRect(state.elements.reference);
  var popperOffsets2 = computeOffsets({
    reference: referenceClientRect,
    element: popperRect,
    strategy: "absolute",
    placement
  });
  var popperClientRect = rectToClientRect(Object.assign({}, popperRect, popperOffsets2));
  var elementClientRect = elementContext === popper ? popperClientRect : referenceClientRect;
  var overflowOffsets = {
    top: clippingClientRect.top - elementClientRect.top + paddingObject.top,
    bottom: elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom,
    left: clippingClientRect.left - elementClientRect.left + paddingObject.left,
    right: elementClientRect.right - clippingClientRect.right + paddingObject.right
  };
  var offsetData = state.modifiersData.offset;
  if (elementContext === popper && offsetData) {
    var offset2 = offsetData[placement];
    Object.keys(overflowOffsets).forEach(function(key) {
      var multiply = [right, bottom].indexOf(key) >= 0 ? 1 : -1;
      var axis = [top, bottom].indexOf(key) >= 0 ? "y" : "x";
      overflowOffsets[key] += offset2[axis] * multiply;
    });
  }
  return overflowOffsets;
}
__name(detectOverflow, "detectOverflow");

// node_modules/@popperjs/core/lib/utils/computeAutoPlacement.js
function computeAutoPlacement(state, options3) {
  if (options3 === void 0) {
    options3 = {};
  }
  var _options = options3, placement = _options.placement, boundary = _options.boundary, rootBoundary = _options.rootBoundary, padding = _options.padding, flipVariations = _options.flipVariations, _options$allowedAutoP = _options.allowedAutoPlacements, allowedAutoPlacements = _options$allowedAutoP === void 0 ? placements : _options$allowedAutoP;
  var variation = getVariation(placement);
  var placements2 = variation ? flipVariations ? variationPlacements : variationPlacements.filter(function(placement2) {
    return getVariation(placement2) === variation;
  }) : basePlacements;
  var allowedPlacements = placements2.filter(function(placement2) {
    return allowedAutoPlacements.indexOf(placement2) >= 0;
  });
  if (allowedPlacements.length === 0) {
    allowedPlacements = placements2;
    if (false) {
      console.error(["Popper: The `allowedAutoPlacements` option did not allow any", "placements. Ensure the `placement` option matches the variation", "of the allowed placements.", 'For example, "auto" cannot be used to allow "bottom-start".', 'Use "auto-start" instead.'].join(" "));
    }
  }
  var overflows = allowedPlacements.reduce(function(acc, placement2) {
    acc[placement2] = detectOverflow(state, {
      placement: placement2,
      boundary,
      rootBoundary,
      padding
    })[getBasePlacement(placement2)];
    return acc;
  }, {});
  return Object.keys(overflows).sort(function(a19, b16) {
    return overflows[a19] - overflows[b16];
  });
}
__name(computeAutoPlacement, "computeAutoPlacement");

// node_modules/@popperjs/core/lib/modifiers/flip.js
function getExpandedFallbackPlacements(placement) {
  if (getBasePlacement(placement) === auto) {
    return [];
  }
  var oppositePlacement = getOppositePlacement(placement);
  return [getOppositeVariationPlacement(placement), oppositePlacement, getOppositeVariationPlacement(oppositePlacement)];
}
__name(getExpandedFallbackPlacements, "getExpandedFallbackPlacements");
function flip(_ref) {
  var state = _ref.state, options3 = _ref.options, name = _ref.name;
  if (state.modifiersData[name]._skip) {
    return;
  }
  var _options$mainAxis = options3.mainAxis, checkMainAxis = _options$mainAxis === void 0 ? true : _options$mainAxis, _options$altAxis = options3.altAxis, checkAltAxis = _options$altAxis === void 0 ? true : _options$altAxis, specifiedFallbackPlacements = options3.fallbackPlacements, padding = options3.padding, boundary = options3.boundary, rootBoundary = options3.rootBoundary, altBoundary = options3.altBoundary, _options$flipVariatio = options3.flipVariations, flipVariations = _options$flipVariatio === void 0 ? true : _options$flipVariatio, allowedAutoPlacements = options3.allowedAutoPlacements;
  var preferredPlacement = state.options.placement;
  var basePlacement = getBasePlacement(preferredPlacement);
  var isBasePlacement = basePlacement === preferredPlacement;
  var fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipVariations ? [getOppositePlacement(preferredPlacement)] : getExpandedFallbackPlacements(preferredPlacement));
  var placements2 = [preferredPlacement].concat(fallbackPlacements).reduce(function(acc, placement2) {
    return acc.concat(getBasePlacement(placement2) === auto ? computeAutoPlacement(state, {
      placement: placement2,
      boundary,
      rootBoundary,
      padding,
      flipVariations,
      allowedAutoPlacements
    }) : placement2);
  }, []);
  var referenceRect = state.rects.reference;
  var popperRect = state.rects.popper;
  var checksMap = /* @__PURE__ */ new Map();
  var makeFallbackChecks = true;
  var firstFittingPlacement = placements2[0];
  for (var i25 = 0; i25 < placements2.length; i25++) {
    var placement = placements2[i25];
    var _basePlacement = getBasePlacement(placement);
    var isStartVariation = getVariation(placement) === start;
    var isVertical = [top, bottom].indexOf(_basePlacement) >= 0;
    var len = isVertical ? "width" : "height";
    var overflow = detectOverflow(state, {
      placement,
      boundary,
      rootBoundary,
      altBoundary,
      padding
    });
    var mainVariationSide = isVertical ? isStartVariation ? right : left : isStartVariation ? bottom : top;
    if (referenceRect[len] > popperRect[len]) {
      mainVariationSide = getOppositePlacement(mainVariationSide);
    }
    var altVariationSide = getOppositePlacement(mainVariationSide);
    var checks = [];
    if (checkMainAxis) {
      checks.push(overflow[_basePlacement] <= 0);
    }
    if (checkAltAxis) {
      checks.push(overflow[mainVariationSide] <= 0, overflow[altVariationSide] <= 0);
    }
    if (checks.every(function(check) {
      return check;
    })) {
      firstFittingPlacement = placement;
      makeFallbackChecks = false;
      break;
    }
    checksMap.set(placement, checks);
  }
  if (makeFallbackChecks) {
    var numberOfChecks = flipVariations ? 3 : 1;
    var _loop = /* @__PURE__ */ __name(function _loop2(_i2) {
      var fittingPlacement = placements2.find(function(placement2) {
        var checks2 = checksMap.get(placement2);
        if (checks2) {
          return checks2.slice(0, _i2).every(function(check) {
            return check;
          });
        }
      });
      if (fittingPlacement) {
        firstFittingPlacement = fittingPlacement;
        return "break";
      }
    }, "_loop");
    for (var _i = numberOfChecks; _i > 0; _i--) {
      var _ret = _loop(_i);
      if (_ret === "break")
        break;
    }
  }
  if (state.placement !== firstFittingPlacement) {
    state.modifiersData[name]._skip = true;
    state.placement = firstFittingPlacement;
    state.reset = true;
  }
}
__name(flip, "flip");
var flip_default = {
  name: "flip",
  enabled: true,
  phase: "main",
  fn: flip,
  requiresIfExists: ["offset"],
  data: {
    _skip: false
  }
};

// node_modules/@popperjs/core/lib/modifiers/hide.js
function getSideOffsets(overflow, rect, preventedOffsets) {
  if (preventedOffsets === void 0) {
    preventedOffsets = {
      x: 0,
      y: 0
    };
  }
  return {
    top: overflow.top - rect.height - preventedOffsets.y,
    right: overflow.right - rect.width + preventedOffsets.x,
    bottom: overflow.bottom - rect.height + preventedOffsets.y,
    left: overflow.left - rect.width - preventedOffsets.x
  };
}
__name(getSideOffsets, "getSideOffsets");
function isAnySideFullyClipped(overflow) {
  return [top, right, bottom, left].some(function(side) {
    return overflow[side] >= 0;
  });
}
__name(isAnySideFullyClipped, "isAnySideFullyClipped");
function hide(_ref) {
  var state = _ref.state, name = _ref.name;
  var referenceRect = state.rects.reference;
  var popperRect = state.rects.popper;
  var preventedOffsets = state.modifiersData.preventOverflow;
  var referenceOverflow = detectOverflow(state, {
    elementContext: "reference"
  });
  var popperAltOverflow = detectOverflow(state, {
    altBoundary: true
  });
  var referenceClippingOffsets = getSideOffsets(referenceOverflow, referenceRect);
  var popperEscapeOffsets = getSideOffsets(popperAltOverflow, popperRect, preventedOffsets);
  var isReferenceHidden = isAnySideFullyClipped(referenceClippingOffsets);
  var hasPopperEscaped = isAnySideFullyClipped(popperEscapeOffsets);
  state.modifiersData[name] = {
    referenceClippingOffsets,
    popperEscapeOffsets,
    isReferenceHidden,
    hasPopperEscaped
  };
  state.attributes.popper = Object.assign({}, state.attributes.popper, {
    "data-popper-reference-hidden": isReferenceHidden,
    "data-popper-escaped": hasPopperEscaped
  });
}
__name(hide, "hide");
var hide_default = {
  name: "hide",
  enabled: true,
  phase: "main",
  requiresIfExists: ["preventOverflow"],
  fn: hide
};

// node_modules/@popperjs/core/lib/modifiers/offset.js
function distanceAndSkiddingToXY(placement, rects, offset2) {
  var basePlacement = getBasePlacement(placement);
  var invertDistance = [left, top].indexOf(basePlacement) >= 0 ? -1 : 1;
  var _ref = typeof offset2 === "function" ? offset2(Object.assign({}, rects, {
    placement
  })) : offset2, skidding = _ref[0], distance = _ref[1];
  skidding = skidding || 0;
  distance = (distance || 0) * invertDistance;
  return [left, right].indexOf(basePlacement) >= 0 ? {
    x: distance,
    y: skidding
  } : {
    x: skidding,
    y: distance
  };
}
__name(distanceAndSkiddingToXY, "distanceAndSkiddingToXY");
function offset(_ref2) {
  var state = _ref2.state, options3 = _ref2.options, name = _ref2.name;
  var _options$offset = options3.offset, offset2 = _options$offset === void 0 ? [0, 0] : _options$offset;
  var data = placements.reduce(function(acc, placement) {
    acc[placement] = distanceAndSkiddingToXY(placement, state.rects, offset2);
    return acc;
  }, {});
  var _data$state$placement = data[state.placement], x11 = _data$state$placement.x, y13 = _data$state$placement.y;
  if (state.modifiersData.popperOffsets != null) {
    state.modifiersData.popperOffsets.x += x11;
    state.modifiersData.popperOffsets.y += y13;
  }
  state.modifiersData[name] = data;
}
__name(offset, "offset");
var offset_default = {
  name: "offset",
  enabled: true,
  phase: "main",
  requires: ["popperOffsets"],
  fn: offset
};

// node_modules/@popperjs/core/lib/modifiers/popperOffsets.js
function popperOffsets(_ref) {
  var state = _ref.state, name = _ref.name;
  state.modifiersData[name] = computeOffsets({
    reference: state.rects.reference,
    element: state.rects.popper,
    strategy: "absolute",
    placement: state.placement
  });
}
__name(popperOffsets, "popperOffsets");
var popperOffsets_default = {
  name: "popperOffsets",
  enabled: true,
  phase: "read",
  fn: popperOffsets,
  data: {}
};

// node_modules/@popperjs/core/lib/utils/getAltAxis.js
function getAltAxis(axis) {
  return axis === "x" ? "y" : "x";
}
__name(getAltAxis, "getAltAxis");

// node_modules/@popperjs/core/lib/modifiers/preventOverflow.js
function preventOverflow(_ref) {
  var state = _ref.state, options3 = _ref.options, name = _ref.name;
  var _options$mainAxis = options3.mainAxis, checkMainAxis = _options$mainAxis === void 0 ? true : _options$mainAxis, _options$altAxis = options3.altAxis, checkAltAxis = _options$altAxis === void 0 ? false : _options$altAxis, boundary = options3.boundary, rootBoundary = options3.rootBoundary, altBoundary = options3.altBoundary, padding = options3.padding, _options$tether = options3.tether, tether = _options$tether === void 0 ? true : _options$tether, _options$tetherOffset = options3.tetherOffset, tetherOffset = _options$tetherOffset === void 0 ? 0 : _options$tetherOffset;
  var overflow = detectOverflow(state, {
    boundary,
    rootBoundary,
    padding,
    altBoundary
  });
  var basePlacement = getBasePlacement(state.placement);
  var variation = getVariation(state.placement);
  var isBasePlacement = !variation;
  var mainAxis = getMainAxisFromPlacement(basePlacement);
  var altAxis = getAltAxis(mainAxis);
  var popperOffsets2 = state.modifiersData.popperOffsets;
  var referenceRect = state.rects.reference;
  var popperRect = state.rects.popper;
  var tetherOffsetValue = typeof tetherOffset === "function" ? tetherOffset(Object.assign({}, state.rects, {
    placement: state.placement
  })) : tetherOffset;
  var normalizedTetherOffsetValue = typeof tetherOffsetValue === "number" ? {
    mainAxis: tetherOffsetValue,
    altAxis: tetherOffsetValue
  } : Object.assign({
    mainAxis: 0,
    altAxis: 0
  }, tetherOffsetValue);
  var offsetModifierState = state.modifiersData.offset ? state.modifiersData.offset[state.placement] : null;
  var data = {
    x: 0,
    y: 0
  };
  if (!popperOffsets2) {
    return;
  }
  if (checkMainAxis) {
    var _offsetModifierState$;
    var mainSide = mainAxis === "y" ? top : left;
    var altSide = mainAxis === "y" ? bottom : right;
    var len = mainAxis === "y" ? "height" : "width";
    var offset2 = popperOffsets2[mainAxis];
    var min2 = offset2 + overflow[mainSide];
    var max2 = offset2 - overflow[altSide];
    var additive = tether ? -popperRect[len] / 2 : 0;
    var minLen = variation === start ? referenceRect[len] : popperRect[len];
    var maxLen = variation === start ? -popperRect[len] : -referenceRect[len];
    var arrowElement = state.elements.arrow;
    var arrowRect = tether && arrowElement ? getLayoutRect(arrowElement) : {
      width: 0,
      height: 0
    };
    var arrowPaddingObject = state.modifiersData["arrow#persistent"] ? state.modifiersData["arrow#persistent"].padding : getFreshSideObject();
    var arrowPaddingMin = arrowPaddingObject[mainSide];
    var arrowPaddingMax = arrowPaddingObject[altSide];
    var arrowLen = within(0, referenceRect[len], arrowRect[len]);
    var minOffset = isBasePlacement ? referenceRect[len] / 2 - additive - arrowLen - arrowPaddingMin - normalizedTetherOffsetValue.mainAxis : minLen - arrowLen - arrowPaddingMin - normalizedTetherOffsetValue.mainAxis;
    var maxOffset = isBasePlacement ? -referenceRect[len] / 2 + additive + arrowLen + arrowPaddingMax + normalizedTetherOffsetValue.mainAxis : maxLen + arrowLen + arrowPaddingMax + normalizedTetherOffsetValue.mainAxis;
    var arrowOffsetParent = state.elements.arrow && getOffsetParent(state.elements.arrow);
    var clientOffset = arrowOffsetParent ? mainAxis === "y" ? arrowOffsetParent.clientTop || 0 : arrowOffsetParent.clientLeft || 0 : 0;
    var offsetModifierValue = (_offsetModifierState$ = offsetModifierState == null ? void 0 : offsetModifierState[mainAxis]) != null ? _offsetModifierState$ : 0;
    var tetherMin = offset2 + minOffset - offsetModifierValue - clientOffset;
    var tetherMax = offset2 + maxOffset - offsetModifierValue;
    var preventedOffset = within(tether ? min(min2, tetherMin) : min2, offset2, tether ? max(max2, tetherMax) : max2);
    popperOffsets2[mainAxis] = preventedOffset;
    data[mainAxis] = preventedOffset - offset2;
  }
  if (checkAltAxis) {
    var _offsetModifierState$2;
    var _mainSide = mainAxis === "x" ? top : left;
    var _altSide = mainAxis === "x" ? bottom : right;
    var _offset = popperOffsets2[altAxis];
    var _len = altAxis === "y" ? "height" : "width";
    var _min = _offset + overflow[_mainSide];
    var _max = _offset - overflow[_altSide];
    var isOriginSide = [top, left].indexOf(basePlacement) !== -1;
    var _offsetModifierValue = (_offsetModifierState$2 = offsetModifierState == null ? void 0 : offsetModifierState[altAxis]) != null ? _offsetModifierState$2 : 0;
    var _tetherMin = isOriginSide ? _min : _offset - referenceRect[_len] - popperRect[_len] - _offsetModifierValue + normalizedTetherOffsetValue.altAxis;
    var _tetherMax = isOriginSide ? _offset + referenceRect[_len] + popperRect[_len] - _offsetModifierValue - normalizedTetherOffsetValue.altAxis : _max;
    var _preventedOffset = tether && isOriginSide ? withinMaxClamp(_tetherMin, _offset, _tetherMax) : within(tether ? _tetherMin : _min, _offset, tether ? _tetherMax : _max);
    popperOffsets2[altAxis] = _preventedOffset;
    data[altAxis] = _preventedOffset - _offset;
  }
  state.modifiersData[name] = data;
}
__name(preventOverflow, "preventOverflow");
var preventOverflow_default = {
  name: "preventOverflow",
  enabled: true,
  phase: "main",
  fn: preventOverflow,
  requiresIfExists: ["offset"]
};

// node_modules/@popperjs/core/lib/dom-utils/getHTMLElementScroll.js
function getHTMLElementScroll(element) {
  return {
    scrollLeft: element.scrollLeft,
    scrollTop: element.scrollTop
  };
}
__name(getHTMLElementScroll, "getHTMLElementScroll");

// node_modules/@popperjs/core/lib/dom-utils/getNodeScroll.js
function getNodeScroll(node) {
  if (node === getWindow(node) || !isHTMLElement(node)) {
    return getWindowScroll(node);
  } else {
    return getHTMLElementScroll(node);
  }
}
__name(getNodeScroll, "getNodeScroll");

// node_modules/@popperjs/core/lib/dom-utils/getCompositeRect.js
function isElementScaled(element) {
  var rect = element.getBoundingClientRect();
  var scaleX = round(rect.width) / element.offsetWidth || 1;
  var scaleY = round(rect.height) / element.offsetHeight || 1;
  return scaleX !== 1 || scaleY !== 1;
}
__name(isElementScaled, "isElementScaled");
function getCompositeRect(elementOrVirtualElement, offsetParent, isFixed) {
  if (isFixed === void 0) {
    isFixed = false;
  }
  var isOffsetParentAnElement = isHTMLElement(offsetParent);
  var offsetParentIsScaled = isHTMLElement(offsetParent) && isElementScaled(offsetParent);
  var documentElement = getDocumentElement(offsetParent);
  var rect = getBoundingClientRect(elementOrVirtualElement, offsetParentIsScaled, isFixed);
  var scroll = {
    scrollLeft: 0,
    scrollTop: 0
  };
  var offsets = {
    x: 0,
    y: 0
  };
  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {
    if (getNodeName(offsetParent) !== "body" || isScrollParent(documentElement)) {
      scroll = getNodeScroll(offsetParent);
    }
    if (isHTMLElement(offsetParent)) {
      offsets = getBoundingClientRect(offsetParent, true);
      offsets.x += offsetParent.clientLeft;
      offsets.y += offsetParent.clientTop;
    } else if (documentElement) {
      offsets.x = getWindowScrollBarX(documentElement);
    }
  }
  return {
    x: rect.left + scroll.scrollLeft - offsets.x,
    y: rect.top + scroll.scrollTop - offsets.y,
    width: rect.width,
    height: rect.height
  };
}
__name(getCompositeRect, "getCompositeRect");

// node_modules/@popperjs/core/lib/utils/orderModifiers.js
function order(modifiers) {
  var map = /* @__PURE__ */ new Map();
  var visited = /* @__PURE__ */ new Set();
  var result = [];
  modifiers.forEach(function(modifier) {
    map.set(modifier.name, modifier);
  });
  function sort(modifier) {
    visited.add(modifier.name);
    var requires = [].concat(modifier.requires || [], modifier.requiresIfExists || []);
    requires.forEach(function(dep) {
      if (!visited.has(dep)) {
        var depModifier = map.get(dep);
        if (depModifier) {
          sort(depModifier);
        }
      }
    });
    result.push(modifier);
  }
  __name(sort, "sort");
  modifiers.forEach(function(modifier) {
    if (!visited.has(modifier.name)) {
      sort(modifier);
    }
  });
  return result;
}
__name(order, "order");
function orderModifiers(modifiers) {
  var orderedModifiers = order(modifiers);
  return modifierPhases.reduce(function(acc, phase) {
    return acc.concat(orderedModifiers.filter(function(modifier) {
      return modifier.phase === phase;
    }));
  }, []);
}
__name(orderModifiers, "orderModifiers");

// node_modules/@popperjs/core/lib/utils/debounce.js
function debounce(fn2) {
  var pending;
  return function() {
    if (!pending) {
      pending = new Promise(function(resolve) {
        Promise.resolve().then(function() {
          pending = void 0;
          resolve(fn2());
        });
      });
    }
    return pending;
  };
}
__name(debounce, "debounce");

// node_modules/@popperjs/core/lib/utils/mergeByName.js
function mergeByName(modifiers) {
  var merged = modifiers.reduce(function(merged2, current) {
    var existing = merged2[current.name];
    merged2[current.name] = existing ? Object.assign({}, existing, current, {
      options: Object.assign({}, existing.options, current.options),
      data: Object.assign({}, existing.data, current.data)
    }) : current;
    return merged2;
  }, {});
  return Object.keys(merged).map(function(key) {
    return merged[key];
  });
}
__name(mergeByName, "mergeByName");

// node_modules/@popperjs/core/lib/createPopper.js
var DEFAULT_OPTIONS = {
  placement: "bottom",
  modifiers: [],
  strategy: "absolute"
};
function areValidElements() {
  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
    args[_key] = arguments[_key];
  }
  return !args.some(function(element) {
    return !(element && typeof element.getBoundingClientRect === "function");
  });
}
__name(areValidElements, "areValidElements");
function popperGenerator(generatorOptions) {
  if (generatorOptions === void 0) {
    generatorOptions = {};
  }
  var _generatorOptions = generatorOptions, _generatorOptions$def = _generatorOptions.defaultModifiers, defaultModifiers = _generatorOptions$def === void 0 ? [] : _generatorOptions$def, _generatorOptions$def2 = _generatorOptions.defaultOptions, defaultOptions = _generatorOptions$def2 === void 0 ? DEFAULT_OPTIONS : _generatorOptions$def2;
  return /* @__PURE__ */ __name(function createPopper2(reference2, popper2, options3) {
    if (options3 === void 0) {
      options3 = defaultOptions;
    }
    var state = {
      placement: "bottom",
      orderedModifiers: [],
      options: Object.assign({}, DEFAULT_OPTIONS, defaultOptions),
      modifiersData: {},
      elements: {
        reference: reference2,
        popper: popper2
      },
      attributes: {},
      styles: {}
    };
    var effectCleanupFns = [];
    var isDestroyed = false;
    var instance = {
      state,
      setOptions: /* @__PURE__ */ __name(function setOptions2(setOptionsAction) {
        var options4 = typeof setOptionsAction === "function" ? setOptionsAction(state.options) : setOptionsAction;
        cleanupModifierEffects();
        state.options = Object.assign({}, defaultOptions, state.options, options4);
        state.scrollParents = {
          reference: isElement(reference2) ? listScrollParents(reference2) : reference2.contextElement ? listScrollParents(reference2.contextElement) : [],
          popper: listScrollParents(popper2)
        };
        var orderedModifiers = orderModifiers(mergeByName([].concat(defaultModifiers, state.options.modifiers)));
        state.orderedModifiers = orderedModifiers.filter(function(m26) {
          return m26.enabled;
        });
        if (false) {
          var modifiers = uniqueBy([].concat(orderedModifiers, state.options.modifiers), function(_ref) {
            var name = _ref.name;
            return name;
          });
          validateModifiers(modifiers);
          if (getBasePlacement(state.options.placement) === auto) {
            var flipModifier = state.orderedModifiers.find(function(_ref2) {
              var name = _ref2.name;
              return name === "flip";
            });
            if (!flipModifier) {
              console.error(['Popper: "auto" placements require the "flip" modifier be', "present and enabled to work."].join(" "));
            }
          }
          var _getComputedStyle = getComputedStyle2(popper2), marginTop = _getComputedStyle.marginTop, marginRight = _getComputedStyle.marginRight, marginBottom = _getComputedStyle.marginBottom, marginLeft = _getComputedStyle.marginLeft;
          if ([marginTop, marginRight, marginBottom, marginLeft].some(function(margin) {
            return parseFloat(margin);
          })) {
            console.warn(['Popper: CSS "margin" styles cannot be used to apply padding', "between the popper and its reference element or boundary.", "To replicate margin, use the `offset` modifier, as well as", "the `padding` option in the `preventOverflow` and `flip`", "modifiers."].join(" "));
          }
        }
        runModifierEffects();
        return instance.update();
      }, "setOptions"),
      forceUpdate: /* @__PURE__ */ __name(function forceUpdate() {
        if (isDestroyed) {
          return;
        }
        var _state$elements = state.elements, reference3 = _state$elements.reference, popper3 = _state$elements.popper;
        if (!areValidElements(reference3, popper3)) {
          if (false) {
            console.error(INVALID_ELEMENT_ERROR);
          }
          return;
        }
        state.rects = {
          reference: getCompositeRect(reference3, getOffsetParent(popper3), state.options.strategy === "fixed"),
          popper: getLayoutRect(popper3)
        };
        state.reset = false;
        state.placement = state.options.placement;
        state.orderedModifiers.forEach(function(modifier) {
          return state.modifiersData[modifier.name] = Object.assign({}, modifier.data);
        });
        var __debug_loops__ = 0;
        for (var index = 0; index < state.orderedModifiers.length; index++) {
          if (false) {
            __debug_loops__ += 1;
            if (__debug_loops__ > 100) {
              console.error(INFINITE_LOOP_ERROR);
              break;
            }
          }
          if (state.reset === true) {
            state.reset = false;
            index = -1;
            continue;
          }
          var _state$orderedModifie = state.orderedModifiers[index], fn2 = _state$orderedModifie.fn, _state$orderedModifie2 = _state$orderedModifie.options, _options = _state$orderedModifie2 === void 0 ? {} : _state$orderedModifie2, name = _state$orderedModifie.name;
          if (typeof fn2 === "function") {
            state = fn2({
              state,
              options: _options,
              name,
              instance
            }) || state;
          }
        }
      }, "forceUpdate"),
      update: debounce(function() {
        return new Promise(function(resolve) {
          instance.forceUpdate();
          resolve(state);
        });
      }),
      destroy: /* @__PURE__ */ __name(function destroy() {
        cleanupModifierEffects();
        isDestroyed = true;
      }, "destroy")
    };
    if (!areValidElements(reference2, popper2)) {
      if (false) {
        console.error(INVALID_ELEMENT_ERROR);
      }
      return instance;
    }
    instance.setOptions(options3).then(function(state2) {
      if (!isDestroyed && options3.onFirstUpdate) {
        options3.onFirstUpdate(state2);
      }
    });
    function runModifierEffects() {
      state.orderedModifiers.forEach(function(_ref3) {
        var name = _ref3.name, _ref3$options = _ref3.options, options4 = _ref3$options === void 0 ? {} : _ref3$options, effect4 = _ref3.effect;
        if (typeof effect4 === "function") {
          var cleanupFn = effect4({
            state,
            name,
            instance,
            options: options4
          });
          var noopFn = /* @__PURE__ */ __name(function noopFn2() {
          }, "noopFn");
          effectCleanupFns.push(cleanupFn || noopFn);
        }
      });
    }
    __name(runModifierEffects, "runModifierEffects");
    function cleanupModifierEffects() {
      effectCleanupFns.forEach(function(fn2) {
        return fn2();
      });
      effectCleanupFns = [];
    }
    __name(cleanupModifierEffects, "cleanupModifierEffects");
    return instance;
  }, "createPopper");
}
__name(popperGenerator, "popperGenerator");

// node_modules/@patternfly/pfe-core/controllers/floating-dom-controller.js
var f11 = /* @__PURE__ */ __name((t16, e25, i25) => {
  if (!e25.has(t16))
    throw TypeError("Cannot " + i25);
}, "f");
var o14 = /* @__PURE__ */ __name((t16, e25, i25) => (f11(t16, e25, "read from private field"), i25 ? i25.call(t16) : e25.get(t16)), "o");
var l17 = /* @__PURE__ */ __name((t16, e25, i25) => {
  if (e25.has(t16))
    throw TypeError("Cannot add the same private member more than once");
  e25 instanceof WeakSet ? e25.add(t16) : e25.set(t16, i25);
}, "l");
var a12 = /* @__PURE__ */ __name((t16, e25, i25, p22) => (f11(t16, e25, "write to private field"), p22 ? p22.call(t16, i25) : e25.set(t16, i25), i25), "a");
var R3 = popperGenerator({ defaultModifiers: [eventListeners_default, popperOffsets_default, computeStyles_default, applyStyles_default, offset_default, flip_default, preventOverflow_default, arrow_default, hide_default] });
var n15;
var r9;
var s8;
var m11 = /* @__PURE__ */ __name(class {
  constructor(e25) {
    this.host = e25;
    l17(this, n15, false);
    l17(this, r9, void 0);
    l17(this, s8, false);
    e25.addController(this);
  }
  get initialized() {
    return o14(this, s8);
  }
  set initialized(e25) {
    a12(this, s8, e25), this.host.requestUpdate();
  }
  get open() {
    return o14(this, n15);
  }
  set open(e25) {
    a12(this, n15, e25), e25 && o14(this, r9)?.update(), this.host.requestUpdate();
  }
  show() {
    this.open = true;
  }
  hide() {
    this.open = false;
  }
  create(e25, i25, p22, d17) {
    e25 && i25 && (o14(this, r9) ?? a12(this, r9, R3(e25, i25, { placement: p22, modifiers: [{ name: "offset", options: { offset: d17 } }, { name: "flip", options: { fallbackPlacements: ["top", "right", "left", "bottom"] } }] })), this.initialized || (this.initialized = true));
  }
}, "m");
n15 = /* @__PURE__ */ new WeakMap(), r9 = /* @__PURE__ */ new WeakMap(), s8 = /* @__PURE__ */ new WeakMap();

// node_modules/@patternfly/pfe-tooltip/BaseTooltip.js
var L4 = Object.defineProperty;
var x4 = Object.getOwnPropertyDescriptor;
var v5 = /* @__PURE__ */ __name((o21, t16, r18, c23) => {
  for (var a19 = c23 > 1 ? void 0 : c23 ? x4(t16, r18) : t16, f25 = o21.length - 1, h24; f25 >= 0; f25--)
    (h24 = o21[f25]) && (a19 = (c23 ? h24(t16, r18, a19) : h24(a19)) || a19);
  return c23 && a19 && L4(t16, r18, a19), a19;
}, "v");
var _3 = /* @__PURE__ */ __name((o21, t16, r18) => {
  if (!t16.has(o21))
    throw TypeError("Cannot " + r18);
}, "_");
var e12 = /* @__PURE__ */ __name((o21, t16, r18) => (_3(o21, t16, "read from private field"), r18 ? r18.call(o21) : t16.get(o21)), "e");
var i17 = /* @__PURE__ */ __name((o21, t16, r18) => {
  if (t16.has(o21))
    throw TypeError("Cannot add the same private member more than once");
  t16 instanceof WeakSet ? t16.add(o21) : t16.set(o21, r18);
}, "i");
var b6 = /* @__PURE__ */ __name((o21, t16, r18) => (_3(o21, t16, "access private method"), r18), "b");
var T3 = i`[class*=pf-c-],[class*=pf-c-]::after,[class*=pf-c-]::before{padding:0;margin:0;background-color:transparent}#tooltip{color:var(--pf-c-tooltip__content--Color,var(--pf-global--Color--light-100,#fff));background-color:var(--pf-c-toolip__content--BackgroundColor,var(--pf-global--BackgroundColor--dark-100,#151515));line-height:var(--pf-c-tooltip--line-height, 1.5);opacity:1;transition:opacity .3s cubic-bezier(.54, 1.5, .38, 1.11) 0s;position:relative;max-width:var(--pf-c-tooltip--MaxWidth,18.75rem);box-shadow:var(--pf-c-tooltip--BoxShadow,var(--pf-global--BoxShadow--md,0 .25rem .5rem 0 rgba(3,3,3,.12),0 0 .25rem 0 rgba(3,3,3,.06)));z-index:999}#tooltip[aria-hidden=true]{opacity:0;transition:opacity .3s cubic-bezier(.54, 1.5, .38, 1.11) 0s;pointer-events:none}[data-popper-placement=top-end] .arrow,[data-popper-placement=top-start] .arrow,[data-popper-placement=top] .arrow{bottom:0;left:50%;transform:translateX(var(--pf-c-tooltip__arrow--m-top--TranslateX,-50%)) translateY(var(--pf-c-tooltip__arrow--m-top--TranslateY,50%)) rotate(var(--pf-c-tooltip__arrow--m-top--Rotate,45deg))}[data-popper-placement=bottom-end] .arrow,[data-popper-placement=bottom-start] .arrow,[data-popper-placement=bottom] .arrow{top:0;left:50%;transform:translateX(var(--pf-c-tooltip__arrow--m-bottom--TranslateX,-50%)) translateY(var(--pf-c-tooltip__arrow--m-bottom--TranslateY,-50%)) rotate(var(--pf-c-tooltip__arrow--m-bottom--Rotate,45deg))}[data-popper-placement=left-end] .arrow,[data-popper-placement=left-start] .arrow,[data-popper-placement=left] .arrow{top:50%;right:0;transform:translateX(var(--pf-c-tooltip__arrow--m-left--TranslateX,50%)) translateY(var(--pf-c-tooltip__arrow--m-left--TranslateY,-50%)) rotate(var(--pf-c-tooltip__arrow--m-left--Rotate,45deg))}[data-popper-placement=right-end] .arrow,[data-popper-placement=right-start] .arrow,[data-popper-placement=right] .arrow{top:50%;left:0;transform:translateX(var(--pf-c-tooltip__arrow--m-right--TranslateX,-50%)) translateY(var(--pf-c-tooltip__arrow--m-right--TranslateY,-50%)) rotate(var(--pf-c-tooltip__arrow--m-right--Rotate,45deg))}[data-popper-placement=left-start] .arrow,[data-popper-placement=right-start] .arrow{top:var(--pf-c-tooltip__arrow--Height,.5rem)}[data-popper-placement=left-end] .arrow,[data-popper-placement=right-end] .arrow{top:auto;bottom:0}[data-popper-placement=bottom-start] .arrow,[data-popper-placement=top-start] .arrow{left:var(--pf-c-tooltip__arrow--Width,.5rem)}[data-popper-placement=bottom-end] .arrow,[data-popper-placement=top-end] .arrow{right:0;left:auto}.content{position:relative;padding:var(--pf-c-tooltip__content--PaddingTop,var(--pf-global--spacer--sm,.5rem)) var(--pf-c-tooltip__content--PaddingRight,var(--pf-global--spacer--sm,.5rem)) var(--pf-c-tooltip__content--PaddingBottom,var(--pf-global--spacer--sm,.5rem)) var(--pf-c-tooltip__content--PaddingLeft,var(--pf-global--spacer--sm,.5rem));font-size:var(--pf-c-tooltip__content--FontSize, var(--pf-global--FontSize--sm, .875rem));color:var(--pf-c-tooltip__content--Color,var(--pf-global--Color--light-100,#fff));text-align:center;word-break:break-word;background-color:var(--pf-c-tooltip__content--BackgroundColor,var(--pf-global--BackgroundColor--dark-100,#151515))}.arrow{position:absolute;width:var(--pf-c-tooltip__arrow--Width,.5rem);height:var(--pf-c-tooltip__arrow--Height,.5rem);pointer-events:none;background-color:var(--pf-c-tooltip__content--BackgroundColor,var(--pf-global--BackgroundColor--dark-100,#151515))}#invoker{width:fit-content;display:inline-block}`;
var u8 = T3;
var p10;
var d11;
var C5;
var n16;
var g5;
var s9;
var w3;
var m12;
var y5;
var l18 = /* @__PURE__ */ __name(class extends s4 {
  constructor() {
    super(...arguments);
    i17(this, d11);
    i17(this, n16);
    i17(this, s9);
    i17(this, m12);
    this.position = "top";
    this.offset = [0, 15];
    i17(this, p10, new m11(this));
  }
  connectedCallback() {
    super.connectedCallback(), ["top", "bottom"].includes(this.position) || (this.offset = [-4, 15]), b6(this, m12, y5).call(this);
  }
  firstUpdated() {
    e12(this, n16, g5) && e12(this, s9, w3) && e12(this, p10).create(e12(this, n16, g5), e12(this, s9, w3), this.position, this.offset);
  }
  show() {
    e12(this, p10).show();
  }
  hide() {
    e12(this, p10).hide();
  }
  render() {
    return y`<div id="invoker" role="tooltip" tabindex="0" aria-labelledby="tooltip"><slot></slot></div><div id="tooltip" aria-hidden="${!e12(this, d11, C5)}"><div class="arrow"></div><div id="content" class="content"><slot name="content"></slot></div></div>`;
  }
}, "l");
p10 = /* @__PURE__ */ new WeakMap(), d11 = /* @__PURE__ */ new WeakSet(), C5 = /* @__PURE__ */ __name(function() {
  return e12(this, p10).open;
}, "C"), n16 = /* @__PURE__ */ new WeakSet(), g5 = /* @__PURE__ */ __name(function() {
  return this.shadowRoot?.querySelector("#invoker") ?? null;
}, "g"), s9 = /* @__PURE__ */ new WeakSet(), w3 = /* @__PURE__ */ __name(function() {
  return this.shadowRoot?.querySelector("#tooltip") ?? null;
}, "w"), m12 = /* @__PURE__ */ new WeakSet(), y5 = /* @__PURE__ */ __name(function() {
  this.addEventListener("focus", this.show), this.addEventListener("blur", this.hide), this.addEventListener("tap", this.show), this.addEventListener("click", this.show), this.addEventListener("mouseenter", this.show), this.addEventListener("mouseleave", this.hide);
}, "y"), l18.styles = [u8], v5([e5({ reflect: true })], l18.prototype, "position", 2), v5([e5({ converter: { fromAttribute(o21) {
  return o21.split(",").map((t16) => parseInt(t16.trim()));
} } })], l18.prototype, "offset", 2);

// elements/rh-tooltip/rh-tooltip.css.js
init_lit();
var styles22 = i`:host([on="dark"]) {
  --pf-c-tooltip__content--BackgroundColor: #ffffff;
  --pf-c-tooltip__content--Color: #151515;
}

:host {
  --pf-c-tooltip--BoxShadow: var(--rh-box-shadow-sm, 0 2px 4px 0 rgba(21, 21, 21, 0.2));
  --pf-c-tooltip__content--PaddingTop: var(--rh-space-lg, 16px);
  --pf-c-tooltip__content--PaddingRight: var(--rh-space-lg, 16px);
  --pf-c-tooltip__content--PaddingBottom: var(--rh-space-lg, 16px);
  --pf-c-tooltip__content--PaddingLeft: var(--rh-space-lg, 16px);
  --pf-c-tooltip__arrow--Width: 11px;
  --pf-c-tooltip__arrow--Height: 11px;
}
`;
var rh_tooltip_css_default = styles22;

// elements/rh-tooltip/rh-tooltip.js
var RhTooltip = /* @__PURE__ */ __name(class RhTooltip2 extends l18 {
  constructor() {
    super();
    this.on = "light";
    if (["top", "bottom"].includes(this.position)) {
      this.offset = [-4, 16];
    }
  }
}, "RhTooltip");
RhTooltip.version = "{{version}}";
RhTooltip.styles = [...l18.styles, rh_tooltip_css_default];
__decorate([
  C2(),
  e5({ reflect: true })
], RhTooltip.prototype, "on", void 0);
RhTooltip = __decorate([
  e4("rh-tooltip")
], RhTooltip);

// components.ts
init_lit();
init_pfe_accordion();

// node_modules/@patternfly/pfe-autocomplete/node_modules/lit/index.js
init_reactive_element();
init_lit_html();
init_lit_element();

// node_modules/@patternfly/pfe-autocomplete/node_modules/lit/decorators.js
init_custom_element();
init_property();
init_state();
init_event_options();
init_query();
init_query_all();
init_query_async();
init_query_assigned_elements();
init_query_assigned_nodes();

// node_modules/@patternfly/pfe-autocomplete/pfe-autocomplete.js
init_core();
init_decorators();
init_logger();

// node_modules/lit-html/directives/repeat.js
init_lit_html();

// node_modules/lit-html/directive-helpers.js
init_lit_html();
var { I: l19 } = L;
var c13 = /* @__PURE__ */ __name(() => document.createComment(""), "c");
var r10 = /* @__PURE__ */ __name((o21, t16, i25) => {
  var n25;
  const d17 = o21._$AA.parentNode, v13 = void 0 === t16 ? o21._$AB : t16._$AA;
  if (void 0 === i25) {
    const t17 = d17.insertBefore(c13(), v13), n26 = d17.insertBefore(c13(), v13);
    i25 = new l19(t17, n26, o21, o21.options);
  } else {
    const l25 = i25._$AB.nextSibling, t17 = i25._$AM, e25 = t17 !== o21;
    if (e25) {
      let l26;
      null === (n25 = i25._$AQ) || void 0 === n25 || n25.call(i25, o21), i25._$AM = o21, void 0 !== i25._$AP && (l26 = o21._$AU) !== t17._$AU && i25._$AP(l26);
    }
    if (l25 !== v13 || e25) {
      let o22 = i25._$AA;
      for (; o22 !== l25; ) {
        const l26 = o22.nextSibling;
        d17.insertBefore(o22, v13), o22 = l26;
      }
    }
  }
  return i25;
}, "r");
var u9 = /* @__PURE__ */ __name((o21, l25, t16 = o21) => (o21._$AI(l25, t16), o21), "u");
var f12 = {};
var s10 = /* @__PURE__ */ __name((o21, l25 = f12) => o21._$AH = l25, "s");
var m13 = /* @__PURE__ */ __name((o21) => o21._$AH, "m");
var p11 = /* @__PURE__ */ __name((o21) => {
  var l25;
  null === (l25 = o21._$AP) || void 0 === l25 || l25.call(o21, false, true);
  let t16 = o21._$AA;
  const i25 = o21._$AB.nextSibling;
  for (; t16 !== i25; ) {
    const o22 = t16.nextSibling;
    t16.remove(), t16 = o22;
  }
}, "p");

// node_modules/lit-html/directives/repeat.js
var u10 = /* @__PURE__ */ __name((e25, s20, t16) => {
  const r18 = /* @__PURE__ */ new Map();
  for (let l25 = s20; l25 <= t16; l25++)
    r18.set(e25[l25], l25);
  return r18;
}, "u");
var c14 = e8(class extends i10 {
  constructor(e25) {
    if (super(e25), e25.type !== t5.CHILD)
      throw Error("repeat() can only be used in text expressions");
  }
  ht(e25, s20, t16) {
    let r18;
    void 0 === t16 ? t16 = s20 : void 0 !== s20 && (r18 = s20);
    const l25 = [], o21 = [];
    let i25 = 0;
    for (const s21 of e25)
      l25[i25] = r18 ? r18(s21, i25) : i25, o21[i25] = t16(s21, i25), i25++;
    return { values: o21, keys: l25 };
  }
  render(e25, s20, t16) {
    return this.ht(e25, s20, t16).values;
  }
  update(s20, [t16, r18, c23]) {
    var d17;
    const a19 = m13(s20), { values: p22, keys: v13 } = this.ht(t16, r18, c23);
    if (!Array.isArray(a19))
      return this.ut = v13, p22;
    const h24 = null !== (d17 = this.ut) && void 0 !== d17 ? d17 : this.ut = [], m26 = [];
    let y13, x11, j3 = 0, k7 = a19.length - 1, w8 = 0, A2 = p22.length - 1;
    for (; j3 <= k7 && w8 <= A2; )
      if (null === a19[j3])
        j3++;
      else if (null === a19[k7])
        k7--;
      else if (h24[j3] === v13[w8])
        m26[w8] = u9(a19[j3], p22[w8]), j3++, w8++;
      else if (h24[k7] === v13[A2])
        m26[A2] = u9(a19[k7], p22[A2]), k7--, A2--;
      else if (h24[j3] === v13[A2])
        m26[A2] = u9(a19[j3], p22[A2]), r10(s20, m26[A2 + 1], a19[j3]), j3++, A2--;
      else if (h24[k7] === v13[w8])
        m26[w8] = u9(a19[k7], p22[w8]), r10(s20, a19[j3], a19[k7]), k7--, w8++;
      else if (void 0 === y13 && (y13 = u10(v13, w8, A2), x11 = u10(h24, j3, k7)), y13.has(h24[j3]))
        if (y13.has(h24[k7])) {
          const e25 = x11.get(v13[w8]), t17 = void 0 !== e25 ? a19[e25] : null;
          if (null === t17) {
            const e26 = r10(s20, a19[j3]);
            u9(e26, p22[w8]), m26[w8] = e26;
          } else
            m26[w8] = u9(t17, p22[w8]), r10(s20, a19[j3], t17), a19[e25] = null;
          w8++;
        } else
          p11(a19[k7]), k7--;
      else
        p11(a19[j3]), j3++;
    for (; w8 <= A2; ) {
      const e25 = r10(s20, m26[A2 + 1]);
      u9(e25, p22[w8]), m26[w8++] = e25;
    }
    for (; j3 <= k7; ) {
      const e25 = a19[j3++];
      null !== e25 && p11(e25);
    }
    return this.ut = v13, s10(s20, m26), x;
  }
});

// node_modules/@patternfly/pfe-autocomplete/pfe-search-droplist.js
init_core();
init_decorators();
var g6 = Object.defineProperty;
var b7 = Object.getOwnPropertyDescriptor;
var i18 = /* @__PURE__ */ __name((a19, n25, e25, o21) => {
  for (var r18 = o21 > 1 ? void 0 : o21 ? b7(n25, e25) : n25, s20 = a19.length - 1, p22; s20 >= 0; s20--)
    (p22 = a19[s20]) && (r18 = (o21 ? p22(n25, e25, r18) : p22(r18)) || r18);
  return o21 && r18 && g6(n25, e25, r18), r18;
}, "i");
var y6 = i`:host{position:relative;display:none;font-family:var(--pfe-theme--font-family, "Red Hat Text", "RedHatText", "Overpass", Overpass, Arial, sans-serif);font-size:var(--pfe-theme--font-size, 1rem);line-height:var(--pfe-theme--line-height, 1.5)}:host([open]){display:block}:host([debug]) [aria-selected]{box-shadow:inset 0 0 0 var(--pfe-theme--ui--border-width--md,2px) var(--pfe-theme--color--feedback--critical,#a30000)}.sr-only{position:absolute;width:1px;height:1px;padding:0;margin:-1px;overflow:hidden;clip:rect(0,0,0,0);border:0}.droplist{position:absolute;top:100%;left:0;right:0;max-height:250px;z-index:9999;overflow-y:scroll;overflow-x:hidden;border:1px solid #ccc}.droplist,:host(:not([on])) .droplist,:host([on=light]) .droplist{background-color:var(--pfe-theme--color--surface--lighter,#f0f0f0);color:var(--pfe-broadcasted--text,#3c3f42)}.droplist li.active,:host(:not([on])) .droplist li.active,:host([on=light]) .droplist li.active{background-color:var(--pfe-theme--color--surface--lighter,#f0f0f0)}:host([on=dark]) .droplist{background-color:var(--pfe-theme--color--surface--darker,#3c3f42)}:host([on=dark]) .droplist li.active{background-color:var(--pfe-theme--color--surface--darkest,#151515)}:host([on=saturated]) .droplist{background-color:var(--pfe-theme--color--surface--accent,#004080)}:host([on=saturated]) .droplist li.active{background-color:var(--pfe-theme--color--surface--complement,#002952)}ul{font-family:var(--pfe-theme--font-family, "Red Hat Text", "RedHatText", "Overpass", Overpass, Arial, sans-serif);font-size:var(--pfe-theme--font-size, 1rem);line-height:var(--pfe-theme--line-height, 1.5);border-top:none;margin:0;padding:0;list-style:none;cursor:pointer}ul li{display:list-item;cursor:pointer;padding:10px;margin:0}:host([on=dark]){--pfe-clipboard--icon--Color:var(--pfe---icon--Color--dark);--pfe-clipboard--icon--Color--hover:var(--pfe---icon--Color--hover--dark)}:host([on=saturated]){--pfe-clipboard--icon--Color:var(--pfe---icon--Color--saturated);--pfe-clipboard--icon--Color--hover:var(--pfe---icon--Color--hover--saturated)}`;
var f13 = y6;
function v6(a19) {
  return a19?.tagName === "LI";
}
__name(v6, "v");
var m14 = /* @__PURE__ */ __name(class extends n6 {
  constructor(e25) {
    super("select");
    this.value = e25;
  }
}, "m");
var t9 = /* @__PURE__ */ __name(class extends s4 {
  constructor() {
    super(...arguments);
    this.on = "light";
    this.open = false;
    this.reflow = false;
    this.announceTemplate = "";
    this.activeIndex = null;
    this.data = [];
    this.ariaAnnounceText = "";
  }
  render() {
    let e25 = this.data ?? [];
    return y`<div class="suggestions-aria-help sr-only" role="status" aria-hidden="false" aria-live="polite">${this.ariaAnnounceText}</div><div class="droplist"><ul id="droplist-items" part="listbox" role="listbox" @click="${this._optionSelected}" @keyup="${this._onKeyup}" tabindex="-1">${c14(e25, (o21) => o21, (o21, r18) => y`<li id="option-${r18}" part="option item-index-${r18}" class="${o9({ active: r18 === this.activeIndex })}" aria-selected="${String(r18 === this.activeIndex)}" role="option" tabindex="-1" value="${o21}">${o21}</li>`)}</ul></div>`;
  }
  _onKeyup(e25) {
    switch (e25.key) {
      case "Enter":
      case " ":
        v6(e25.target) && this._select(e25.target);
    }
  }
  _optionSelected(e25) {
    v6(e25.target) && this._select(e25.target);
  }
  _select(e25) {
    let o21 = e25.innerText;
    this.dispatchEvent(n14("pfe-autocomplete:option-selected", { optionValue: o21 })), this.dispatchEvent(new m14(o21));
  }
  _renderOptions() {
    this.ariaAnnounceText = this.announceTemplate ? this.announceTemplate.replace("${numOptions}", this.data.length.toString()) : "";
  }
  _activeIndexChanged() {
    if (!this.data || this.data.length === 0 || this.activeIndex === null)
      return;
    let { activeElement: e25, droplist: o21 } = this;
    if (!e25 || !o21)
      return;
    let r18 = e25.offsetHeight, s20 = window.getComputedStyle(e25).getPropertyValue("margin-bottom");
    r18 += parseInt(s20, 10), o21.scrollTop = e25.offsetTop - o21.offsetHeight + r18;
  }
}, "t");
t9.version = "2.0.0-next.4", t9.styles = [f13], i18([C2(), e5({ reflect: true })], t9.prototype, "on", 2), i18([e5({ type: Boolean, reflect: true })], t9.prototype, "open", 2), i18([p3("_renderOptions"), e5({ type: Boolean, reflect: true })], t9.prototype, "reflow", 2), i18([e5({ attribute: "announce-template", reflect: true })], t9.prototype, "announceTemplate", 2), i18([p3, e5({ type: Number, reflect: true, attribute: "active-index" })], t9.prototype, "activeIndex", 2), i18([p3("_renderOptions"), e5({ attribute: false })], t9.prototype, "data", 2), i18([t3()], t9.prototype, "ariaAnnounceText", 2), i18([i4(".active")], t9.prototype, "activeElement", 2), i18([i4(".droplist")], t9.prototype, "droplist", 2), i18([o8], t9.prototype, "_onKeyup", 1), i18([o8], t9.prototype, "_optionSelected", 1), i18([o8], t9.prototype, "_renderOptions", 1), t9 = i18([e4("pfe-search-droplist"), d4()], t9);

// node_modules/@patternfly/pfe-autocomplete/pfe-autocomplete.js
var T4 = Object.defineProperty;
var D2 = Object.getOwnPropertyDescriptor;
var r11 = /* @__PURE__ */ __name((s20, o21, t16, a19) => {
  for (var i25 = a19 > 1 ? void 0 : a19 ? D2(o21, t16) : o21, p22 = s20.length - 1, d17; p22 >= 0; p22--)
    (d17 = s20[p22]) && (i25 = (a19 ? d17(o21, t16, i25) : d17(i25)) || i25);
  return a19 && i25 && T4(o21, t16, i25), i25;
}, "r");
var S5 = /* @__PURE__ */ __name((s20, o21, t16) => {
  if (!o21.has(s20))
    throw TypeError("Cannot " + t16);
}, "S");
var f14 = /* @__PURE__ */ __name((s20, o21, t16) => (S5(s20, o21, "read from private field"), t16 ? t16.call(s20) : o21.get(s20)), "f");
var w4 = /* @__PURE__ */ __name((s20, o21, t16) => {
  if (o21.has(s20))
    throw TypeError("Cannot add the same private member more than once");
  o21 instanceof WeakSet ? o21.add(s20) : o21.set(s20, t16);
}, "w");
var L5 = i`.sr-only{position:absolute;overflow:hidden;clip:rect(0,0,0,0);height:1px;width:1px;margin:-1px;padding:0;border:0}.sr-only{position:absolute;overflow:hidden;clip:rect(0,0,0,0);height:1px;width:1px;margin:-1px;padding:0;border:0}.sr-only{position:absolute;overflow:hidden;clip:rect(0,0,0,0);height:1px;width:1px;margin:-1px;padding:0;border:0}:host{display:block;position:relative;font-family:var(--pfe-theme--font-family, "Red Hat Text", "RedHatText", "Overpass", Overpass, Arial, sans-serif);--pfe-autocomplete--BoxShadow:var(--pfe-theme--box-shadow--inset, inset 0 0 0.625rem 0 #fafafa);--pfe-autocomplete--BackgroundColor:var(--pfe-theme--color--surface--lightest, #fff);--pfe-autocomplete--Border:var(--pfe-theme--ui--border-width, 1px) var(--pfe-theme--ui--border-style, solid) var(--pfe-theme--color--surface--border, #d2d2d2)}:host([button-text]){display:flex}:host([button-text]) #wrapper{flex:1}:host([button-text]) #input-box-wrapper{position:relative}:host([button-text]) button.clear-search{width:40px}:host([button-text]) ::slotted(input[type=search]::-webkit-search-cancel-button){-webkit-appearance:none}#input-box-wrapper{border-color:var(--pfe-theme--color--feedback--info,#06c)}#input-box-wrapper ::slotted(input){width:100%;flex:1;box-shadow:var(--pfe-autocomplete--BoxShadow,var(--pfe-theme--box-shadow--inset,inset 0 0 .625rem 0 #fafafa))!important;padding-left:10px;padding-right:0;border-radius:var(--pfe-theme--ui--border-radius,2px);background-color:var(--pfe-autocomplete--BackgroundColor,var(--pfe-theme--color--surface--lightest,#fff));border:var(--pfe-autocomplete--Border,var(--pfe-theme--ui--border-width,1px) var(--pfe-theme--ui--border-style,solid) var(--pfe-theme--color--surface--border,#d2d2d2));font-size:var(--pfe-theme--font-size, 1rem);font-family:var(--pfe-theme--font-family, "Red Hat Text", "RedHatText", "Overpass", Overpass, Arial, sans-serif);height:calc(var(--pfe-theme--ui--element--size,20px) * 2);transition:border-color ease-in-out .15s,box-shadow ease-in-out .15s;opacity:1;outline:0}#input-box-wrapper ::slotted(input:disabled),#input-box-wrapper button:disabled{cursor:not-allowed;color:#ccc}#input-box-wrapper ::slotted(input:disabled){padding-right:10px}#input-box-wrapper ::slotted(input:focus),#input-box-wrapper button:focus{outline:0}#input-box-wrapper ::slotted(input),#input-box-wrapper button{-webkit-appearance:none}#input-box-wrapper ::slotted([type=search]::-ms-clear){display:none}#input-box-wrapper ::slotted(input[type=search]::-webkit-search-cancel-button),#input-box-wrapper ::slotted(input[type=search]::-webkit-search-decoration){-webkit-appearance:none}button{color:var(--pfe-theme--color--ui-base,#6a6e73);background-color:transparent;border:none;position:absolute;top:0;bottom:0;cursor:pointer}button.clear-search{right:30px;width:20px;margin:2px 1px;background-color:var(--pfe-theme--color--surface--lightest,#fff)}button.clear-search:hover{color:var(--pfe-theme--color--ui-base,#6a6e73)}button.clear-search svg{width:14px;position:relative;top:2px;stroke:var(--pfe-theme--color--surface--border,#d2d2d2)}button.clear-search:focus svg,button.clear-search:hover svg{opacity:1;stroke:var(--pfe-theme--color--link,#06c)}button[disabled].clear-search:focus svg,button[disabled].clear-search:hover svg{stroke:var(--pfe-theme--color--surface--border,#d2d2d2)}button.search-button{margin-top:1px;margin-bottom:1px;right:1px;width:30px;background-color:var(--pfe-theme--color--surface--lightest,#fff)}button.search-button svg{fill:var(--pfe-theme--color--link,#06c);width:18px;position:relative;top:2px;stroke:var(--pfe-theme--color--surface--border,#d2d2d2)}button.search-button:focus svg,button.search-button:hover svg{fill:var(--pfe-theme--color--link--hover,#004080)}button.search-button:disabled svg{fill:var(--pfe-theme--color--ui-disabled,#d2d2d2)}pfe-button.search-button--textual{margin-left:16px}.loading{position:absolute;width:30px;right:52px;top:0;bottom:0}.loading svg{width:26px;padding-top:7px}`;
var y7 = L5;
var m15 = /* @__PURE__ */ __name(class extends n6 {
  constructor() {
    super("clear");
  }
}, "m");
var x5 = /* @__PURE__ */ __name(class extends n6 {
  constructor() {
    super("show");
  }
}, "x");
var _4 = /* @__PURE__ */ __name(class extends n6 {
  constructor(t16) {
    super("search");
    this.value = t16;
  }
}, "_");
var g7 = /* @__PURE__ */ __name(class extends n6 {
  constructor(t16) {
    super("select");
    this.value = t16;
  }
}, "g");
function U2(s20) {
  return s20?.tagName?.toLowerCase?.() === "input";
}
__name(U2, "U");
var v7 = false;
var u11;
var e13 = /* @__PURE__ */ __name(class extends s4 {
  constructor() {
    super();
    this.on = "light";
    this.initValue = "";
    this.loading = false;
    this.disabled = false;
    this.debounce = 300;
    this.data = [];
    this.announceTemplate = "There are ${numOptions} suggestions. Use the up and down arrows to browse.";
    this.activeIndex = null;
    this.showTextualSearch = false;
    w4(this, u11, new n7(this));
    this.addEventListener("keyup", this._inputKeyUp), this.addEventListener("pfe-autocomplete:search-event", this._closeDroplist);
  }
  get ariaAnnounceTemplate() {
    return this.announceTemplate;
  }
  set ariaAnnounceTemplate(t16) {
    this.announceTemplate = t16;
  }
  connectedCallback() {
    this._inputInit(), super.connectedCallback();
  }
  render() {
    let t16 = this.disabled || !(this._input?.value !== "" && !this._input?.hasAttribute?.("disabled")), a19 = !this.loading || this._input?.value === "";
    return y`<div id="wrapper" part="container"><div id="input-box-wrapper"><slot @slotchange="${this._inputInit}"></slot><span class="loading" aria-hidden="${String(a19)}" ?hidden="${a19}"><svg viewBox="0 0 40 40" enable-background="new 0 0 40 40" part="icon"><path opacity="0.2" fill="#000" d="M20.201,5.169c-8.254,0-14.946,6.692-14.946,14.946c0,8.255,6.692,14.946,14.946,14.946                s14.946-6.691,14.946-14.946C35.146,11.861,28.455,5.169,20.201,5.169z M20.201,31.749c-6.425,0-11.634-5.208-11.634-11.634                c0-6.425,5.209-11.634,11.634-11.634c6.425,0,11.633,5.209,11.633,11.634C31.834,26.541,26.626,31.749,20.201,31.749z"/><path fill="#000" d="M26.013,10.047l1.654-2.866c-2.198-1.272-4.743-2.012-7.466-2.012h0v3.312h0                C22.32,8.481,24.301,9.057,26.013,10.047z"><animateTransform attributeType="xml" attributeName="transform" type="rotate" from="0 20 20" to="360 20 20" dur="0.5s" repeatCount="indefinite"/></path></svg> </span><button class="clear-search" type="button" part="clear-button" aria-label="clear search query" ?disabled="${this.disabled}" ?hidden="${!this._input?.value}" @click="${this._clear}"><svg viewBox="0 0 40 40" enable-background="new 0 0 40 40"><line x1="5" y1="5" x2="35" y2="35" stroke-width="10" stroke-linecap="round" stroke-miterlimit="10"></line><line x1="35" y1="5" x2="5" y2="35" stroke-width="10" stroke-linecap="round" stroke-miterlimit="10"></line></svg></button> <button class="search-button" type="button" part="search-button" aria-label="Search" ?disabled="${!this._input?.value || this.disabled}" ?hidden="${this.showTextualSearch}" @click="${this._search}"><svg viewBox="0 0 512 512"><path d="M256.233,5.756c-71.07,15.793-141.44,87.863-155.834,159.233c-11.495,57.076,0.3,111.153,27.688,154.335L6.339,441.172            c-8.596,8.596-8.596,22.391,0,30.987l33.286,33.286c8.596,8.596,22.391,8.596,30.987,0L192.26,383.796            c43.282,27.688,97.559,39.683,154.734,28.188c79.167-15.893,142.04-77.067,159.632-155.934            C540.212,104.314,407.968-27.93,256.233,5.756z M435.857,208.37c0,72.869-59.075,131.944-131.944,131.944            S171.969,281.239,171.969,208.37S231.043,76.426,303.913,76.426S435.857,135.501,435.857,208.37z"/></svg></button></div><pfe-search-droplist id="dropdown" part="droplist" exportparts="listbox,option,${this.data.map((i25, p22) => `item-index-${p22}`).join(",")}" @select="${this._optionSelected}" .announceTemplate="${this.announceTemplate}" .activeIndex="${this.activeIndex}" .data="${this.data}"></pfe-search-droplist></div><pfe-button class="search-button--textual" part="text-search-button" ?hidden="${!this.showTextualSearch || t16}" @click="${this._search}"><button class="search-button__text" ?disabled="${t16}">${this.buttonText || "Search"}</button></pfe-button>`;
  }
  disconnectedCallback() {
    super.disconnectedCallback(), this._input && (this._input.removeEventListener("input", this._inputChanged), this._input.removeEventListener("blur", this._closeDroplist));
  }
  async _inputInit() {
    await this.updateComplete;
    let t16 = this._slot?.assignedElements() ?? [];
    if (t16.length === 0)
      return f14(this, u11).error("There must be a input tag in the light DOM");
    if (t16.length > 1 || t16.some((a19) => !U2(a19)))
      return f14(this, u11).error("The only child in the light DOM must be an input tag");
    [this._input] = t16, this._input.addEventListener("input", this._inputChanged), this._input.addEventListener("blur", this._closeDroplist), this._input.setAttribute("role", "combobox"), this._input.hasAttribute("aria-label") || this._input.setAttribute("aria-label", "Search"), this._input.setAttribute("aria-autocomplete", "list"), this._input.setAttribute("aria-haspopup", "true"), this._input.setAttribute("aria-owns", "droplist-items"), this._input.setAttribute("aria-controls", "droplist-items"), this._input.setAttribute("aria-expanded", "false"), this._input.setAttribute("type", "search"), this._input.setAttribute("autocomplete", "off"), this._input.setAttribute("autocorrect", "off"), this._input.setAttribute("autocapitalize", "off"), this._input.setAttribute("spellcheck", "false"), this._isDisabledChanged(), this._disabledChanged();
  }
  _initValueChanged(t16, a19) {
    a19 && this._input && (this._input.value = a19);
  }
  _isDisabledChanged() {
    let t16 = this.isDisabled;
    t16 != null && this.disabled !== t16 && (this.disabled = !!t16);
  }
  _disabledChanged() {
    this._input?.toggleAttribute?.("disabled", this.disabled);
  }
  _buttonTextChanged(t16, a19) {
    t16 === null ? this.showTextualSearch = false : (a19 === null || a19 === "") && (this.showTextualSearch = false);
  }
  _inputChanged() {
    if (this._input?.value === "")
      return this._reset();
    v7 === false && (v7 = true, window.setTimeout(() => {
      this._sendAutocompleteRequest(this._input?.value ?? ""), v7 = false;
    }, this.debounce)), this.requestUpdate();
  }
  async _clear() {
    this._input && (this._closeDroplist(), this._input.value = "", this.requestUpdate(), await this.updateComplete, this._input.focus()), this.dispatchEvent(n14("pfe-autocomplete:option-cleared", { searchValue: "" })), this.dispatchEvent(new m15());
  }
  _search() {
    this._doSearch(this._input?.value);
  }
  async _closeDroplist() {
    this._dropdown && (this._dropdown.open = false), this.activeIndex = null, this._input?.setAttribute("aria-expanded", "false");
  }
  _openDroplist() {
    this.activeIndex = null, this._dropdown && (this._dropdown.open = true), this.dispatchEvent(n14("pfe-autocomplete:options-shown")), this.dispatchEvent(new x5()), this._input?.setAttribute?.("aria-expanded", "true");
  }
  _optionSelected(t16) {
    let { value: a19 } = t16;
    this._input && (this._input.value = a19), this._doSearch(a19);
  }
  async _doSearch(t16 = "") {
    this.dispatchEvent(n14("pfe-autocomplete:search-event", { searchValue: t16 })), this.dispatchEvent(new _4(t16)), await this._reset(), this.selectedValue = t16;
  }
  _sendAutocompleteRequest(t16) {
    this.autocompleteRequest?.({ query: t16 }, this._autocompleteCallback);
  }
  async _autocompleteCallback(t16) {
    this.data = t16, this._dropdown && (this._dropdown.reflow = true), await this.updateComplete, t16.length ? this._openDroplist() : this._closeDroplist();
  }
  async _reset() {
    if (await this.updateComplete, !this._dropdown || !this._input)
      throw new Error("Unexpected Error");
    this.activeIndex = null, this._input.setAttribute("aria-activedescendant", ""), this.data = [], this._closeDroplist(), this.requestUpdate(), await this.updateComplete;
  }
  _activeOption(t16) {
    if (typeof t16 == "number")
      return this._dropdown?.shadowRoot?.querySelector?.(`li:nth-child(${t16 + 1})`)?.textContent ?? "";
  }
  async _inputKeyUp(t16) {
    let { key: a19 } = t16;
    if (!this._input || !this._dropdown)
      throw new Error("Unexpected error");
    if (this.data.length === 0 && a19 !== "ArrowDown" && a19 !== "ArrowUp" && a19 !== "Enter" && a19 !== "Escape")
      return;
    let { activeIndex: i25 } = this, p22 = this.data.length;
    switch (a19) {
      case "Escape":
        this._closeDroplist();
        break;
      case "ArrowUp":
        if (!this._dropdown.open)
          return;
        i25 = i25 === null ? p22 : i25, i25 -= 1, i25 < 0 && (i25 = p22 - 1), this._input.value = this._activeOption(i25) ?? "";
        break;
      case "ArrowDown":
        if (!this._dropdown.open)
          return;
        i25 = i25 === null ? -1 : i25, i25 += 1, i25 > p22 - 1 && (i25 = 0), this._input.value = this._activeOption(i25) ?? "";
        break;
      case "Enter": {
        let d17 = this._activeOption(i25);
        d17 ? (this.dispatchEvent(n14("pfe-autocomplete:option-selected", { optionValue: d17 })), this.dispatchEvent(new g7(d17))) : this._doSearch(this._input.value);
        return;
      }
    }
    i25 !== null ? this._input.setAttribute("aria-activedescendant", `option-${i25}`) : this._input.setAttribute("aria-activedescendant", ""), this.activeIndex = i25;
  }
  async clear() {
    await this._clear();
  }
  search() {
    this._search();
  }
}, "e");
u11 = /* @__PURE__ */ new WeakMap(), e13.version = "2.0.0-next.4", e13.styles = [y7], e13.shadowRootOptions = { ...s4.shadowRootOptions, delegatesFocus: true }, r11([c5(), e5({ reflect: true, attribute: "color-palette" })], e13.prototype, "colorPalette", 2), r11([d3({ alias: "colorPalette", attribute: "color" })], e13.prototype, "color", 2), r11([C2(), e5({ reflect: true })], e13.prototype, "on", 2), r11([p3, e5({ attribute: "init-value", reflect: true })], e13.prototype, "initValue", 2), r11([e5({ type: Boolean, reflect: true })], e13.prototype, "loading", 2), r11([p3, e5({ type: Boolean, reflect: true })], e13.prototype, "disabled", 2), r11([p3, e5({ attribute: "is-disabled", type: Boolean })], e13.prototype, "isDisabled", 2), r11([e5({ type: Number, reflect: true })], e13.prototype, "debounce", 2), r11([e5({ reflect: true, attribute: "selected-value" })], e13.prototype, "selectedValue", 2), r11([p3, e5({ attribute: "button-text", reflect: true })], e13.prototype, "buttonText", 2), r11([e5({ attribute: false })], e13.prototype, "data", 2), r11([e5({ attribute: "announce-template", reflect: true })], e13.prototype, "announceTemplate", 2), r11([e5({ attribute: "aria-announce-template" })], e13.prototype, "ariaAnnounceTemplate", 1), r11([t3()], e13.prototype, "activeIndex", 2), r11([t3()], e13.prototype, "showTextualSearch", 2), r11([i4("slot")], e13.prototype, "_slot", 2), r11([i4("#dropdown")], e13.prototype, "_dropdown", 2), r11([o8], e13.prototype, "_inputChanged", 1), r11([o8], e13.prototype, "_clear", 1), r11([o8], e13.prototype, "_search", 1), r11([o8], e13.prototype, "_closeDroplist", 1), r11([o8], e13.prototype, "_openDroplist", 1), r11([o8], e13.prototype, "_doSearch", 1), r11([o8], e13.prototype, "_autocompleteCallback", 1), r11([o8], e13.prototype, "_inputKeyUp", 1), e13 = r11([e4("pfe-autocomplete"), d4()], e13);

// node_modules/@patternfly/pfe-avatar/node_modules/lit/index.js
init_reactive_element();
init_lit_html();
init_lit_element();

// node_modules/@patternfly/pfe-avatar/node_modules/lit/decorators.js
init_custom_element();
init_property();
init_state();
init_event_options();
init_query();
init_query_all();
init_query_async();
init_query_assigned_elements();
init_query_assigned_nodes();

// node_modules/@patternfly/pfe-avatar/node_modules/lit/directives/if-defined.js
init_if_defined();

// node_modules/@patternfly/pfe-avatar/pfe-avatar.js
init_logger();

// node_modules/@patternfly/pfe-core/controllers/css-variable-controller.js
var e14 = /* @__PURE__ */ __name(class {
  constructor(t16) {
    this.host = t16;
    this.style = window.getComputedStyle(t16);
  }
  parseProperty(t16) {
    return t16.substr(0, 2) !== "--" ? `--${t16}` : t16;
  }
  getVariable(t16) {
    return this.style.getPropertyValue(this.parseProperty(t16)).trim() || null;
  }
}, "e");

// node_modules/@patternfly/pfe-avatar/pfe-avatar.js
init_decorators();
var V2 = Object.defineProperty;
var z4 = Object.getOwnPropertyDescriptor;
var u12 = /* @__PURE__ */ __name((o21, n25, e25, t16) => {
  for (var r18 = t16 > 1 ? void 0 : t16 ? z4(n25, e25) : n25, i25 = o21.length - 1, a19; i25 >= 0; i25--)
    (a19 = o21[i25]) && (r18 = (t16 ? a19(n25, e25, r18) : a19(r18)) || r18);
  return t16 && r18 && V2(n25, e25, r18), r18;
}, "u");
function S6(o21) {
  let n25 = 5381, e25 = o21.length;
  for (; e25; )
    n25 = n25 * 33 ^ o21.charCodeAt(--e25);
  return n25 >>> 0;
}
__name(S6, "S");
function b8(o21, n25, e25) {
  return e25 < 0 && (e25 += 1), e25 > 1 && (e25 -= 1), 6 * e25 < 1 ? o21 + (n25 - o21) * 6 * e25 : 2 * e25 < 1 ? n25 : 3 * e25 < 2 ? o21 + (n25 - o21) * (2 / 3 - e25) * 6 : o21;
}
__name(b8, "b");
function y8(o21, n25, e25) {
  let t16, r18, i25, a19 = Math.max(0, Math.min(1, o21)), d17 = Math.max(0, Math.min(1, n25)), c23 = Math.max(0, Math.min(1, e25));
  if (d17 === 0)
    t16 = c23 * 255, r18 = c23 * 255, i25 = c23 * 255;
  else {
    let l25, h24;
    c23 < 0.5 ? h24 = c23 * (1 + d17) : h24 = c23 + d17 - d17 * c23, l25 = 2 * c23 - h24, t16 = Math.floor(255 * b8(l25, h24, a19 + 1 / 3)), r18 = Math.floor(255 * b8(l25, h24, a19)), i25 = Math.floor(255 * b8(l25, h24, a19 - 1 / 3));
  }
  return [t16, r18, i25];
}
__name(y8, "y");
function C6(o21, n25, e25) {
  let t16, r18, i25, a19 = Math.max(0, Math.min(255, o21)), d17 = Math.max(0, Math.min(255, n25)), c23 = Math.max(0, Math.min(255, e25)), l25 = a19 / 255, h24 = d17 / 255, f25 = c23 / 255, g13 = Math.min(Math.min(l25, h24), f25), p22 = Math.max(Math.max(l25, h24), f25), m26 = p22 - g13;
  if (i25 = (p22 + g13) / 2, m26 === 0)
    t16 = 0, r18 = 0;
  else {
    i25 < 0.5 ? r18 = m26 / (p22 + g13) : r18 = m26 / (2 - p22 - g13);
    let v13 = ((p22 - l25) / 6 + m26 / 2) / m26, w8 = ((p22 - h24) / 6 + m26 / 2) / m26, M5 = ((p22 - f25) / 6 + m26 / 2) / m26;
    l25 === p22 ? t16 = M5 - w8 : h24 === p22 ? t16 = 1 / 3 + v13 - M5 : f25 === p22 && (t16 = 2 / 3 + w8 - v13), t16 ?? (t16 = 0), t16 < 0 ? t16 += 1 : t16 > 1 && (t16 -= 1);
  }
  return [t16, r18, i25];
}
__name(C6, "C");
var R4 = i`:host{display:block;position:relative;width:var(--pfe-avatar--size,var(--pfe-avatar--width,128px));height:var(--pfe-avatar--size,var(--pfe-avatar--width,128px))}canvas{width:100%;height:100%;image-rendering:optimizeSpeed;image-rendering:-moz-crisp-edges;image-rendering:-webkit-optimize-contrast;image-rendering:-o-crisp-edges;image-rendering:pixelated;-ms-interpolation-mode:nearest-neighbor}:host([shape=rounded]) canvas,:host([shape=rounded]) img{border-radius:calc(var(--pfe-avatar--size,var(--pfe-avatar--width,128px))/ 8 + 1px)}:host([shape=circle]) canvas,:host([shape=circle]) img{border-radius:50%}:host([src]) canvas{display:none}:host([src]) img{display:block;width:100%;height:100%;object-fit:cover}:host(:not([src])) img{display:none}:host([hidden]){display:none}`;
var T5 = R4;
function U3(o21) {
  o21.registerColors();
}
__name(U3, "U");
var s11 = /* @__PURE__ */ __name(class extends s4 {
  constructor() {
    super(...arguments);
    this.name = "";
    this.pattern = "squares";
    this.shape = "square";
    this._squareSize = 0;
    this._triangleSize = 0;
    this._colorIndex = -1;
    this.color1 = "";
    this.color2 = "";
    this.css = new e14(this);
  }
  static _registerColor(e25) {
    s11.colors.push({ color1: `rgb(${e25.join(",")})`, color2: `rgb(${this._adjustColor(e25).join(",")})` });
  }
  static _adjustColor(e25) {
    let i25 = C6(...e25);
    return i25[2] += i25[2] > 0.1 ? -0.1 : 0.1, y8(...i25);
  }
  static registerColors() {
    return s11.colors = [], (this.customColors || this.defaultColors).split(/\s+/).forEach((t16) => {
      let r18;
      switch (t16.length) {
        case 4:
          if (r18 = /^#([A-f0-9])([A-f0-9])([A-f0-9])$/.exec(t16), r18) {
            r18.shift();
            let i25 = r18.map((a19) => parseInt(a19 + a19, 16));
            s11._registerColor(i25);
          } else
            n7.log(`[pfe-avatar] invalid color ${t16}`);
          break;
        case 7:
          if (r18 = /^#([A-f0-9]{2})([A-f0-9]{2})([A-f0-9]{2})$/.exec(t16), r18) {
            r18.shift();
            let i25 = r18.map((a19) => parseInt(a19, 16));
            s11._registerColor(i25);
          } else
            n7.log(`[pfe-avatar] invalid color ${t16}`);
      }
    }), this.colors;
  }
  get customColors() {
    return this.css.getVariable("pfe-avatar--colors");
  }
  render() {
    return y`<canvas part="canvas"></canvas><img src="${l10(this.src)}" alt="" part="img">`;
  }
  firstUpdated() {
    this._initCanvas(), this.dispatchEvent(n14("pfe-avatar:connected"));
  }
  _initCanvas() {
    if (!this._canvas)
      throw new Error("canvas unavailable");
    let e25 = this.css.getVariable("pfe-avatar--width"), t16 = parseInt(e25 ?? s11.defaultSize.toString());
    this._canvas.width = t16, this._canvas.height = t16, this._squareSize = this._canvas.width / 8, this._triangleSize = this._canvas.width / 4, this._ctx = this._canvas.getContext("2d"), this._update();
  }
  _update() {
    if (!this.src) {
      let e25 = S6(this.name).toString(2), t16 = e25.split("").map((r18) => Number(r18));
      this._colorIndex = Math.floor(s11.colors.length * parseInt(e25, 2) / Math.pow(2, 32)), this.color1 = s11.colors[this._colorIndex].color1, this.color2 = s11.colors[this._colorIndex].color2, this._clear(), this._drawBackground(), this.pattern === "squares" ? this._drawSquarePattern(t16) : this.pattern === "triangles" && this._drawTrianglePattern(t16);
    }
  }
  _clear() {
    this._ctx && this._canvas && this._ctx.clearRect(0, 0, this._canvas.width, this._canvas.height);
  }
  _drawBackground() {
    this._ctx && this._canvas && (this._ctx.fillStyle = this.color1, this._ctx.fillRect(0, 0, this._canvas.width, this._canvas.height));
  }
  _drawSquarePattern(e25) {
    if (this._ctx) {
      this._ctx.fillStyle = this.color2;
      let t16 = e25.length;
      for (; t16--; )
        e25[t16] && this._drawMirroredSquare(t16 % 4, Math.floor(t16 / 4));
    }
  }
  _drawMirroredSquare(e25, t16) {
    this._ctx && (this._drawSquare(e25, t16), this._drawSquare(7 - e25, t16));
  }
  _drawSquare(e25, t16) {
    this._ctx && this._ctx.fillRect(this._squareSize * e25, this._squareSize * t16, this._squareSize, this._squareSize);
  }
  _drawTrianglePattern(e25) {
    if (this._ctx) {
      this._ctx.fillStyle = this.color2 ?? "";
      let t16 = e25.length;
      for (; t16--; )
        if (e25[t16]) {
          let r18 = Math.floor(t16 / 2) % 2, i25 = Math.floor(t16 / 4), a19 = t16 % 4, d17 = [r18, i25], c23 = [r18, i25], l25 = [r18, i25];
          switch (a19) {
            case 0:
              c23[1]++, l25[0]++, l25[1]++;
              break;
            case 1:
              c23[0]++, l25[0]++, l25[1]++;
              break;
            case 2:
              c23[0]++, l25[1]++;
              break;
            case 3:
              d17[0]++, c23[0]++, c23[1]++, l25[1]++;
              break;
          }
          this._drawMirroredTriangle(d17, c23, l25);
        }
    }
  }
  _drawMirroredTriangle(e25, t16, r18) {
    this._ctx && (this._drawTriangle(e25, t16, r18), this._drawTriangle([4 - e25[0], e25[1]], [4 - t16[0], t16[1]], [4 - r18[0], r18[1]]));
  }
  _drawTriangle(e25, t16, r18) {
    let i25 = /* @__PURE__ */ __name((a19) => a19 * this._triangleSize, "i");
    this._ctx && (this._ctx.beginPath(), this._ctx.moveTo(...e25.map(i25)), this._ctx.lineTo(...t16.map(i25)), this._ctx.lineTo(...r18.map(i25)), this._ctx.closePath(), this._ctx.fill(), this._ctx.fill());
  }
}, "s");
s11.version = "2.0.0-next.2", s11.styles = T5, s11.defaultSize = 128, s11.defaultColors = "#67accf #448087 #709c6b #a35252 #826cbb", s11.colors = [], u12([p3("_update"), e5({ reflect: true })], s11.prototype, "src", 2), u12([p3("_update"), e5({ reflect: true })], s11.prototype, "name", 2), u12([p3("_update"), e5({ reflect: true })], s11.prototype, "pattern", 2), u12([e5({ reflect: true })], s11.prototype, "shape", 2), u12([i4("canvas")], s11.prototype, "_canvas", 2), u12([o8], s11.prototype, "_initCanvas", 1), s11 = u12([e4("pfe-avatar"), d4(), U3], s11);

// node_modules/@patternfly/pfe-badge/node_modules/lit/decorators.js
init_custom_element();
init_property();
init_state();
init_event_options();
init_query();
init_query_all();
init_query_async();
init_query_assigned_elements();
init_query_assigned_nodes();

// node_modules/@patternfly/pfe-badge/node_modules/lit/index.js
init_reactive_element();
init_lit_html();
init_lit_element();

// node_modules/@patternfly/pfe-badge/BaseBadge.js
var c15 = Object.defineProperty;
var f15 = Object.getOwnPropertyDescriptor;
var l20 = /* @__PURE__ */ __name((m26, n25, r18, t16) => {
  for (var e25 = t16 > 1 ? void 0 : t16 ? f15(n25, r18) : n25, s20 = m26.length - 1, p22; s20 >= 0; s20--)
    (p22 = m26[s20]) && (e25 = (t16 ? p22(n25, r18, e25) : p22(e25)) || e25);
  return t16 && e25 && c15(n25, r18, e25), e25;
}, "l");
var y9 = i`:host{position:relative;white-space:nowrap;text-align:center}`;
var u13 = y9;
var o15 = /* @__PURE__ */ __name(class extends s4 {
  render() {
    let { threshold: r18, number: t16, textContent: e25 } = this, s20 = r18 && t16 && r18 < t16 ? `${r18.toString()}+` : t16 != null ? t16.toString() : e25 ?? "";
    return y`<span>${s20}</span>`;
  }
}, "o");
o15.styles = [u13], l20([e5({ reflect: true })], o15.prototype, "state", 2), l20([e5({ reflect: true, type: Number })], o15.prototype, "number", 2), l20([e5({ reflect: true, type: Number })], o15.prototype, "threshold", 2);

// node_modules/@patternfly/pfe-badge/pfe-badge.js
var b9 = Object.defineProperty;
var i19 = Object.getOwnPropertyDescriptor;
var f16 = /* @__PURE__ */ __name((l25, r18, t16, o21) => {
  for (var a19 = o21 > 1 ? void 0 : o21 ? i19(r18, t16) : r18, d17 = l25.length - 1, p22; d17 >= 0; d17--)
    (p22 = l25[d17]) && (a19 = (o21 ? p22(r18, t16, a19) : p22(a19)) || a19);
  return o21 && a19 && b9(r18, t16, a19), a19;
}, "f");
var n17 = i`:host{border-radius:var(--pf-c-badge--BorderRadius,var(--pf-global--BorderRadius--lg,180em));min-width:var(--pf-c-badge--MinWidth,var(--pf-global--spacer--xl,2rem));padding-left:var(--pf-c-badge--PaddingLeft,var(--pf-global--spacer--sm,.5rem));padding-right:var(--pf-c-badge--PaddingRight,var(--pf-global--spacer--sm,.5rem));font-size:var(--pf-c-badge--FontSize, var(--pfe-theme--font-size, .75em));font-weight:var(--pf-c-badge--FontWeight,var(--pfe-theme--font-weight--bold,700));line-height:var(--pf-c-badge--LineHeight, var(--pf-global--LineHeight--md, 1.5));color:var(--pf-c-badge--Color,var(--pf-global--palette--black-900,#151515));background-color:var(--pf-c-badge--BackgroundColor,var(--pf-global--palette--black-200,#f0f0f0))}:host([state=read]){--pf-c-badge--Color:var(--pf-c-badge--m-read--Color, var(--pf-global--palette--black-900, #151515));--pf-c-badge--BackgroundColor:var(--pf-c-badge--m-read--BackgroundColor, var(--pf-global--palette--black-200, #f0f0f0))}:host([state=unread]){--pf-c-badge--Color:var(--pf-c-badge--m-unread--Color, var(--pf-global--palette--white, #fff));--pf-c-badge--BackgroundColor:var(--pf-c-badge--m-unread--BackgroundColor, var(--pf-global--palette--blue-400, #06c))}`;
var g8 = n17;
var e15 = /* @__PURE__ */ __name(class extends o15 {
}, "e");
e15.version = "2.0.0-next.3", e15.styles = [...o15.styles, g8], e15 = f16([e4("pfe-badge")], e15);

// node_modules/@patternfly/pfe-card/node_modules/lit/index.js
init_reactive_element();
init_lit_html();
init_lit_element();

// node_modules/@patternfly/pfe-card/node_modules/lit/decorators.js
init_custom_element();
init_property();
init_state();
init_event_options();
init_query();
init_query_all();
init_query_async();
init_query_assigned_elements();
init_query_assigned_nodes();

// node_modules/@patternfly/pfe-card/pfe-card.js
init_decorators();
init_slot_controller();
var n18 = Object.defineProperty;
var m16 = Object.getOwnPropertyDescriptor;
var a13 = /* @__PURE__ */ __name((f25, d17, r18, o21) => {
  for (var t16 = o21 > 1 ? void 0 : o21 ? m16(d17, r18) : d17, p22 = f25.length - 1, l25; p22 >= 0; p22--)
    (l25 = f25[p22]) && (t16 = (o21 ? l25(d17, r18, t16) : l25(t16)) || t16);
  return o21 && t16 && n18(d17, r18, t16), t16;
}, "a");
var _5 = i`:host{--context:var(--pfe-card--context, var(--pfe-theme--color--surface--base--context, light));--pfe-theme--color--surface--lightest:#ffffff;--pfe-theme--color--surface--lighter:#ececec;--pfe-theme--color--surface--base:#f0f0f0;--pfe-theme--color--surface--darker:#3c3f42;--pfe-theme--color--surface--darkest:#151515;--pfe-theme--color--surface--accent:#004080;--pfe-theme--color--surface--complement:#002952;display:flex;flex-direction:column;justify-items:flex-start;align-self:stretch;padding:var(--pfe-card--Padding,var(--pfe-card--PaddingTop,calc(var(--pfe-theme--container-spacer,1rem) * 2)) var(--pfe-card--PaddingRight,calc(var(--pfe-theme--container-spacer,1rem) * 2)) var(--pfe-card--PaddingBottom,calc(var(--pfe-theme--container-spacer,1rem) * 2)) var(--pfe-card--PaddingLeft,calc(var(--pfe-theme--container-spacer,1rem) * 2)));border:var(--pfe-card--Border,var(--pfe-card--BorderWidth,0) var(--pfe-card--BorderStyle,solid) var(--pfe-card--BorderColor,var(--pfe-theme--color--surface--border,#d2d2d2)));border-radius:var(--pfe-card--BorderRadius,var(--pfe-theme--surface--border-radius,3px));overflow:hidden;background-color:var(--pfe-card--BackgroundColor,var(--pfe-context-background-color));background-position:var(--pfe-card--BackgroundPosition,center center);color:var(--pfe-broadcasted--text,#3c3f42)}@media print{:host{background-color:#fff!important;background-image:none!important;box-shadow:none!important}}@media print{:host{border-radius:3px;border:1px solid #d2d2d2}}:host([color-palette]),:host([color]),:host([on]){background-color:var(--pfe-card--BackgroundColor,var(--pfe-context-background-color))}:host([size=small]){--pfe-card--PaddingTop:var(--pfe-theme--container-spacer, 1rem);--pfe-card--PaddingRight:var(--pfe-theme--container-spacer, 1rem);--pfe-card--PaddingBottom:var(--pfe-theme--container-spacer, 1rem);--pfe-card--PaddingLeft:var(--pfe-theme--container-spacer, 1rem)}:host([border]:not([border=false])){--pfe-card--BorderWidth:1px}.pfe-card__body ::slotted([overflow~=top]),.pfe-card__footer ::slotted([overflow~=top]),.pfe-card__header ::slotted([overflow~=top]){z-index:1;margin-top:-2rem;margin-top:calc(-1 * var(--pfe-card--PaddingTop,calc(var(--pfe-theme--container-spacer,1rem) * 2)))!important}:host(.has-header) .pfe-card__body ::slotted([overflow~=top]),:host(.has-header) .pfe-card__footer ::slotted([overflow~=top]),:host(.has-header) .pfe-card__header ::slotted([overflow~=top]){padding-top:var(--pfe-card--spacing,var(--pfe-theme--container-spacer,1rem))}.pfe-card__body ::slotted([overflow~=right]),.pfe-card__footer ::slotted([overflow~=right]),.pfe-card__header ::slotted([overflow~=right]){margin-right:-2rem;margin-right:calc(-1 * var(--pfe-card--PaddingRight,calc(var(--pfe-theme--container-spacer,1rem) * 2)))}.pfe-card__body ::slotted([overflow~=bottom]),.pfe-card__footer ::slotted([overflow~=bottom]),.pfe-card__header ::slotted([overflow~=bottom]){margin-bottom:-2rem;margin-bottom:calc(-1 * (var(--pfe-card--PaddingBottom,calc(var(--pfe-theme--container-spacer,1rem) * 2)) + var(--pfe-card--BorderRadius,var(--pfe-theme--surface--border-radius,3px))));align-self:flex-end}.pfe-card__body ::slotted([overflow~=left]),.pfe-card__footer ::slotted([overflow~=left]),.pfe-card__header ::slotted([overflow~=left]){margin-left:-2rem;margin-left:calc(-1 * var(--pfe-card--PaddingLeft,calc(var(--pfe-theme--container-spacer,1rem) * 2)))}.pfe-card__body ::slotted(img),.pfe-card__footer ::slotted(img),.pfe-card__header ::slotted(img){max-width:100%!important;align-self:flex-start;object-fit:cover}.pfe-card__body ::slotted(img:not[overflow]),.pfe-card__footer ::slotted(img:not[overflow]),.pfe-card__header ::slotted(img:not[overflow]){align-self:flex-start}.pfe-card__body ::slotted(img[overflow]),.pfe-card__footer ::slotted(img[overflow]),.pfe-card__header ::slotted(img[overflow]){max-width:unset!important}.pfe-card__body ::slotted(img[overflow~=right]),.pfe-card__footer ::slotted(img[overflow~=right]),.pfe-card__header ::slotted(img[overflow~=right]){width:calc(100% + 2rem)!important;width:calc(100% + var(--pfe-card--PaddingRight,calc(var(--pfe-theme--container-spacer,1rem) * 2)))!important}.pfe-card__body ::slotted(img[overflow~=left]),.pfe-card__footer ::slotted(img[overflow~=left]),.pfe-card__header ::slotted(img[overflow~=left]){width:calc(100% + 2rem)!important;width:calc(100% + var(--pfe-card--PaddingLeft,calc(var(--pfe-theme--container-spacer,1rem) * 2)))!important}.pfe-card__body ::slotted(img[overflow~=right][overflow~=left]),.pfe-card__footer ::slotted(img[overflow~=right][overflow~=left]),.pfe-card__header ::slotted(img[overflow~=right][overflow~=left]){width:calc(100% + 4rem)!important;width:calc(100% + var(--pfe-card--PaddingRight,calc(var(--pfe-theme--container-spacer,1rem) * 2)) + var(--pfe-card--PaddingLeft,calc(var(--pfe-theme--container-spacer,1rem) * 2)))!important}.pfe-card__header{z-index:2;background-color:var(--pfe-card__header--BackgroundColor,rgba(0,0,0,var(--pfe-theme--opacity,.09)));color:var(--pfe-card__header--Color,var(--pfe-broadcasted--text,#3c3f42));margin-top:calc(var(--pfe-card--PaddingTop,calc(var(--pfe-theme--container-spacer,1rem) * 2)) * -1)!important;margin-right:calc(var(--pfe-card--PaddingRight,calc(var(--pfe-theme--container-spacer,1rem) * 2)) * -1);margin-bottom:var(--pfe-card--spacing--vertical,var(--pfe-card--spacing,var(--pfe-theme--container-spacer,1rem)));margin-left:calc(var(--pfe-card--PaddingLeft,calc(var(--pfe-theme--container-spacer,1rem) * 2)) * -1);padding-top:var(--pfe-card--spacing--vertical,var(--pfe-card--spacing,var(--pfe-theme--container-spacer,1rem)));padding-right:var(--pfe-card--PaddingRight,calc(var(--pfe-theme--container-spacer,1rem) * 2));padding-left:var(--pfe-card--PaddingLeft,calc(var(--pfe-theme--container-spacer,1rem) * 2));padding-bottom:var(--pfe-card--spacing--vertical,var(--pfe-card--spacing,var(--pfe-theme--container-spacer,1rem)))}:host([color-palette^=dark]) .pfe-card__header{background-color:var(--pfe-card__header--BackgroundColor--dark,rgba(255,255,255,var(--pfe-theme--opacity,.09)))}.pfe-card__header:not(.has-body,.has-footer){margin-bottom:var(--pfe-card--PaddingBottom,calc(var(--pfe-theme--container-spacer,1rem) * 2))}.pfe-card__header ::slotted([overflow~=top]){--pfe-card__overflow--MarginTop:calc(var(--pfe-card--PaddingTop, calc(var(--pfe-theme--container-spacer, 1rem) * 2)) * -1)}.pfe-card__header:not(.has-header){display:none}.pfe-card__header.has-body,.pfe-card__header.has-footer ::slotted([overflow~=bottom]){--pfe-card__overflow--MarginBottom:calc(var(--pfe-card--spacing--vertical, var(--pfe-card--spacing, var(--pfe-theme--container-spacer, 1rem))) * -1)}.pfe-card__header ::slotted([overflow~=bottom]){--pfe-card__overflow--MarginBottom:calc(var(--pfe-card--PaddingBottom, calc(var(--pfe-theme--container-spacer, 1rem) * 2)) * -1)}.pfe-card__header ::slotted(h1){margin-bottom:0}.pfe-card__header ::slotted(h2){margin-bottom:0}.pfe-card__header ::slotted(h3){margin-bottom:0}.pfe-card__header ::slotted(h4){margin-bottom:0}.pfe-card__header ::slotted(h5){margin-bottom:0}.pfe-card__header ::slotted(h6){margin-bottom:0}.pfe-card__body:not(.has-header) ::slotted([overflow~=top]){--pfe-card__overflow--MarginTop:calc(var(--pfe-card--PaddingTop, calc(var(--pfe-theme--container-spacer, 1rem) * 2)) * -1)}.pfe-card__body ::slotted([overflow~=top]){z-index:1;--pfe-card__overflow--MarginTop:calc(var(--pfe-card--spacing--vertical, var(--pfe-card--spacing, var(--pfe-theme--container-spacer, 1rem))) * -1)}.pfe-card__body ::slotted([overflow~=bottom]){--pfe-card__overflow--MarginBottom:calc(var(--pfe-card--PaddingBottom, calc(var(--pfe-theme--container-spacer, 1rem) * 2)) * -1)}.pfe-card__body.has-footer ::slotted([overflow~=bottom]){--pfe-card__overflow--MarginBottom:calc(var(--pfe-card--spacing--vertical, var(--pfe-card--spacing, var(--pfe-theme--container-spacer, 1rem))) * -1)}.pfe-card__body:is(.has-header) ::slotted(img[overflow~=top]){padding-top:var(--pfe-card--spacing,var(--pfe-theme--container-spacer,1rem))}.pfe-card__body:not(.has-footer){margin-bottom:0}.pfe-card__footer{margin-top:auto;display:flex;flex-direction:var(--pfe-card__footer--Row,row);flex-wrap:var(--pfe-card__footer--Wrap,wrap);align-items:var(--pfe-card__footer--AlignItems,baseline)}.pfe-card__footer ::slotted([overflow~=bottom]){--pfe-card__overflow--MarginBottom:calc(var(--pfe-card--PaddingBottom, calc(var(--pfe-theme--container-spacer, 1rem) * 2)) * -1)}.pfe-card__footer:not(.has-footer){display:none}.pfe-card__body,.pfe-card__header{margin-bottom:var(--pfe-card--spacing--vertical,var(--pfe-card--spacing,var(--pfe-theme--container-spacer,1rem)))}.pfe-card__body ::slotted(p:first-child),.pfe-card__header ::slotted(p:first-child){margin-top:0}.pfe-card__body ::slotted(h1:first-child),.pfe-card__header ::slotted(h1:first-child){margin-top:0}.pfe-card__body ::slotted(h2:first-child),.pfe-card__header ::slotted(h2:first-child){margin-top:0}.pfe-card__body ::slotted(h3:first-child),.pfe-card__header ::slotted(h3:first-child){margin-top:0}.pfe-card__body ::slotted(h4:first-child),.pfe-card__header ::slotted(h4:first-child){margin-top:0}.pfe-card__body ::slotted(h5:first-child),.pfe-card__header ::slotted(h5:first-child){margin-top:0}.pfe-card__body ::slotted(h6:first-child),.pfe-card__header ::slotted(h6:first-child){margin-top:0}#header ::slotted(:is(h1,h2,h3,h4,h5,h6)){font-weight:var(--pfe-card-header-font-weight,500)}`;
var s12 = _5;
var e16 = /* @__PURE__ */ __name(class extends s4 {
  constructor() {
    super(...arguments);
    this.colorPalette = "base";
    this.border = false;
    this.slots = new l13(this, { slots: ["header", null, "footer"], deprecations: { header: "pfe-card--header", footer: "pfe-card--footer" } });
  }
  render() {
    let r18 = { "has-header": this.slots.hasSlotted("header", "pfe-card--header"), "has-footer": this.slots.hasSlotted("footer", "pfe-card--footer"), "has-body": this.slots.hasSlotted() };
    return y`<div class="pfe-card__header ${o9(r18)}" part="header"><slot name="header"></slot><slot name="pfe-card--header"></slot></div><div class="pfe-card__body ${o9(r18)}" part="body"><slot></slot></div><div class="pfe-card__footer ${o9(r18)}" part="footer"><slot name="footer"></slot><slot name="pfe-card--footer"></slot></div>`;
  }
  _imgSrcChanged(r18, o21) {
    typeof this.imgSrc == "string" && (this.style.backgroundImage = o21 ? `url('${o21}')` : "");
  }
}, "e");
e16.version = "2.0.0-next.6", e16.styles = [s12], a13([p3, e5({ attribute: "img-src", reflect: true })], e16.prototype, "imgSrc", 2), a13([c5(), e5({ reflect: true, attribute: "color-palette" })], e16.prototype, "colorPalette", 2), a13([d3({ alias: "colorPalette", attribute: "color" })], e16.prototype, "color", 2), a13([C2(), e5({ reflect: true })], e16.prototype, "on", 2), a13([e5({ reflect: true })], e16.prototype, "size", 2), a13([e5({ type: Boolean, reflect: true })], e16.prototype, "border", 2), e16 = a13([e4("pfe-card"), d4()], e16);

// node_modules/@patternfly/pfe-collapse/node_modules/lit/index.js
init_reactive_element();
init_lit_html();
init_lit_element();

// node_modules/@patternfly/pfe-collapse/node_modules/lit/decorators.js
init_custom_element();
init_property();
init_state();
init_event_options();
init_query();
init_query_all();
init_query_async();
init_query_assigned_elements();
init_query_assigned_nodes();

// node_modules/@patternfly/pfe-collapse/pfe-collapse.js
init_decorators();

// node_modules/@patternfly/pfe-collapse/pfe-collapse-panel.js
init_core();
init_random();
init_decorators();
var u14 = Object.defineProperty;
var f17 = Object.getOwnPropertyDescriptor;
var r12 = /* @__PURE__ */ __name((o21, a19, e25, t16) => {
  for (var n25 = t16 > 1 ? void 0 : t16 ? f17(a19, e25) : a19, s20 = o21.length - 1, l25; s20 >= 0; s20--)
    (l25 = o21[s20]) && (n25 = (t16 ? l25(a19, e25, n25) : l25(n25)) || n25);
  return t16 && n25 && u14(a19, e25, n25), n25;
}, "r");
var v8 = i`:host{display:none;overflow:hidden;will-change:height}:host([expanded]){display:block;position:relative}:host(.animating){display:block;transition:height .3s ease-in-out}`;
var c16 = v8;
var p12 = /* @__PURE__ */ __name(class extends n6 {
  constructor(e25, t16) {
    super("animation-start");
    this.panel = e25;
    this.state = t16;
  }
}, "p");
var m17 = /* @__PURE__ */ __name(class extends n6 {
  constructor(e25, t16) {
    super("animation-end");
    this.panel = e25;
    this.expanded = t16;
  }
}, "m");
var i20 = /* @__PURE__ */ __name(class extends s4 {
  constructor() {
    super(...arguments);
    this.expanded = false;
  }
  get animates() {
    return this.animation !== "false";
  }
  connectedCallback() {
    super.connectedCallback(), this.expanded = false, this.id || (this.id = n11("pfe-collapse-panel"));
  }
  render() {
    return y`<slot></slot>`;
  }
  _expandedChanged(e25, t16) {
    t16 ? this._maybeAnimate("opening") : e25 && this._maybeAnimate("closing");
  }
  async _maybeAnimate(e25) {
    if (this.animates) {
      e25 === "opening" && await this.updateComplete;
      let { height: t16 } = this.getBoundingClientRect();
      this._fireAnimationEvent(e25);
      let n25 = [0, t16];
      e25 === "closing" && n25.reverse(), this._animate(...n25);
    }
  }
  _animate(e25, t16) {
    this.classList.add("animating"), this.style.height = `${e25}px`, requestAnimationFrame(() => {
      requestAnimationFrame(() => {
        this.style.height = `${t16}px`, this.classList.add("animating"), this.addEventListener("transitionend", this._transitionEndHandler, { once: true });
      });
    });
  }
  _transitionEndHandler(e25) {
    let t16 = e25.target;
    t16.style.height = "", t16.classList.remove("animating");
    let n25 = this, { expanded: s20 } = this;
    this.dispatchEvent(n14("pfe-collapse-panel:animation-end", { expanded: s20, panel: n25 })), this.dispatchEvent(new m17(this, s20));
  }
  _fireAnimationEvent(e25) {
    this.dispatchEvent(n14("pfe-collapse-panel:animation-start", { state: e25, panel: this })), this.dispatchEvent(new p12(this, e25));
  }
}, "i");
i20.version = "2.0.0-next.4", i20.styles = [c16], r12([p3, e5({ type: Boolean, reflect: true })], i20.prototype, "expanded", 2), r12([e5({ reflect: true })], i20.prototype, "animation", 2), i20 = r12([e4("pfe-collapse-panel"), d4()], i20);

// node_modules/@patternfly/pfe-collapse/pfe-collapse-toggle.js
init_core();
init_random();
init_logger();
init_decorators();
var u15 = Object.defineProperty;
var m18 = Object.getOwnPropertyDescriptor;
var a14 = /* @__PURE__ */ __name((s20, r18, t16, e25) => {
  for (var o21 = e25 > 1 ? void 0 : e25 ? m18(r18, t16) : r18, l25 = s20.length - 1, i25; l25 >= 0; l25--)
    (i25 = s20[l25]) && (o21 = (e25 ? i25(r18, t16, o21) : i25(o21)) || o21);
  return e25 && o21 && u15(r18, t16, o21), o21;
}, "a");
var b10 = i`:host{display:block;cursor:default}`;
var h13 = b10;
var p13 = /* @__PURE__ */ __name(class extends n6 {
  constructor(t16, e25, o21) {
    super("change");
    this.toggle = t16;
    this.panel = e25;
    this.expanded = o21;
  }
}, "p");
function d12(s20, r18, t16) {
  let e25 = t16.value;
  t16.value = function(...o21) {
    if (!this.disabled)
      return e25.call(this, ...o21);
  };
}
__name(d12, "d");
var n19 = /* @__PURE__ */ __name(class extends s4 {
  constructor() {
    super();
    this.logger = new n7(this);
    this.expanded = false;
    this.ariaControls = "";
    this.disabled = false;
    this.controlledPanel = null;
    this.addEventListener("click", this.toggle), this.addEventListener("keydown", this._keydownHandler);
  }
  connectedCallback() {
    super.connectedCallback(), this.setAttribute("role", "button"), this.tabIndex = 0, this.id || (this.id = n11("pfe-collapse-toggle")), this.controlledPanel || this._connectPanel(this.ariaControls);
  }
  render() {
    return y`<slot></slot>`;
  }
  _expandedChanged() {
    if (this.setAttribute("aria-expanded", String(!!this.expanded)), this.controlledPanel || this._connectPanel(this.ariaControls), !this.controlledPanel)
      this.logger.warn("This toggle doesn't have a panel associated with it");
    else {
      let { expanded: t16, controlledPanel: e25 } = this;
      e25.expanded = t16, this.dispatchEvent(n14("pfe-collapse:change", { expanded: t16, panel: e25, toggle: this })), this.dispatchEvent(new p13(this, e25, t16));
    }
  }
  _ariaControlsChanged(t16, e25) {
    e25 && this._connectPanel(e25);
  }
  _keydownHandler(t16) {
    switch (t16.key) {
      case " ":
      case "Spacebar":
      case "Enter":
        this.toggle();
        break;
    }
  }
  _connectPanel(t16) {
    if (t16) {
      let e25 = this.getRootNode();
      e25 instanceof Document || e25 instanceof ShadowRoot ? this.controlledPanel = e25.querySelector(`#${t16}`) : this.logger.warn("pfe-collapse-toggle was not connected");
    }
  }
  expand() {
    this.expanded = true;
  }
  collapse() {
    this.expanded = false;
  }
  toggle() {
    this.expanded = !this.expanded;
  }
}, "n");
n19.version = "2.0.0-next.4", n19.styles = [h13], a14([p3, e5({ type: Boolean, attribute: "expanded" })], n19.prototype, "expanded", 2), a14([p3, e5({ attribute: "aria-controls", reflect: true })], n19.prototype, "ariaControls", 2), a14([e5({ type: Boolean, reflect: true })], n19.prototype, "disabled", 2), a14([d12], n19.prototype, "expand", 1), a14([d12], n19.prototype, "collapse", 1), a14([d12], n19.prototype, "toggle", 1), n19 = a14([e4("pfe-collapse-toggle"), d4()], n19);

// node_modules/@patternfly/pfe-collapse/pfe-collapse.js
var m19 = Object.defineProperty;
var d13 = Object.getOwnPropertyDescriptor;
var o16 = /* @__PURE__ */ __name((n25, i25, l25, t16) => {
  for (var a19 = t16 > 1 ? void 0 : t16 ? d13(i25, l25) : i25, r18 = n25.length - 1, s20; r18 >= 0; r18--)
    (s20 = n25[r18]) && (a19 = (t16 ? s20(i25, l25, a19) : s20(a19)) || a19);
  return t16 && a19 && m19(i25, l25, a19), a19;
}, "o");
var g9 = i`:host{display:block}:host([hidden]){display:none}:host(.animating),:host([expanded]){display:block}`;
var p14 = g9;
var e17 = /* @__PURE__ */ __name(class extends s4 {
  constructor() {
    super();
    this._toggle = null;
    this._panel = null;
    this.addEventListener("animation-start", this._animationStartHandler), this.addEventListener("animation-end", this._animationEndHandler);
  }
  render() {
    return y`<slot></slot>`;
  }
  _animationChanged(l25, t16) {
    t16 !== "false" && t16 !== "true" || this._panel && (this._panel.animation = t16);
  }
  async _init() {
    await this.updateComplete, this._toggle = this.querySelector("pfe-collapse-toggle"), this._panel = this.querySelector("pfe-collapse-panel"), this._toggle?.setAttribute?.("aria-controls", this._panel?.id ?? "");
  }
  _animationStartHandler() {
    this.classList.add("animating");
  }
  _animationEndHandler() {
    this.classList.remove("animating");
  }
  toggle() {
    this._toggle?.toggle?.();
  }
}, "e");
e17.version = "2.0.0-next.4", e17.styles = [p14], o16([p3, e5({ reflect: true })], e17.prototype, "animation", 2), o16([c6()], e17.prototype, "_init", 1), e17 = o16([e4("pfe-collapse"), d4()], e17);

// node_modules/@patternfly/pfe-cta/node_modules/lit/index.js
init_reactive_element();
init_lit_html();
init_lit_element();

// node_modules/@patternfly/pfe-cta/node_modules/lit/decorators.js
init_custom_element();
init_property();
init_state();
init_event_options();
init_query();
init_query_all();
init_query_async();
init_query_assigned_elements();
init_query_assigned_nodes();

// node_modules/@patternfly/pfe-cta/pfe-cta.js
init_core();
init_logger();
init_decorators();
var u16 = Object.defineProperty;
var v9 = Object.getOwnPropertyDescriptor;
var t10 = /* @__PURE__ */ __name((o21, i25, r18, a19) => {
  for (var c23 = a19 > 1 ? void 0 : a19 ? v9(i25, r18) : i25, l25 = o21.length - 1, p22; l25 >= 0; l25--)
    (p22 = o21[l25]) && (c23 = (a19 ? p22(i25, r18, c23) : p22(c23)) || c23);
  return a19 && c23 && u16(i25, r18, c23), c23;
}, "t");
var b11 = i`.pfe-cta--wrapper button,.pfe-cta--wrapper input,::slotted(button),::slotted(input){background-color:transparent;border:none;margin:0;padding:0;text-align:left}.pfe-cta--wrapper button,.pfe-cta--wrapper input,::slotted(button),::slotted(input){background-color:transparent;border:none;margin:0;padding:0;text-align:left}.pfe-cta--wrapper button,.pfe-cta--wrapper input,::slotted(button),::slotted(input){background-color:transparent;border:none;margin:0;padding:0;text-align:left}.pfe-cta--wrapper button,.pfe-cta--wrapper input,::slotted(button),::slotted(input){background-color:transparent;border:none;margin:0;padding:0;text-align:left}:host{display:inline-block;position:relative;z-index:0;vertical-align:middle;max-width:var(--pfe-cta--MaxWidth,max-content);background-color:var(--pfe-cta--BackgroundColor,transparent);border-radius:var(--pfe-cta--BorderRadius,0);border:var(--pfe-theme--ui--border-width,1px) var(--pfe-theme--ui--border-style,solid) var(--pfe-cta--BorderColor,transparent);cursor:pointer;--pfe-context-background-color:var(--pfe-cta--BackgroundColor, transparent)!important}::slotted(*){white-space:normal;display:inline;padding:var(--pfe-cta--Padding,.6rem 0)!important;color:var(--pfe-cta--Color,var(--pfe-broadcasted--link,#06c))!important;font-family:var(--pfe-cta--FontFamily, var(--pfe-theme--font-family--heading, "Red Hat Display", "RedHatDisplay", "Overpass", Overpass, Arial, sans-serif));font-size:var(--pfe-cta--FontSize, var(--pf-global--FontSize--lg, 1.125rem));font-weight:var(--pfe-cta--FontWeight,var(--pfe-theme--font-weight--bold,700));line-height:var(--pfe-cta--LineHeight, var(--pfe-theme--line-height, 1.5));text-decoration:var(--pfe-cta--TextDecoration,none)!important}:host([priority]) ::slotted(*){font-size:var(--pfe-cta--FontSize--priority, var(--pf-global--FontSize--md, 1rem));text-align:center}:host([aria-disabled=true]) ::slotted(*){cursor:default!important;font-size:var(--pfe-cta--FontSize, var(--pf-global--FontSize--md, 1rem))}:host([aria-disabled=true]) ::slotted(*),:host([priority]) ::slotted(*){padding:var(--pfe-cta--Padding,var(--pfe-theme--container-padding,1rem) calc(var(--pfe-theme--container-padding,1rem) * 2))!important}:host(:not([aria-disabled=true])) ::slotted(:focus),:host(:not([aria-disabled=true]).focus-within),:host(:not([aria-disabled=true]).focus-within) ::slotted(*),:host(:not([aria-disabled=true]):focus){outline:0!important}.pfe-cta--wrapper{display:block;white-space:nowrap;min-width:100%}:host([aria-disabled=true]) .pfe-cta--wrapper,:host([priority]) .pfe-cta--wrapper{display:flex;flex-flow:row nowrap;align-items:center;height:100%}.pfe-cta--inner{display:block;height:calc(100% - 4px);width:calc(100% - 4px);box-sizing:border-box;position:absolute;top:2px;left:2px;z-index:-1;border:var(--pfe-theme--surface--border-width,1px) var(--pfe-theme--surface--border-style,solid) var(--pfe-cta__inner--BorderColor,transparent);border-radius:2px;outline:0}.pfe-cta--arrow{display:var(--pfe-cta__arrow--Display,inline);padding:var(--pfe-cta__arrow--Padding,0 3px);fill:var(--pfe-cta--Color,var(--pfe-broadcasted--link,#06c));width:var(--pfe-cta__arrow--size,13px);height:var(--pfe-cta__arrow--size,13px);transition:padding var(--pfe-theme--animation-speed, .3s) var(--pfe-theme--animation-timing, cubic-bezier(.465, .183, .153, .946));margin-bottom:-1px}:host([priority]) svg{display:none}:host([priority=primary]){--pfe-cta--BorderRadius:var(--pfe-theme--ui--border-radius, 2px);--pfe-cta--BackgroundColor:var(--pfe-theme--color--ui-accent, #06c);--pfe-cta--BorderColor:var(--pfe-theme--color--ui-accent, #06c);--pfe-cta--Color:var(--pfe-theme--color--ui-accent--text, #fff);--pfe-cta--BackgroundColor--hover:var(--pfe-theme--color--ui-accent--hover, #004080);--pfe-cta--BorderColor--hover:var(--pfe-theme--color--ui-accent--hover, #004080);--pfe-cta--Color--hover:var(--pfe-theme--color--ui-accent--text, #fff);--pfe-cta--BackgroundColor--focus:var(--pfe-theme--color--ui-accent, #06c);--pfe-cta--BorderColor--focus:var(--pfe-theme--color--ui-accent, #06c);--pfe-cta--Color--focus:var(--pfe-theme--color--ui-accent--text, #fff);--pfe-cta__arrow--Display:none;--pfe-cta__inner--BorderColor--focus:var(--pfe-theme--color--ui-accent--text, #fff)}:host([priority=secondary]){--pfe-cta--BorderRadius:var(--pfe-theme--ui--border-radius, 2px);--pfe-cta--BackgroundColor:transparent;--pfe-cta--BorderColor:var(--pfe-broadcasted--text, #3c3f42);--pfe-cta--Color:var(--pfe-broadcasted--text, #3c3f42);--pfe-cta--BackgroundColor--hover:var(--pfe-broadcasted--text, #3c3f42);--pfe-cta--BorderColor--hover:var(--pfe-broadcasted--text, #3c3f42);--pfe-cta--Color--hover:var(--pfe-theme--color--ui-base--text, #fff);--pfe-cta--BackgroundColor--focus:var(--pfe-theme--color--surface--lighter, #f0f0f0);--pfe-cta--BorderColor--focus:var(--pfe-theme--color--ui-base, #6a6e73);--pfe-cta--Color--focus:var(--pfe-theme--color--ui-base, #6a6e73);--pfe-cta__arrow--Display:none;--pfe-cta__inner--BorderColor--focus:var(--pfe-theme--color--ui-base, #6a6e73)}:host([priority=primary][on=dark]),:host([priority=primary][on=saturated]){--pfe-cta--BackgroundColor:var(--pfe-theme--color--surface--lightest, #fff);--pfe-cta--BorderColor:var(--pfe-theme--color--surface--lightest, #fff);--pfe-cta--Color:var(--pfe-theme--color--text, #151515);--pfe-cta--BackgroundColor--hover:var(--pfe-theme--color--surface--lighter, #f0f0f0);--pfe-cta--BorderColor--hover:var(--pfe-theme--color--surface--lighter, #f0f0f0);--pfe-cta--Color--hover:var(--pfe-theme--color--text, #151515);--pfe-cta--BackgroundColor--focus:var(--pfe-theme--color--surface--lightest, #fff);--pfe-cta--BorderColor--focus:var(--pfe-theme--color--surface--lightest, #fff);--pfe-cta--Color--focus:var(--pfe-theme--color--text, #151515);--pfe-cta__inner--BorderColor--focus:var(--pfe-theme--color--surface--darkest, #151515)}:host([priority=secondary][on=dark]),:host([priority=secondary][on=saturated]){--pfe-cta--BackgroundColor:transparent;--pfe-cta--BorderColor:var(--pfe-theme--color--surface--lightest, #fff);--pfe-cta--Color:var(--pfe-theme--color--text--on-dark, #fff);--pfe-cta--BackgroundColor--hover:var(--pfe-theme--color--surface--lighter, #f0f0f0);--pfe-cta--BorderColor--hover:var(--pfe-theme--color--surface--lighter, #f0f0f0);--pfe-cta--Color--hover:var(--pfe-theme--color--text, #151515);--pfe-cta--BackgroundColor--focus:var(--pfe-theme--color--surface--lightest, #fff);--pfe-cta--BorderColor--focus:var(--pfe-theme--color--surface--lightest, #fff);--pfe-cta--Color--focus:var(--pfe-theme--color--text, #151515);--pfe-cta__inner--BorderColor--focus:var(--pfe-theme--color--surface--darkest, #151515)}:host([on=saturated][color-palette=accent]),:host([on^=dark][color-palette=accent]),:host([on^=light][color-palette=accent]){--pfe-broadcasted--text:var(--pfe-theme--color--text, #fff)!important;--pfe-broadcasted--link:var(--pfe-theme--color--link, #06c);--pfe-broadcasted--link--hover:var(--pfe-theme--color--link--hover, #004080);--pfe-broadcasted--link--focus:var(--pfe-theme--color--link--focus, #004080)}:host([priority=secondary][color-palette=accent]){--pfe-cta--BackgroundColor:transparent;--pfe-cta--BorderColor:var(--pfe-theme--color--ui-accent, #06c);--pfe-cta--Color:var(--pfe-theme--color--ui-accent, #06c);--pfe-cta--BackgroundColor--hover:var(--pfe-theme--color--ui-accent, #06c);--pfe-cta--BorderColor--hover:var(--pfe-theme--color--ui-accent, #06c);--pfe-cta--Color--hover:var(--pfe-theme--color--ui-accent--text, #fff);--pfe-cta--BackgroundColor--focus:var(--pfe-theme--color--surface--lighter, #f0f0f0);--pfe-cta--BorderColor--focus:var(--pfe-theme--color--ui-accent, #06c);--pfe-cta--Color--focus:var(--pfe-theme--color--ui-accent, #06c);--pfe-cta__inner--BorderColor--focus:var(--pfe-theme--color--ui-accent, #06c)}:host([on^=dark]){--pfe-broadcasted--text:var(--pfe-theme--color--text--on-dark, #fff)!important;--pfe-broadcasted--text--muted:var(--pfe-theme--color--text--muted--on-dark, #d2d2d2)!important;--pfe-broadcasted--link:var(--pfe-theme--color--link--on-dark, #73bcf7)!important;--pfe-broadcasted--link--hover:var(--pfe-theme--color--link--hover--on-dark, #bee1f4)!important;--pfe-broadcasted--link--focus:var(--pfe-theme--color--link--focus--on-dark, #bee1f4)!important;--pfe-broadcasted--link--visited:var(--pfe-theme--color--link--visited--on-dark, #bee1f4)!important;--pfe-broadcasted--link-decoration:var(--pfe-theme--link-decoration--on-dark, none);--pfe-broadcasted--link-decoration--hover:var(--pfe-theme--link-decoration--hover--on-dark, underline)!important;--pfe-broadcasted--link-decoration--focus:var(--pfe-theme--link-decoration--focus--on-dark, underline)!important;--pfe-broadcasted--link-decoration--visited:var(--pfe-theme--link-decoration--visited--on-dark, none)!important}:host([on=saturated]){--pfe-broadcasted--text:var(--pfe-theme--color--text--on-saturated, #fff)!important;--pfe-broadcasted--text--muted:var(--pfe-theme--color--text--muted--on-saturated, #d2d2d2)!important;--pfe-broadcasted--link:var(--pfe-theme--color--link--on-saturated, #fff)!important;--pfe-broadcasted--link--hover:var(--pfe-theme--color--link--hover--on-saturated, #fafafa)!important;--pfe-broadcasted--link--focus:var(--pfe-theme--color--link--focus--on-saturated, #fafafa)!important;--pfe-broadcasted--link--visited:var(--pfe-theme--color--link--visited--on-saturated, #d2d2d2)!important;--pfe-broadcasted--link-decoration:var(--pfe-theme--link-decoration--on-saturated, underline)!important;--pfe-broadcasted--link-decoration--hover:var(--pfe-theme--link-decoration--hover--on-saturated, underline)!important;--pfe-broadcasted--link-decoration--focus:var(--pfe-theme--link-decoration--focus--on-saturated, underline)!important;--pfe-broadcasted--link-decoration--visited:var(--pfe-theme--link-decoration--visited--on-saturated, underline)!important}:host([priority=primary][color-palette=base]){--pfe-cta--BackgroundColor:var(--pfe-theme--color--ui-base, #6a6e73);--pfe-cta--BorderColor:var(--pfe-theme--color--ui-base, #6a6e73);--pfe-cta--Color:var(--pfe-theme--color--ui-base--text, #fff);--pfe-cta--BackgroundColor--hover:var(--pfe-theme--color--ui-base--hover, #151515);--pfe-cta--BorderColor--hover:var(--pfe-theme--color--ui-base--hover, #151515);--pfe-cta--Color--hover:var(--pfe-theme--color--ui-base--text, #fff);--pfe-cta--BackgroundColor--focus:var(--pfe-theme--color--ui-base, #6a6e73);--pfe-cta--BorderColor--focus:var(--pfe-theme--color--surface--darker, #3c3f42);--pfe-cta--Color--focus:var(--pfe-theme--color--ui-base--text, #fff);--pfe-cta__inner--BorderColor--focus:var(--pfe-theme--color--ui-base--text, #fff)}:host([priority=secondary][color-palette=base]){--pfe-cta--BackgroundColor:transparent;--pfe-cta--BorderColor:var(--pfe-theme--color--ui-base, #6a6e73);--pfe-cta--Color:var(--pfe-theme--color--ui-base, #6a6e73);--pfe-cta--BackgroundColor--hover:var(--pfe-theme--color--ui-base--hover, #151515);--pfe-cta--BorderColor--hover:var(--pfe-theme--color--ui-base--hover, #151515);--pfe-cta--Color--hover:var(--pfe-theme--color--ui-base--text, #fff);--pfe-cta--BackgroundColor--focus:rgba(40, 151, 240, 0.2);--pfe-cta--BorderColor--focus:var(--pfe-theme--color--ui-base, #6a6e73);--pfe-cta--Color--focus:var(--pfe-theme--color--ui-base, #6a6e73);--pfe-cta__inner--BorderColor--focus:var(--pfe-theme--color--ui-base, #6a6e73)}:host([priority=secondary][variant=wind]){--pfe-cta--BackgroundColor:transparent;--pfe-cta--BorderColor:var(--pfe-theme--color--surface--border, #d2d2d2);--pfe-cta--Color:var(--pfe-broadcasted--link, #06c);--pfe-cta--FontWeight:var(--pfe-theme--font-weight--normal, 400);--pfe-cta--BackgroundColor--hover:var(--pfe-theme--color--surface--border--lightest, #f5f5f5);--pfe-cta--BorderColor--hover:var(--pfe-theme--color--surface--border, #d2d2d2);--pfe-cta--Color--hover:var(--pfe-theme--color--link--hover, #004080);--pfe-cta--TextDecoration--hover:var(--pfe-theme--link-decoration--hover, underline);--pfe-cta--Color--focus:var(--pfe-theme--color--link--hover, #004080);--pfe-cta--BorderColor--focus:var(--pfe-theme--color--surface--border, #d2d2d2);--pfe-cta__inner--BorderColor--focus:var(--pfe---BorderColor--focus)}:host([aria-disabled=true]){--pfe-cta__arrow--Display:none;--pfe-cta--BackgroundColor:var(--pfe-theme--color--ui-disabled, #d2d2d2);--pfe-cta--BorderColor:var(--pfe-theme--color--ui-disabled, #d2d2d2);--pfe-cta--Color:var(--pfe-theme--color--ui-disabled--text, #6a6e73)}:host(:not([aria-disabled=true]).focus-within),:host(:not([aria-disabled=true]):focus){--pfe-cta--BackgroundColor:var(--pfe-cta--BackgroundColor--focus, rgba(40, 151, 240, 0.2));--pfe-cta--BorderColor:var(--pfe-cta--BorderColor--focus, transparent);--pfe-cta--Color:var(--pfe-cta--Color--focus, var(--pfe-broadcasted--link--focus, #004080));--pfe-cta--TextDecoration:var(--pfe-cta--TextDecoration--focus, none);--pfe-cta__inner--BorderColor:var(--pfe-cta__inner--BorderColor--focus, transparent)}:host(:not([aria-disabled=true])) ::slotted(:hover),:host(:not([aria-disabled=true]):hover){--pfe-cta--BackgroundColor:var(--pfe-cta--BackgroundColor--hover, transparent);--pfe-cta--BorderColor:var(--pfe-cta--BorderColor--hover, transparent);--pfe-cta--Color:var(--pfe-cta--Color--hover, var(--pfe-broadcasted--link--hover, #004080));--pfe-cta--TextDecoration:var(--pfe-cta--TextDecoration--hover, none);--pfe-cta__inner--BorderColor:var(--pfe-cta__inner--BorderColor--hover, transparent);--pfe-cta__arrow--Padding:0 0 0 6px}`;
var d14 = b11;
var D3 = ["a", "button"];
function M3(o21) {
  return !!o21 && D3.includes(o21.localName);
}
__name(M3, "M");
var h14 = /* @__PURE__ */ new WeakMap();
function F2(o21) {
  return !!o21 && !!h14.get(o21);
}
__name(F2, "F");
var s13 = /* @__PURE__ */ __name(class extends n6 {
  constructor(r18, a19) {
    super("select");
    this.originEvent = a19;
    this.data = r18.data;
  }
}, "s");
var e18 = /* @__PURE__ */ __name(class extends s4 {
  constructor() {
    super(...arguments);
    this.data = {};
    this.cta = null;
    this.initializing = false;
    this.logger = new n7(this);
  }
  get isDefault() {
    return !this.hasAttribute("priority");
  }
  render() {
    return y`<span class="pfe-cta--wrapper" part="container"><slot @slotchange="${this._init}"></slot>${this.isDefault ? w`<svg class="pfe-cta--arrow" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 31.56 31.56" focusable="false" width="1em"><path d="M15.78 0l-3.1 3.1 10.5 10.49H0v4.38h23.18l-10.5 10.49 3.1 3.1 15.78-15.78L15.78 0z"/></svg>` : ""} <span class="pfe-cta--inner"></span></span>`;
  }
  disconnectedCallback() {
    super.disconnectedCallback(), this.cta && (this.cta.removeEventListener("focus", this._focusHandler), this.cta.removeEventListener("blur", this._blurHandler), this.cta.removeEventListener("click", this._clickHandler), this.cta.removeEventListener("keyup", this._keyupHandler));
  }
  async _init() {
    await this.updateComplete;
    let r18 = this.firstElementChild;
    if (!(F2(r18) || this.initializing)) {
      if (this.initializing = true, M3(r18)) {
        if (r18.tagName.toLowerCase() === "button" && this.priority == null && this.getAttribute("aria-disabled") !== "true")
          return this.logger.warn("Button tag is not supported semantically by the default link styles");
      } else
        return this.logger.warn("The first child in the light DOM must be a supported call-to-action tag (<a>, <button>)");
      this.cta = r18, this.data = { href: this.cta.href, text: this.cta.text, title: this.cta.title, color: this.color, type: this.priority }, this.variant && (this.data.type = `${this.data.type} ${this.variant}`), this.getAttribute("aria-disabled") && (this.data.type = "disabled"), this.cta.addEventListener("focus", this._focusHandler), this.cta.addEventListener("blur", this._blurHandler), this.cta.addEventListener("click", this._clickHandler), this.cta.addEventListener("keyup", this._keyupHandler), h14.set(this.cta, true), this.initializing = false;
    }
  }
  _focusHandler() {
    this.classList.add("focus-within");
  }
  _blurHandler() {
    this.classList.remove("focus-within");
  }
  _keyupHandler(r18) {
    let { key: a19 } = r18;
    switch (a19) {
      case "Enter":
        this._clickHandler(r18);
    }
  }
  _clickHandler(r18) {
    this.dispatchEvent(new s13(this, r18)), this.dispatchEvent(n14("pfe-cta:select", Object.assign(this.data, { originEvent: r18 })));
  }
}, "e");
e18.version = "2.0.0-next.5", e18.styles = [d14], t10([e5({ reflect: true })], e18.prototype, "priority", 2), t10([c5(), e5({ reflect: true, attribute: "color-palette" })], e18.prototype, "colorPalette", 2), t10([d3({ alias: "colorPalette", attribute: "color" })], e18.prototype, "color", 2), t10([C2(), e5({ reflect: true })], e18.prototype, "on", 2), t10([e5({ reflect: true })], e18.prototype, "variant", 2), t10([t3()], e18.prototype, "data", 2), t10([c6({ observe: false })], e18.prototype, "_init", 1), t10([o8], e18.prototype, "_focusHandler", 1), t10([o8], e18.prototype, "_blurHandler", 1), t10([o8], e18.prototype, "_keyupHandler", 1), t10([o8], e18.prototype, "_clickHandler", 1), e18 = t10([e4("pfe-cta"), d4()], e18);

// node_modules/@patternfly/pfe-datetime/node_modules/lit/index.js
init_reactive_element();
init_lit_html();
init_lit_element();

// node_modules/@patternfly/pfe-datetime/node_modules/lit/decorators.js
init_custom_element();
init_property();
init_state();
init_event_options();
init_query();
init_query_all();
init_query_async();
init_query_assigned_elements();
init_query_assigned_nodes();

// node_modules/@patternfly/pfe-datetime/pfe-datetime.js
init_decorators();
init_logger();
var y10 = Object.defineProperty;
var _6 = Object.getOwnPropertyDescriptor;
var a15 = /* @__PURE__ */ __name((l25, o21, i25, e25) => {
  for (var t16 = e25 > 1 ? void 0 : e25 ? _6(o21, i25) : o21, n25 = l25.length - 1, s20; n25 >= 0; n25--)
    (s20 = l25[n25]) && (t16 = (e25 ? s20(o21, i25, t16) : s20(t16)) || t16);
  return e25 && t16 && y10(o21, i25, t16), t16;
}, "a");
var b12 = i`:host{display:inline}`;
var g10 = b12;
function O2(l25) {
  return l25.replace(/[\w]([A-Z])/g, (o21) => `${o21[0]}-${o21[1]}`).toLowerCase();
}
__name(O2, "O");
var I3 = Object.entries({ weekday: { short: "short", long: "long" }, day: { numeric: "numeric", "2-digit": "2-digit" }, month: { short: "short", long: "long" }, year: { numeric: "numeric", "2-digit": "2-digit" }, hour: { numeric: "numeric", "2-digit": "2-digit" }, minute: { numeric: "numeric", "2-digit": "2-digit" }, second: { numeric: "numeric", "2-digit": "2-digit" }, timeZoneName: { short: "short", long: "long" } });
var r13 = /* @__PURE__ */ __name(class extends s4 {
  constructor() {
    super(...arguments);
    this.type = "local";
    this.datetime = "";
    this.logger = new n7(this);
  }
  get _dateTimeType() {
    return this.type || "local";
  }
  render() {
    let i25 = this._getTypeString();
    return y`<span>${i25}</span>`;
  }
  _datetimeChanged(i25, e25) {
    !e25 || !Date.parse(e25) || Date.parse(e25) && this._datetime === Date.parse(e25) || this.setDate(Date.parse(e25));
  }
  _timestampChanged(i25, e25) {
    if (e25 == null || this._timestamp === e25) {
      this.logger.log("early return");
      return;
    }
    this._timestamp = e25, this.setDate(new Date(e25 * 1e3));
  }
  _getOptions() {
    let i25 = {};
    for (let [e25, t16] of I3) {
      let n25 = O2(e25), s20 = this.getAttribute(n25);
      if (s20) {
        let m26 = t16[s20];
        m26 && (i25[e25] = m26);
      }
    }
    return this.timeZone && (i25.timeZone = this.timeZone), i25;
  }
  _getTypeString() {
    if (this._datetime == null)
      return "";
    try {
      let i25 = this._getOptions(), e25 = this.getAttribute("locale") || navigator.language;
      switch (this._dateTimeType) {
        case "local":
          return new Intl.DateTimeFormat(e25, i25).format(this._datetime);
        case "relative":
          return this._getTimeRelative(this._datetime - Date.now());
        default:
          return new Date(this._datetime ?? "").toLocaleString();
      }
    } catch {
      return new Date(this._datetime ?? "").toLocaleString();
    }
  }
  _getTimeRelative(i25) {
    let e25 = i25 > 0 ? "until" : "ago", t16 = "just now", n25 = Math.round(Math.abs(i25) / 1e3), s20 = Math.round(n25 / 60), m26 = Math.round(s20 / 60), u21 = Math.round(m26 / 24), c23 = Math.round(u21 / 30), f25 = Math.round(c23 / 12);
    return c23 >= 18 ? t16 = `${f25} years` : c23 >= 12 ? t16 = "a year" : u21 >= 45 ? t16 = `${c23} months` : u21 >= 30 ? t16 = "a month" : m26 >= 36 ? t16 = `${u21} days` : m26 >= 24 ? t16 = "a day" : s20 >= 90 ? t16 = `${m26} hours` : s20 >= 45 ? t16 = "an hour" : n25 >= 90 ? t16 = `${s20} minutes` : n25 >= 45 ? t16 = "a minute" : n25 >= 10 && (t16 = `${n25} seconds`), t16 !== "just now" ? `${t16} ${e25}` : t16;
  }
  setDate(i25) {
    this._datetime = i25 instanceof Date ? i25.getTime() : i25;
  }
}, "r");
r13.version = "2.0.0-next.4", r13.styles = [g10], a15([e5({ reflect: true })], r13.prototype, "type", 2), a15([p3, e5({ reflect: true })], r13.prototype, "datetime", 2), a15([p3, e5({ type: Number, reflect: true })], r13.prototype, "timestamp", 2), a15([e5({ reflect: true, attribute: "time-zone" })], r13.prototype, "timeZone", 2), a15([t3()], r13.prototype, "_datetime", 2), a15([t3()], r13.prototype, "_timestamp", 2), r13 = a15([e4("pfe-datetime"), d4()], r13);

// node_modules/@patternfly/pfe-dropdown/node_modules/lit/index.js
init_reactive_element();
init_lit_html();
init_lit_element();

// node_modules/@patternfly/pfe-dropdown/node_modules/lit/decorators.js
init_custom_element();
init_property();
init_state();
init_event_options();
init_query();
init_query_all();
init_query_async();
init_query_assigned_elements();
init_query_assigned_nodes();

// node_modules/@patternfly/pfe-dropdown/pfe-dropdown.js
init_core();
init_decorators();

// node_modules/@patternfly/pfe-dropdown/node_modules/lit/directives/if-defined.js
init_if_defined();

// node_modules/@patternfly/pfe-dropdown/pfe-dropdown-item.js
init_decorators();
var h15 = Object.defineProperty;
var m20 = Object.getOwnPropertyDescriptor;
var i21 = /* @__PURE__ */ __name((a19, r18, e25, n25) => {
  for (var o21 = n25 > 1 ? void 0 : n25 ? m20(r18, e25) : r18, d17 = a19.length - 1, s20; d17 >= 0; d17--)
    (s20 = a19[d17]) && (o21 = (n25 ? s20(r18, e25, o21) : s20(o21)) || o21);
  return n25 && o21 && h15(r18, e25, o21), o21;
}, "i");
var v10 = i`::slotted(*){--pf-c--FontSize:var(--pfe-dropdown--FontSize, var(--pf-global--FontSize--md, 1rem));display:block;width:100%;padding:var(--pfe-dropdown--spacing--vertical,calc(var(--pfe-theme--container-padding,1rem) * .5)) var(--pfe-dropdown--spacing--horizontal,calc(var(--pfe-theme--container-padding,1rem) * .5));color:var(--pfe-dropdown--Color,#030303);font-size:var(--pfe-dropdown--FontSize, var(--pf-global--FontSize--md, 1rem));font-weight:var(--pfe-dropdown--FontWeight,400);line-height:var(--pfe-dropdown--LineHeight, var(--pfe-theme--line-height, 1.5));text-align:var(--pfe-dropdown--TextAlign,left);white-space:nowrap;box-sizing:border-box;text-decoration:none;font-family:var(--pfe-theme--font-family, inherit);cursor:pointer}::slotted(button){background-color:var(--pfe-dropdown--BackgroundColor,transparent);border:var(--pfe-dropdown--Border,none)}.pfe-dropdown-item__container:active,.pfe-dropdown-item__container:focus-within,.pfe-dropdown-item__container:hover{background-color:var(--pfe-dropdown--BackgroundColor--hover,var(--pfe-theme--color--surface--lighter,#f0f0f0));color:var(--pfe-dropdown--Color--hover,#151515)}:host([item-type=separator]) .pfe-dropdown-item__container{height:1px;background-color:#f0f0f0}:host([disabled]) .pfe-dropdown-item__container{pointer-events:none;--pfe-dropdown--Color:#6a6e73}`;
var l21 = v10;
var t11 = /* @__PURE__ */ __name(class extends s4 {
  constructor() {
    super(...arguments);
    this.disabled = false;
  }
  connectedCallback() {
    super.connectedCallback(), this.addEventListener("click", this._clickHandler);
  }
  render() {
    return y`<li class="pfe-dropdown-item__container" role="${l10(this.containerRole)}" part="container"><slot></slot></li>`;
  }
  _itemTypeChanged() {
    let e25 = this.itemType;
    if (e25)
      switch (e25) {
        case "link":
          this.containerRole = "none", this.firstElementChild?.setAttribute("role", "menuitem");
          break;
        case "action":
          this.containerRole = "menuitem", this.firstElementChild?.removeAttribute("role");
          break;
        case "separator":
          this.containerRole = "separator";
          break;
      }
  }
  _disabledChanged() {
    let e25 = this.disabled;
    this.setAttribute("aria-disabled", String(this.disabled)), this.toggleAttribute("is_disabled", this.disabled), e25 ? this.removeAttribute("tabindex") : this.setAttribute("tabindex", "0");
  }
  _clickHandler(e25) {
    e25.target === this && this.firstElementChild?.click();
  }
}, "t");
t11.version = "2.0.0-next.3", t11.styles = [l21], t11.shadowRootOptions = { ...s4.shadowRootOptions, delegatesFocus: true }, i21([p3, e5({ reflect: true, attribute: "item-type" })], t11.prototype, "itemType", 2), i21([p3, e5({ type: Boolean, reflect: true })], t11.prototype, "disabled", 2), i21([t3()], t11.prototype, "containerRole", 2), t11 = i21([e4("pfe-dropdown-item"), d4()], t11);

// node_modules/@patternfly/pfe-dropdown/pfe-dropdown.js
var b13 = Object.defineProperty;
var _7 = Object.getOwnPropertyDescriptor;
var a16 = /* @__PURE__ */ __name((p22, s20, e25, t16) => {
  for (var o21 = t16 > 1 ? void 0 : t16 ? _7(s20, e25) : s20, n25 = p22.length - 1, i25; n25 >= 0; n25--)
    (i25 = p22[n25]) && (o21 = (t16 ? i25(s20, e25, o21) : i25(o21)) || o21);
  return t16 && o21 && b13(s20, e25, o21), o21;
}, "a");
var w5 = i`:host{position:relative;display:inline-block;max-width:100%}:host(:hover:not([disabled])){--pfe-dropdown__before--BorderBottomColor:var(--pfe-dropdown__before--BorderBottomColor--hover, var(--pfe-theme--color--ui-base, #6a6e73))}:host(:active:not([disabled])),:host(:focus:not([disabled])){--pfe-dropdown__before--BorderBottomColor:var(--pfe-dropdown__before--BorderBottomColor--hover, var(--pfe-theme--color--ui-base, #6a6e73));--pfe-dropdown__before--BorderWidth:var(--pfe-dropdown__before--BorderWidth--hover, calc(var(--pfe-theme--ui--border-width, 1px) * 2))}:host([hidden]){display:none}:host([disabled]){--pfe-dropdown--BackgroundColor:var(--pfe-theme--color--surface--lighter, #f0f0f0);--pfe-dropdown--BorderWidth:0}:host([disabled]) .pfe-dropdown__container{pointer-events:none}.pfe-dropdown__toggle{position:relative;display:flex;align-items:center;justify-content:space-between;min-width:var(--pfe-dropdown--MinWidth,calc(var(--pfe-theme--container-spacer,1rem) * 2));max-width:var(--pfe-dropdown--MaxWidth,100%);padding:var(--pfe-dropdown--spacing--vertical,calc(var(--pfe-theme--container-padding,1rem) * .5)) var(--pfe-dropdown--spacing--horizontal,calc(var(--pfe-theme--container-padding,1rem) * .5));font-size:var(--pfe-dropdown--FontSize, var(--pf-global--FontSize--md, 1rem));font-family:var(--pfe-theme--font-family, inherit);font-weight:var(--pfe-dropdown--FontWeight,400);line-height:var(--pfe-theme--line-height, 1.5);color:var(--pfe-dropdown--Color,var(--pfe-broadcasted--text,#3c3f42));background-color:var(--pfe-dropdown--BackgroundColor,transparent);border:var(--pfe-dropdown--Border,none);cursor:pointer}.pfe-dropdown__toggle::before{position:absolute;top:0;right:0;bottom:0;left:0;content:"";border-width:var(--pfe-dropdown__before--BorderWidth,var(--pfe-theme--ui--border-width,1px));border-style:var(--pfe-dropdown__before--BorderStyle,var(--pfe-theme--ui--border-style,solid));border-top-color:var(--pfe-dropdown__before--BorderTopColor,var(--pfe-theme--color--surface--lighter,#f0f0f0));border-right-color:var(--pfe-dropdown__before--BorderRightColor,var(--pfe-theme--color--surface--lighter,#f0f0f0));border-bottom-color:var(--pfe-dropdown__before--BorderBottomColor,var(--pfe-theme--color--surface--border--darker,#6a6e73));border-left-color:var(--pfe-dropdown__before--BorderLeftColor,var(--pfe-theme--color--surface--lighter,#f0f0f0))}.pfe-dropdown__toggle-text{overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.pfe-dropdown__toggle-icon{vertical-align:calc(var(--pfe-theme--container-spacer,1rem) * -.125);fill:currentColor;height:var(--pfe-theme--icon-size,1em);width:var(--pfe-dropdown__toggle-icon--Width);margin-right:calc(var(--pfe-theme--container-spacer,1rem) * .5);margin-left:var(--pfe-theme--container-spacer,1rem);line-height:var(--pfe-theme--line-height, 1.5)}.pfe-dropdown__menu{display:none;position:absolute;top:calc(100% + .25rem);z-index:var(--pfe-theme--zindex--overlay,90);padding:var(--pfe-dropdown__menu--spacing--vertical) var(--pfe-dropdown__menu--spacing--horizontal,0);margin:var(--pfe-dropdown__menu--Margin,0);background:var(--pfe-dropdown__menu--BackgroundColor,var(--pfe-theme--color--surface--lightest,#fff));background-clip:padding-box;border-width:var(--pfe-dropdown__menu--BorderWidth,var(--pfe-theme--ui--border-width,1px));border-style:var(--pfe-dropdown__menu--BorderStyle,var(--pfe-theme--ui--border-style,solid));border-color:var(--pfe-dropdown__menu--BorderColor,transparent);box-shadow:var(--pfe-dropdown__menu--BoxShadow,var(--pfe-theme--box-shadow--sm,0 .0625rem .125rem 0 rgba(3,3,3,.12),0 0 .125rem 0 rgba(3,3,3,.06) 0 .0625rem .125rem 0 rgba(3,3,3,.2)));list-style:none;box-sizing:border-box;min-width:var(--pfe-dropdown__menu--MinWidth,100%)}.pfe-dropdown__menu.open{display:block}`;
var h16 = w5;
var f18 = /* @__PURE__ */ __name(class extends n6 {
  constructor(e25) {
    super("change");
    this.action = e25;
  }
}, "f");
var r14 = /* @__PURE__ */ __name(class extends s4 {
  constructor() {
    super(...arguments);
    this.label = "Dropdown";
    this.disabled = false;
    this.expanded = false;
  }
  connectedCallback() {
    super.connectedCallback(), this.addEventListener("keydown", this._itemKeydownHandler), document.addEventListener("click", this._outsideClickHandler);
  }
  get pfeDropdownOptions() {
    return this.options;
  }
  set pfeDropdownOptions(e25) {
    this.options = e25;
  }
  render() {
    return y`<div class="pfe-dropdown__container" part="container"><button id="pfe-dropdown-toggle" class="pfe-dropdown__toggle" part="button" aria-haspopup="true" aria-controls="pfe-dropdown-menu" aria-expanded="${String(!!this.expanded)}" @click="${this.toggle}" @keydown="${this._toggleKeydownHandler}"><span class="pfe-dropdown__toggle-text">${this.label}</span> <svg class="pfe-dropdown__toggle-icon" viewBox="0 0 320 512" aria-hidden="true" role="img"><path d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"></path></svg></button><ul id="pfe-dropdown-menu" class="pfe-dropdown__menu ${o9({ open: this.expanded })}" part="menu" role="menu" aria-labelledby="pfe-dropdown-toggle"><slot></slot></ul></div>`;
  }
  disconnectedCallback() {
    super.disconnectedCallback(), this._allItems().forEach((e25) => {
      e25.removeEventListener("click", this._itemClickHandler);
    });
  }
  _init() {
    this.disabled || this._allItems().forEach((e25) => {
      e25.addEventListener("click", this._itemClickHandler);
    });
  }
  _optionsChanged(e25, t16) {
    this._modifyDOM(t16);
  }
  _disabledChanged() {
    this.setAttribute("aria-disabled", String(this.disabled)), this.disabled ? this.setAttribute("tabindex", "-1") : this.removeAttribute("tabindex");
  }
  _itemClickHandler(e25) {
    let t16 = e25.target.parentElement?.getAttribute("item-type") ?? void 0;
    return e25.target.parentElement instanceof t11 && this._selectItem(e25.target, t16), this;
  }
  async _itemKeydownHandler(e25) {
    let t16, o21 = e25.target instanceof HTMLElement ? e25.target.getAttribute("item-type") : void 0, n25 = this._allItems().findIndex((i25) => i25 === document.activeElement || i25.matches(":focus"));
    switch (e25.key) {
      case " ":
      case "Enter":
        e25.preventDefault(), e25.stopPropagation(), e25.target instanceof t11 && this._selectItem(e25.target, o21 ?? void 0);
        break;
      case "Escape":
        e25.preventDefault(), e25.stopPropagation(), this._focus(), await this.updateComplete, this.close();
        break;
      case "Tab":
        this.close();
        break;
      case "ArrowRight":
      case "ArrowDown":
        e25.preventDefault(), e25.stopPropagation(), t16 = this._itemContainer(this._nextItem(n25, 1));
        break;
      case "ArrowLeft":
      case "ArrowUp":
        t16 = this._itemContainer(this._nextItem(n25, -1));
        break;
      case "Home":
        t16 = this._firstItem();
        break;
      case "End":
        t16 = this._lastItem();
        break;
      default:
        break;
    }
    return t16 && (t16.setAttribute("tabindex", "-1"), t16.focus()), this;
  }
  _outsideClickHandler(e25) {
    e25.composedPath().includes(this) || this.close();
  }
  async _toggleKeydownHandler(e25) {
    switch (e25.key) {
      case " ":
      case "Enter":
      case "ArrowDown":
        if (e25.preventDefault(), e25.stopPropagation(), this._allDisabled())
          this.toggle();
        else if (!this.expanded) {
          this.open(), await this.updateComplete;
          let t16 = this._itemContainer(this._nextItem(-1, 1));
          t16?.setAttribute("tabindex", "-1"), t16?.focus();
        }
        break;
      case "Tab":
        this.close();
        break;
      default:
        break;
    }
    return this;
  }
  async _modifyDOM(e25, t16 = true) {
    t16 && (this.innerHTML = "");
    for (let o21 of e25)
      this.appendChild(this._createItem(o21));
  }
  _createItem(e25) {
    let t16 = document.createElement("pfe-dropdown-item");
    switch (t16.itemType = e25.type, e25.type) {
      case "link":
        {
          let o21 = document.createElement("a");
          o21.setAttribute("href", e25.href ? e25.href : "#"), o21.innerText = e25.text ?? "", t16.appendChild(o21), e25.disabled && (t16.disabled = true);
        }
        break;
      case "action":
        {
          let o21 = document.createElement("button");
          o21.innerText = e25.text ?? "", t16.appendChild(o21), e25.disabled && (t16.disabled = true);
        }
        break;
    }
    return t16;
  }
  _allItems() {
    let e25 = "pfe-dropdown-item:not([item-type='separator'])";
    return [...this.querySelectorAll(e25)];
  }
  _allDisabled() {
    return this._allItems().every((e25) => e25.disabled);
  }
  _nextItem(e25, t16) {
    let o21 = this._allItems(), n25 = (e25 + t16) % o21.length;
    n25 = n25 < 0 ? n25 + o21.length : n25;
    let i25 = o21[n25];
    for (; i25?.hasAttribute("disabled"); )
      n25 += t16, i25 = o21[n25 % o21.length];
    return i25;
  }
  _firstItem() {
    return this._allItems()[0];
  }
  _lastItem() {
    let e25 = this._allItems();
    return e25[e25.length - 1];
  }
  async _selectItem(e25, t16) {
    if (t16 === "action") {
      let o21 = e25.innerText;
      this.dispatchEvent(new f18(o21)), this.dispatchEvent(n14("pfe-dropdown:change", { action: o21 })), this.close(), await this.updateComplete, this._focus();
    } else
      e25.click();
  }
  _itemContainer(e25) {
    return e25.shadowRoot?.querySelector(".pfe-dropdown-item__container") ?? null;
  }
  _focus() {
    this.button?.focus();
  }
  addDropdownOptions(e25) {
    this._modifyDOM(e25, false);
  }
  open() {
    this.expanded = true;
  }
  close() {
    this.expanded = false;
  }
  toggle() {
    this.expanded = !this.expanded;
  }
}, "r");
r14.version = "2.0.0-next.3", r14.styles = [h16], r14.shadowRootOptions = { ...s4.shadowRootOptions, delegatesFocus: true }, a16([e5({ reflect: true })], r14.prototype, "label", 2), a16([p3, e5({ type: Boolean, reflect: true })], r14.prototype, "disabled", 2), a16([p3, e5({ type: Boolean, reflect: true })], r14.prototype, "expanded", 2), a16([p3], r14.prototype, "options", 2), a16([i4("#pfe-dropdown-toggle")], r14.prototype, "button", 2), a16([c6({ observe: false })], r14.prototype, "_init", 1), a16([o8], r14.prototype, "_itemClickHandler", 1), a16([o8], r14.prototype, "_itemKeydownHandler", 1), a16([o8], r14.prototype, "_outsideClickHandler", 1), a16([o8], r14.prototype, "_toggleKeydownHandler", 1), a16([o8], r14.prototype, "addDropdownOptions", 1), a16([o8], r14.prototype, "open", 1), a16([o8], r14.prototype, "close", 1), a16([o8], r14.prototype, "toggle", 1), r14 = a16([e4("pfe-dropdown"), d4()], r14);

// node_modules/@patternfly/pfe-health-index/node_modules/lit/index.js
init_reactive_element();
init_lit_html();
init_lit_element();

// node_modules/@patternfly/pfe-health-index/node_modules/lit/decorators.js
init_custom_element();
init_property();
init_state();
init_event_options();
init_query();
init_query_all();
init_query_async();
init_query_assigned_elements();
init_query_assigned_nodes();

// node_modules/@patternfly/pfe-health-index/pfe-health-index.js
init_decorators();
init_logger();
var x6 = Object.defineProperty;
var m21 = Object.getOwnPropertyDescriptor;
var h17 = /* @__PURE__ */ __name((a19, s20, i25, t16) => {
  for (var r18 = t16 > 1 ? void 0 : t16 ? m21(s20, i25) : s20, n25 = a19.length - 1, l25; n25 >= 0; n25--)
    (l25 = a19[n25]) && (r18 = (t16 ? l25(s20, i25, r18) : l25(r18)) || r18);
  return t16 && r18 && x6(s20, i25, r18), r18;
}, "h");
var v11 = i`:host{display:inline-flex;align-items:center}:host([hidden]){display:none}.box.a{--pfe-health-index--accent:#3f9c35;--pfe-health-index--accent--text:var(--pfe-theme--color--text--on-dark, #fff)}.box.b{--pfe-health-index--accent:#92d400;--pfe-health-index--accent--text:var(--pfe-theme--color--text--on-dark, #fff)}.box.c{--pfe-health-index--accent:#efaa00;--pfe-health-index--accent--text:var(--pfe-theme--color--text--on-dark, #fff)}.box.d{--pfe-health-index--accent:#ec7a08;--pfe-health-index--accent--text:var(--pfe-theme--color--text--on-dark, #fff)}.box.e{--pfe-health-index--accent:#cc0000;--pfe-health-index--accent--text:var(--pfe-theme--color--text--on-dark, #fff)}.box.f{--pfe-health-index--accent:#523333;--pfe-health-index--accent--text:var(--pfe-theme--color--text--on-dark, #fff)}:host(:not([size=lg]):not([size=mini])) .box{background-color:var(--pfe-theme--color--surface--lightest,#fff);width:calc(var(--pfe-theme--ui--element--size,20px)/ 2);height:var(--pfe-theme--ui--element--size,20px);border-right:var(--pfe-theme--ui--border-width,1px) var(--pfe-theme--ui--border-style,solid) var(--pfe-theme--color--surface--border,#d2d2d2)}:host(:not([size=lg]):not([size=mini])) .box:last-child{border-right:0}:host(:not([size=lg]):not([size=mini])) .box.active{background-color:var(--pfe-health-index--accent)}:host([size=mini]) .box{display:flex;width:var(--pfe-theme--ui--element--size,20px);height:var(--pfe-theme--ui--element--size,20px);justify-content:center;align-items:center;font-size:1em;border-radius:var(--pfe-theme--ui--border-radius,2px);background-color:var(--pfe-health-index--accent);color:var(--pfe-health-index--accent--text)}:host([size=lg]) .box{background-color:var(--pfe-theme--color--surface--lightest,#fff);color:var(--pfe-theme--color--ui-disabled--text,#6a6e73);border-top:calc(var(--pfe-theme--ui--border-width,1px) * 2) var(--pfe-theme--ui--border-style,solid) var(--pfe-theme--color--surface--border--lightest,#f5f5f5)}:host([size=lg]) .box:first-child{margin-left:0;border-left:calc(var(--pfe-theme--ui--border-width,1px) * 2) var(--pfe-theme--ui--border-style,solid) var(--pfe-theme--color--surface--border--lightest,#f5f5f5)}:host([size=lg]) .box.active:first-child{border-left:none}:host([size=lg]) .box:last-child{margin-right:0;border-right:calc(var(--pfe-theme--ui--border-width,1px) * 2) var(--pfe-theme--ui--border-style,solid) var(--pfe-theme--color--surface--border--lightest,#f5f5f5)}:host([size=lg]) .box.active:last-child{border-right:0}:host([size=lg]) .box>.bottom{height:.5em;margin:0 .5px}:host([size=lg]) .box .grade{padding:6px calc(var(--pfe-theme--ui--element--size,20px)/ 2)}:host([size=lg]) .box.active .grade{margin:calc(var(--pfe-theme--ui--border-width,1px) * -2) .5px 0 .5px;padding-top:.5em}:host([size=lg]) .box.active .grade,:host([size=lg]) .box>.bottom{background-color:var(--pfe-health-index--accent);color:var(--pfe-health-index--accent--text)}:host(:not([size=mini])) .box-container{display:flex}:host(:not([size=lg]):not([size=mini])) .box-container{border:var(--pfe-theme--ui--border-width,1px) var(--pfe-theme--ui--border-style,solid) var(--pfe-theme--color--surface--border,#d2d2d2);margin-left:calc(var(--pfe-theme--container-spacer,1rem) * .5)}:host([size=mini],[size=lg]) .box-container{border:none}:host([size=mini]) .box-container{margin:0}:host([size=lg]) .box-container{margin-left:0}`;
var f19 = v11;
var C7 = /^[^A-F]*[A-F][^A-F]*$/i;
var c17 = /* @__PURE__ */ __name((a19) => typeof a19 == "string" && !!a19.match(C7), "c");
var e19 = /* @__PURE__ */ __name(class extends s4 {
  constructor() {
    super();
    this.logger = new n7(this);
    this.size = null;
    this.textContent && !this.hasAttribute("health-index") && !c17(this.textContent) && this.logger.warn("a valid health-index was not provided. Please use A, B, C, D, E, or F"), this.healthIndex ?? (this.healthIndex = c17(this.textContent) ? this.textContent : "A");
  }
  render() {
    let i25 = (this.healthIndex ?? "").toLowerCase();
    return y`${this.size ? "" : y`<div id="healthIndex">${i25.toUpperCase()}</div>`}<div class="box-container" part="container">${this.size === "mini" ? y`<div class="box ${o9({ [i25]: true, active: true })}" part="box"><div class="grade" id="healthIndex">${i25.toUpperCase()}</div></div>` : e19.grades.map((t16) => y`<div class="box ${o9({ active: i25 === t16, [t16]: true })}">${this.size === "lg" ? y`<div class="grade">${t16.toUpperCase()}</div><div class="bottom"></div>` : y`<div class="box ${o9({ active: i25 === t16, [t16]: true })}" part="box"></div>`}</div>`)}</div>`;
  }
  updated() {
    this.healthIndex ? c17(this.healthIndex) ? this.textContent !== this.healthIndex.toUpperCase() && (this.textContent = this.healthIndex.toUpperCase()) : this.healthIndex = null : (this.logger.warn("a valid health-index was not provided. Please use A, B, C, D, E, or F"), this.textContent = "");
  }
}, "e");
e19.version = "2.0.0-next.3", e19.styles = [f19], e19.grades = ["a", "b", "c", "d", "e", "f"], h17([e5({ type: String, reflect: true, attribute: "health-index" })], e19.prototype, "healthIndex", 2), h17([e5({ reflect: true })], e19.prototype, "size", 2), e19 = h17([e4("pfe-health-index"), d4()], e19);

// components.ts
init_pfe_icon();

// node_modules/@patternfly/pfe-icon-panel/node_modules/lit/index.js
init_reactive_element();
init_lit_html();
init_lit_element();

// node_modules/@patternfly/pfe-icon-panel/node_modules/lit/decorators.js
init_custom_element();
init_property();
init_state();
init_event_options();
init_query();
init_query_all();
init_query_async();
init_query_assigned_elements();
init_query_assigned_nodes();

// node_modules/@patternfly/pfe-icon-panel/node_modules/lit/directives/if-defined.js
init_if_defined();

// node_modules/@patternfly/pfe-icon-panel/pfe-icon-panel.js
init_decorators();
init_pfe_icon();
var m22 = Object.defineProperty;
var f20 = Object.getOwnPropertyDescriptor;
var o17 = /* @__PURE__ */ __name((a19, r18, l25, i25) => {
  for (var t16 = i25 > 1 ? void 0 : i25 ? f20(r18, l25) : r18, c23 = a19.length - 1, p22; c23 >= 0; c23--)
    (p22 = a19[c23]) && (t16 = (i25 ? p22(r18, l25, t16) : p22(t16)) || t16);
  return i25 && t16 && m22(r18, l25, t16), t16;
}, "o");
var h18 = i`:host{display:flex;align-content:flex-start;align-items:flex-start;flex-direction:column;margin-top:calc(-1 * var(--pfe-theme--container-spacer,1rem));margin-right:calc(-1 * var(--pfe-theme--container-spacer,1rem))}@media (min-width:576px){:host{flex-direction:row}}:host([stacked]),:host([stacked]:not([stacked=false])){flex-direction:column}.pfe-icon-panel__content{margin-top:var(--pfe-theme--container-spacer,1rem);margin-left:0}@media (min-width:576px){.pfe-icon-panel__content{margin-top:0;margin-left:var(--pfe-theme--container-spacer,1rem)}}.pfe-icon-panel__footer{margin-top:var(--pfe-theme--content-spacer,1.5rem)}`;
var s14 = h18;
var e20 = /* @__PURE__ */ __name(class extends s4 {
  constructor() {
    super(...arguments);
    this.color = "darker";
    this.circled = false;
    this.stacked = false;
    this.centered = false;
  }
  render() {
    return y`<pfe-icon part="icon" ?circled="${this.circled}" color="${this.color}" size="${this.circled ? "lg" : "xl"}" icon="${l10(this.icon)}"></pfe-icon><div class="pfe-icon-panel__content" part="content"><slot class="pfe-icon-panel__header" name="header"></slot><slot class="pfe-icon-panel__header" name="pfe-icon-panel--header"></slot><slot class="pfe-icon-panel__body"></slot><slot class="pfe-icon-panel__footer" name="footer"></slot><slot class="pfe-icon-panel__footer" name="pfe-icon-panel--footer"></slot></div>`;
  }
}, "e");
e20.version = "2.0.0-next.3", e20.styles = [s14], o17([e5({ reflect: true })], e20.prototype, "icon", 2), o17([e5({ reflect: true })], e20.prototype, "color", 2), o17([e5({ reflect: true, type: Boolean })], e20.prototype, "circled", 2), o17([e5({ reflect: true, type: Boolean })], e20.prototype, "stacked", 2), o17([e5({ reflect: true, type: Boolean })], e20.prototype, "centered", 2), e20 = o17([e4("pfe-icon-panel"), d4()], e20);

// node_modules/@patternfly/pfe-jump-links/node_modules/lit/index.js
init_reactive_element();
init_lit_html();
init_lit_element();

// node_modules/lit-html/directives/unsafe-html.js
init_lit_html();
var e21 = class extends i10 {
  constructor(i25) {
    if (super(i25), this.it = b, i25.type !== t5.CHILD)
      throw Error(this.constructor.directiveName + "() can only be used in child bindings");
  }
  render(r18) {
    if (r18 === b || null == r18)
      return this._t = void 0, this.it = r18;
    if (r18 === x)
      return r18;
    if ("string" != typeof r18)
      throw Error(this.constructor.directiveName + "() called with a non-string value");
    if (r18 === this.it)
      return this._t;
    this.it = r18;
    const s20 = [r18];
    return s20.raw = s20, this._t = { _$litType$: this.constructor.resultType, strings: s20, values: [] };
  }
};
__name(e21, "e");
e21.directiveName = "unsafeHTML", e21.resultType = 1;
var o18 = e8(e21);

// node_modules/@patternfly/pfe-jump-links/node_modules/lit/decorators.js
init_custom_element();
init_property();
init_state();
init_event_options();
init_query();
init_query_all();
init_query_async();
init_query_assigned_elements();
init_query_assigned_nodes();

// node_modules/@patternfly/pfe-jump-links/pfe-jump-links-nav.js
init_core();
init_decorators();
init_random();
init_slot_controller();
init_logger();

// node_modules/@patternfly/pfe-jump-links/pfe-jump-links-panel.js
init_core();
init_decorators();
init_logger();
var h19 = Object.defineProperty;
var u17 = Object.getOwnPropertyDescriptor;
var s15 = /* @__PURE__ */ __name((n25, a19, i25, r18) => {
  for (var e25 = r18 > 1 ? void 0 : r18 ? u17(a19, i25) : a19, o21 = n25.length - 1, l25; o21 >= 0; o21--)
    (l25 = n25[o21]) && (e25 = (r18 ? l25(a19, i25, e25) : l25(e25)) || e25);
  return r18 && e25 && h19(a19, i25, e25), e25;
}, "s");
var p15 = /* @__PURE__ */ __name(class extends n6 {
  constructor() {
    super("content-change");
  }
}, "p");
var t12 = /* @__PURE__ */ __name(class extends s4 {
  constructor() {
    super(...arguments);
    this.logger = new n7(this);
    this.spacers = false;
  }
  get sections() {
    return this.querySelectorAll(".pfe-jump-links-panel__section");
  }
  render() {
    return y`<slot></slot>`;
  }
  _isValidMarkup() {
    [...this.sections].length === 0 && this.logger.warn("This panel does not contain any headings labeled with the pfe-jump-links-panel__section class.", "Please add that class and an ID to any heading you would like surfaced in the jump links navigation.");
  }
  _spacersChanged() {
    !this.spacers || !this.sections || [...this.sections].length <= 0 || [...this.sections].forEach((i25) => {
      let r18 = i25.parentNode, e25 = i25.previousElementSibling;
      (!e25 || !e25.classList.contains("pfe-jump-links__section--spacer")) && (e25 = document.createElement("div"), e25.classList.add("pfe-jump-links__section--spacer"), r18?.insertBefore(e25, i25)), i25.id && (!e25.id || e25.id !== i25.id) && (e25.id = i25.id, i25.removeAttribute("id"), i25.setAttribute("data-target", e25.id)), e25.style.marginTop = "calc(-1 * (var(--pfe-navigation--Height--actual, 0px) + var(--pfe-jump-links--Height--actual, 0px)))", e25.style.height = "calc(var(--pfe-navigation--Height--actual, 0px) + var(--pfe-jump-links--Height--actual, 0px))";
    });
  }
  _init(i25) {
    t12.instances.add(this), i25 && (this.dispatchEvent(new p15()), this.dispatchEvent(n14("pfe-jump-links-panel:change"))), this._isValidMarkup(), this._spacersChanged();
  }
  disconnectedCallback() {
    super.disconnectedCallback(), t12.instances.delete(this);
  }
}, "t");
t12.version = "2.0.0-next.6", t12.instances = /* @__PURE__ */ new Set(), s15([e5({ type: Number })], t12.prototype, "offset", 2), s15([e5({ reflect: true })], t12.prototype, "scrolltarget", 2), s15([p3, e5({ type: Boolean, reflect: true })], t12.prototype, "spacers", 2), s15([o8], t12.prototype, "_isValidMarkup", 1), s15([o8], t12.prototype, "_spacersChanged", 1), s15([c6({ observe: { childList: true, subtree: true } })], t12.prototype, "_init", 1), t12 = s15([e4("pfe-jump-links-panel"), d4()], t12);

// node_modules/@patternfly/pfe-jump-links/pfe-jump-links-nav.js
init_pfe_accordion();
var T6 = Object.defineProperty;
var E2 = Object.getOwnPropertyDescriptor;
var n20 = /* @__PURE__ */ __name((p22, f25, e25, t16) => {
  for (var i25 = t16 > 1 ? void 0 : t16 ? E2(f25, e25) : f25, o21 = p22.length - 1, a19; o21 >= 0; o21--)
    (a19 = p22[o21]) && (i25 = (t16 ? a19(f25, e25, i25) : a19(i25)) || i25);
  return t16 && i25 && T6(f25, e25, i25), i25;
}, "n");
var j2 = i`slot[name=heading][sr-only]{position:absolute;overflow:hidden;clip:rect(0,0,0,0);height:1px;width:1px;margin:-1px;padding:0;border:0}slot[name=heading][sr-only]{position:absolute;overflow:hidden;clip:rect(0,0,0,0);height:1px;width:1px;margin:-1px;padding:0;border:0}:host{box-sizing:border-box;font-family:var(--pfe-theme--font-family, "Red Hat Text", "RedHatText", "Overpass", Overpass, Arial, sans-serif);font-weight:var(--pfe-theme--font-weight--normal,400);display:block;position:sticky;z-index:var(--pfe-theme--zindex--jumplinks,80);top:0;padding:0}@media (min-width:992px){:host([horizontal][color-palette=darkest]){background-color:var(--pfe-theme--color--surface--darkest,#151515);--context:var(--pfe-theme--color--surface--darkest--context, dark);--pfe-broadcasted--text:var(--pfe-theme--color--text--on-dark, #fff);--pfe-broadcasted--text--muted:var(--pfe-theme--color--text--muted--on-dark, #d2d2d2);--pfe-broadcasted--link:var(--pfe-theme--color--link--on-dark, #73bcf7);--pfe-broadcasted--link--hover:var(--pfe-theme--color--link--hover--on-dark, #bee1f4);--pfe-broadcasted--link--focus:var(--pfe-theme--color--link--focus--on-dark, #bee1f4);--pfe-broadcasted--link--visited:var(--pfe-theme--color--link--visited--on-dark, #bee1f4);--pfe-broadcasted--link-decoration:var(--pfe-theme--link-decoration--on-dark, none);--pfe-broadcasted--link-decoration--hover:var(--pfe-theme--link-decoration--hover--on-dark, underline);--pfe-broadcasted--link-decoration--focus:var(--pfe-theme--link-decoration--focus--on-dark, underline);--pfe-broadcasted--link-decoration--visited:var(--pfe-theme--link-decoration--visited--on-dark, none)}}@media (min-width:992px){:host([horizontal][color-palette=darker]){background-color:var(--pfe-theme--color--surface--darker,#3c3f42);--context:var(--pfe-theme--color--surface--darker--context, dark);--pfe-broadcasted--text:var(--pfe-theme--color--text--on-dark, #fff);--pfe-broadcasted--text--muted:var(--pfe-theme--color--text--muted--on-dark, #d2d2d2);--pfe-broadcasted--link:var(--pfe-theme--color--link--on-dark, #73bcf7);--pfe-broadcasted--link--hover:var(--pfe-theme--color--link--hover--on-dark, #bee1f4);--pfe-broadcasted--link--focus:var(--pfe-theme--color--link--focus--on-dark, #bee1f4);--pfe-broadcasted--link--visited:var(--pfe-theme--color--link--visited--on-dark, #bee1f4);--pfe-broadcasted--link-decoration:var(--pfe-theme--link-decoration--on-dark, none);--pfe-broadcasted--link-decoration--hover:var(--pfe-theme--link-decoration--hover--on-dark, underline);--pfe-broadcasted--link-decoration--focus:var(--pfe-theme--link-decoration--focus--on-dark, underline);--pfe-broadcasted--link-decoration--visited:var(--pfe-theme--link-decoration--visited--on-dark, none)}}@media (min-width:992px){:host([horizontal][color-palette=lightest]){background-color:var(--pfe-theme--color--surface--lightest,#fff);--context:var(--pfe-theme--color--surface--lightest--context, light);--pfe-broadcasted--text:var(--pfe-theme--color--text, #151515);--pfe-broadcasted--text--muted:var(--pfe-theme--color--text--muted, #6a6e73);--pfe-broadcasted--link:var(--pfe-theme--color--link, #06c);--pfe-broadcasted--link--hover:var(--pfe-theme--color--link--hover, #004080);--pfe-broadcasted--link--focus:var(--pfe-theme--color--link--focus, #004080);--pfe-broadcasted--link--visited:var(--pfe-theme--color--link--visited, #6753ac);--pfe-broadcasted--link-decoration:var(--pfe-theme--link-decoration, none);--pfe-broadcasted--link-decoration--hover:var(--pfe-theme--link-decoration--hover, underline);--pfe-broadcasted--link-decoration--focus:var(--pfe-theme--link-decoration--focus, underline);--pfe-broadcasted--link-decoration--visited:var(--pfe-theme--link-decoration--visited, none)}}@media (min-width:992px){:host([horizontal][color-palette=lighter]){background-color:var(--pfe-theme--color--surface--lighter,#f0f0f0);--context:var(--pfe-theme--color--surface--lighter--context, light);--pfe-broadcasted--text:var(--pfe-theme--color--text, #151515);--pfe-broadcasted--text--muted:var(--pfe-theme--color--text--muted, #6a6e73);--pfe-broadcasted--link:var(--pfe-theme--color--link, #06c);--pfe-broadcasted--link--hover:var(--pfe-theme--color--link--hover, #004080);--pfe-broadcasted--link--focus:var(--pfe-theme--color--link--focus, #004080);--pfe-broadcasted--link--visited:var(--pfe-theme--color--link--visited, #6753ac);--pfe-broadcasted--link-decoration:var(--pfe-theme--link-decoration, none);--pfe-broadcasted--link-decoration--hover:var(--pfe-theme--link-decoration--hover, underline);--pfe-broadcasted--link-decoration--focus:var(--pfe-theme--link-decoration--focus, underline);--pfe-broadcasted--link-decoration--visited:var(--pfe-theme--link-decoration--visited, none)}}:host([stuck][horizontal]){box-shadow:var(--pfe-theme--box-shadow--sm,0 .0625rem .125rem 0 rgba(3,3,3,.12),0 0 .125rem 0 rgba(3,3,3,.06) 0 .0625rem .125rem 0 rgba(3,3,3,.2))}.pfe-jump-links-nav__heading{margin-top:0;margin-bottom:var(--pfe-theme--content-spacer--body--sm,.5rem)}.pfe-jump-links-nav__heading h3,::slotted([slot=heading]){color:var(--pfe-broadcasted--text,#3c3f42);margin:0;font-size:var(--pfe-jump-links__heading--FontSize, var(--pf-global--FontSize--md, 1rem));font-weight:var(--pfe-theme--font-weight--normal,400);text-transform:var(--pfe-jump-links__heading--TextTransform,uppercase)}slot[name=logo]{display:none}slot[name=cta]{display:none}nav{visibility:visible;margin:0;list-style:none;padding:0}pfe-accordion-panel nav{width:100%}@media (min-width:992px){:host([horizontal][no-header]) nav{padding-top:1px;padding-bottom:0}}#container{padding:32px 0}pfe-accordion-panel #container{padding:24px 0}ul{padding:0;margin:0;border-left:var(--pfe-theme--surface--border-width,1px) var(--pfe-theme--surface--border-style,solid) var(--pfe-theme--color--ui-disabled,#d2d2d2)}li{display:block;position:relative;margin-left:calc(var(--pfe-theme--surface--border-width,1px) * -1)}.sub-nav li{margin-left:0}li[expand] ul{height:auto;flex:1}li[expand] .sub-nav{display:table;height:auto}li::before{position:absolute;content:"";top:0;left:0;height:calc(100% - 0px);width:calc(var(--pfe-theme--surface--border-width--heavy,4px) - 0px);background-color:transparent}li:not([active],[expand]):hover::before,li:not([expand]) li:hover::before{background-color:var(--pfe-theme--color--ui-disabled,#d2d2d2)}li[active]::before,li[expand]::before{background-color:var(--pfe-jump-links--accent,var(--pfe-jump-links--BorderColor,var(--pfe-theme--color--ui-accent,#06c)));z-index:2}a{position:relative;color:var(--pfe-theme--color--ui-disabled--text,#6a6e73);font-size:var(--pfe-jump-links--FontSize, var(--pf-global--FontSize--md, 1rem));text-decoration:none;line-height:var(--pfe-theme--line-height, 1.5);padding:calc(var(--pfe-jump-links__link--vertical-spacer,calc(var(--pfe-theme--content-spacer,1.5rem)/ 6)) * 2) calc(var(--pfe-jump-links__link--horizontal-spacer,calc(var(--pfe-theme--content-spacer,1.5rem)/ 3)) * 2)}a,a:focus+ul>li>a,li:hover a,li[expand] a{display:table}li>a:hover,li[active]>a{color:var(--pfe-broadcasted--text,#3c3f42)}.has-sub-section a{padding-bottom:var(--pfe-jump-links__link--vertical-spacer,calc(var(--pfe-theme--content-spacer,1.5rem)/ 6))}.sub-section a{margin-left:calc(var(--pfe-theme--container-spacer,1rem) * .75);font-size:var(--pfe-jump-links--FontSize, var(--pf-global--FontSize--md, 1rem));padding:var(--pfe-jump-links__link--vertical-spacer,calc(var(--pfe-theme--content-spacer,1.5rem)/ 6)) calc(var(--pfe-jump-links__link--horizontal-spacer,calc(var(--pfe-theme--content-spacer,1.5rem)/ 3)) * 2)}@media (min-width:992px){.sub-section a{display:none}}.sub-section a:last-child{padding-bottom:var(--pfe-jump-links__link--horizontal-spacer,calc(var(--pfe-theme--content-spacer,1.5rem)/ 3))}a:focus:focus-visible{outline:0;position:relative}a:focus:focus-visible::after{position:absolute;content:"";top:0;left:0;width:calc(100% + var(--pfe-theme--ui--border-width--active,3px));height:calc(100% + var(--pfe-theme--ui--border-width--active,3px));border-radius:var(--pfe-theme--ui--border-radius,2px);border:var(--pfe-theme--ui--border-width--md,2px) var(--pfe-theme--ui--border-style,solid) transparent}a:focus:focus-visible:focus::after{border-color:var(--pfe-theme--color--link,#06c)}a:focus:focus-visible:focus:not(:focus-visible)::after{border:unset}ul ul{margin:0;padding:0;overflow-y:hidden;transition:flex 1s linear}ul ul,ul ul li{border-left:none!important}pfe-accordion{border:var(--pfe-theme--surface--border-width,1px) var(--pfe-theme--surface--border-style,solid) var(--pfe-theme--color--ui-disabled,#d2d2d2);--context:light;--pfe-accordion--BackgroundColor:var(--pfe-theme--color--surface--lightest, #fff)}:host([color-palette=darkest]) pfe-accordion{--context:dark;--pfe-accordion--BackgroundColor:var(--pfe-theme--color--surface--darkest, #151515);--pfe-theme--color--ui-accent--on-dark:transparent}pfe-accordion,pfe-accordion-panel.animating,pfe-accordion-panel[expanded]{--pfe-accordion--accent:transparent;--pfe-accordion--BorderColor:transparent;--pfe-accordion--accent:transparent;--pfe-accordion--BorderTopWidth:0;--pfe-accordion--BorderBottomWidth:0;--pfe-accordion--panel-container--Padding:0 0 0 calc(var(--pfe-accordion__base--Padding,var(--pfe-theme--container-spacer,1rem)) * 1.5)}@media screen and (min-width:992px){:host([horizontal]){width:100%;background-color:var(--pfe-jump-links--BackgroundColor,var(--pfe-theme--color--surface--lightest,#fff));--context:var(--pfe-jump-links--context, var(--pfe-theme--color--surface--lightest--context, light));z-index:calc(var(--pfe-theme--zindex--jumplinks,80) + 1);border:none;padding:0}:host([horizontal]) .pfe-jump-links-nav__heading{flex-basis:100%;align-self:center;justify-content:center;display:block;margin:0;padding-bottom:var(--pfe-theme--container-padding,1rem);border-bottom:var(--pfe-theme--surface--border-width,1px) var(--pfe-theme--surface--border-style,solid) var(--pfe-theme--color--surface--border,#d2d2d2)}:host([horizontal]) .pfe-jump-links-nav__heading h3,:host([horizontal]) ::slotted([slot=heading]){text-align:var(--pfe-jump-links__heading--TextAlign,center)}:host([horizontal]) ::slotted([slot=logo]){position:absolute;max-height:calc(var(--pfe-theme--container-spacer,1rem) * 3.5);max-width:calc(var(--pfe-theme--container-spacer,1rem) * 14);top:var(--pfe-theme--container-spacer,1rem);left:calc(var(--pfe-theme--container-spacer,1rem) * 4)}:host([horizontal]) ::slotted([slot=cta]){position:absolute;top:calc(var(--pfe-theme--container-spacer,1rem) * 1);right:calc(var(--pfe-theme--container-spacer,1rem) * 4)}}@media screen and (min-width:992px){:host([horizontal]) nav{display:flex;flex-flow:row wrap;padding-top:32px;padding-bottom:8px;max-width:var(--pfe-jump-links--Width,calc(992px - (var(--pfe-jump-links--Padding--horizontal) * 4)))}}@media screen and (min-width:1200px){:host([horizontal]) nav{max-width:var(--pfe-jump-links--Width,calc(1200px - (var(--pfe-jump-links--Padding--horizontal) * 4)))}}@media screen and (min-width:992px){:host([horizontal]) #container{padding:0;flex-grow:1;display:flex;justify-items:center;flex-direction:column}:host([horizontal]) ul{border:none;text-align:center;flex-grow:1;display:flex;padding:0;width:auto;margin:0 auto}:host([horizontal]) li{margin-left:0;padding:0;display:flex;align-items:center;margin-top:calc(var(--pfe-theme--surface--border-width,1px) * -1)}:host([horizontal]) li::before{height:var(--pfe-theme--surface--border-width--heavy,4px);width:100%}:host([horizontal]) a{padding:16px;text-decoration:none;font-size:16px;color:var(--pfe-broadcasted--text--muted,)}:host([horizontal]) a:hover,:host([horizontal]) a[active]{color:var(--pfe-broadcasted--text,#3c3f42)}}:host([hidden]){display:none!important}:host([on=dark]) a{color:var(--pfe-theme--color--text--muted--on-dark,#d2d2d2)}:host([on=saturated]) a{color:var(--pfe-theme--color--text--muted--on-saturated,#d2d2d2)}`;
var w6 = j2;
function F3(p22) {
  return p22 instanceof HTMLAnchorElement;
}
__name(F3, "F");
function Q2(p22) {
  return p22 instanceof Document || p22 instanceof ShadowRoot;
}
__name(Q2, "Q");
var k6 = /* @__PURE__ */ __name(class extends n6 {
  constructor(e25) {
    super("stuck");
    this.stuck = e25;
  }
}, "k");
var x7 = /* @__PURE__ */ __name(class extends n6 {
  constructor(e25) {
    super("change");
    this.index = e25;
  }
}, "x");
var r15 = /* @__PURE__ */ __name(class extends s4 {
  constructor() {
    super(...arguments);
    this.logger = new n7(this);
    this.autobuild = false;
    this.horizontal = false;
    this.stuck = false;
    this.noHeader = false;
    this.srText = "Jump to section";
    this.accordionCollapseTiming = 750;
    this.containerInnerHTML = "";
    this.isBuilding = false;
    this.isVisible = false;
    this.shouldUpdateLightDOM = false;
    this._sections = null;
    this._clicked = false;
    this._observer = new MutationObserver(this._mutationHandler);
    this.css = new e14(this);
    this.slots = new l13(this, "heading", "logo", "cta");
    this.ariaMO = new MutationObserver((e25) => {
      for (let t16 of e25)
        for (let i25 of t16.addedNodes)
          (i25 instanceof HTMLOListElement || i25 instanceof HTMLUListElement) && i25.setAttribute("aria-labelledby", "heading");
    });
  }
  get isMobile() {
    if (this.mobileBreakpoint)
      return window.matchMedia(`(max-width: ${this.mobileBreakpoint})`).matches;
    let e25 = r15.breakpoint.lg.match(/([0-9]+)([a-z]*)/);
    return e25.length < 1 ? "991px" : window.matchMedia(`(max-width: ${parseInt(e25[1], 10) - 1}${e25[2]})`).matches;
  }
  get header() {
    let [e25] = this.slots.getSlotted("heading");
    return e25;
  }
  get cta() {
    let [e25] = this.slots.getSlotted("cta");
    return e25;
  }
  get logo() {
    let [e25] = this.slots.getSlotted("logo");
    return e25;
  }
  set panel(e25) {
    e25 && (this._panel = e25, this._panel.hasAttribute("scrolltarget") || this._panel.setAttribute("scrolltarget", this.id), this.dispatchEvent(new p15()), this.dispatchEvent(n14("pfe-jump-links-panel:change")));
  }
  get panel() {
    if (this._panel)
      return this._panel;
    if (this.id) {
      let i25 = this.getRootNode(), a19 = (Q2(i25) ? i25 : document).querySelector(`[scrolltarget="${this.id}"],[pfe-c-scrolltarget="${this.id}"]`);
      if (a19)
        return a19;
    }
    let e25 = [...t12.instances], t16 = e25.filter((i25) => i25.getAttribute("scrolltarget") === this.id);
    return t16.length === 1 ? t16[0] : e25.length === 1 ? (this.id = n11(), e25[0].setAttribute("scrolltarget", this.id), e25[0]) : (e25.length > 1 ? this.logger.warn("Cannot locate which panel is connected to this navigation element.", this.id ? `Please add scrolltarget="${this.id}" to the appropriate panel.` : "") : this.logger.warn("Cannot locate any panels on this page. Please see documentation for connecting the navigation and panel."), null);
  }
  set sections(e25) {
    this._sections = e25, this.dispatchEvent(n14(""));
  }
  get sections() {
    if (this._sections)
      return this._sections;
    let { panel: e25 } = this;
    if (!e25 && this.autobuild)
      return null;
    if (!this.autobuild) {
      let t16 = [...this.querySelectorAll("ul > li > a[href]")];
      if (t16.length) {
        let i25 = t16.map((o21) => `[id="${o21.href.split("#").pop()}"]`);
        return e25?.querySelectorAll(i25.join(",")) || this.getRootNode().querySelectorAll(i25.join(","));
      } else
        return null;
    }
    return (e25?.querySelectorAll(".pfe-jump-links-panel__section") || e25?.shadowRoot?.querySelectorAll(".pfe-jump-links-panel__section") || e25?.querySelectorAll("[id]")) ?? null;
  }
  get links() {
    return [...this.container?.querySelectorAll("a") ?? []];
  }
  get items() {
    return [...this.shadowRoot?.querySelectorAll(".pfe-jump-links-nav__item") ?? []];
  }
  get offsetValue() {
    if (this.offset != null)
      return parseInt(this.offset.toString(), 10);
    let e25 = parseInt(this.css.getVariable("pfe-jump-links--offset") ?? "", 10);
    if (!Number.isNaN(e25) && e25 >= 0)
      return e25;
    let t16 = 0, i25 = parseInt(this.css.getVariable("pfe-navigation--Height--actual") ?? "", 10);
    if (!Number.isNaN(i25) && i25 > 0 && (t16 = i25), this.stuck && (this.isMobile || this.horizontal))
      return t16;
    let o21 = parseInt(this.css.getVariable("pfe-jump-links--Height--actual") ?? "", 10);
    return !Number.isNaN(o21) && o21 > 0 && (t16 = t16 + o21), t16;
  }
  connectedCallback() {
    super.connectedCallback(), r15.instances.add(this), this._attachListeners(), !this.autobuild && this._isValidLightDom() ? this.updateLightDOM() : this.autobuild && this.build(), this._observer.observe(this, { childList: true, subtree: true, characterData: true });
  }
  render() {
    let e25 = y`<nav part="nav">${this.isMobile ? "" : y`<header id="heading"><slot name="heading" class="pfe-jump-links-nav__heading" ?sr-only="${this.noHeader}"><h3>${this.srText || "Jump to section"}</h3></slot></header>`}${this.horizontal ? y`<slot name="logo" class="pfe-jump-links-nav__logo"></slot>` : ""}<div id="container" part="content">${o18(this.containerInnerHTML)}</div>${this.horizontal ? y`<slot name="cta" class="pfe-jump-links-nav__cta"></slot>` : ""}</nav>`;
    return this.isMobile ? y`<pfe-accordion><pfe-accordion-header id="heading"><slot name="heading" class="pfe-jump-links-nav__heading"><h3>${this.srText || "Jump to section"}</h3></slot></pfe-accordion-header><pfe-accordion-panel>${e25}</pfe-accordion-panel></pfe-accordion>` : e25;
  }
  firstUpdated() {
    this.container && this.ariaMO.observe(this.container, { childList: true }), this._scrollHandler();
    let e25 = this.querySelector("ul, ol");
    if (!e25)
      this.logger.warn("Navigation could not be built.");
    else {
      this._toShadowDOM(e25), this._updateOffset();
      let t16 = this._checkVisible(), i25 = this.getActive() ?? 0;
      t16 && this.active(i25);
    }
  }
  disconnectedCallback() {
    r15.instances.delete(this), super.disconnectedCallback(), this._detachListeners();
  }
  _attachListeners() {
    this.autobuild && document.addEventListener("", this._panelChangedHandler), window.addEventListener("resize", this._resizeHandler), window.addEventListener("scroll", this._scrollHandler, true), window.addEventListener("pfe-jump-links-nav:stuck", this._updateOffset);
  }
  _detachListeners() {
    this._observer.disconnect(), document.removeEventListener("pfe-jump-links-panel:change", this._panelChangedHandler), window.removeEventListener("resize", this._resizeHandler), window.removeEventListener("scroll", this._scrollHandler), window.removeEventListener("keyup", this._keyboardHandler), window.removeEventListener("pfe-jump-links-nav:stuck", this._updateOffset);
  }
  _buildItem(e25, t16 = false) {
    let i25 = document.createElement("li");
    i25.className = "pfe-jump-links-nav__item";
    let o21 = document.createElement("a");
    return o21.className = "pfe-jump-links-nav__link", o21.href = `#${e25.target}`, o21.setAttribute("data-target", e25.target), o21.innerHTML = e25.content ?? "", e25.subsection && i25.classList.add("has-sub-section"), t16 && i25.classList.add("sub-section"), i25.appendChild(o21), i25;
  }
  _buildWrapper(e25 = "pfe-jump-links-nav") {
    let t16 = document.createElement("ul");
    return t16.className = e25, t16;
  }
  _siblingJumpLinks(e25 = (t16) => t16 !== this) {
    return [...r15.instances].filter(e25);
  }
  _reportHeight() {
    let e25 = 0, t16 = this._siblingJumpLinks((o21) => o21.stuck && (o21.horizontal || o21.isMobile === true));
    t16.length > 0 && ({ height: e25 } = t16[t16.length - 1].getBoundingClientRect());
    let i25 = getComputedStyle(document.body).getPropertyValue("pfe-jump-links--Height--actual");
    (!i25 || parseInt(i25, 10) !== e25) && document.body.style.setProperty("pfe-jump-links--Height--actual", `${e25}px`);
  }
  _isValidLightDom() {
    let e25 = true;
    return !this.querySelector(":is(ul, ol)") && !this.autobuild && (this.logger.warn("\nThis component requires a list in the light DOM to .\nAlternatively, add the `autobuild` attribute to dynamically generate the list from the provided panel."), e25 = false), this.logo && !this.horizontal && this.logger.warn("The logo slot is NOT supported in vertical jump links."), this.cta && !this.horizontal && this.logger.warn("The link slot is NOT supported in vertical jump links."), e25;
  }
  _toShadowDOM(e25) {
    e25 && this.container && this.container?.innerHTML !== e25.outerHTML.toString() && (this.containerInnerHTML = e25.outerHTML.toString()), this.links.forEach((t16) => {
      t16.addEventListener("click", this._clickHandler);
    });
  }
  _checkVisible() {
    return this.isVisible = this.getBoundingClientRect().top <= document.documentElement.clientHeight && this.getBoundingClientRect().right >= 0 && this.getBoundingClientRect().bottom >= 0 && this.getBoundingClientRect().left <= document.documentElement.clientWidth, this.isVisible;
  }
  _updateOffset() {
    this._reportHeight();
    let e25 = this.horizontal ? 0 : 20;
    this.style.top = `${this.offsetValue + e25}px`;
  }
  _clickHandler(e25) {
    let t16 = e25.target;
    if (!F3(t16))
      return;
    let i25 = t16.closest(".pfe-jump-links-nav__item");
    if (this.active(i25), !this.sections)
      return;
    let o21 = [...this.sections].findIndex((a19) => a19.id === t16.hash.replace("#", ""));
    o21 < 0 || (e25.preventDefault(), this._clicked = true, history.replaceState({}, "", t16.href), this.scrollToSection(o21));
  }
  _stuckChanged(e25, t16) {
    e25 !== t16 && (this._reportHeight(), this.dispatchEvent(new k6(!!t16)), this.dispatchEvent(n14("pfe-jump-links-nav:stuck", { stuck: t16 })));
  }
  _scrollHandler() {
    this._clicked || (clearTimeout(this.scrollTimeout), this.scrollTimeout = window.setTimeout(() => {
      if (this._checkVisible(), !this.isVisible)
        return;
      this.stuck = this.getBoundingClientRect().top === this.offsetValue;
      let e25 = this.getActive() ?? -1;
      e25 >= 0 && e25 !== this.currentActive && (this.currentActive = e25, this.active(e25));
    }, 10));
  }
  _resizeHandler() {
    this.rebuild();
  }
  _mutationHandler() {
    this.autobuild || (this.shouldUpdateLightDOM = true, this.rebuild());
  }
  _panelChangedHandler() {
    !this.autobuild || (this.shouldUpdateLightDOM = true, this._sections = null, this.rebuild());
  }
  _keyboardHandler() {
  }
  scrollToSection(e25) {
    let t16 = this.sections?.[e25];
    if (!t16)
      return;
    let i25 = this.offsetValue;
    this.stuck = this.getBoundingClientRect().top === i25;
    let o21 = window.pageYOffset + t16.getBoundingClientRect().top;
    if (!t16.classList.contains("pfe-jump-links__section--spacer")) {
      o21 = o21 - i25;
      let l25 = 0;
      if (this.horizontal && ({ height: l25 } = this.getBoundingClientRect()), this.isMobile) {
        let c23 = this.shadowRoot?.querySelector("pfe-accordion-header");
        c23 && (l25 = c23.getBoundingClientRect().height - this.getBoundingClientRect().height);
      }
      l25 > 0 && (o21 = o21 - l25);
    }
    let a19 = 20;
    if (t16.hasAttribute("offset")) {
      let l25 = parseInt(t16.getAttribute("offset") ?? "", 10);
      Number.isNaN(l25) || (a19 = l25);
    } else
      this.panel && this.panel.offset && (a19 = this.panel.offset);
    o21 = o21 - a19, o21 < 0 && (o21 = 0), window.scroll({ top: o21, behavior: "smooth" }), this.closeAccordion(), this.stuck = this.getBoundingClientRect().top === i25, setTimeout(() => {
      t16.focus(), this._clicked = false;
    }, 1e3);
  }
  build(e25) {
    if (e25 ?? (e25 = this.sections), !e25)
      return;
    let t16 = [...e25];
    this.isBuilding = true;
    let i25, o21 = this._buildWrapper(), a19 = o21, l25 = a19;
    for (let c23 = 0; c23 < t16.length; c23++) {
      let d17 = t16[c23], u21 = d17.classList.contains("sub-section"), _8 = d17.classList.contains("has-sub-section"), { id: b16 } = d17;
      if (!b16) {
        let g13 = d17.previousElementSibling;
        g13 && g13.classList.contains("pfe-jump-links__section--spacer") && g13.id ? { id: b16 } = g13 : (d17.id = n11("pfe-jump-links--"), { id: b16 } = d17);
      }
      i25 = this._buildItem({ target: b16, content: d17.getAttribute("nav-label") || d17.textContent, subsection: _8 }, u21), a19.appendChild(i25), _8 && (l25 = a19, a19 = this._buildWrapper("sub-nav"), i25.appendChild(a19)), t16[c23 + 1] && !t16[c23 + 1].classList.contains("sub-section") && (a19 = l25 || o21);
    }
    this.isBuilding = false, this.innerHTML = "", this.appendChild(o21);
  }
  closeAccordion() {
    if (!this.isMobile)
      return;
    let e25 = this.shadowRoot?.querySelector("pfe-accordion");
    setTimeout(async function() {
      await customElements.whenDefined("pfe-accordion"), e25?.collapseAll();
    }, this.accordionCollapseTiming);
  }
  rebuild() {
    if (this.isBuilding)
      setTimeout(this.rebuild, 10);
    else {
      let e25 = this.shadowRoot?.querySelector("pfe-accordion");
      (this.isMobile && !e25 || !this.isMobile && e25) && this.render();
      let t16;
      this.autobuild && this.shouldUpdateLightDOM ? t16 = this.build() : t16 = this.querySelector("ul"), t16 && this.container && this.container?.innerHTML !== t16.outerHTML.toString() && (this.container.innerHTML = t16.outerHTML.toString()), this._updateOffset(), this.active(this.getActive()), this.items.forEach((i25) => {
        i25.querySelector("a")?.addEventListener("click", this._clickHandler);
      });
    }
    this.shouldUpdateLightDOM = false;
  }
  active(e25) {
    let { items: t16 } = this, i25 = typeof e25 == "number" ? e25 : t16.findIndex((a19) => a19 === e25);
    if (i25 < 0 || i25 >= t16.length || !t16[i25])
      return;
    this.clearActive(), this.currentActive = i25;
    let o21 = t16[i25].closest("li");
    if (o21) {
      let a19 = o21.closest("ul")?.closest("li"), l25 = o21.classList.contains("sub-section"), c23 = o21.classList.contains("has-sub-section");
      o21.setAttribute("active", ""), c23 ? o21.setAttribute("expand", "") : l25 && a19?.setAttribute("expand", "");
    }
    this.dispatchEvent(new x7(i25)), this.dispatchEvent(n14("pfe-jump-links-panel:active-navItem", { activeNavItem: i25 }));
  }
  getActive() {
    if (!this.sections)
      return;
    let e25 = [...this.sections], t16 = this.offsetValue, i25 = e25.filter((o21, a19) => {
      let l25 = window.innerHeight || document.documentElement.clientHeight, c23 = e25[a19 + 1], d17 = c23 ? c23.getBoundingClientRect().top : 0, u21 = o21.getBoundingClientRect().top;
      return u21 >= 0 && u21 <= l25 && (!c23 || d17 >= t16 && t16 - u21 < d17 - t16);
    });
    if (!(!i25 || i25.length === 0))
      return e25.indexOf(i25[0]);
  }
  inactive(e25) {
    let { items: t16 } = this, i25 = typeof e25 == "number" ? e25 : t16.findIndex((d17) => d17 === e25);
    if (i25 < 0 || i25 >= t16.length || !t16[i25])
      return;
    let o21 = t16[i25].closest("li"), a19 = o21?.closest("ul")?.closest("li"), l25 = o21?.classList.contains("sub-section"), c23 = o21?.classList.contains("has-sub-section");
    o21?.removeAttribute("active"), c23 ? o21?.removeAttribute("expand") : l25 && a19?.removeAttribute("expand");
  }
  clearActive() {
    let { items: e25 } = this;
    e25.forEach((t16) => this.inactive(t16));
  }
  updateItem(e25, t16 = false) {
    e25.classList.add("pfe-jump-links-nav__item", ...t16 ? ["sub-section"] : []), e25.querySelector("a")?.classList.add("pfe-jump-links-nav__link");
    let o21 = e25.querySelector("ul");
    o21 && (e25.classList.add("has-sub-section"), o21.querySelectorAll(":scope > li").forEach((a19) => this.updateItem(a19, true)));
  }
  updateLightDOM() {
    let e25 = this.querySelector("ul");
    e25 && (e25.classList.add("pfe-jump-links-nav"), e25.querySelectorAll(":scope > li").forEach((t16) => this.updateItem(t16)));
  }
}, "r");
r15.version = "2.0.0-next.6", r15.styles = [w6], r15.breakpoint = Object.freeze({ xs: "0px", sm: "576px", md: "768px", lg: "992px", xl: "1200px", "2xl": "1450px" }), r15.instances = /* @__PURE__ */ new Set(), n20([e5({ type: Boolean, reflect: true })], r15.prototype, "autobuild", 2), n20([e5({ type: Boolean, reflect: true })], r15.prototype, "horizontal", 2), n20([p3, e5({ type: Boolean, reflect: true })], r15.prototype, "stuck", 2), n20([e5({ type: Boolean, reflect: true, attribute: "no-header" })], r15.prototype, "noHeader", 2), n20([e5({ type: String, reflect: true, attribute: "sr-text" })], r15.prototype, "srText", 2), n20([c5(), e5({ reflect: true, attribute: "color-palette" })], r15.prototype, "colorPalette", 2), n20([d3({ alias: "colorPalette", attribute: "color" })], r15.prototype, "color", 2), n20([C2(), e5({ reflect: true })], r15.prototype, "on", 2), n20([e5({ type: Number, reflect: true })], r15.prototype, "offset", 2), n20([e5({ type: String, reflect: true, attribute: "mobile-breakpoint" })], r15.prototype, "mobileBreakpoint", 2), n20([e5({ type: Number, reflect: true, attribute: "accordion-collapse-timing" })], r15.prototype, "accordionCollapseTiming", 2), n20([i4("#container")], r15.prototype, "container", 2), n20([t3()], r15.prototype, "containerInnerHTML", 2), n20([o8], r15.prototype, "_attachListeners", 1), n20([o8], r15.prototype, "_detachListeners", 1), n20([o8], r15.prototype, "_buildItem", 1), n20([o8], r15.prototype, "_buildWrapper", 1), n20([o8], r15.prototype, "_siblingJumpLinks", 1), n20([o8], r15.prototype, "_reportHeight", 1), n20([o8], r15.prototype, "_isValidLightDom", 1), n20([o8], r15.prototype, "_toShadowDOM", 1), n20([o8], r15.prototype, "_checkVisible", 1), n20([o8], r15.prototype, "_updateOffset", 1), n20([o8], r15.prototype, "_clickHandler", 1), n20([o8], r15.prototype, "_stuckChanged", 1), n20([o8], r15.prototype, "_scrollHandler", 1), n20([o8], r15.prototype, "_resizeHandler", 1), n20([o8], r15.prototype, "_mutationHandler", 1), n20([o8], r15.prototype, "_panelChangedHandler", 1), n20([o8], r15.prototype, "scrollToSection", 1), n20([o8], r15.prototype, "build", 1), n20([o8], r15.prototype, "closeAccordion", 1), n20([o8], r15.prototype, "rebuild", 1), n20([o8], r15.prototype, "active", 1), n20([o8], r15.prototype, "getActive", 1), n20([o8], r15.prototype, "inactive", 1), n20([o8], r15.prototype, "clearActive", 1), n20([o8], r15.prototype, "updateItem", 1), n20([o8], r15.prototype, "updateLightDOM", 1), r15 = n20([e4("pfe-jump-links-nav"), d4()], r15);

// node_modules/@patternfly/pfe-jump-links/pfe-jump-links.js
init_decorators();
var s16 = Object.defineProperty;
var x8 = Object.getOwnPropertyDescriptor;
var n21 = /* @__PURE__ */ __name((t16, o21, p22, m26) => {
  for (var e25 = m26 > 1 ? void 0 : m26 ? x8(o21, p22) : o21, f25 = t16.length - 1, l25; f25 >= 0; f25--)
    (l25 = t16[f25]) && (e25 = (m26 ? l25(o21, p22, e25) : l25(e25)) || e25);
  return m26 && e25 && s16(o21, p22, e25), e25;
}, "n");
var r16 = /* @__PURE__ */ __name(class extends r15 {
}, "r");
r16 = n21([e4("pfe-jump-links"), d4()], r16);

// node_modules/@patternfly/pfe-markdown/node_modules/lit/index.js
init_reactive_element();
init_lit_html();
init_lit_element();

// node_modules/@patternfly/pfe-markdown/pfe-markdown.js
init_decorators();

// node_modules/@patternfly/pfe-markdown/node_modules/lit/decorators.js
init_custom_element();
init_property();
init_state();
init_event_options();
init_query();
init_query_all();
init_query_async();
init_query_assigned_elements();
init_query_assigned_nodes();

// node_modules/marked/lib/marked.esm.js
function getDefaults() {
  return {
    baseUrl: null,
    breaks: false,
    extensions: null,
    gfm: true,
    headerIds: true,
    headerPrefix: "",
    highlight: null,
    langPrefix: "language-",
    mangle: true,
    pedantic: false,
    renderer: null,
    sanitize: false,
    sanitizer: null,
    silent: false,
    smartLists: false,
    smartypants: false,
    tokenizer: null,
    walkTokens: null,
    xhtml: false
  };
}
__name(getDefaults, "getDefaults");
var defaults = getDefaults();
function changeDefaults(newDefaults) {
  defaults = newDefaults;
}
__name(changeDefaults, "changeDefaults");
var escapeTest = /[&<>"']/;
var escapeReplace = /[&<>"']/g;
var escapeTestNoEncode = /[<>"']|&(?!#?\w+;)/;
var escapeReplaceNoEncode = /[<>"']|&(?!#?\w+;)/g;
var escapeReplacements = {
  "&": "&amp;",
  "<": "&lt;",
  ">": "&gt;",
  '"': "&quot;",
  "'": "&#39;"
};
var getEscapeReplacement = /* @__PURE__ */ __name((ch) => escapeReplacements[ch], "getEscapeReplacement");
function escape2(html, encode) {
  if (encode) {
    if (escapeTest.test(html)) {
      return html.replace(escapeReplace, getEscapeReplacement);
    }
  } else {
    if (escapeTestNoEncode.test(html)) {
      return html.replace(escapeReplaceNoEncode, getEscapeReplacement);
    }
  }
  return html;
}
__name(escape2, "escape");
var unescapeTest = /&(#(?:\d+)|(?:#x[0-9A-Fa-f]+)|(?:\w+));?/ig;
function unescape(html) {
  return html.replace(unescapeTest, (_8, n25) => {
    n25 = n25.toLowerCase();
    if (n25 === "colon")
      return ":";
    if (n25.charAt(0) === "#") {
      return n25.charAt(1) === "x" ? String.fromCharCode(parseInt(n25.substring(2), 16)) : String.fromCharCode(+n25.substring(1));
    }
    return "";
  });
}
__name(unescape, "unescape");
var caret = /(^|[^\[])\^/g;
function edit(regex, opt) {
  regex = typeof regex === "string" ? regex : regex.source;
  opt = opt || "";
  const obj = {
    replace: (name, val) => {
      val = val.source || val;
      val = val.replace(caret, "$1");
      regex = regex.replace(name, val);
      return obj;
    },
    getRegex: () => {
      return new RegExp(regex, opt);
    }
  };
  return obj;
}
__name(edit, "edit");
var nonWordAndColonTest = /[^\w:]/g;
var originIndependentUrl = /^$|^[a-z][a-z0-9+.-]*:|^[?#]/i;
function cleanUrl(sanitize, base, href) {
  if (sanitize) {
    let prot;
    try {
      prot = decodeURIComponent(unescape(href)).replace(nonWordAndColonTest, "").toLowerCase();
    } catch (e25) {
      return null;
    }
    if (prot.indexOf("javascript:") === 0 || prot.indexOf("vbscript:") === 0 || prot.indexOf("data:") === 0) {
      return null;
    }
  }
  if (base && !originIndependentUrl.test(href)) {
    href = resolveUrl(base, href);
  }
  try {
    href = encodeURI(href).replace(/%25/g, "%");
  } catch (e25) {
    return null;
  }
  return href;
}
__name(cleanUrl, "cleanUrl");
var baseUrls = {};
var justDomain = /^[^:]+:\/*[^/]*$/;
var protocol = /^([^:]+:)[\s\S]*$/;
var domain = /^([^:]+:\/*[^/]*)[\s\S]*$/;
function resolveUrl(base, href) {
  if (!baseUrls[" " + base]) {
    if (justDomain.test(base)) {
      baseUrls[" " + base] = base + "/";
    } else {
      baseUrls[" " + base] = rtrim(base, "/", true);
    }
  }
  base = baseUrls[" " + base];
  const relativeBase = base.indexOf(":") === -1;
  if (href.substring(0, 2) === "//") {
    if (relativeBase) {
      return href;
    }
    return base.replace(protocol, "$1") + href;
  } else if (href.charAt(0) === "/") {
    if (relativeBase) {
      return href;
    }
    return base.replace(domain, "$1") + href;
  } else {
    return base + href;
  }
}
__name(resolveUrl, "resolveUrl");
var noopTest = { exec: /* @__PURE__ */ __name(function noopTest2() {
}, "noopTest") };
function merge(obj) {
  let i25 = 1, target, key;
  for (; i25 < arguments.length; i25++) {
    target = arguments[i25];
    for (key in target) {
      if (Object.prototype.hasOwnProperty.call(target, key)) {
        obj[key] = target[key];
      }
    }
  }
  return obj;
}
__name(merge, "merge");
function splitCells(tableRow, count) {
  const row = tableRow.replace(/\|/g, (match, offset2, str) => {
    let escaped = false, curr = offset2;
    while (--curr >= 0 && str[curr] === "\\")
      escaped = !escaped;
    if (escaped) {
      return "|";
    } else {
      return " |";
    }
  }), cells = row.split(/ \|/);
  let i25 = 0;
  if (!cells[0].trim()) {
    cells.shift();
  }
  if (cells.length > 0 && !cells[cells.length - 1].trim()) {
    cells.pop();
  }
  if (cells.length > count) {
    cells.splice(count);
  } else {
    while (cells.length < count)
      cells.push("");
  }
  for (; i25 < cells.length; i25++) {
    cells[i25] = cells[i25].trim().replace(/\\\|/g, "|");
  }
  return cells;
}
__name(splitCells, "splitCells");
function rtrim(str, c23, invert) {
  const l25 = str.length;
  if (l25 === 0) {
    return "";
  }
  let suffLen = 0;
  while (suffLen < l25) {
    const currChar = str.charAt(l25 - suffLen - 1);
    if (currChar === c23 && !invert) {
      suffLen++;
    } else if (currChar !== c23 && invert) {
      suffLen++;
    } else {
      break;
    }
  }
  return str.slice(0, l25 - suffLen);
}
__name(rtrim, "rtrim");
function findClosingBracket(str, b16) {
  if (str.indexOf(b16[1]) === -1) {
    return -1;
  }
  const l25 = str.length;
  let level = 0, i25 = 0;
  for (; i25 < l25; i25++) {
    if (str[i25] === "\\") {
      i25++;
    } else if (str[i25] === b16[0]) {
      level++;
    } else if (str[i25] === b16[1]) {
      level--;
      if (level < 0) {
        return i25;
      }
    }
  }
  return -1;
}
__name(findClosingBracket, "findClosingBracket");
function checkSanitizeDeprecation(opt) {
  if (opt && opt.sanitize && !opt.silent) {
    console.warn("marked(): sanitize and sanitizer parameters are deprecated since version 0.7.0, should not be used and will be removed in the future. Read more here: https://marked.js.org/#/USING_ADVANCED.md#options");
  }
}
__name(checkSanitizeDeprecation, "checkSanitizeDeprecation");
function repeatString(pattern, count) {
  if (count < 1) {
    return "";
  }
  let result = "";
  while (count > 1) {
    if (count & 1) {
      result += pattern;
    }
    count >>= 1;
    pattern += pattern;
  }
  return result + pattern;
}
__name(repeatString, "repeatString");
function outputLink(cap, link, raw, lexer2) {
  const href = link.href;
  const title = link.title ? escape2(link.title) : null;
  const text = cap[1].replace(/\\([\[\]])/g, "$1");
  if (cap[0].charAt(0) !== "!") {
    lexer2.state.inLink = true;
    const token = {
      type: "link",
      raw,
      href,
      title,
      text,
      tokens: lexer2.inlineTokens(text, [])
    };
    lexer2.state.inLink = false;
    return token;
  }
  return {
    type: "image",
    raw,
    href,
    title,
    text: escape2(text)
  };
}
__name(outputLink, "outputLink");
function indentCodeCompensation(raw, text) {
  const matchIndentToCode = raw.match(/^(\s+)(?:```)/);
  if (matchIndentToCode === null) {
    return text;
  }
  const indentToCode = matchIndentToCode[1];
  return text.split("\n").map((node) => {
    const matchIndentInNode = node.match(/^\s+/);
    if (matchIndentInNode === null) {
      return node;
    }
    const [indentInNode] = matchIndentInNode;
    if (indentInNode.length >= indentToCode.length) {
      return node.slice(indentToCode.length);
    }
    return node;
  }).join("\n");
}
__name(indentCodeCompensation, "indentCodeCompensation");
var Tokenizer = class {
  constructor(options3) {
    this.options = options3 || defaults;
  }
  space(src) {
    const cap = this.rules.block.newline.exec(src);
    if (cap && cap[0].length > 0) {
      return {
        type: "space",
        raw: cap[0]
      };
    }
  }
  code(src) {
    const cap = this.rules.block.code.exec(src);
    if (cap) {
      const text = cap[0].replace(/^ {1,4}/gm, "");
      return {
        type: "code",
        raw: cap[0],
        codeBlockStyle: "indented",
        text: !this.options.pedantic ? rtrim(text, "\n") : text
      };
    }
  }
  fences(src) {
    const cap = this.rules.block.fences.exec(src);
    if (cap) {
      const raw = cap[0];
      const text = indentCodeCompensation(raw, cap[3] || "");
      return {
        type: "code",
        raw,
        lang: cap[2] ? cap[2].trim() : cap[2],
        text
      };
    }
  }
  heading(src) {
    const cap = this.rules.block.heading.exec(src);
    if (cap) {
      let text = cap[2].trim();
      if (/#$/.test(text)) {
        const trimmed = rtrim(text, "#");
        if (this.options.pedantic) {
          text = trimmed.trim();
        } else if (!trimmed || / $/.test(trimmed)) {
          text = trimmed.trim();
        }
      }
      const token = {
        type: "heading",
        raw: cap[0],
        depth: cap[1].length,
        text,
        tokens: []
      };
      this.lexer.inline(token.text, token.tokens);
      return token;
    }
  }
  hr(src) {
    const cap = this.rules.block.hr.exec(src);
    if (cap) {
      return {
        type: "hr",
        raw: cap[0]
      };
    }
  }
  blockquote(src) {
    const cap = this.rules.block.blockquote.exec(src);
    if (cap) {
      const text = cap[0].replace(/^ *>[ \t]?/gm, "");
      return {
        type: "blockquote",
        raw: cap[0],
        tokens: this.lexer.blockTokens(text, []),
        text
      };
    }
  }
  list(src) {
    let cap = this.rules.block.list.exec(src);
    if (cap) {
      let raw, istask, ischecked, indent, i25, blankLine, endsWithBlankLine, line, nextLine, rawLine, itemContents, endEarly;
      let bull = cap[1].trim();
      const isordered = bull.length > 1;
      const list = {
        type: "list",
        raw: "",
        ordered: isordered,
        start: isordered ? +bull.slice(0, -1) : "",
        loose: false,
        items: []
      };
      bull = isordered ? `\\d{1,9}\\${bull.slice(-1)}` : `\\${bull}`;
      if (this.options.pedantic) {
        bull = isordered ? bull : "[*+-]";
      }
      const itemRegex = new RegExp(`^( {0,3}${bull})((?:[	 ][^\\n]*)?(?:\\n|$))`);
      while (src) {
        endEarly = false;
        if (!(cap = itemRegex.exec(src))) {
          break;
        }
        if (this.rules.block.hr.test(src)) {
          break;
        }
        raw = cap[0];
        src = src.substring(raw.length);
        line = cap[2].split("\n", 1)[0];
        nextLine = src.split("\n", 1)[0];
        if (this.options.pedantic) {
          indent = 2;
          itemContents = line.trimLeft();
        } else {
          indent = cap[2].search(/[^ ]/);
          indent = indent > 4 ? 1 : indent;
          itemContents = line.slice(indent);
          indent += cap[1].length;
        }
        blankLine = false;
        if (!line && /^ *$/.test(nextLine)) {
          raw += nextLine + "\n";
          src = src.substring(nextLine.length + 1);
          endEarly = true;
        }
        if (!endEarly) {
          const nextBulletRegex = new RegExp(`^ {0,${Math.min(3, indent - 1)}}(?:[*+-]|\\d{1,9}[.)])((?: [^\\n]*)?(?:\\n|$))`);
          const hrRegex = new RegExp(`^ {0,${Math.min(3, indent - 1)}}((?:- *){3,}|(?:_ *){3,}|(?:\\* *){3,})(?:\\n+|$)`);
          const fencesBeginRegex = new RegExp(`^ {0,${Math.min(3, indent - 1)}}(?:\`\`\`|~~~)`);
          const headingBeginRegex = new RegExp(`^ {0,${Math.min(3, indent - 1)}}#`);
          while (src) {
            rawLine = src.split("\n", 1)[0];
            line = rawLine;
            if (this.options.pedantic) {
              line = line.replace(/^ {1,4}(?=( {4})*[^ ])/g, "  ");
            }
            if (fencesBeginRegex.test(line)) {
              break;
            }
            if (headingBeginRegex.test(line)) {
              break;
            }
            if (nextBulletRegex.test(line)) {
              break;
            }
            if (hrRegex.test(src)) {
              break;
            }
            if (line.search(/[^ ]/) >= indent || !line.trim()) {
              itemContents += "\n" + line.slice(indent);
            } else if (!blankLine) {
              itemContents += "\n" + line;
            } else {
              break;
            }
            if (!blankLine && !line.trim()) {
              blankLine = true;
            }
            raw += rawLine + "\n";
            src = src.substring(rawLine.length + 1);
          }
        }
        if (!list.loose) {
          if (endsWithBlankLine) {
            list.loose = true;
          } else if (/\n *\n *$/.test(raw)) {
            endsWithBlankLine = true;
          }
        }
        if (this.options.gfm) {
          istask = /^\[[ xX]\] /.exec(itemContents);
          if (istask) {
            ischecked = istask[0] !== "[ ] ";
            itemContents = itemContents.replace(/^\[[ xX]\] +/, "");
          }
        }
        list.items.push({
          type: "list_item",
          raw,
          task: !!istask,
          checked: ischecked,
          loose: false,
          text: itemContents
        });
        list.raw += raw;
      }
      list.items[list.items.length - 1].raw = raw.trimRight();
      list.items[list.items.length - 1].text = itemContents.trimRight();
      list.raw = list.raw.trimRight();
      const l25 = list.items.length;
      for (i25 = 0; i25 < l25; i25++) {
        this.lexer.state.top = false;
        list.items[i25].tokens = this.lexer.blockTokens(list.items[i25].text, []);
        const spacers = list.items[i25].tokens.filter((t16) => t16.type === "space");
        const hasMultipleLineBreaks = spacers.every((t16) => {
          const chars = t16.raw.split("");
          let lineBreaks = 0;
          for (const char of chars) {
            if (char === "\n") {
              lineBreaks += 1;
            }
            if (lineBreaks > 1) {
              return true;
            }
          }
          return false;
        });
        if (!list.loose && spacers.length && hasMultipleLineBreaks) {
          list.loose = true;
          list.items[i25].loose = true;
        }
      }
      return list;
    }
  }
  html(src) {
    const cap = this.rules.block.html.exec(src);
    if (cap) {
      const token = {
        type: "html",
        raw: cap[0],
        pre: !this.options.sanitizer && (cap[1] === "pre" || cap[1] === "script" || cap[1] === "style"),
        text: cap[0]
      };
      if (this.options.sanitize) {
        token.type = "paragraph";
        token.text = this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape2(cap[0]);
        token.tokens = [];
        this.lexer.inline(token.text, token.tokens);
      }
      return token;
    }
  }
  def(src) {
    const cap = this.rules.block.def.exec(src);
    if (cap) {
      if (cap[3])
        cap[3] = cap[3].substring(1, cap[3].length - 1);
      const tag2 = cap[1].toLowerCase().replace(/\s+/g, " ");
      return {
        type: "def",
        tag: tag2,
        raw: cap[0],
        href: cap[2],
        title: cap[3]
      };
    }
  }
  table(src) {
    const cap = this.rules.block.table.exec(src);
    if (cap) {
      const item = {
        type: "table",
        header: splitCells(cap[1]).map((c23) => {
          return { text: c23 };
        }),
        align: cap[2].replace(/^ *|\| *$/g, "").split(/ *\| */),
        rows: cap[3] && cap[3].trim() ? cap[3].replace(/\n[ \t]*$/, "").split("\n") : []
      };
      if (item.header.length === item.align.length) {
        item.raw = cap[0];
        let l25 = item.align.length;
        let i25, j3, k7, row;
        for (i25 = 0; i25 < l25; i25++) {
          if (/^ *-+: *$/.test(item.align[i25])) {
            item.align[i25] = "right";
          } else if (/^ *:-+: *$/.test(item.align[i25])) {
            item.align[i25] = "center";
          } else if (/^ *:-+ *$/.test(item.align[i25])) {
            item.align[i25] = "left";
          } else {
            item.align[i25] = null;
          }
        }
        l25 = item.rows.length;
        for (i25 = 0; i25 < l25; i25++) {
          item.rows[i25] = splitCells(item.rows[i25], item.header.length).map((c23) => {
            return { text: c23 };
          });
        }
        l25 = item.header.length;
        for (j3 = 0; j3 < l25; j3++) {
          item.header[j3].tokens = [];
          this.lexer.inline(item.header[j3].text, item.header[j3].tokens);
        }
        l25 = item.rows.length;
        for (j3 = 0; j3 < l25; j3++) {
          row = item.rows[j3];
          for (k7 = 0; k7 < row.length; k7++) {
            row[k7].tokens = [];
            this.lexer.inline(row[k7].text, row[k7].tokens);
          }
        }
        return item;
      }
    }
  }
  lheading(src) {
    const cap = this.rules.block.lheading.exec(src);
    if (cap) {
      const token = {
        type: "heading",
        raw: cap[0],
        depth: cap[2].charAt(0) === "=" ? 1 : 2,
        text: cap[1],
        tokens: []
      };
      this.lexer.inline(token.text, token.tokens);
      return token;
    }
  }
  paragraph(src) {
    const cap = this.rules.block.paragraph.exec(src);
    if (cap) {
      const token = {
        type: "paragraph",
        raw: cap[0],
        text: cap[1].charAt(cap[1].length - 1) === "\n" ? cap[1].slice(0, -1) : cap[1],
        tokens: []
      };
      this.lexer.inline(token.text, token.tokens);
      return token;
    }
  }
  text(src) {
    const cap = this.rules.block.text.exec(src);
    if (cap) {
      const token = {
        type: "text",
        raw: cap[0],
        text: cap[0],
        tokens: []
      };
      this.lexer.inline(token.text, token.tokens);
      return token;
    }
  }
  escape(src) {
    const cap = this.rules.inline.escape.exec(src);
    if (cap) {
      return {
        type: "escape",
        raw: cap[0],
        text: escape2(cap[1])
      };
    }
  }
  tag(src) {
    const cap = this.rules.inline.tag.exec(src);
    if (cap) {
      if (!this.lexer.state.inLink && /^<a /i.test(cap[0])) {
        this.lexer.state.inLink = true;
      } else if (this.lexer.state.inLink && /^<\/a>/i.test(cap[0])) {
        this.lexer.state.inLink = false;
      }
      if (!this.lexer.state.inRawBlock && /^<(pre|code|kbd|script)(\s|>)/i.test(cap[0])) {
        this.lexer.state.inRawBlock = true;
      } else if (this.lexer.state.inRawBlock && /^<\/(pre|code|kbd|script)(\s|>)/i.test(cap[0])) {
        this.lexer.state.inRawBlock = false;
      }
      return {
        type: this.options.sanitize ? "text" : "html",
        raw: cap[0],
        inLink: this.lexer.state.inLink,
        inRawBlock: this.lexer.state.inRawBlock,
        text: this.options.sanitize ? this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape2(cap[0]) : cap[0]
      };
    }
  }
  link(src) {
    const cap = this.rules.inline.link.exec(src);
    if (cap) {
      const trimmedUrl = cap[2].trim();
      if (!this.options.pedantic && /^</.test(trimmedUrl)) {
        if (!/>$/.test(trimmedUrl)) {
          return;
        }
        const rtrimSlash = rtrim(trimmedUrl.slice(0, -1), "\\");
        if ((trimmedUrl.length - rtrimSlash.length) % 2 === 0) {
          return;
        }
      } else {
        const lastParenIndex = findClosingBracket(cap[2], "()");
        if (lastParenIndex > -1) {
          const start2 = cap[0].indexOf("!") === 0 ? 5 : 4;
          const linkLen = start2 + cap[1].length + lastParenIndex;
          cap[2] = cap[2].substring(0, lastParenIndex);
          cap[0] = cap[0].substring(0, linkLen).trim();
          cap[3] = "";
        }
      }
      let href = cap[2];
      let title = "";
      if (this.options.pedantic) {
        const link = /^([^'"]*[^\s])\s+(['"])(.*)\2/.exec(href);
        if (link) {
          href = link[1];
          title = link[3];
        }
      } else {
        title = cap[3] ? cap[3].slice(1, -1) : "";
      }
      href = href.trim();
      if (/^</.test(href)) {
        if (this.options.pedantic && !/>$/.test(trimmedUrl)) {
          href = href.slice(1);
        } else {
          href = href.slice(1, -1);
        }
      }
      return outputLink(cap, {
        href: href ? href.replace(this.rules.inline._escapes, "$1") : href,
        title: title ? title.replace(this.rules.inline._escapes, "$1") : title
      }, cap[0], this.lexer);
    }
  }
  reflink(src, links) {
    let cap;
    if ((cap = this.rules.inline.reflink.exec(src)) || (cap = this.rules.inline.nolink.exec(src))) {
      let link = (cap[2] || cap[1]).replace(/\s+/g, " ");
      link = links[link.toLowerCase()];
      if (!link || !link.href) {
        const text = cap[0].charAt(0);
        return {
          type: "text",
          raw: text,
          text
        };
      }
      return outputLink(cap, link, cap[0], this.lexer);
    }
  }
  emStrong(src, maskedSrc, prevChar = "") {
    let match = this.rules.inline.emStrong.lDelim.exec(src);
    if (!match)
      return;
    if (match[3] && prevChar.match(/[\p{L}\p{N}]/u))
      return;
    const nextChar = match[1] || match[2] || "";
    if (!nextChar || nextChar && (prevChar === "" || this.rules.inline.punctuation.exec(prevChar))) {
      const lLength = match[0].length - 1;
      let rDelim, rLength, delimTotal = lLength, midDelimTotal = 0;
      const endReg = match[0][0] === "*" ? this.rules.inline.emStrong.rDelimAst : this.rules.inline.emStrong.rDelimUnd;
      endReg.lastIndex = 0;
      maskedSrc = maskedSrc.slice(-1 * src.length + lLength);
      while ((match = endReg.exec(maskedSrc)) != null) {
        rDelim = match[1] || match[2] || match[3] || match[4] || match[5] || match[6];
        if (!rDelim)
          continue;
        rLength = rDelim.length;
        if (match[3] || match[4]) {
          delimTotal += rLength;
          continue;
        } else if (match[5] || match[6]) {
          if (lLength % 3 && !((lLength + rLength) % 3)) {
            midDelimTotal += rLength;
            continue;
          }
        }
        delimTotal -= rLength;
        if (delimTotal > 0)
          continue;
        rLength = Math.min(rLength, rLength + delimTotal + midDelimTotal);
        if (Math.min(lLength, rLength) % 2) {
          const text2 = src.slice(1, lLength + match.index + rLength);
          return {
            type: "em",
            raw: src.slice(0, lLength + match.index + rLength + 1),
            text: text2,
            tokens: this.lexer.inlineTokens(text2, [])
          };
        }
        const text = src.slice(2, lLength + match.index + rLength - 1);
        return {
          type: "strong",
          raw: src.slice(0, lLength + match.index + rLength + 1),
          text,
          tokens: this.lexer.inlineTokens(text, [])
        };
      }
    }
  }
  codespan(src) {
    const cap = this.rules.inline.code.exec(src);
    if (cap) {
      let text = cap[2].replace(/\n/g, " ");
      const hasNonSpaceChars = /[^ ]/.test(text);
      const hasSpaceCharsOnBothEnds = /^ /.test(text) && / $/.test(text);
      if (hasNonSpaceChars && hasSpaceCharsOnBothEnds) {
        text = text.substring(1, text.length - 1);
      }
      text = escape2(text, true);
      return {
        type: "codespan",
        raw: cap[0],
        text
      };
    }
  }
  br(src) {
    const cap = this.rules.inline.br.exec(src);
    if (cap) {
      return {
        type: "br",
        raw: cap[0]
      };
    }
  }
  del(src) {
    const cap = this.rules.inline.del.exec(src);
    if (cap) {
      return {
        type: "del",
        raw: cap[0],
        text: cap[2],
        tokens: this.lexer.inlineTokens(cap[2], [])
      };
    }
  }
  autolink(src, mangle2) {
    const cap = this.rules.inline.autolink.exec(src);
    if (cap) {
      let text, href;
      if (cap[2] === "@") {
        text = escape2(this.options.mangle ? mangle2(cap[1]) : cap[1]);
        href = "mailto:" + text;
      } else {
        text = escape2(cap[1]);
        href = text;
      }
      return {
        type: "link",
        raw: cap[0],
        text,
        href,
        tokens: [
          {
            type: "text",
            raw: text,
            text
          }
        ]
      };
    }
  }
  url(src, mangle2) {
    let cap;
    if (cap = this.rules.inline.url.exec(src)) {
      let text, href;
      if (cap[2] === "@") {
        text = escape2(this.options.mangle ? mangle2(cap[0]) : cap[0]);
        href = "mailto:" + text;
      } else {
        let prevCapZero;
        do {
          prevCapZero = cap[0];
          cap[0] = this.rules.inline._backpedal.exec(cap[0])[0];
        } while (prevCapZero !== cap[0]);
        text = escape2(cap[0]);
        if (cap[1] === "www.") {
          href = "http://" + text;
        } else {
          href = text;
        }
      }
      return {
        type: "link",
        raw: cap[0],
        text,
        href,
        tokens: [
          {
            type: "text",
            raw: text,
            text
          }
        ]
      };
    }
  }
  inlineText(src, smartypants2) {
    const cap = this.rules.inline.text.exec(src);
    if (cap) {
      let text;
      if (this.lexer.state.inRawBlock) {
        text = this.options.sanitize ? this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape2(cap[0]) : cap[0];
      } else {
        text = escape2(this.options.smartypants ? smartypants2(cap[0]) : cap[0]);
      }
      return {
        type: "text",
        raw: cap[0],
        text
      };
    }
  }
};
__name(Tokenizer, "Tokenizer");
var block = {
  newline: /^(?: *(?:\n|$))+/,
  code: /^( {4}[^\n]+(?:\n(?: *(?:\n|$))*)?)+/,
  fences: /^ {0,3}(`{3,}(?=[^`\n]*\n)|~{3,})([^\n]*)\n(?:|([\s\S]*?)\n)(?: {0,3}\1[~`]* *(?=\n|$)|$)/,
  hr: /^ {0,3}((?:-[\t ]*){3,}|(?:_[ \t]*){3,}|(?:\*[ \t]*){3,})(?:\n+|$)/,
  heading: /^ {0,3}(#{1,6})(?=\s|$)(.*)(?:\n+|$)/,
  blockquote: /^( {0,3}> ?(paragraph|[^\n]*)(?:\n|$))+/,
  list: /^( {0,3}bull)([ \t][^\n]+?)?(?:\n|$)/,
  html: "^ {0,3}(?:<(script|pre|style|textarea)[\\s>][\\s\\S]*?(?:</\\1>[^\\n]*\\n+|$)|comment[^\\n]*(\\n+|$)|<\\?[\\s\\S]*?(?:\\?>\\n*|$)|<![A-Z][\\s\\S]*?(?:>\\n*|$)|<!\\[CDATA\\[[\\s\\S]*?(?:\\]\\]>\\n*|$)|</?(tag)(?: +|\\n|/?>)[\\s\\S]*?(?:(?:\\n *)+\\n|$)|<(?!script|pre|style|textarea)([a-z][\\w-]*)(?:attribute)*? */?>(?=[ \\t]*(?:\\n|$))[\\s\\S]*?(?:(?:\\n *)+\\n|$)|</(?!script|pre|style|textarea)[a-z][\\w-]*\\s*>(?=[ \\t]*(?:\\n|$))[\\s\\S]*?(?:(?:\\n *)+\\n|$))",
  def: /^ {0,3}\[(label)\]: *(?:\n *)?<?([^\s>]+)>?(?:(?: +(?:\n *)?| *\n *)(title))? *(?:\n+|$)/,
  table: noopTest,
  lheading: /^([^\n]+)\n {0,3}(=+|-+) *(?:\n+|$)/,
  _paragraph: /^([^\n]+(?:\n(?!hr|heading|lheading|blockquote|fences|list|html|table| +\n)[^\n]+)*)/,
  text: /^[^\n]+/
};
block._label = /(?!\s*\])(?:\\.|[^\[\]\\])+/;
block._title = /(?:"(?:\\"?|[^"\\])*"|'[^'\n]*(?:\n[^'\n]+)*\n?'|\([^()]*\))/;
block.def = edit(block.def).replace("label", block._label).replace("title", block._title).getRegex();
block.bullet = /(?:[*+-]|\d{1,9}[.)])/;
block.listItemStart = edit(/^( *)(bull) */).replace("bull", block.bullet).getRegex();
block.list = edit(block.list).replace(/bull/g, block.bullet).replace("hr", "\\n+(?=\\1?(?:(?:- *){3,}|(?:_ *){3,}|(?:\\* *){3,})(?:\\n+|$))").replace("def", "\\n+(?=" + block.def.source + ")").getRegex();
block._tag = "address|article|aside|base|basefont|blockquote|body|caption|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option|p|param|section|source|summary|table|tbody|td|tfoot|th|thead|title|tr|track|ul";
block._comment = /<!--(?!-?>)[\s\S]*?(?:-->|$)/;
block.html = edit(block.html, "i").replace("comment", block._comment).replace("tag", block._tag).replace("attribute", / +[a-zA-Z:_][\w.:-]*(?: *= *"[^"\n]*"| *= *'[^'\n]*'| *= *[^\s"'=<>`]+)?/).getRegex();
block.paragraph = edit(block._paragraph).replace("hr", block.hr).replace("heading", " {0,3}#{1,6} ").replace("|lheading", "").replace("|table", "").replace("blockquote", " {0,3}>").replace("fences", " {0,3}(?:`{3,}(?=[^`\\n]*\\n)|~{3,})[^\\n]*\\n").replace("list", " {0,3}(?:[*+-]|1[.)]) ").replace("html", "</?(?:tag)(?: +|\\n|/?>)|<(?:script|pre|style|textarea|!--)").replace("tag", block._tag).getRegex();
block.blockquote = edit(block.blockquote).replace("paragraph", block.paragraph).getRegex();
block.normal = merge({}, block);
block.gfm = merge({}, block.normal, {
  table: "^ *([^\\n ].*\\|.*)\\n {0,3}(?:\\| *)?(:?-+:? *(?:\\| *:?-+:? *)*)(?:\\| *)?(?:\\n((?:(?! *\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\n|$))*)\\n*|$)"
});
block.gfm.table = edit(block.gfm.table).replace("hr", block.hr).replace("heading", " {0,3}#{1,6} ").replace("blockquote", " {0,3}>").replace("code", " {4}[^\\n]").replace("fences", " {0,3}(?:`{3,}(?=[^`\\n]*\\n)|~{3,})[^\\n]*\\n").replace("list", " {0,3}(?:[*+-]|1[.)]) ").replace("html", "</?(?:tag)(?: +|\\n|/?>)|<(?:script|pre|style|textarea|!--)").replace("tag", block._tag).getRegex();
block.gfm.paragraph = edit(block._paragraph).replace("hr", block.hr).replace("heading", " {0,3}#{1,6} ").replace("|lheading", "").replace("table", block.gfm.table).replace("blockquote", " {0,3}>").replace("fences", " {0,3}(?:`{3,}(?=[^`\\n]*\\n)|~{3,})[^\\n]*\\n").replace("list", " {0,3}(?:[*+-]|1[.)]) ").replace("html", "</?(?:tag)(?: +|\\n|/?>)|<(?:script|pre|style|textarea|!--)").replace("tag", block._tag).getRegex();
block.pedantic = merge({}, block.normal, {
  html: edit(
    `^ *(?:comment *(?:\\n|\\s*$)|<(tag)[\\s\\S]+?</\\1> *(?:\\n{2,}|\\s*$)|<tag(?:"[^"]*"|'[^']*'|\\s[^'"/>\\s]*)*?/?> *(?:\\n{2,}|\\s*$))`
  ).replace("comment", block._comment).replace(/tag/g, "(?!(?:a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)\\b)\\w+(?!:|[^\\w\\s@]*@)\\b").getRegex(),
  def: /^ *\[([^\]]+)\]: *<?([^\s>]+)>?(?: +(["(][^\n]+[")]))? *(?:\n+|$)/,
  heading: /^(#{1,6})(.*)(?:\n+|$)/,
  fences: noopTest,
  paragraph: edit(block.normal._paragraph).replace("hr", block.hr).replace("heading", " *#{1,6} *[^\n]").replace("lheading", block.lheading).replace("blockquote", " {0,3}>").replace("|fences", "").replace("|list", "").replace("|html", "").getRegex()
});
var inline = {
  escape: /^\\([!"#$%&'()*+,\-./:;<=>?@\[\]\\^_`{|}~])/,
  autolink: /^<(scheme:[^\s\x00-\x1f<>]*|email)>/,
  url: noopTest,
  tag: "^comment|^</[a-zA-Z][\\w:-]*\\s*>|^<[a-zA-Z][\\w-]*(?:attribute)*?\\s*/?>|^<\\?[\\s\\S]*?\\?>|^<![a-zA-Z]+\\s[\\s\\S]*?>|^<!\\[CDATA\\[[\\s\\S]*?\\]\\]>",
  link: /^!?\[(label)\]\(\s*(href)(?:\s+(title))?\s*\)/,
  reflink: /^!?\[(label)\]\[(ref)\]/,
  nolink: /^!?\[(ref)\](?:\[\])?/,
  reflinkSearch: "reflink|nolink(?!\\()",
  emStrong: {
    lDelim: /^(?:\*+(?:([punct_])|[^\s*]))|^_+(?:([punct*])|([^\s_]))/,
    rDelimAst: /^[^_*]*?\_\_[^_*]*?\*[^_*]*?(?=\_\_)|[^*]+(?=[^*])|[punct_](\*+)(?=[\s]|$)|[^punct*_\s](\*+)(?=[punct_\s]|$)|[punct_\s](\*+)(?=[^punct*_\s])|[\s](\*+)(?=[punct_])|[punct_](\*+)(?=[punct_])|[^punct*_\s](\*+)(?=[^punct*_\s])/,
    rDelimUnd: /^[^_*]*?\*\*[^_*]*?\_[^_*]*?(?=\*\*)|[^_]+(?=[^_])|[punct*](\_+)(?=[\s]|$)|[^punct*_\s](\_+)(?=[punct*\s]|$)|[punct*\s](\_+)(?=[^punct*_\s])|[\s](\_+)(?=[punct*])|[punct*](\_+)(?=[punct*])/
  },
  code: /^(`+)([^`]|[^`][\s\S]*?[^`])\1(?!`)/,
  br: /^( {2,}|\\)\n(?!\s*$)/,
  del: noopTest,
  text: /^(`+|[^`])(?:(?= {2,}\n)|[\s\S]*?(?:(?=[\\<!\[`*_]|\b_|$)|[^ ](?= {2,}\n)))/,
  punctuation: /^([\spunctuation])/
};
inline._punctuation = "!\"#$%&'()+\\-.,/:;<=>?@\\[\\]`^{|}~";
inline.punctuation = edit(inline.punctuation).replace(/punctuation/g, inline._punctuation).getRegex();
inline.blockSkip = /\[[^\]]*?\]\([^\)]*?\)|`[^`]*?`|<[^>]*?>/g;
inline.escapedEmSt = /\\\*|\\_/g;
inline._comment = edit(block._comment).replace("(?:-->|$)", "-->").getRegex();
inline.emStrong.lDelim = edit(inline.emStrong.lDelim).replace(/punct/g, inline._punctuation).getRegex();
inline.emStrong.rDelimAst = edit(inline.emStrong.rDelimAst, "g").replace(/punct/g, inline._punctuation).getRegex();
inline.emStrong.rDelimUnd = edit(inline.emStrong.rDelimUnd, "g").replace(/punct/g, inline._punctuation).getRegex();
inline._escapes = /\\([!"#$%&'()*+,\-./:;<=>?@\[\]\\^_`{|}~])/g;
inline._scheme = /[a-zA-Z][a-zA-Z0-9+.-]{1,31}/;
inline._email = /[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/;
inline.autolink = edit(inline.autolink).replace("scheme", inline._scheme).replace("email", inline._email).getRegex();
inline._attribute = /\s+[a-zA-Z:_][\w.:-]*(?:\s*=\s*"[^"]*"|\s*=\s*'[^']*'|\s*=\s*[^\s"'=<>`]+)?/;
inline.tag = edit(inline.tag).replace("comment", inline._comment).replace("attribute", inline._attribute).getRegex();
inline._label = /(?:\[(?:\\.|[^\[\]\\])*\]|\\.|`[^`]*`|[^\[\]\\`])*?/;
inline._href = /<(?:\\.|[^\n<>\\])+>|[^\s\x00-\x1f]*/;
inline._title = /"(?:\\"?|[^"\\])*"|'(?:\\'?|[^'\\])*'|\((?:\\\)?|[^)\\])*\)/;
inline.link = edit(inline.link).replace("label", inline._label).replace("href", inline._href).replace("title", inline._title).getRegex();
inline.reflink = edit(inline.reflink).replace("label", inline._label).replace("ref", block._label).getRegex();
inline.nolink = edit(inline.nolink).replace("ref", block._label).getRegex();
inline.reflinkSearch = edit(inline.reflinkSearch, "g").replace("reflink", inline.reflink).replace("nolink", inline.nolink).getRegex();
inline.normal = merge({}, inline);
inline.pedantic = merge({}, inline.normal, {
  strong: {
    start: /^__|\*\*/,
    middle: /^__(?=\S)([\s\S]*?\S)__(?!_)|^\*\*(?=\S)([\s\S]*?\S)\*\*(?!\*)/,
    endAst: /\*\*(?!\*)/g,
    endUnd: /__(?!_)/g
  },
  em: {
    start: /^_|\*/,
    middle: /^()\*(?=\S)([\s\S]*?\S)\*(?!\*)|^_(?=\S)([\s\S]*?\S)_(?!_)/,
    endAst: /\*(?!\*)/g,
    endUnd: /_(?!_)/g
  },
  link: edit(/^!?\[(label)\]\((.*?)\)/).replace("label", inline._label).getRegex(),
  reflink: edit(/^!?\[(label)\]\s*\[([^\]]*)\]/).replace("label", inline._label).getRegex()
});
inline.gfm = merge({}, inline.normal, {
  escape: edit(inline.escape).replace("])", "~|])").getRegex(),
  _extended_email: /[A-Za-z0-9._+-]+(@)[a-zA-Z0-9-_]+(?:\.[a-zA-Z0-9-_]*[a-zA-Z0-9])+(?![-_])/,
  url: /^((?:ftp|https?):\/\/|www\.)(?:[a-zA-Z0-9\-]+\.?)+[^\s<]*|^email/,
  _backpedal: /(?:[^?!.,:;*_~()&]+|\([^)]*\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_~)]+(?!$))+/,
  del: /^(~~?)(?=[^\s~])([\s\S]*?[^\s~])\1(?=[^~]|$)/,
  text: /^([`~]+|[^`~])(?:(?= {2,}\n)|(?=[a-zA-Z0-9.!#$%&'*+\/=?_`{\|}~-]+@)|[\s\S]*?(?:(?=[\\<!\[`*~_]|\b_|https?:\/\/|ftp:\/\/|www\.|$)|[^ ](?= {2,}\n)|[^a-zA-Z0-9.!#$%&'*+\/=?_`{\|}~-](?=[a-zA-Z0-9.!#$%&'*+\/=?_`{\|}~-]+@)))/
});
inline.gfm.url = edit(inline.gfm.url, "i").replace("email", inline.gfm._extended_email).getRegex();
inline.breaks = merge({}, inline.gfm, {
  br: edit(inline.br).replace("{2,}", "*").getRegex(),
  text: edit(inline.gfm.text).replace("\\b_", "\\b_| {2,}\\n").replace(/\{2,\}/g, "*").getRegex()
});
function smartypants(text) {
  return text.replace(/---/g, "\u2014").replace(/--/g, "\u2013").replace(/(^|[-\u2014/(\[{"\s])'/g, "$1\u2018").replace(/'/g, "\u2019").replace(/(^|[-\u2014/(\[{\u2018\s])"/g, "$1\u201C").replace(/"/g, "\u201D").replace(/\.{3}/g, "\u2026");
}
__name(smartypants, "smartypants");
function mangle(text) {
  let out = "", i25, ch;
  const l25 = text.length;
  for (i25 = 0; i25 < l25; i25++) {
    ch = text.charCodeAt(i25);
    if (Math.random() > 0.5) {
      ch = "x" + ch.toString(16);
    }
    out += "&#" + ch + ";";
  }
  return out;
}
__name(mangle, "mangle");
var Lexer = class {
  constructor(options3) {
    this.tokens = [];
    this.tokens.links = /* @__PURE__ */ Object.create(null);
    this.options = options3 || defaults;
    this.options.tokenizer = this.options.tokenizer || new Tokenizer();
    this.tokenizer = this.options.tokenizer;
    this.tokenizer.options = this.options;
    this.tokenizer.lexer = this;
    this.inlineQueue = [];
    this.state = {
      inLink: false,
      inRawBlock: false,
      top: true
    };
    const rules = {
      block: block.normal,
      inline: inline.normal
    };
    if (this.options.pedantic) {
      rules.block = block.pedantic;
      rules.inline = inline.pedantic;
    } else if (this.options.gfm) {
      rules.block = block.gfm;
      if (this.options.breaks) {
        rules.inline = inline.breaks;
      } else {
        rules.inline = inline.gfm;
      }
    }
    this.tokenizer.rules = rules;
  }
  static get rules() {
    return {
      block,
      inline
    };
  }
  static lex(src, options3) {
    const lexer2 = new Lexer(options3);
    return lexer2.lex(src);
  }
  static lexInline(src, options3) {
    const lexer2 = new Lexer(options3);
    return lexer2.inlineTokens(src);
  }
  lex(src) {
    src = src.replace(/\r\n|\r/g, "\n");
    this.blockTokens(src, this.tokens);
    let next;
    while (next = this.inlineQueue.shift()) {
      this.inlineTokens(next.src, next.tokens);
    }
    return this.tokens;
  }
  blockTokens(src, tokens = []) {
    if (this.options.pedantic) {
      src = src.replace(/\t/g, "    ").replace(/^ +$/gm, "");
    } else {
      src = src.replace(/^( *)(\t+)/gm, (_8, leading, tabs) => {
        return leading + "    ".repeat(tabs.length);
      });
    }
    let token, lastToken, cutSrc, lastParagraphClipped;
    while (src) {
      if (this.options.extensions && this.options.extensions.block && this.options.extensions.block.some((extTokenizer) => {
        if (token = extTokenizer.call({ lexer: this }, src, tokens)) {
          src = src.substring(token.raw.length);
          tokens.push(token);
          return true;
        }
        return false;
      })) {
        continue;
      }
      if (token = this.tokenizer.space(src)) {
        src = src.substring(token.raw.length);
        if (token.raw.length === 1 && tokens.length > 0) {
          tokens[tokens.length - 1].raw += "\n";
        } else {
          tokens.push(token);
        }
        continue;
      }
      if (token = this.tokenizer.code(src)) {
        src = src.substring(token.raw.length);
        lastToken = tokens[tokens.length - 1];
        if (lastToken && (lastToken.type === "paragraph" || lastToken.type === "text")) {
          lastToken.raw += "\n" + token.raw;
          lastToken.text += "\n" + token.text;
          this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;
        } else {
          tokens.push(token);
        }
        continue;
      }
      if (token = this.tokenizer.fences(src)) {
        src = src.substring(token.raw.length);
        tokens.push(token);
        continue;
      }
      if (token = this.tokenizer.heading(src)) {
        src = src.substring(token.raw.length);
        tokens.push(token);
        continue;
      }
      if (token = this.tokenizer.hr(src)) {
        src = src.substring(token.raw.length);
        tokens.push(token);
        continue;
      }
      if (token = this.tokenizer.blockquote(src)) {
        src = src.substring(token.raw.length);
        tokens.push(token);
        continue;
      }
      if (token = this.tokenizer.list(src)) {
        src = src.substring(token.raw.length);
        tokens.push(token);
        continue;
      }
      if (token = this.tokenizer.html(src)) {
        src = src.substring(token.raw.length);
        tokens.push(token);
        continue;
      }
      if (token = this.tokenizer.def(src)) {
        src = src.substring(token.raw.length);
        lastToken = tokens[tokens.length - 1];
        if (lastToken && (lastToken.type === "paragraph" || lastToken.type === "text")) {
          lastToken.raw += "\n" + token.raw;
          lastToken.text += "\n" + token.raw;
          this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;
        } else if (!this.tokens.links[token.tag]) {
          this.tokens.links[token.tag] = {
            href: token.href,
            title: token.title
          };
        }
        continue;
      }
      if (token = this.tokenizer.table(src)) {
        src = src.substring(token.raw.length);
        tokens.push(token);
        continue;
      }
      if (token = this.tokenizer.lheading(src)) {
        src = src.substring(token.raw.length);
        tokens.push(token);
        continue;
      }
      cutSrc = src;
      if (this.options.extensions && this.options.extensions.startBlock) {
        let startIndex = Infinity;
        const tempSrc = src.slice(1);
        let tempStart;
        this.options.extensions.startBlock.forEach(function(getStartIndex) {
          tempStart = getStartIndex.call({ lexer: this }, tempSrc);
          if (typeof tempStart === "number" && tempStart >= 0) {
            startIndex = Math.min(startIndex, tempStart);
          }
        });
        if (startIndex < Infinity && startIndex >= 0) {
          cutSrc = src.substring(0, startIndex + 1);
        }
      }
      if (this.state.top && (token = this.tokenizer.paragraph(cutSrc))) {
        lastToken = tokens[tokens.length - 1];
        if (lastParagraphClipped && lastToken.type === "paragraph") {
          lastToken.raw += "\n" + token.raw;
          lastToken.text += "\n" + token.text;
          this.inlineQueue.pop();
          this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;
        } else {
          tokens.push(token);
        }
        lastParagraphClipped = cutSrc.length !== src.length;
        src = src.substring(token.raw.length);
        continue;
      }
      if (token = this.tokenizer.text(src)) {
        src = src.substring(token.raw.length);
        lastToken = tokens[tokens.length - 1];
        if (lastToken && lastToken.type === "text") {
          lastToken.raw += "\n" + token.raw;
          lastToken.text += "\n" + token.text;
          this.inlineQueue.pop();
          this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;
        } else {
          tokens.push(token);
        }
        continue;
      }
      if (src) {
        const errMsg = "Infinite loop on byte: " + src.charCodeAt(0);
        if (this.options.silent) {
          console.error(errMsg);
          break;
        } else {
          throw new Error(errMsg);
        }
      }
    }
    this.state.top = true;
    return tokens;
  }
  inline(src, tokens) {
    this.inlineQueue.push({ src, tokens });
  }
  inlineTokens(src, tokens = []) {
    let token, lastToken, cutSrc;
    let maskedSrc = src;
    let match;
    let keepPrevChar, prevChar;
    if (this.tokens.links) {
      const links = Object.keys(this.tokens.links);
      if (links.length > 0) {
        while ((match = this.tokenizer.rules.inline.reflinkSearch.exec(maskedSrc)) != null) {
          if (links.includes(match[0].slice(match[0].lastIndexOf("[") + 1, -1))) {
            maskedSrc = maskedSrc.slice(0, match.index) + "[" + repeatString("a", match[0].length - 2) + "]" + maskedSrc.slice(this.tokenizer.rules.inline.reflinkSearch.lastIndex);
          }
        }
      }
    }
    while ((match = this.tokenizer.rules.inline.blockSkip.exec(maskedSrc)) != null) {
      maskedSrc = maskedSrc.slice(0, match.index) + "[" + repeatString("a", match[0].length - 2) + "]" + maskedSrc.slice(this.tokenizer.rules.inline.blockSkip.lastIndex);
    }
    while ((match = this.tokenizer.rules.inline.escapedEmSt.exec(maskedSrc)) != null) {
      maskedSrc = maskedSrc.slice(0, match.index) + "++" + maskedSrc.slice(this.tokenizer.rules.inline.escapedEmSt.lastIndex);
    }
    while (src) {
      if (!keepPrevChar) {
        prevChar = "";
      }
      keepPrevChar = false;
      if (this.options.extensions && this.options.extensions.inline && this.options.extensions.inline.some((extTokenizer) => {
        if (token = extTokenizer.call({ lexer: this }, src, tokens)) {
          src = src.substring(token.raw.length);
          tokens.push(token);
          return true;
        }
        return false;
      })) {
        continue;
      }
      if (token = this.tokenizer.escape(src)) {
        src = src.substring(token.raw.length);
        tokens.push(token);
        continue;
      }
      if (token = this.tokenizer.tag(src)) {
        src = src.substring(token.raw.length);
        lastToken = tokens[tokens.length - 1];
        if (lastToken && token.type === "text" && lastToken.type === "text") {
          lastToken.raw += token.raw;
          lastToken.text += token.text;
        } else {
          tokens.push(token);
        }
        continue;
      }
      if (token = this.tokenizer.link(src)) {
        src = src.substring(token.raw.length);
        tokens.push(token);
        continue;
      }
      if (token = this.tokenizer.reflink(src, this.tokens.links)) {
        src = src.substring(token.raw.length);
        lastToken = tokens[tokens.length - 1];
        if (lastToken && token.type === "text" && lastToken.type === "text") {
          lastToken.raw += token.raw;
          lastToken.text += token.text;
        } else {
          tokens.push(token);
        }
        continue;
      }
      if (token = this.tokenizer.emStrong(src, maskedSrc, prevChar)) {
        src = src.substring(token.raw.length);
        tokens.push(token);
        continue;
      }
      if (token = this.tokenizer.codespan(src)) {
        src = src.substring(token.raw.length);
        tokens.push(token);
        continue;
      }
      if (token = this.tokenizer.br(src)) {
        src = src.substring(token.raw.length);
        tokens.push(token);
        continue;
      }
      if (token = this.tokenizer.del(src)) {
        src = src.substring(token.raw.length);
        tokens.push(token);
        continue;
      }
      if (token = this.tokenizer.autolink(src, mangle)) {
        src = src.substring(token.raw.length);
        tokens.push(token);
        continue;
      }
      if (!this.state.inLink && (token = this.tokenizer.url(src, mangle))) {
        src = src.substring(token.raw.length);
        tokens.push(token);
        continue;
      }
      cutSrc = src;
      if (this.options.extensions && this.options.extensions.startInline) {
        let startIndex = Infinity;
        const tempSrc = src.slice(1);
        let tempStart;
        this.options.extensions.startInline.forEach(function(getStartIndex) {
          tempStart = getStartIndex.call({ lexer: this }, tempSrc);
          if (typeof tempStart === "number" && tempStart >= 0) {
            startIndex = Math.min(startIndex, tempStart);
          }
        });
        if (startIndex < Infinity && startIndex >= 0) {
          cutSrc = src.substring(0, startIndex + 1);
        }
      }
      if (token = this.tokenizer.inlineText(cutSrc, smartypants)) {
        src = src.substring(token.raw.length);
        if (token.raw.slice(-1) !== "_") {
          prevChar = token.raw.slice(-1);
        }
        keepPrevChar = true;
        lastToken = tokens[tokens.length - 1];
        if (lastToken && lastToken.type === "text") {
          lastToken.raw += token.raw;
          lastToken.text += token.text;
        } else {
          tokens.push(token);
        }
        continue;
      }
      if (src) {
        const errMsg = "Infinite loop on byte: " + src.charCodeAt(0);
        if (this.options.silent) {
          console.error(errMsg);
          break;
        } else {
          throw new Error(errMsg);
        }
      }
    }
    return tokens;
  }
};
__name(Lexer, "Lexer");
var Renderer = class {
  constructor(options3) {
    this.options = options3 || defaults;
  }
  code(code, infostring, escaped) {
    const lang = (infostring || "").match(/\S*/)[0];
    if (this.options.highlight) {
      const out = this.options.highlight(code, lang);
      if (out != null && out !== code) {
        escaped = true;
        code = out;
      }
    }
    code = code.replace(/\n$/, "") + "\n";
    if (!lang) {
      return "<pre><code>" + (escaped ? code : escape2(code, true)) + "</code></pre>\n";
    }
    return '<pre><code class="' + this.options.langPrefix + escape2(lang, true) + '">' + (escaped ? code : escape2(code, true)) + "</code></pre>\n";
  }
  blockquote(quote) {
    return `<blockquote>
${quote}</blockquote>
`;
  }
  html(html) {
    return html;
  }
  heading(text, level, raw, slugger) {
    if (this.options.headerIds) {
      const id = this.options.headerPrefix + slugger.slug(raw);
      return `<h${level} id="${id}">${text}</h${level}>
`;
    }
    return `<h${level}>${text}</h${level}>
`;
  }
  hr() {
    return this.options.xhtml ? "<hr/>\n" : "<hr>\n";
  }
  list(body, ordered, start2) {
    const type = ordered ? "ol" : "ul", startatt = ordered && start2 !== 1 ? ' start="' + start2 + '"' : "";
    return "<" + type + startatt + ">\n" + body + "</" + type + ">\n";
  }
  listitem(text) {
    return `<li>${text}</li>
`;
  }
  checkbox(checked) {
    return "<input " + (checked ? 'checked="" ' : "") + 'disabled="" type="checkbox"' + (this.options.xhtml ? " /" : "") + "> ";
  }
  paragraph(text) {
    return `<p>${text}</p>
`;
  }
  table(header, body) {
    if (body)
      body = `<tbody>${body}</tbody>`;
    return "<table>\n<thead>\n" + header + "</thead>\n" + body + "</table>\n";
  }
  tablerow(content) {
    return `<tr>
${content}</tr>
`;
  }
  tablecell(content, flags) {
    const type = flags.header ? "th" : "td";
    const tag2 = flags.align ? `<${type} align="${flags.align}">` : `<${type}>`;
    return tag2 + content + `</${type}>
`;
  }
  strong(text) {
    return `<strong>${text}</strong>`;
  }
  em(text) {
    return `<em>${text}</em>`;
  }
  codespan(text) {
    return `<code>${text}</code>`;
  }
  br() {
    return this.options.xhtml ? "<br/>" : "<br>";
  }
  del(text) {
    return `<del>${text}</del>`;
  }
  link(href, title, text) {
    href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);
    if (href === null) {
      return text;
    }
    let out = '<a href="' + escape2(href) + '"';
    if (title) {
      out += ' title="' + title + '"';
    }
    out += ">" + text + "</a>";
    return out;
  }
  image(href, title, text) {
    href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);
    if (href === null) {
      return text;
    }
    let out = `<img src="${href}" alt="${text}"`;
    if (title) {
      out += ` title="${title}"`;
    }
    out += this.options.xhtml ? "/>" : ">";
    return out;
  }
  text(text) {
    return text;
  }
};
__name(Renderer, "Renderer");
var TextRenderer = class {
  strong(text) {
    return text;
  }
  em(text) {
    return text;
  }
  codespan(text) {
    return text;
  }
  del(text) {
    return text;
  }
  html(text) {
    return text;
  }
  text(text) {
    return text;
  }
  link(href, title, text) {
    return "" + text;
  }
  image(href, title, text) {
    return "" + text;
  }
  br() {
    return "";
  }
};
__name(TextRenderer, "TextRenderer");
var Slugger = class {
  constructor() {
    this.seen = {};
  }
  serialize(value) {
    return value.toLowerCase().trim().replace(/<[!\/a-z].*?>/ig, "").replace(/[\u2000-\u206F\u2E00-\u2E7F\\'!"#$%&()*+,./:;<=>?@[\]^`{|}~]/g, "").replace(/\s/g, "-");
  }
  getNextSafeSlug(originalSlug, isDryRun) {
    let slug = originalSlug;
    let occurenceAccumulator = 0;
    if (this.seen.hasOwnProperty(slug)) {
      occurenceAccumulator = this.seen[originalSlug];
      do {
        occurenceAccumulator++;
        slug = originalSlug + "-" + occurenceAccumulator;
      } while (this.seen.hasOwnProperty(slug));
    }
    if (!isDryRun) {
      this.seen[originalSlug] = occurenceAccumulator;
      this.seen[slug] = 0;
    }
    return slug;
  }
  slug(value, options3 = {}) {
    const slug = this.serialize(value);
    return this.getNextSafeSlug(slug, options3.dryrun);
  }
};
__name(Slugger, "Slugger");
var Parser = class {
  constructor(options3) {
    this.options = options3 || defaults;
    this.options.renderer = this.options.renderer || new Renderer();
    this.renderer = this.options.renderer;
    this.renderer.options = this.options;
    this.textRenderer = new TextRenderer();
    this.slugger = new Slugger();
  }
  static parse(tokens, options3) {
    const parser2 = new Parser(options3);
    return parser2.parse(tokens);
  }
  static parseInline(tokens, options3) {
    const parser2 = new Parser(options3);
    return parser2.parseInline(tokens);
  }
  parse(tokens, top2 = true) {
    let out = "", i25, j3, k7, l25, l32, row, cell, header, body, token, ordered, start2, loose, itemBody, item, checked, task, checkbox, ret;
    const l26 = tokens.length;
    for (i25 = 0; i25 < l26; i25++) {
      token = tokens[i25];
      if (this.options.extensions && this.options.extensions.renderers && this.options.extensions.renderers[token.type]) {
        ret = this.options.extensions.renderers[token.type].call({ parser: this }, token);
        if (ret !== false || !["space", "hr", "heading", "code", "table", "blockquote", "list", "html", "paragraph", "text"].includes(token.type)) {
          out += ret || "";
          continue;
        }
      }
      switch (token.type) {
        case "space": {
          continue;
        }
        case "hr": {
          out += this.renderer.hr();
          continue;
        }
        case "heading": {
          out += this.renderer.heading(
            this.parseInline(token.tokens),
            token.depth,
            unescape(this.parseInline(token.tokens, this.textRenderer)),
            this.slugger
          );
          continue;
        }
        case "code": {
          out += this.renderer.code(
            token.text,
            token.lang,
            token.escaped
          );
          continue;
        }
        case "table": {
          header = "";
          cell = "";
          l25 = token.header.length;
          for (j3 = 0; j3 < l25; j3++) {
            cell += this.renderer.tablecell(
              this.parseInline(token.header[j3].tokens),
              { header: true, align: token.align[j3] }
            );
          }
          header += this.renderer.tablerow(cell);
          body = "";
          l25 = token.rows.length;
          for (j3 = 0; j3 < l25; j3++) {
            row = token.rows[j3];
            cell = "";
            l32 = row.length;
            for (k7 = 0; k7 < l32; k7++) {
              cell += this.renderer.tablecell(
                this.parseInline(row[k7].tokens),
                { header: false, align: token.align[k7] }
              );
            }
            body += this.renderer.tablerow(cell);
          }
          out += this.renderer.table(header, body);
          continue;
        }
        case "blockquote": {
          body = this.parse(token.tokens);
          out += this.renderer.blockquote(body);
          continue;
        }
        case "list": {
          ordered = token.ordered;
          start2 = token.start;
          loose = token.loose;
          l25 = token.items.length;
          body = "";
          for (j3 = 0; j3 < l25; j3++) {
            item = token.items[j3];
            checked = item.checked;
            task = item.task;
            itemBody = "";
            if (item.task) {
              checkbox = this.renderer.checkbox(checked);
              if (loose) {
                if (item.tokens.length > 0 && item.tokens[0].type === "paragraph") {
                  item.tokens[0].text = checkbox + " " + item.tokens[0].text;
                  if (item.tokens[0].tokens && item.tokens[0].tokens.length > 0 && item.tokens[0].tokens[0].type === "text") {
                    item.tokens[0].tokens[0].text = checkbox + " " + item.tokens[0].tokens[0].text;
                  }
                } else {
                  item.tokens.unshift({
                    type: "text",
                    text: checkbox
                  });
                }
              } else {
                itemBody += checkbox;
              }
            }
            itemBody += this.parse(item.tokens, loose);
            body += this.renderer.listitem(itemBody, task, checked);
          }
          out += this.renderer.list(body, ordered, start2);
          continue;
        }
        case "html": {
          out += this.renderer.html(token.text);
          continue;
        }
        case "paragraph": {
          out += this.renderer.paragraph(this.parseInline(token.tokens));
          continue;
        }
        case "text": {
          body = token.tokens ? this.parseInline(token.tokens) : token.text;
          while (i25 + 1 < l26 && tokens[i25 + 1].type === "text") {
            token = tokens[++i25];
            body += "\n" + (token.tokens ? this.parseInline(token.tokens) : token.text);
          }
          out += top2 ? this.renderer.paragraph(body) : body;
          continue;
        }
        default: {
          const errMsg = 'Token with "' + token.type + '" type was not found.';
          if (this.options.silent) {
            console.error(errMsg);
            return;
          } else {
            throw new Error(errMsg);
          }
        }
      }
    }
    return out;
  }
  parseInline(tokens, renderer) {
    renderer = renderer || this.renderer;
    let out = "", i25, token, ret;
    const l25 = tokens.length;
    for (i25 = 0; i25 < l25; i25++) {
      token = tokens[i25];
      if (this.options.extensions && this.options.extensions.renderers && this.options.extensions.renderers[token.type]) {
        ret = this.options.extensions.renderers[token.type].call({ parser: this }, token);
        if (ret !== false || !["escape", "html", "link", "image", "strong", "em", "codespan", "br", "del", "text"].includes(token.type)) {
          out += ret || "";
          continue;
        }
      }
      switch (token.type) {
        case "escape": {
          out += renderer.text(token.text);
          break;
        }
        case "html": {
          out += renderer.html(token.text);
          break;
        }
        case "link": {
          out += renderer.link(token.href, token.title, this.parseInline(token.tokens, renderer));
          break;
        }
        case "image": {
          out += renderer.image(token.href, token.title, token.text);
          break;
        }
        case "strong": {
          out += renderer.strong(this.parseInline(token.tokens, renderer));
          break;
        }
        case "em": {
          out += renderer.em(this.parseInline(token.tokens, renderer));
          break;
        }
        case "codespan": {
          out += renderer.codespan(token.text);
          break;
        }
        case "br": {
          out += renderer.br();
          break;
        }
        case "del": {
          out += renderer.del(this.parseInline(token.tokens, renderer));
          break;
        }
        case "text": {
          out += renderer.text(token.text);
          break;
        }
        default: {
          const errMsg = 'Token with "' + token.type + '" type was not found.';
          if (this.options.silent) {
            console.error(errMsg);
            return;
          } else {
            throw new Error(errMsg);
          }
        }
      }
    }
    return out;
  }
};
__name(Parser, "Parser");
function marked(src, opt, callback) {
  if (typeof src === "undefined" || src === null) {
    throw new Error("marked(): input parameter is undefined or null");
  }
  if (typeof src !== "string") {
    throw new Error("marked(): input parameter is of type " + Object.prototype.toString.call(src) + ", string expected");
  }
  if (typeof opt === "function") {
    callback = opt;
    opt = null;
  }
  opt = merge({}, marked.defaults, opt || {});
  checkSanitizeDeprecation(opt);
  if (callback) {
    const highlight2 = opt.highlight;
    let tokens;
    try {
      tokens = Lexer.lex(src, opt);
    } catch (e25) {
      return callback(e25);
    }
    const done = /* @__PURE__ */ __name(function(err) {
      let out;
      if (!err) {
        try {
          if (opt.walkTokens) {
            marked.walkTokens(tokens, opt.walkTokens);
          }
          out = Parser.parse(tokens, opt);
        } catch (e25) {
          err = e25;
        }
      }
      opt.highlight = highlight2;
      return err ? callback(err) : callback(null, out);
    }, "done");
    if (!highlight2 || highlight2.length < 3) {
      return done();
    }
    delete opt.highlight;
    if (!tokens.length)
      return done();
    let pending = 0;
    marked.walkTokens(tokens, function(token) {
      if (token.type === "code") {
        pending++;
        setTimeout(() => {
          highlight2(token.text, token.lang, function(err, code) {
            if (err) {
              return done(err);
            }
            if (code != null && code !== token.text) {
              token.text = code;
              token.escaped = true;
            }
            pending--;
            if (pending === 0) {
              done();
            }
          });
        }, 0);
      }
    });
    if (pending === 0) {
      done();
    }
    return;
  }
  try {
    const tokens = Lexer.lex(src, opt);
    if (opt.walkTokens) {
      marked.walkTokens(tokens, opt.walkTokens);
    }
    return Parser.parse(tokens, opt);
  } catch (e25) {
    e25.message += "\nPlease report this to https://github.com/markedjs/marked.";
    if (opt.silent) {
      return "<p>An error occurred:</p><pre>" + escape2(e25.message + "", true) + "</pre>";
    }
    throw e25;
  }
}
__name(marked, "marked");
marked.options = marked.setOptions = function(opt) {
  merge(marked.defaults, opt);
  changeDefaults(marked.defaults);
  return marked;
};
marked.getDefaults = getDefaults;
marked.defaults = defaults;
marked.use = function(...args) {
  const opts = merge({}, ...args);
  const extensions = marked.defaults.extensions || { renderers: {}, childTokens: {} };
  let hasExtensions;
  args.forEach((pack) => {
    if (pack.extensions) {
      hasExtensions = true;
      pack.extensions.forEach((ext) => {
        if (!ext.name) {
          throw new Error("extension name required");
        }
        if (ext.renderer) {
          const prevRenderer = extensions.renderers ? extensions.renderers[ext.name] : null;
          if (prevRenderer) {
            extensions.renderers[ext.name] = function(...args2) {
              let ret = ext.renderer.apply(this, args2);
              if (ret === false) {
                ret = prevRenderer.apply(this, args2);
              }
              return ret;
            };
          } else {
            extensions.renderers[ext.name] = ext.renderer;
          }
        }
        if (ext.tokenizer) {
          if (!ext.level || ext.level !== "block" && ext.level !== "inline") {
            throw new Error("extension level must be 'block' or 'inline'");
          }
          if (extensions[ext.level]) {
            extensions[ext.level].unshift(ext.tokenizer);
          } else {
            extensions[ext.level] = [ext.tokenizer];
          }
          if (ext.start) {
            if (ext.level === "block") {
              if (extensions.startBlock) {
                extensions.startBlock.push(ext.start);
              } else {
                extensions.startBlock = [ext.start];
              }
            } else if (ext.level === "inline") {
              if (extensions.startInline) {
                extensions.startInline.push(ext.start);
              } else {
                extensions.startInline = [ext.start];
              }
            }
          }
        }
        if (ext.childTokens) {
          extensions.childTokens[ext.name] = ext.childTokens;
        }
      });
    }
    if (pack.renderer) {
      const renderer = marked.defaults.renderer || new Renderer();
      for (const prop in pack.renderer) {
        const prevRenderer = renderer[prop];
        renderer[prop] = (...args2) => {
          let ret = pack.renderer[prop].apply(renderer, args2);
          if (ret === false) {
            ret = prevRenderer.apply(renderer, args2);
          }
          return ret;
        };
      }
      opts.renderer = renderer;
    }
    if (pack.tokenizer) {
      const tokenizer = marked.defaults.tokenizer || new Tokenizer();
      for (const prop in pack.tokenizer) {
        const prevTokenizer = tokenizer[prop];
        tokenizer[prop] = (...args2) => {
          let ret = pack.tokenizer[prop].apply(tokenizer, args2);
          if (ret === false) {
            ret = prevTokenizer.apply(tokenizer, args2);
          }
          return ret;
        };
      }
      opts.tokenizer = tokenizer;
    }
    if (pack.walkTokens) {
      const walkTokens2 = marked.defaults.walkTokens;
      opts.walkTokens = function(token) {
        pack.walkTokens.call(this, token);
        if (walkTokens2) {
          walkTokens2.call(this, token);
        }
      };
    }
    if (hasExtensions) {
      opts.extensions = extensions;
    }
    marked.setOptions(opts);
  });
};
marked.walkTokens = function(tokens, callback) {
  for (const token of tokens) {
    callback.call(marked, token);
    switch (token.type) {
      case "table": {
        for (const cell of token.header) {
          marked.walkTokens(cell.tokens, callback);
        }
        for (const row of token.rows) {
          for (const cell of row) {
            marked.walkTokens(cell.tokens, callback);
          }
        }
        break;
      }
      case "list": {
        marked.walkTokens(token.items, callback);
        break;
      }
      default: {
        if (marked.defaults.extensions && marked.defaults.extensions.childTokens && marked.defaults.extensions.childTokens[token.type]) {
          marked.defaults.extensions.childTokens[token.type].forEach(function(childTokens) {
            marked.walkTokens(token[childTokens], callback);
          });
        } else if (token.tokens) {
          marked.walkTokens(token.tokens, callback);
        }
      }
    }
  }
};
marked.parseInline = function(src, opt) {
  if (typeof src === "undefined" || src === null) {
    throw new Error("marked.parseInline(): input parameter is undefined or null");
  }
  if (typeof src !== "string") {
    throw new Error("marked.parseInline(): input parameter is of type " + Object.prototype.toString.call(src) + ", string expected");
  }
  opt = merge({}, marked.defaults, opt || {});
  checkSanitizeDeprecation(opt);
  try {
    const tokens = Lexer.lexInline(src, opt);
    if (opt.walkTokens) {
      marked.walkTokens(tokens, opt.walkTokens);
    }
    return Parser.parseInline(tokens, opt);
  } catch (e25) {
    e25.message += "\nPlease report this to https://github.com/markedjs/marked.";
    if (opt.silent) {
      return "<p>An error occurred:</p><pre>" + escape2(e25.message + "", true) + "</pre>";
    }
    throw e25;
  }
};
marked.Parser = Parser;
marked.parser = Parser.parse;
marked.Renderer = Renderer;
marked.TextRenderer = TextRenderer;
marked.Lexer = Lexer;
marked.lexer = Lexer.lex;
marked.Tokenizer = Tokenizer;
marked.Slugger = Slugger;
marked.parse = marked;
var options2 = marked.options;
var setOptions = marked.setOptions;
var use = marked.use;
var walkTokens = marked.walkTokens;
var parseInline = marked.parseInline;
var parser = Parser.parse;
var lexer = Lexer.lex;

// node_modules/@patternfly/pfe-markdown/pfe-markdown.js
var h20 = Object.defineProperty;
var c18 = Object.getOwnPropertyDescriptor;
var a17 = /* @__PURE__ */ __name((d17, s20, n25, t16) => {
  for (var r18 = t16 > 1 ? void 0 : t16 ? c18(s20, n25) : s20, e25 = d17.length - 1, o21; e25 >= 0; e25--)
    (o21 = d17[e25]) && (r18 = (t16 ? o21(s20, n25, r18) : o21(r18)) || r18);
  return t16 && r18 && h20(s20, n25, r18), r18;
}, "a");
var p16 = i`:host{display:block;color:var(--pfe-broadcasted--text,#3c3f42)}:host([hidden]){display:none}`;
var m23 = p16;
var i22 = /* @__PURE__ */ __name(class extends s4 {
  constructor() {
    super(...arguments);
    this.markdown = null;
    this._markdownRender = null;
    this._markdownContainer = null;
    this._observerConfig = { childList: true, subtree: true };
    this.observer = new MutationObserver(this.onMutation);
  }
  connectedCallback() {
    super.connectedCallback(), this._markdownRender = document.createElement("div"), this._markdownRender.setAttribute("pfe-markdown-render", ""), this.appendChild(this._markdownRender);
  }
  render() {
    return y`<slot @slotchange="${this.onSlotChange}"></slot>`;
  }
  disconnectedCallback() {
    super.disconnectedCallback(), this.observer?.disconnect();
  }
  onMutation() {
    this._markdownContainer?.textContent ? this.markdown = this._markdownContainer.textContent : this._markdownRender && (this._markdownRender.innerHTML = "");
  }
  onSlotChange() {
    this._markdownContainer || (this._markdownContainer = this.querySelector("[pfe-markdown-container]"), this._markdownContainer && (this._markdownContainer.style.display = "none"), this._init());
  }
  _init() {
    this._markdownContainer?.textContent && (this.markdown = this._markdownContainer.textContent), this._markdownContainer && this.observer.observe(this._markdownContainer, this._observerConfig);
  }
  _unindent(n25) {
    if (!n25)
      return n25;
    let t16 = n25.replace(/\t/g, "  ").split(`
`), r18 = t16.reduce((e25, o21) => {
      if (/^\s*$/.test(o21))
        return e25;
      let [{ length: l25 = 0 } = {}] = o21.match(/^(\s*)/) ?? [];
      return e25 === null || l25 < e25 ? l25 : e25;
    }, 0);
    return t16.map((e25) => e25.substr(r18)).join(`
`);
  }
  _markdownChanged(n25, t16) {
    t16 && this.renderMarkdown(this._unindent(t16));
  }
  renderMarkdown(n25) {
    this._markdownRender && (this._markdownRender.innerHTML = marked(n25 ?? ""));
  }
}, "i");
i22.version = "2.0.0-next.3", i22.styles = [m23], a17([p3, e5({ attribute: false })], i22.prototype, "markdown", 2), a17([o8], i22.prototype, "onMutation", 1), i22 = a17([e4("pfe-markdown"), d4()], i22);

// node_modules/@patternfly/pfe-number/node_modules/lit/index.js
init_reactive_element();
init_lit_html();
init_lit_element();

// node_modules/@patternfly/pfe-number/pfe-number.js
init_decorators();

// node_modules/@patternfly/pfe-number/node_modules/lit/decorators.js
init_custom_element();
init_property();
init_state();
init_event_options();
init_query();
init_query_all();
init_query_async();
init_query_assigned_elements();
init_query_assigned_nodes();

// node_modules/@patternfly/pfe-number/numeral.js
function n22(e25) {
  let t16, i25, l25, r18;
  if (n22.isNumeral(e25))
    t16 = e25.value();
  else if (e25 === 0 || typeof e25 > "u")
    t16 = 0;
  else if (e25 === null || Number.isNaN(e25))
    t16 = null;
  else if (typeof e25 == "string")
    if (u18.zeroFormat && e25 === u18.zeroFormat)
      t16 = 0;
    else if (u18.nullFormat && e25 === u18.nullFormat || !e25.replace(/[^0-9]+/g, "").length)
      t16 = null;
    else {
      for (i25 in p17)
        if (Object.prototype.hasOwnProperty.call(p17, i25) && (r18 = typeof p17[i25].regexps.unformat == "function" ? p17[i25].regexps.unformat() : p17[i25].regexps.unformat, r18 && e25.match(r18))) {
          l25 = p17[i25].unformat;
          break;
        }
      l25 = l25 || n22._.stringToNumber, t16 = l25(e25);
    }
  else
    t16 = Number(e25) || null;
  return new B2(e25, t16);
}
__name(n22, "n");
var $2 = { numberToFormat(e25, t16, i25) {
  let l25 = w7[n22.options.currentLocale], r18 = false, o21 = false, a19 = 0, s20 = "", f25 = 1e12, c23 = 1e9, N3 = 1e6, S7 = 1e3, h24 = "", x11 = false, m26, _8, O4, R5, j3, b16, d17, k7, T7, g13;
  if (e25 = e25 || 0, _8 = Math.abs(e25), n22._.includes(t16, "(") ? (r18 = true, t16 = t16.replace(/[\(|\)]/g, "")) : (n22._.includes(t16, "+") || n22._.includes(t16, "-")) && (k7 = n22._.includes(t16, "+") ? t16.indexOf("+") : e25 < 0 ? t16.indexOf("-") : -1, t16 = t16.replace(/[\+|\-]/g, "")), n22._.includes(t16, "a") && (m26 = t16.match(/a(k|m|b|t)?/), m26 = m26 ? m26[1] : false, n22._.includes(t16, " a") && (s20 = " "), t16 = t16.replace(new RegExp(`${s20}a[kmbt]?`), ""), _8 >= f25 && !m26 || m26 === "t" ? (s20 += l25.abbreviations.trillion, e25 = e25 / f25) : _8 < f25 && _8 >= c23 && !m26 || m26 === "b" ? (s20 += l25.abbreviations.billion, e25 = e25 / c23) : _8 < c23 && _8 >= N3 && !m26 || m26 === "m" ? (s20 += l25.abbreviations.million, e25 = e25 / N3) : (_8 < N3 && _8 >= S7 && !m26 || m26 === "k") && (s20 += l25.abbreviations.thousand, e25 = e25 / S7)), n22._.includes(t16, "[.]") && (o21 = true, t16 = t16.replace("[.]", ".")), b16 = e25.toString().split(".")[0], d17 = t16.split(".")[1], T7 = t16.indexOf(","), a19 = (t16.split(".")[0].split(",")[0].match(/0/g) || []).length, d17 ? (n22._.includes(d17, "[") ? (d17 = d17.replace("]", ""), d17 = d17.split("["), h24 = n22._.toFixed(e25, d17[0].length + d17[1].length, i25, d17[1].length)) : h24 = n22._.toFixed(e25, d17.length, i25), b16 = h24.split(".")[0], n22._.includes(h24, ".") ? h24 = l25.delimiters.decimal + h24.split(".")[1] : h24 = "", o21 && Number(h24.slice(1)) === 0 && (h24 = "")) : b16 = n22._.toFixed(e25, 0, i25), s20 && !m26 && Number(b16) >= 1e3 && s20 !== l25.abbreviations.trillion)
    switch (b16 = String(Number(b16) / 1e3), s20) {
      case l25.abbreviations.thousand:
        s20 = l25.abbreviations.million;
        break;
      case l25.abbreviations.million:
        s20 = l25.abbreviations.billion;
        break;
      case l25.abbreviations.billion:
        s20 = l25.abbreviations.trillion;
        break;
    }
  if (n22._.includes(b16, "-") && (b16 = b16.slice(1), x11 = true), b16.length < a19)
    for (let E4 = a19 - b16.length; E4 > 0; E4--)
      b16 = `0${b16}`;
  return T7 > -1 && (b16 = b16.toString().replace(/(\d)(?=(\d{3})+(?!\d))/g, `$1${l25.delimiters.thousands}`)), t16.indexOf(".") === 0 && (b16 = ""), g13 = b16 + h24 + (s20 || ""), r18 ? g13 = (r18 && x11 ? "(" : "") + g13 + (r18 && x11 ? ")" : "") : k7 >= 0 ? g13 = k7 === 0 ? (x11 ? "-" : "+") + g13 : g13 + (x11 ? "-" : "+") : x11 && (g13 = `-${g13}`), g13;
}, stringToNumber(e25) {
  let t16 = w7[u18.currentLocale], i25 = e25, l25 = { thousand: 3, million: 6, billion: 9, trillion: 12 }, r18, o21, a19, s20;
  if (u18.zeroFormat && e25 === u18.zeroFormat)
    o21 = 0;
  else if (u18.nullFormat && e25 === u18.nullFormat || !e25.replace(/[^0-9]+/g, "").length)
    o21 = null;
  else {
    o21 = 1, t16.delimiters.decimal !== "." && (e25 = e25.replace(/\./g, "").replace(t16.delimiters.decimal, "."));
    for (r18 in l25)
      if (s20 = new RegExp(`[^a-zA-Z]${t16.abbreviations[r18]}(?:\\)|(\\${t16.currency.symbol})?(?:\\))?)?$`), i25.match(s20)) {
        o21 *= Math.pow(10, l25[r18]);
        break;
      }
    o21 *= (e25.split("-").length + Math.min(e25.split("(").length - 1, e25.split(")").length - 1)) % 2 ? 1 : -1, e25 = e25.replace(/[^0-9\.]+/g, ""), o21 *= Number(e25);
  }
  return o21;
}, includes(e25, t16) {
  return e25.indexOf(t16) !== -1;
}, insert(e25, t16, i25) {
  return e25.slice(0, i25) + t16 + e25.slice(i25);
}, multiplier(e25) {
  let t16 = e25.toString().split(".");
  return t16.length < 2 ? 1 : Math.pow(10, t16[1].length);
}, correctionFactor() {
  return Array.prototype.slice.call(arguments).reduce(function(t16, i25) {
    let l25 = $2.multiplier(i25);
    return t16 > l25 ? t16 : l25;
  }, 1);
}, toFixed(e25, t16, i25, l25) {
  let r18 = e25.toString().split("."), o21 = t16 - (l25 || 0), a19, s20, f25, c23;
  return r18.length === 2 ? a19 = Math.min(Math.max(r18[1].length, o21), t16) : a19 = o21, f25 = Math.pow(10, a19), c23 = (i25(`${e25}e+${a19}`) / f25).toFixed(a19), l25 > t16 - a19 && (s20 = new RegExp(`\\.?0{1,${l25 - (t16 - a19)}}$`), c23 = c23.replace(s20, "")), c23;
} };
var L6 = "2.0.6";
var p17 = {};
var w7 = {};
var F4 = { currentLocale: "en", zeroFormat: null, nullFormat: null, defaultFormat: "0,0", scalePercentBy100: true };
var u18 = { currentLocale: F4.currentLocale, zeroFormat: F4.zeroFormat, nullFormat: F4.nullFormat, defaultFormat: F4.defaultFormat, scalePercentBy100: F4.scalePercentBy100 };
var B2 = /* @__PURE__ */ __name(class {
  constructor(t16, i25) {
    this._input = t16, this._value = i25;
  }
  clone() {
    return n22(this);
  }
  format(t16, i25) {
    let l25 = this._value, r18 = t16 || u18.defaultFormat, o21, a19, s20;
    if (i25 = i25 || Math.round, l25 === 0 && u18.zeroFormat !== null)
      a19 = u18.zeroFormat;
    else if (l25 === null && u18.nullFormat !== null)
      a19 = u18.nullFormat;
    else {
      for (o21 in p17)
        if (r18.match(p17[o21].regexps.format)) {
          s20 = p17[o21].format;
          break;
        }
      s20 = s20 || n22._.numberToFormat, a19 = s20(l25, r18, i25);
    }
    return a19;
  }
  value() {
    return this._value;
  }
  input() {
    return this._input;
  }
  set(t16) {
    return this._value = Number(t16), this;
  }
  add(t16) {
    let i25 = $2.correctionFactor.call(null, this._value, t16);
    function l25(r18, o21) {
      return r18 + Math.round(i25 * o21);
    }
    __name(l25, "l");
    return this._value = [this._value, t16].reduce(l25, 0) / i25, this;
  }
  subtract(t16) {
    let i25 = $2.correctionFactor.call(null, this._value, t16);
    function l25(r18, o21) {
      return r18 - Math.round(i25 * o21);
    }
    __name(l25, "l");
    return this._value = [t16].reduce(l25, Math.round(this._value * i25)) / i25, this;
  }
  multiply(t16) {
    function i25(l25, r18) {
      let o21 = $2.correctionFactor(l25, r18);
      return Math.round(l25 * o21) * Math.round(r18 * o21) / Math.round(o21 * o21);
    }
    __name(i25, "i");
    return this._value = [this._value, t16].reduce(i25, 1), this;
  }
  divide(t16) {
    function i25(l25, r18) {
      let o21 = $2.correctionFactor(l25, r18);
      return Math.round(l25 * o21) / Math.round(r18 * o21);
    }
    __name(i25, "i");
    return this._value = [this._value, t16].reduce(i25), this;
  }
  difference(t16) {
    return Math.abs(n22(this._value).subtract(t16).value());
  }
}, "B");
n22.version = L6;
n22.isNumeral = function(e25) {
  return e25 instanceof B2;
};
n22._ = $2;
n22.options = u18;
n22.formats = p17;
n22.locales = w7;
n22.locale = function(e25) {
  return e25 && (u18.currentLocale = e25.toLowerCase()), u18.currentLocale;
};
n22.localeData = function(e25) {
  if (!e25)
    return w7[u18.currentLocale];
  if (e25 = e25.toLowerCase(), !w7[e25])
    throw new Error(`Unknown locale : ${e25}`);
  return w7[e25];
};
n22.reset = function() {
  for (let e25 in F4)
    u18[e25] = F4[e25];
};
n22.zeroFormat = function(e25) {
  u18.zeroFormat = typeof e25 == "string" ? e25 : null;
};
n22.nullFormat = function(e25) {
  u18.nullFormat = typeof e25 == "string" ? e25 : null;
};
n22.defaultFormat = function(e25) {
  u18.defaultFormat = typeof e25 == "string" ? e25 : "0.0";
};
n22.register = function(e25, t16, i25) {
  if (t16 = t16.toLowerCase(), this[`${e25}s`][t16])
    throw new TypeError(`${t16} ${e25} already registered.`);
  return this[`${e25}s`][t16] = i25, i25;
};
n22.validate = function(e25, t16) {
  let i25, l25, r18, o21, a19, s20, f25, c23;
  if (typeof e25 != "string" && (e25 += "", console.warn && console.warn("Numeral.js: Value is not string. It has been co-erced to: ", e25)), e25 = e25.trim(), e25.match(/^\d+$/))
    return true;
  if (e25 === "")
    return false;
  try {
    f25 = n22.localeData(t16);
  } catch {
    f25 = n22.localeData(n22.locale());
  }
  return r18 = f25.currency.symbol, a19 = f25.abbreviations, i25 = f25.delimiters.decimal, f25.delimiters.thousands === "." ? l25 = "\\." : l25 = f25.delimiters.thousands, c23 = e25.match(/^[^\d]+/), c23 !== null && (e25 = e25.substr(1), c23[0] !== r18) || (c23 = e25.match(/[^\d]+$/), c23 !== null && (e25 = e25.slice(0, -1), c23[0] !== a19.thousand && c23[0] !== a19.million && c23[0] !== a19.billion && c23[0] !== a19.trillion)) ? false : (s20 = new RegExp(`${l25}{2}`), e25.match(/[^\d.,]/g) ? false : (o21 = e25.split(i25), o21.length > 2 ? false : o21.length < 2 ? !!o21[0].match(/^\d+.*\d$/) && !o21[0].match(s20) : o21[0].length === 1 ? !!o21[0].match(/^\d+$/) && !o21[0].match(s20) && !!o21[1].match(/^\d+$/) : !!o21[0].match(/^\d+.*\d$/) && !o21[0].match(s20) && !!o21[1].match(/^\d+$/)));
};
n22.fn = B2.prototype;
n22.register("locale", "en", { delimiters: { thousands: ",", decimal: "." }, abbreviations: { thousand: "k", million: "m", billion: "b", trillion: "t" }, ordinal(e25) {
  let t16 = e25 % 10;
  return ~~(e25 % 100 / 10) === 1 ? "th" : t16 === 1 ? "st" : t16 === 2 ? "nd" : t16 === 3 ? "rd" : "th";
}, currency: { symbol: "$" } });
n22.register("format", "bps", { regexps: { format: /(BPS)/, unformat: /(BPS)/ }, format(e25, t16, i25) {
  let l25 = n22._.includes(t16, " BPS") ? " " : "", r18;
  return e25 = e25 * 1e4, t16 = t16.replace(/\s?BPS/, ""), r18 = n22._.numberToFormat(e25, t16, i25), n22._.includes(r18, ")") ? (r18 = r18.split(""), r18.splice(-1, 0, `${l25}BPS`), r18 = r18.join("")) : r18 = `${r18 + l25}BPS`, r18;
}, unformat(e25) {
  return +(n22._.stringToNumber(e25) * 1e-4).toFixed(15);
} });
var y11 = { base: 1e3, suffixes: ["B", "KB", "MB", "GB", "TB", "PB", "EB", "ZB", "YB"] };
var M4 = { base: 1024, suffixes: ["B", "KiB", "MiB", "GiB", "TiB", "PiB", "EiB", "ZiB", "YiB"] };
var z5 = y11.suffixes.concat(M4.suffixes.filter(function(e25) {
  return y11.suffixes.indexOf(e25) < 0;
}));
var P2 = z5.join("|");
P2 = `(${P2.replace("B", "B(?!PS)")})`;
n22.register("format", "bytes", { regexps: { format: /([0\s]i?b)/, unformat: new RegExp(P2) }, format(e25, t16, i25) {
  let l25, r18 = n22._.includes(t16, "ib") ? M4 : y11, o21 = n22._.includes(t16, " b") || n22._.includes(t16, " ib") ? " " : "", a19, s20, f25;
  for (t16 = t16.replace(/\s?i?b/, ""), a19 = 0; a19 <= r18.suffixes.length; a19++)
    if (s20 = Math.pow(r18.base, a19), f25 = Math.pow(r18.base, a19 + 1), e25 === null || e25 === 0 || e25 >= s20 && e25 < f25) {
      o21 += r18.suffixes[a19], s20 > 0 && (e25 = e25 / s20);
      break;
    }
  return l25 = n22._.numberToFormat(e25, t16, i25), l25 + o21;
}, unformat(e25) {
  let t16 = n22._.stringToNumber(e25), i25, l25;
  if (t16) {
    for (i25 = y11.suffixes.length - 1; i25 >= 0; i25--) {
      if (n22._.includes(e25, y11.suffixes[i25])) {
        l25 = Math.pow(y11.base, i25);
        break;
      }
      if (n22._.includes(e25, M4.suffixes[i25])) {
        l25 = Math.pow(M4.base, i25);
        break;
      }
    }
    t16 *= l25 || 1;
  }
  return t16;
} });
n22.register("format", "currency", { regexps: { format: /(\$)/ }, format(e25, t16, i25) {
  let l25 = n22.locales[n22.options.currentLocale], r18 = { before: t16.match(/^([\+|\-|\(|\s|\$]*)/)[0], after: t16.match(/([\+|\-|\)|\s|\$]*)$/)[0] }, o21, a19, s20;
  for (t16 = t16.replace(/\s?\$\s?/, ""), o21 = n22._.numberToFormat(e25, t16, i25), e25 >= 0 ? (r18.before = r18.before.replace(/[\-\(]/, ""), r18.after = r18.after.replace(/[\-\)]/, "")) : e25 < 0 && !n22._.includes(r18.before, "-") && !n22._.includes(r18.before, "(") && (r18.before = `-${r18.before}`), s20 = 0; s20 < r18.before.length; s20++)
    switch (a19 = r18.before[s20], a19) {
      case "$":
        o21 = n22._.insert(o21, l25.currency.symbol, s20);
        break;
      case " ":
        o21 = n22._.insert(o21, " ", s20 + l25.currency.symbol.length - 1);
        break;
    }
  for (s20 = r18.after.length - 1; s20 >= 0; s20--)
    switch (a19 = r18.after[s20], a19) {
      case "$":
        o21 = s20 === r18.after.length - 1 ? o21 + l25.currency.symbol : n22._.insert(o21, l25.currency.symbol, -(r18.after.length - (1 + s20)));
        break;
      case " ":
        o21 = s20 === r18.after.length - 1 ? `${o21} ` : n22._.insert(o21, " ", -(r18.after.length - (1 + s20) + l25.currency.symbol.length - 1));
        break;
    }
  return o21;
} });
n22.register("format", "exponential", { regexps: { format: /(e\+|e-)/, unformat: /(e\+|e-)/ }, format(e25, t16, i25) {
  let l25, o21 = (typeof e25 == "number" && !Number.isNaN(e25) ? e25.toExponential() : "0e+0").split("e");
  return t16 = t16.replace(/e[\+|\-]{1}0/, ""), l25 = n22._.numberToFormat(Number(o21[0]), t16, i25), `${l25}e${o21[1]}`;
}, unformat(e25) {
  let t16 = n22._.includes(e25, "e+") ? e25.split("e+") : e25.split("e-"), i25 = Number(t16[0]), l25 = Number(t16[1]);
  l25 = n22._.includes(e25, "e-") ? l25 *= -1 : l25;
  function r18(o21, a19, s20, f25) {
    let c23 = n22._.correctionFactor(o21, a19);
    return o21 * c23 * (a19 * c23) / (c23 * c23);
  }
  __name(r18, "r");
  return [i25, Math.pow(10, l25)].reduce(r18, 1);
} });
n22.register("format", "ordinal", { regexps: { format: /(o)/ }, format(e25, t16, i25) {
  let l25 = n22.locales[n22.options.currentLocale], r18, o21 = n22._.includes(t16, " o") ? " " : "";
  return t16 = t16.replace(/\s?o/, ""), o21 += l25.ordinal(e25), r18 = n22._.numberToFormat(e25, t16, i25), r18 + o21;
} });
n22.register("format", "percentage", { regexps: { format: /(%)/, unformat: /(%)/ }, format(e25, t16, i25) {
  let l25 = n22._.includes(t16, " %") ? " " : "", r18;
  return n22.options.scalePercentBy100 && (e25 = e25 * 100), t16 = t16.replace(/\s?\%/, ""), r18 = n22._.numberToFormat(e25, t16, i25), n22._.includes(r18, ")") ? (r18 = r18.split(""), r18.splice(-1, 0, `${l25}%`), r18 = r18.join("")) : r18 = `${r18 + l25}%`, r18;
}, unformat(e25) {
  let t16 = n22._.stringToNumber(e25);
  return n22.options.scalePercentBy100 ? t16 * 0.01 : t16;
} });
n22.register("format", "time", { regexps: { format: /(:)/, unformat: /(:)/ }, format(e25, t16, i25) {
  let l25 = Math.floor(e25 / 60 / 60), r18 = Math.floor((e25 - l25 * 60 * 60) / 60), o21 = Math.round(e25 - l25 * 60 * 60 - r18 * 60);
  return `${l25}:${r18 < 10 ? `0${r18}` : r18}:${o21 < 10 ? `0${o21}` : o21}`;
}, unformat(e25) {
  let t16 = e25.split(":"), i25 = 0;
  return t16.length === 3 ? (i25 = i25 + Number(t16[0]) * 60 * 60, i25 = i25 + Number(t16[1]) * 60, i25 = i25 + Number(t16[2])) : t16.length === 2 && (i25 = i25 + Number(t16[0]) * 60, i25 = i25 + Number(t16[1])), Number(i25);
} });

// node_modules/@patternfly/pfe-number/pfe-number.js
var c19 = Object.defineProperty;
var h21 = Object.getOwnPropertyDescriptor;
var n23 = /* @__PURE__ */ __name((l25, a19, e25, s20) => {
  for (var r18 = s20 > 1 ? void 0 : s20 ? h21(a19, e25) : a19, i25 = l25.length - 1, o21; i25 >= 0; i25--)
    (o21 = l25[i25]) && (r18 = (s20 ? o21(a19, e25, r18) : o21(r18)) || r18);
  return s20 && r18 && c19(a19, e25, r18), r18;
}, "n");
var f21 = i`:host{display:inline;white-space:nowrap}`;
var m24 = f21;
n22.locales.en.delimiters.thousands = "\u202F";
var t13 = /* @__PURE__ */ __name(class extends s4 {
  constructor() {
    super(...arguments);
    this.type = "NONE";
  }
  static get types() {
    return { abbrev: "0a", ordinal: "0o", percent: "0%", bytes: "0[.][00] ib", e: "0[.00]e+0", thousands: "0,0[.][00]", NONE: void 0 };
  }
  connectedCallback() {
    super.connectedCallback(), this._setInitialNumber();
  }
  render() {
    return y`<span>${this.formatted}</span>`;
  }
  _updateNumber() {
    Number.isNaN(this.number) ? (this.textContent = "", this.formatted = "") : (this.textContent = this.number?.toString() ?? "", this.format = t13.types[this.type ?? "NONE"], this.formatted = this._format());
  }
  _setInitialNumber() {
    let e25 = parseFloat(this.textContent ?? "");
    Number.isNaN(e25) || (this.number = e25);
  }
  _format(e25 = this.number, s20 = this.format) {
    return e25 == null ? "" : n22(e25).format(s20);
  }
}, "t");
t13.version = "2.0.0-next.3", t13.styles = [m24], n23([p3("_updateNumber"), e5({ type: Number, reflect: true })], t13.prototype, "number", 2), n23([p3("_updateNumber"), e5({ type: String, reflect: true })], t13.prototype, "type", 2), n23([e5({ reflect: true })], t13.prototype, "format", 2), n23([t3()], t13.prototype, "formatted", 2), t13 = n23([e4("pfe-number"), d4()], t13);

// node_modules/@patternfly/pfe-page-status/node_modules/lit/index.js
init_reactive_element();
init_lit_html();
init_lit_element();

// node_modules/@patternfly/pfe-page-status/node_modules/lit/decorators.js
init_custom_element();
init_property();
init_state();
init_event_options();
init_query();
init_query_all();
init_query_async();
init_query_assigned_elements();
init_query_assigned_nodes();

// node_modules/@patternfly/pfe-page-status/pfe-page-status.js
init_decorators();
var p18 = Object.defineProperty;
var i23 = Object.getOwnPropertyDescriptor;
var n24 = /* @__PURE__ */ __name((a19, o21, s20, r18) => {
  for (var t16 = r18 > 1 ? void 0 : r18 ? i23(o21, s20) : o21, f25 = a19.length - 1, c23; f25 >= 0; f25--)
    (c23 = a19[f25]) && (t16 = (r18 ? c23(o21, s20, t16) : c23(t16)) || t16);
  return r18 && t16 && p18(o21, s20, t16), t16;
}, "n");
var u19 = i`:host{background-color:var(--pfe-status--BackgroundColor,var(--pfe-theme--color--feedback--default,#4f5255));position:fixed;right:var(--pfe-status--Right,0);top:0;height:100vh;display:flex;flex-direction:column;justify-content:center;align-items:center;width:3rem}:host([hidden]){display:none}#flag{transform:rotateZ(90deg)}#flag>span{color:var(--pfe-status--Color,var(--pfe-theme--color--text--on-dark,#fff));display:inline-block;text-transform:var(--pfe-status--TextTransform,uppercase);font-size:.875rem;font-family:var(--pfe-theme--font-family, "Red Hat Text", "RedHatText", "Overpass", Overpass, Arial, sans-serif);font-size:var(--pfe-theme--font-size, 1rem);font-weight:700;line-height:1em;white-space:nowrap}:host([status=important]){--pfe-status--BackgroundColor:var(--pfe-theme--color--feedback--important, #c9190b);--pfe-status--Color:var(--pfe-theme--color--text--on-dark, #fff)}:host([status=critical]){--pfe-status--BackgroundColor:var(--pfe-theme--color--feedback--critical, #a30000);--pfe-status--Color:var(--pfe-theme--color--text--on-dark, #fff)}:host([status=success]){--pfe-status--BackgroundColor:var(--pfe-theme--color--feedback--success, #3e8635);--pfe-status--Color:var(--pfe-theme--color--text--on-dark, #fff)}:host([status=info]){--pfe-status--BackgroundColor:var(--pfe-theme--color--feedback--info, #06c);--pfe-status--Color:var(--pfe-theme--color--text--on-dark, #fff)}:host([status=moderate]),:host([status=warning]){--pfe-status--BackgroundColor:var(--pfe-theme--color--feedback--moderate, #f0ab00);--pfe-status--Color:var(--pfe-theme--color--text, #151515)}:host([status=normal]){--pfe-status--BackgroundColor:var(--pfe-theme--color--ui-accent, #06c);--pfe-status--Color:var(--pfe-theme--color--ui-accent--text, #fff)}:host([status=accent]){--pfe-status--BackgroundColor:var(--pfe-theme--color--ui-accent, #06c);--pfe-status--Color:var(--pfe-theme--color--ui-accent--text, #fff)}`;
var l22 = u19;
var e22 = /* @__PURE__ */ __name(class extends s4 {
  constructor() {
    super(...arguments);
    this.status = "default";
  }
  render() {
    return y`<div id="flag" aria-hidden="true" part="container"><span><slot></slot></span></div>`;
  }
}, "e");
e22.version = "2.0.0-next.4", e22.styles = [l22], n24([e5({ type: String, reflect: true })], e22.prototype, "status", 2), e22 = n24([e4("pfe-page-status"), d4()], e22);

// node_modules/@patternfly/pfe-select/node_modules/lit/index.js
init_reactive_element();
init_lit_html();
init_lit_element();

// node_modules/@patternfly/pfe-select/node_modules/lit/decorators.js
init_custom_element();
init_property();
init_state();
init_event_options();
init_query();
init_query_all();
init_query_async();
init_query_assigned_elements();
init_query_assigned_nodes();

// node_modules/@patternfly/pfe-select/pfe-select.js
init_core();
init_decorators();
init_logger();
var f22 = Object.defineProperty;
var m25 = Object.getOwnPropertyDescriptor;
var l23 = /* @__PURE__ */ __name((i25, a19, e25, t16) => {
  for (var r18 = t16 > 1 ? void 0 : t16 ? m25(a19, e25) : a19, n25 = i25.length - 1, s20; n25 >= 0; n25--)
    (s20 = i25[n25]) && (r18 = (t16 ? s20(a19, e25, r18) : s20(r18)) || r18);
  return t16 && r18 && f22(a19, e25, r18), r18;
}, "l");
var u20 = i`:host{position:relative;display:inline-block;width:100%;line-height:1.5em;font-weight:400;text-align:left;text-rendering:optimizelegibility;border-top:var(--pfe-select--BorderTop,var(--pfe-select--BorderWidth,var(--pfe-theme--ui--border-width,1px)) var(--pfe-theme--ui--border-style,solid) var(--pfe-select--BorderColor,var(--pfe-theme--color--surface--lighter,#f0f0f0)));border-right:var(--pfe-select--BorderRight,var(--pfe-select--BorderWidth,var(--pfe-theme--ui--border-width,1px)) var(--pfe-theme--ui--border-style,solid) var(--pfe-select--BorderColor,var(--pfe-theme--color--surface--lighter,#f0f0f0)));border-bottom:var(--pfe-select--BorderBottom,var(--pfe-select--BorderBottomWidth,var(--pfe-theme--ui--border-width,1px)) var(--pfe-theme--ui--border-style,solid) var(--pfe-select--BorderBottomColor,var(--pfe-theme--color--surface--darker,#3c3f42)));border-left:var(--pfe-select--BorderLeft,var(--pfe-select--BorderWidth,var(--pfe-theme--ui--border-width,1px)) var(--pfe-theme--ui--border-style,solid) var(--pfe-select--BorderColor,var(--pfe-theme--color--surface--lighter,#f0f0f0)));background-color:var(--pfe-select--BackgroundColor,var(--pfe-theme--color--surface--lightest,#fff));color:var(--pfe-select--Color,var(--pfe-theme--color--text,#151515))}:host *,:host ::after,:host ::before{box-sizing:border-box}:host::after{border-style:var(--pfe-theme--surface--border-style,solid);border-width:6px 6px 0;border-color:transparent;border-top-color:#3c3f42;display:inline-block;content:"";position:absolute;pointer-events:none;top:calc(var(--pfe-theme--container-padding,1rem) * .875);right:calc(var(--pfe-theme--container-padding,1rem) * .75)}:host([hidden]){display:none}:host(:hover){border-bottom:var(--pfe-select--BorderBottom--hover,var(--pfe-select--BorderBottomWidth,var(--pfe-theme--ui--border-width,1px)) var(--pfe-theme--ui--border-style,solid) var(--pfe-select--BorderBottomColor--hover,var(--pfe-theme--color--link,#06c)))}:host(:focus-within){border-bottom-width:calc(var(--pfe-theme--surface--border-width--heavy,4px)/ 2);border-bottom-color:var(--pfe-select--BorderBottomColor--hover,var(--pfe-theme--color--link,#06c))}:host(:focus-within) ::slotted(select){padding-bottom:calc(var(--pfe-theme-container-padding,1rem) * .438)}:host ::slotted(select){text-rendering:auto!important;background-color:var(--pfe-select--BackgroundColor,var(--pfe-theme--color--surface--lightest,#fff));color:var(--pfe-select--Color,var(--pfe-theme--color--text,#151515));border-radius:0;width:100%;min-width:100%;font-size:var(--pfe-theme--font-size, 1rem);font-weight:var(--pfe-theme--font-weight--normal,400);font-family:var(--pfe-select--FontFamily, var(--pfe-theme--font-family, "Red Hat Text", "RedHatText", "Overpass", Overpass, Arial, sans-serif));appearance:none;box-shadow:none;border:none;padding:calc(var(--pfe-theme--container-padding,1rem) * .5);padding-right:calc(var(--pfe-theme--container-padding,1rem) * 1.5)}:host([invalid]){border-bottom-width:calc(var(--pfe-theme--surface--border-width--heavy,4px)/ 2);border-bottom-color:var(--pfe-select--BorderBottomColor--error,var(--pfe-theme--color--feedback--critical,#a30000))}:host([invalid]) ::slotted(select){padding-bottom:calc(var(--pfe-theme--container-padding,1rem) * .438);background-image:url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 512 512'%3E%3Cpath fill='%23c9190b' d='M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zm-248 50c-25.405 0-46 20.595-46 46s20.595 46 46 46 46-20.595 46-46-20.595-46-46-46zm-43.673-165.346l7.418 136c.347 6.364 5.609 11.346 11.982 11.346h48.546c6.373 0 11.635-4.982 11.982-11.346l7.418-136c.375-6.874-5.098-12.654-11.982-12.654h-63.383c-6.884 0-12.356 5.78-11.981 12.654z'/%3E%3C/svg%3E");background-size:.875rem;background-repeat:no-repeat;background-position:calc(100% - (var(--pfe-theme--container-padding,1rem) * 2)) center}:host([invalid]){border-bottom-width:calc(var(--pfe-theme--surface--border-width--heavy,4px)/ 2);border-bottom-color:var(--pfe-select--BorderBottomColor--error,var(--pfe-theme--color--feedback--critical,#a30000))}:host([invalid]) ::slotted(select){padding-bottom:calc(var(--pfe-theme--container-padding,1rem) * .438);background-image:url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 512 512'%3E%3Cpath fill='%23c9190b' d='M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zm-248 50c-25.405 0-46 20.595-46 46s20.595 46 46 46 46-20.595 46-46-20.595-46-46-46zm-43.673-165.346l7.418 136c.347 6.364 5.609 11.346 11.982 11.346h48.546c6.373 0 11.635-4.982 11.982-11.346l7.418-136c.375-6.874-5.098-12.654-11.982-12.654h-63.383c-6.884 0-12.356 5.78-11.981 12.654z'/%3E%3C/svg%3E");background-size:.875rem;background-repeat:no-repeat;background-position:calc(100% - (var(--pfe-theme--container-padding,1rem) * 2)) center}`;
var c20 = u20;
var O3 = /* @__PURE__ */ __name((i25) => !!i25.selected, "O");
var d15 = /* @__PURE__ */ __name(class extends n6 {
  constructor(e25) {
    super("select");
    this.value = e25;
  }
}, "d");
var o19 = /* @__PURE__ */ __name(class extends s4 {
  constructor() {
    super(...arguments);
    this.invalid = false;
    this.logger = new n7(this);
    this._options = null;
  }
  get value() {
    return this._input?.value ?? "";
  }
  set value(e25) {
    this._input && (this._input.value = e25);
  }
  get pfeOptions() {
    return this.options ?? null;
  }
  set pfeOptions(e25) {
    this.options = e25;
  }
  get _input() {
    return this.querySelector("select");
  }
  connectedCallback() {
    super.connectedCallback(), this.options && this._modifyDOM();
  }
  render() {
    return y`<slot></slot>`;
  }
  _optionsChanged(e25, t16) {
    this._options = (t16?.filter(O3)?.length ?? 0) < 1 ? t16 : this._handleMultipleSelectedValues(t16 ?? []), this._modifyDOM();
  }
  disconnectedCallback() {
    super.disconnectedCallback(), this._input && this._input.removeEventListener("input", this._inputChanged);
  }
  _init() {
    if (!this._input) {
      this.logger.warn("The first child needs to be a select element");
      return;
    }
    this._input.addEventListener("change", this._inputChanged);
  }
  _invalidChanged(e25, t16) {
    this.querySelector("select")?.setAttribute("aria-invalid", String(!!t16));
  }
  _handleMultipleSelectedValues(e25) {
    this.logger.warn("The first 'selected' option will take precedence over others in case of multiple 'selected' options");
    let t16 = e25.findIndex((r18) => r18.selected);
    return e25.forEach((r18, n25) => {
      r18.selected = t16 === n25;
    }), e25;
  }
  _inputChanged() {
    let { value: e25 } = this;
    this.dispatchEvent(new d15(e25)), this.dispatchEvent(n14("pfe-select:change", { value: e25 }));
  }
  _modifyDOM() {
    let e25 = document.createElement("select");
    for (let t16 of this.options ?? [])
      e25.add(Object.assign(document.createElement("option"), t16), null);
    this._input ? this._input.parentNode?.replaceChild(e25, this._input) : this.appendChild(e25);
  }
  addOptions(e25) {
    this.options = this._options ? this._options.concat(e25) : e25;
  }
}, "o");
o19.version = "2.0.0-next.5", o19.styles = [c20], l23([p3, e5({ type: Boolean, reflect: true })], o19.prototype, "invalid", 2), l23([p3, e5({ attribute: false })], o19.prototype, "options", 2), l23([c6({ emptyWarning: "The first child in the light DOM must be a supported select tag" })], o19.prototype, "_init", 1), l23([o8], o19.prototype, "_inputChanged", 1), o19 = l23([e4("pfe-select"), d4()], o19);

// node_modules/@patternfly/pfe-tabs/node_modules/lit/index.js
init_reactive_element();
init_lit_html();
init_lit_element();

// node_modules/@patternfly/pfe-tabs/node_modules/lit/decorators.js
init_custom_element();
init_property();
init_state();
init_event_options();
init_query();
init_query_all();
init_query_async();
init_query_assigned_elements();
init_query_assigned_nodes();

// node_modules/@patternfly/pfe-tabs/pfe-tabs.js
init_decorators();
init_logger();

// node_modules/@patternfly/pfe-tabs/pfe-tab.js
init_decorators();
init_random();
init_logger();
var c21 = Object.defineProperty;
var p19 = Object.getOwnPropertyDescriptor;
var o20 = /* @__PURE__ */ __name((i25, s20, r18, a19) => {
  for (var e25 = a19 > 1 ? void 0 : a19 ? p19(s20, r18) : s20, d17 = i25.length - 1, n25; d17 >= 0; d17--)
    (n25 = i25[d17]) && (e25 = (a19 ? n25(s20, r18, e25) : n25(e25)) || e25);
  return a19 && e25 && c21(s20, r18, e25), e25;
}, "o");
var v12 = i`:host{text-align:left;position:relative;display:block;cursor:pointer;margin:var(--pfe-tabs__tab--Margin,0 0 calc(var(--pfe-theme--ui--border-width,1px) * -1));padding:var(--pfe-tabs__tab--PaddingTop,var(--pfe-theme--container-padding,1rem)) var(--pfe-tabs__tab--PaddingRight,calc(var(--pfe-theme--container-padding,1rem) * 2)) var(--pfe-tabs__tab--PaddingBottom,var(--pfe-theme--container-padding,1rem)) var(--pfe-tabs__tab--PaddingLeft,calc(var(--pfe-theme--container-padding,1rem) * 2));border-style:var(--pfe-theme--ui--border-style,solid);border-width:var(--pfe-theme--ui--border-width,1px);border-color:transparent;border-bottom-width:var(--pfe-tabs--BorderWidth,var(--pfe-theme--ui--border-width--active,3px));background-color:var(--pfe-tabs--BackgroundColor--inactive,none);text-align:var(--pfe-tabs__tab--TextAlign,center);text-transform:var(--pfe-tabs__tab--TextTransform,none);color:var(--pfe-tabs--Color,var(--pfe-theme--color--text--muted,#6a6e73));font-size:var(--pfe-tabs__tab--FontSize, var(--pf-global--FontSize--md, 1rem));font-family:var(--pfe-tabs__tab--LineHeight, var(--pfe-theme--font-family, "Red Hat Text", "RedHatText", "Overpass", Overpass, Arial, sans-serif));line-height:var(--pfe-tabs__tab--LineHeight, var(--pfe-theme--line-height, 1.5));font-weight:var(--pfe-tabs__tab--FontWeight,var(--pfe-theme--font-weight--normal,400));--pf-c--FontSize:var(--pfe-tabs--FontSize)}:host #tab{display:inline-flex;align-items:center;height:100%}:host #tab *{font-size:inherit;font-weight:inherit;color:inherit;margin:0}:host([aria-selected=true]){background-color:var(--pfe-tabs--BackgroundColor,transparent);border-bottom-color:var(--pfe-tabs--BorderColor,var(--pfe-theme--color--ui-accent,#06c))}:host([aria-selected=true]) #tab *{color:var(--pfe-tabs--Color--focus)}:host(:active),:host(:hover){background-color:var(--pfe-tabs--BackgroundColor,transparent);border-bottom-color:var(--pfe-tabs--BorderColor--hover,#b8bbbe)}:host(:active) #tab *,:host(:hover) #tab *{color:var(--pfe-tabs--Color--focus)}@media screen and (min-width:768px){:host([vertical]){border-bottom-color:transparent;border-bottom-width:0;border-left-color:var(--pfe-theme--color--surface--border,#d2d2d2);border-left-width:var(--pfe-theme--ui--border-width,1px);padding:var(--pfe-theme--container-padding,1rem);--pfe-tabs--Margin:0 calc(var(--pfe-theme--ui--border-width, 1px) * -1) 0 0}:host([vertical][aria-selected=true]){border-left-color:var(--pfe-tabs--BorderColor,var(--pfe-theme--color--ui-accent,#06c));border-left-width:3px}:host([vertical]:not([variant=earth])){border-left:var(--pfe-theme--ui--border-width,1px) var(--pfe-theme--ui--border-style,solid) var(--pfe-theme--color--surface--border,#d2d2d2);text-align:left!important}:host([vertical]:not([variant=earth])[aria-selected=true]){border-right:var(--pfe-tabs--BorderWidth,var(--pfe-theme--ui--border-width--active,3px)) var(--pfe-theme--ui--border-style,solid) transparent;border-left:var(--pfe-tabs--BorderWidth,var(--pfe-theme--ui--border-width--active,3px)) var(--pfe-theme--ui--border-style,solid) var(--pfe-tabs--BorderColor,var(--pfe-theme--color--ui-accent,#06c));padding-left:calc(var(--pfe-theme--container-padding,1rem) - 2px)}:host([vertical]:not([variant=earth])[aria-selected=false]){border-right:var(--pfe-tabs--BorderWidth,var(--pfe-theme--ui--border-width--active,3px)) var(--pfe-theme--ui--border-style,solid) transparent}:host([vertical]:not([variant=earth])[aria-selected=false]:hover){border-right:var(--pfe-tabs--BorderWidth,var(--pfe-theme--ui--border-width--active,3px)) var(--pfe-theme--ui--border-style,solid) transparent;border-bottom:0;border-left:var(--pfe-tabs--BorderWidth,var(--pfe-theme--ui--border-width--active,3px)) var(--pfe-theme--ui--border-style,solid) var(--pfe-tabs--BorderColor--hover,#b8bbbe);padding-left:calc(var(--pfe-theme--container-padding,1rem) - 2px)}}:host(:not([vertical])[variant=earth]:not([aria-selected=true]):first-of-type){border-left-color:transparent}:host(:not([vertical])[variant=earth]:not([aria-selected=true]):last-of-type){border-right-color:transparent}:host([variant=earth][aria-selected=false]){background-color:var(--pfe-tabs--BackgroundColor--inactive,var(--pfe-theme--color--surface--lighter,#f0f0f0));border-color:var(--pfe-theme--color--surface--border,#d2d2d2);border-top-width:var(--pfe-tabs--BorderWidth,var(--pfe-theme--ui--border-width--active,3px));border-top-color:transparent;border-bottom-color:var(--pfe-tabs--BorderColor--hover,#b8bbbe);border-bottom-width:var(--pfe-theme--ui--border-width,1px)}:host([variant=earth][aria-selected=false]:hover){border-top-color:var(--pfe-tabs--BorderColor--hover,#b8bbbe)}:host([variant=earth][aria-selected=true]){background-color:var(--pfe-tabs--BackgroundColor,var(--pfe-theme--color--surface--lightest,#fff));border-bottom:0;border-left-color:var(--pfe-theme--color--surface--border,#d2d2d2);border-right-color:var(--pfe-theme--color--surface--border,#d2d2d2);border-top:solid var(--pfe-tabs--BorderColor,var(--pfe-theme--color--ui-accent,#06c)) var(--pfe-tabs--BorderWidth,var(--pfe-theme--ui--border-width--active,3px))}:host([variant=earth][aria-selected=true]:last-of-type){border-right:var(--pfe-theme--ui--border-width,1px) var(--pfe-theme--ui--border-style,solid) var(--pfe-theme--color--surface--border,#d2d2d2)}@media screen and (min-width:768px){:host([vertical][variant=earth]){border-top:var(--pfe-theme--ui--border-width,1px) var(--pfe-theme--ui--border-style,solid) var(--pfe-theme--color--surface--border,#d2d2d2);border-bottom:var(--pfe-theme--ui--border-width,1px) var(--pfe-theme--ui--border-style,solid) var(--pfe-theme--color--surface--border,#d2d2d2);border-left-width:var(--pfe-theme--ui--border-width--active,3px);text-align:left}:host([vertical][variant=earth][aria-selected=false]:first-of-type){border-top-color:transparent;border-left:var(--pfe-tabs--BorderWidth,var(--pfe-theme--ui--border-width--active,3px)) var(--pfe-theme--ui--border-style,solid) transparent}:host([vertical][variant=earth][aria-selected=false]:last-of-type){border-bottom-color:transparent}:host([vertical][variant=earth][aria-selected=false]){border-right:0;border-bottom-color:transparent;border-left-color:transparent}:host([vertical][variant=earth][aria-selected=false]:hover){border-left-color:var(--pfe-tabs--BorderColor--hover,#b8bbbe);border-top-color:var(--pfe-theme--color--surface--border,#d2d2d2)}:host([vertical][variant=earth][aria-selected=false]:first-of-type:hover){border-left-color:var(--pfe-theme--color--surface--border,#d2d2d2);border-top-color:transparent}:host([vertical][variant=earth][aria-selected=true]){border-top-color:var(--pfe-theme--color--surface--border,#d2d2d2);border-left-color:var(--pfe-tabs--BorderColor,var(--pfe-theme--color--ui-accent,#06c));border-right-color:transparent;margin-right:-1px}}:host([on=dark][variant=earth]){--pfe-tabs--Color:var(--pfe-theme--color--text--on-dark, #fff);--pfe-tabs--Color--focus:var(--pfe-theme--color--text--on-dark, #fff);border-right-color:var(--pfe-theme--color--surface--border--darker,#6a6e73);border-left-color:var(--pfe-theme--color--surface--border--darker,#6a6e73)}:host([on=dark][variant=earth][aria-selected=false]){--pfe-tabs--Color:var(--pfe-theme--color--text--muted--on-dark, #d2d2d2);--pfe-tabs--BackgroundColor--inactive:var(--pfe-theme--color--surface--darker, #3c3f42)}:host([on=dark][variant=earth][aria-selected=true]){--pfe-tabs--Color--focus:var(--pfe-theme--color--text--on-dark, #fff);--pfe-tabs--BackgroundColor:var(--pfe-theme--color--surface--darkest, #151515)}:host([variant=earth][on=saturated]){--pfe-tabs--BackgroundColor:var(--pfe-theme--color--surface--accent, #004080);--pfe-tabs--BackgroundColor--inactive:var(--pfe-theme--color--surface--complement, #002952);border-right-color:var(--pfe-theme--color--surface--border--darker,#6a6e73);border-left-color:var(--pfe-theme--color--surface--border--darker,#6a6e73)}:host([variant=earth][on=saturated][aria-selected=false]){--pfe-tabs--Color:#6a6e73//!important}:host([variant=earth][on=saturated][aria-selected=true]){--pfe-tabs--Color:#151515}:host([variant=earth][on=saturated][aria-selected=false]:hover){--pfe-tabs--BackgroundColor:var(--pfe-theme--color--surface--complement, #002952);--pfe-tabs--Color:#6a6e73//!important}:host([on=saturated]:not([variant=earth])){--pfe-tabs--Color:var(--pfe-theme--color--text--on-saturated, #fff);--pfe-tabs--Color--focus:var(--pfe-theme--color--text--on-saturated, #fff)}:host([on=saturated]:not([variant=earth])[aria-selected=true]){--pfe-tabs--Color--focus:var(--pfe-theme--color--text--on-saturated, #fff);--pfe-tabs--BorderColor:var(--pfe-theme--color--ui-base--on-saturated, #fff)}:host([on=saturated]:not([variant=earth])[aria-selected=false]){--pfe-tabs--Color:var(--pfe-theme--color--text--muted--on-saturated, #d2d2d2)}:host([on=saturated]:not([variant=earth])[aria-selected=false]:hover){--pfe-tabs--BorderColor:var(--pfe-theme--color--surface--border, #d2d2d2)}:host([on=dark]:not([variant=earth])){--pfe-tabs--Color:var(--pfe-theme--color--text--on-dark, #fff);--pfe-tabs--Color--focus:var(--pfe-theme--color--text--on-dark, #fff)}:host([on=dark]:not([variant=earth])[aria-selected=false]){--pfe-tabs--Color:var(--pfe-theme--color--text--muted--on-saturated, #d2d2d2)}:host([on=dark]:not([variant=earth])[aria-selected=false]:hover){--pfe-tabs--BorderColor:var(--pfe-theme--color--surface--lightest, #fff);border-bottom-color:var(--pfe-theme--color--surface--base,#f0f0f0);--pfe-tabs__tab--BorderBottom:var(--pfe-tabs--BorderWidth, var(--pfe-theme--ui--border-width--active, 3px)) var(--pfe-theme--ui--border-style, solid) var(--pfe-theme--color--surface--border, #d2d2d2)}:host([on=dark]:not([variant=earth])[vertical][aria-selected=false]:hover){border-bottom-color:transparent}`;
var f23 = v12;
function E3(i25) {
  return i25 instanceof HTMLElement && i25.tagName === "SLOT";
}
__name(E3, "E");
var t14 = /* @__PURE__ */ __name(class extends s4 {
  constructor() {
    super(...arguments);
    this.selected = "false";
    this.variant = "wind";
    this.logger = new n7(this);
  }
  get tabindex() {
    return this.tabIndex;
  }
  set tabindex(r18) {
    this.tabIndex = r18;
  }
  connectedCallback() {
    super.connectedCallback(), this.setAttribute("role", "tab");
  }
  render() {
    return y`<span id="tab"></span>`;
  }
  _selectedChanged() {
    this.tabIndex = this.selected === "true" ? 0 : -1;
  }
  _init() {
    this._setTabContent(), this.id || (this.id = n11());
  }
  _getTabElement() {
    if (!this.firstElementChild && !this.firstChild) {
      this.logger.warn("No tab content provided");
      return;
    }
    if (this.firstElementChild && this.firstElementChild.tagName)
      if (E3(this.firstElementChild)) {
        let r18 = this.firstElementChild.assignedElements();
        if (r18.length === 0) {
          this.logger.warn("No heading information exists within this slot.");
          return;
        }
        r18.length > 1 && this.logger.warn("Tab heading currently only supports 1 heading tag.");
        let a19 = r18.filter((e25) => e25.tagName.match(/^H[1-6]/) || e25.tagName === "P");
        return a19.length > 0 ? a19[0] : void 0;
      } else {
        if (this.firstElementChild.tagName.match(/^H[1-6]/) || this.firstElementChild.tagName === "P")
          return this.firstElementChild;
        this.logger.warn("Tab heading should contain at least 1 heading tag for correct semantics.");
      }
  }
  async _setTabContent() {
    await this.updateComplete;
    let r18 = "", a19 = "h3", e25 = this._getTabElement();
    if (e25 && (r18 = e25?.textContent?.trim().replace(/\s+/g, " ") ?? "", a19 = e25.tagName.toLowerCase()), e25 || this.textContent?.trim().replace(/\s+/g, " ") && (r18 = this.textContent.trim().replace(/\s+/g, " ")), !r18) {
      this.logger.warn("There does not appear to be any content in the tab region.");
      return;
    }
    let d17 = document.createElement(a19);
    d17.textContent = r18, this._tabItem && (this._tabItem.innerHTML = "", this._tabItem.appendChild(d17));
  }
}, "t");
t14.version = "2.0.0-next.4", t14.styles = [f23], o20([p3, e5({ reflect: true, attribute: "aria-selected" })], t14.prototype, "selected", 2), o20([e5({ reflect: true, attribute: "aria-controls" })], t14.prototype, "controls", 2), o20([e5({ reflect: true })], t14.prototype, "variant", 2), o20([C2(), e5({ reflect: true })], t14.prototype, "on", 2), o20([i4("#tab")], t14.prototype, "_tabItem", 2), o20([c6({ observe: { characterData: true, childList: true, subtree: true } })], t14.prototype, "_init", 1), o20([o8], t14.prototype, "_getTabElement", 1), o20([o8], t14.prototype, "_setTabContent", 1), t14 = o20([e4("pfe-tab"), d4()], t14);

// node_modules/@patternfly/pfe-tabs/pfe-tab-panel.js
init_decorators();
init_random();
var l24 = Object.defineProperty;
var s17 = Object.getOwnPropertyDescriptor;
var a18 = /* @__PURE__ */ __name((i25, o21, d17, n25) => {
  for (var t16 = n25 > 1 ? void 0 : n25 ? s17(o21, d17) : o21, p22 = i25.length - 1, c23; p22 >= 0; p22--)
    (c23 = i25[p22]) && (t16 = (n25 ? c23(o21, d17, t16) : c23(t16)) || t16);
  return n25 && t16 && l24(o21, d17, t16), t16;
}, "a");
var h22 = i`:host{display:block;color:var(--pfe-broadcasted--text,#3c3f42)}:host(:focus){outline:0}:host [tabindex]{display:flex;height:100%}:host .container{margin:0;width:100%;background-color:var(--pfe-tabs__panel--BackgroundColor,transparent);border-top:var(--pfe-tabs__panel--BorderTop,0);border-right:var(--pfe-tabs__panel--BorderRight,0);border-bottom:var(--pfe-tabs__panel--BorderBottom,0);border-left:var(--pfe-tabs__panel--BorderLeft,0);padding-top:var(--pfe-tabs__panel--PaddingTop,calc(var(--pfe-theme--container-padding,1rem) * 3))}@media screen and (min-width:1200px){:host .container{padding-top:var(--pfe-tabs__panel--PaddingTop,calc(var(--pfe-theme--container-padding,1rem) * 3));padding-right:var(--pfe-tabs__panel--PaddingRight,0);padding-bottom:var(--pfe-tabs__panel--PaddingBottom,0);padding-left:var(--pfe-tabs__panel--PaddingLeft,0)}}:host .container::after{clear:both;content:"";display:table}:host([hidden]){display:none}:host([variant=earth]){background-color:var(--pfe-tabs__panel--BackgroundColor,var(--pfe-theme--color--surface--lightest,#fff))}:host([variant=earth]) .container{padding-top:var(--pfe-tabs__panel--PaddingTop,calc(var(--pfe-theme--container-padding,1rem) * 3));padding-right:var(--pfe-tabs__panel--PaddingRight,calc(var(--pfe-theme--container-padding,1rem) * 3));padding-bottom:var(--pfe-tabs__panel--PaddingBottom,calc(var(--pfe-theme--container-padding,1rem) * 3));padding-left:var(--pfe-tabs__panel--PaddingLeft,calc(var(--pfe-theme--container-padding,1rem) * 3))}@media screen and (min-width:768px){:host([variant=wind][vertical]) .container{padding-top:var(--pfe-tabs__panel--PaddingTop,0);padding-bottom:var(--pfe-tabs__panel--PaddingBottom,0);padding-right:var(--pfe-tabs__panel--PaddingRight,0);margin:0 calc(var(--pfe-theme--container-spacer,1rem) - 2px)}:host([variant=earth][vertical]){border-top:var(--pfe-tabs--BorderTop,0);border-left:var(--pfe-tabs--BorderLeft,var(--pfe-theme--ui--border-width,1px) var(--pfe-theme--ui--border-style,solid) var(--pfe-theme--color--surface--border,#d2d2d2));height:100%;background-color:var(--pfe-tabs__panel--BackgroundColor,var(--pfe-theme--color--surface--lightest,#fff))}:host([variant=earth][vertical]) .container{padding-left:var(--pfe-tabs__panel--PaddingLeft,calc(var(--pfe-theme--container-padding,1rem) * 3))}}:host([variant=earth]) .container{padding-top:var(--pfe-tabs__panel--PaddingTop,calc(var(--pfe-theme--container-padding,1rem) * 3));padding-right:var(--pfe-tabs__panel--PaddingRight,calc(var(--pfe-theme--container-padding,1rem) * 3));padding-bottom:var(--pfe-tabs__panel--PaddingBottom,calc(var(--pfe-theme--container-padding,1rem) * 3));padding-left:var(--pfe-tabs__panel--PaddingLeft,calc(var(--pfe-theme--container-padding,1rem) * 3))}:host([on=dark][variant=earth]){background-color:var(--pfe-tabs__panel--BackgroundColor,var(--pfe-theme--color--surface--darkest,#151515));--pfe-broadcasted--text:var(--pfe-theme--color--text--on-dark, #fff);--pfe-broadcasted--text--muted:var(--pfe-theme--color--text--muted--on-dark, #d2d2d2);--pfe-broadcasted--link:var(--pfe-theme--color--link--on-dark, #73bcf7);--pfe-broadcasted--link--hover:var(--pfe-theme--color--link--hover--on-dark, #bee1f4);--pfe-broadcasted--link--focus:var(--pfe-theme--color--link--focus--on-dark, #bee1f4);--pfe-broadcasted--link--visited:var(--pfe-theme--color--link--visited--on-dark, #bee1f4);--pfe-broadcasted--link-decoration:var(--pfe-theme--link-decoration--on-dark, none);--pfe-broadcasted--link-decoration--hover:var(--pfe-theme--link-decoration--hover--on-dark, underline);--pfe-broadcasted--link-decoration--focus:var(--pfe-theme--link-decoration--focus--on-dark, underline);--pfe-broadcasted--link-decoration--visited:var(--pfe-theme--link-decoration--visited--on-dark, none)}:host([on=saturated][variant=earth]){background-color:var(--pfe-tabs__panel--BackgroundColor,var(--pfe-theme--color--surface--accent,#004080));--pfe-broadcasted--text:var(--pfe-theme--color--text--on-saturated, #fff);--pfe-broadcasted--text--muted:var(--pfe-theme--color--text--muted--on-saturated, #d2d2d2);--pfe-broadcasted--link:var(--pfe-theme--color--link--on-saturated, #fff);--pfe-broadcasted--link--hover:var(--pfe-theme--color--link--hover--on-saturated, #fafafa);--pfe-broadcasted--link--focus:var(--pfe-theme--color--link--focus--on-saturated, #fafafa);--pfe-broadcasted--link--visited:var(--pfe-theme--color--link--visited--on-saturated, #d2d2d2);--pfe-broadcasted--link-decoration:var(--pfe-theme--link-decoration--on-saturated, underline);--pfe-broadcasted--link-decoration--hover:var(--pfe-theme--link-decoration--hover--on-saturated, underline);--pfe-broadcasted--link-decoration--focus:var(--pfe-theme--link-decoration--focus--on-saturated, underline);--pfe-broadcasted--link-decoration--visited:var(--pfe-theme--link-decoration--visited--on-saturated, underline)}:host([on=saturated]:not([variant=earth])){--pfe-broadcasted--text:var(--pfe-theme--color--text--on-saturated, #fff);--pfe-broadcasted--text--muted:var(--pfe-theme--color--text--muted--on-saturated, #d2d2d2);--pfe-broadcasted--link:var(--pfe-theme--color--link--on-saturated, #fff);--pfe-broadcasted--link--hover:var(--pfe-theme--color--link--hover--on-saturated, #fafafa);--pfe-broadcasted--link--focus:var(--pfe-theme--color--link--focus--on-saturated, #fafafa);--pfe-broadcasted--link--visited:var(--pfe-theme--color--link--visited--on-saturated, #d2d2d2);--pfe-broadcasted--link-decoration:var(--pfe-theme--link-decoration--on-saturated, underline);--pfe-broadcasted--link-decoration--hover:var(--pfe-theme--link-decoration--hover--on-saturated, underline);--pfe-broadcasted--link-decoration--focus:var(--pfe-theme--link-decoration--focus--on-saturated, underline);--pfe-broadcasted--link-decoration--visited:var(--pfe-theme--link-decoration--visited--on-saturated, underline)}:host([on=dark]:not([variant=earth])){--pfe-broadcasted--text:var(--pfe-theme--color--text--on-dark, #fff);--pfe-broadcasted--text--muted:var(--pfe-theme--color--text--muted--on-dark, #d2d2d2);--pfe-broadcasted--link:var(--pfe-theme--color--link--on-dark, #73bcf7);--pfe-broadcasted--link--hover:var(--pfe-theme--color--link--hover--on-dark, #bee1f4);--pfe-broadcasted--link--focus:var(--pfe-theme--color--link--focus--on-dark, #bee1f4);--pfe-broadcasted--link--visited:var(--pfe-theme--color--link--visited--on-dark, #bee1f4);--pfe-broadcasted--link-decoration:var(--pfe-theme--link-decoration--on-dark, none);--pfe-broadcasted--link-decoration--hover:var(--pfe-theme--link-decoration--hover--on-dark, underline);--pfe-broadcasted--link-decoration--focus:var(--pfe-theme--link-decoration--focus--on-dark, underline);--pfe-broadcasted--link-decoration--visited:var(--pfe-theme--link-decoration--visited--on-dark, none)}`;
var f24 = h22;
var e23 = /* @__PURE__ */ __name(class extends s4 {
  constructor() {
    super(...arguments);
    this.selected = false;
    this.hidden = false;
    this.role = "tabpanel";
    this.tabIndex = 0;
    this.variant = "wind";
  }
  get tabindex() {
    return this.tabIndex;
  }
  set tabindex(d17) {
    this.tabIndex = d17;
  }
  connectedCallback() {
    super.connectedCallback(), this.setAttribute("role", "tabpanel");
  }
  render() {
    return y`<div tabindex="-1" role="tabpanel"><div class="container" part="container"><slot></slot></div></div>`;
  }
  _init() {
    this.id || (this.id = n11()), this.previousElementSibling instanceof t14 && this.previousElementSibling.selected !== "true" && (this.hidden = true);
  }
}, "e");
e23.version = "2.0.0-next.4", e23.styles = [f24], a18([C2(), e5({ reflect: true })], e23.prototype, "on", 2), a18([e5({ type: Boolean, reflect: true, attribute: "aria-selected" })], e23.prototype, "selected", 2), a18([e5({ type: Boolean, reflect: true })], e23.prototype, "hidden", 2), a18([e5({ reflect: true })], e23.prototype, "role", 2), a18([e5({ type: Number })], e23.prototype, "tabIndex", 2), a18([e5({ attribute: "aria-labelledby", reflect: true })], e23.prototype, "labelledby", 2), a18([e5({ reflect: true })], e23.prototype, "variant", 2), a18([c6({ observe: { childList: true, subtree: true } })], e23.prototype, "_init", 1), e23 = a18([e4("pfe-tab-panel"), d4()], e23);

// node_modules/@patternfly/pfe-tabs/pfe-tabs.js
var g11 = Object.defineProperty;
var x9 = Object.getOwnPropertyDescriptor;
var s18 = /* @__PURE__ */ __name((c23, l25, t16, e25) => {
  for (var a19 = e25 > 1 ? void 0 : e25 ? x9(l25, t16) : l25, i25 = c23.length - 1, o21; i25 >= 0; i25--)
    (o21 = c23[i25]) && (a19 = (e25 ? o21(l25, t16, a19) : o21(a19)) || a19);
  return e25 && a19 && g11(l25, t16, a19), a19;
}, "s");
var y12 = i`:host{display:var(--pfe-tabs--Display,block);padding:var(--pfe-tabs--Padding,0)}:host .tabs{display:flex;flex-direction:var(--pfe-tabs__tabs--FlexDirection,row);width:var(--pfe-tabs__tabs--Width,auto);border-top:var(--pfe-tabs__tabs--BorderTop,0);border-right:var(--pfe-tabs__tabs--BorderRight,0);border-bottom:var(--pfe-tabs__tabs--BorderBottom,var(--pfe-theme--ui--border-width,1px) var(--pfe-theme--ui--border-style,solid) var(--pfe-tabs__tabs--BorderColor,var(--pfe-theme--color--surface--border,#d2d2d2)));border-left:var(--pfe-tabs__tabs--BorderLeft,0);padding:var(--pfe-tabs__tabs--Padding,0)}:host .panels{width:var(--pfe-tabs__panels--Width,auto)}:host(:not([vertical])[tab-align=center]) .tabs{justify-content:center}@media screen and (min-width:768px){:host([vertical]){--pfe-tabs--Display:flex;--pfe-tabs__tabs--FlexDirection:column;--pfe-tabs__tabs--Width:20%;--pfe-tabs__tabs--BorderRight:var(--pfe-theme--ui--border-width, 1px) var(--pfe-theme--ui--border-style, solid) var(--pfe-tabs--BorderColor);--pfe-tabs__tabs--BorderBottom:0;--pfe-tabs__panels--Width:80%;--pfe-tabs__panels--PaddingRight:var(--pfe-theme--container-padding, 1rem)}}:host([variant=earth]){--pfe-tabs__tabs--PaddingLeft:var(--pfe-theme--container-padding, 1rem)}:host([vertical]) .tabs-prefix,:host([vertical]) .tabs-suffix{left:0;top:0;content:" ";height:calc(var(--pfe-theme--container-padding,1rem) * 2);width:1px;position:relative}@media screen and (min-width:768px){:host([vertical]:not([variant=earth])) .tabs-prefix,:host([vertical]:not([variant=earth])) .tabs-suffix{background-color:var(--pfe-tabs__tabs--BorderColor,var(--pfe-theme--color--surface--border,#d2d2d2))}}:host(:not([vertical])[variant=earth]) .tabs-prefix{left:0;top:0;content:" ";height:1px;width:var(--pfe-theme--container-padding,1rem);position:relative}@media screen and (min-width:768px){:host(:not([vertical])[variant=earth]) .tabs-prefix{width:calc(var(--pfe-theme--container-padding,1rem) * 2)}}:host([hidden]){display:none}`;
var b14 = y12;
var r17 = /* @__PURE__ */ __name(class extends s4 {
  constructor() {
    super(...arguments);
    this.logger = new n7(this);
    this._linked = false;
    this._updateHistory = true;
    this._setFocus = false;
    this.variant = "wind";
    this.vertical = false;
    this.selectedIndex = 0;
    this.orientation = "horizontal";
    this.tabHistory = false;
    this.role = "tablist";
  }
  connectedCallback() {
    super.connectedCallback(), this.addEventListener("keydown", this._onKeyDown), this.addEventListener("click", this._onClick);
  }
  render() {
    return y`<div class="tabs" part="tabs"><div class="tabs-prefix"></div><slot name="tab"></slot><div class="tabs-suffix"></div></div><div class="panels" part="panels"><slot name="panel"></slot></div>`;
  }
  disconnectedCallback() {
    super.disconnectedCallback(), this.removeEventListener("keydown", this._onKeyDown), this._allTabs().forEach((t16) => t16.removeEventListener("click", this._onClick)), this.tabHistory && window.removeEventListener("popstate", this._popstateEventHandler);
  }
  _verticalChanged() {
    this.vertical ? this.orientation = "vertical" : this.orientation = "horizontal";
  }
  async _selectedIndexChanged(t16, e25) {
    e25 != null && t16 !== e25 && (await this.updateComplete, this._linkPanels(), this.selectIndex(e25), this._updateHistory = true);
  }
  _tabHistoryChanged() {
    this.tabHistory ? window.addEventListener("popstate", this._popstateEventHandler) : window.removeEventListener("popstate", this._popstateEventHandler);
  }
  async _init() {
    await this.updateComplete;
    let t16 = this._getTabIndexFromURL();
    this._linked = false, this._linkPanels(), this.role = "tablist", t16 > -1 && (this._setFocus = true, this.selectedIndex = t16);
  }
  _linkPanels() {
    this._linked || (this.updateAccessibility(), this._linked = true);
  }
  _allPanels() {
    return [...this.children].filter((t16) => t16.matches("pfe-tab-panel"));
  }
  _allTabs() {
    return [...this.children].filter((t16) => t16.matches("pfe-tab"));
  }
  _panelForTab(t16) {
    if (!t16 || !t16.controls)
      return null;
    let e25 = this.querySelector(`#${t16.controls}`);
    return e25 instanceof e23 ? e25 : null;
  }
  _prevTab() {
    let t16 = this._allTabs(), e25 = t16.findIndex((a19) => a19.selected === "true") - 1;
    return t16[(e25 + t16.length) % t16.length];
  }
  _firstTab() {
    return this._allTabs()[0];
  }
  _lastTab() {
    let t16 = this._allTabs();
    return t16[t16.length - 1];
  }
  _nextTab() {
    let t16 = this._allTabs(), e25 = t16.findIndex((a19) => a19.selected === "true") + 1;
    return t16[e25 % t16.length];
  }
  _getTabIndex(t16) {
    return t16 instanceof t14 ? this._allTabs().findIndex((a19) => a19.id === t16.id) : (this.logger.warn("No tab was provided to _getTabIndex; required to return the index value."), 0);
  }
  _selectTab(t16) {
    if (!t16)
      return;
    this.reset();
    let e25 = this._panelForTab(t16), a19 = false;
    e25 || this.logger.warn(`No panel was found for the selected tab${t16.id ? `: pfe-tab#${t16.id}` : ""}`), this.selected && this.selected !== t16 && (a19 = true, this.dispatchEvent(n14("pfe-tabs:hidden-tab", { tab: this.selected }))), t16.selected = "true", e25 && (e25.hidden = false), this.selected = t16, a19 && (this._setFocus && t16.focus(), this.dispatchEvent(n14("pfe-tabs:shown-tab", { tab: this.selected }))), this._setFocus = false;
  }
  _onKeyDown(t16) {
    if (!this._allTabs().find((o21) => o21 === t16.target) || t16.altKey)
      return;
    let i25;
    switch (t16.key) {
      case "ArrowLeft":
      case "ArrowUp":
        i25 = this._prevTab();
        break;
      case "ArrowRight":
      case "ArrowDown":
        i25 = this._nextTab();
        break;
      case "Home":
        i25 = this._firstTab();
        break;
      case "End":
        i25 = this._lastTab();
        break;
      default:
        return;
    }
    t16.preventDefault(), i25 ? (this.selectedIndex = this._getTabIndex(i25), this._setFocus = true) : this.logger.warn("No new tab could be found.");
  }
  _onClick(t16) {
    !this._allTabs().find((a19) => a19 === t16.currentTarget) || (this.selectedIndex = this._getTabIndex(t16.currentTarget));
  }
  _getTabIndexFromURL() {
    let t16 = new URLSearchParams(window.location.search), e25 = t16.has(this.id);
    if (t16 && e25) {
      let a19 = t16.get(this.id);
      return this._allTabs().findIndex((i25) => i25.id === a19);
    }
    return -1;
  }
  _popstateEventHandler() {
    let t16 = this._getTabIndexFromURL();
    this._updateHistory = false, t16 > -1 && (this.selectedIndex = t16);
  }
  select(t16) {
    if (!(t16 instanceof t14)) {
      this.logger.warn("the tab must be a pfe-tab element");
      return;
    }
    this.selectedIndex = this._getTabIndex(t16);
  }
  selectIndex(t16) {
    if (t16 == null)
      return;
    let e25 = typeof t16 == "string" ? parseInt(t16, 10) : t16, a19 = this._allTabs(), i25 = a19[e25];
    if (a19.length > 0 && !i25) {
      this.logger.warn(`tab ${t16} does not exist`);
      return;
    } else if (!a19 && !i25)
      return;
    if (this.selected && this.tabHistory && this._updateHistory) {
      let { pathname: o21 } = window.location, p22 = new URLSearchParams(window.location.search), { hash: m26 } = window.location;
      p22.set(this.id, i25.id), history.pushState({}, "", `${o21}?${p22.toString()}${m26}`);
    }
    return this._selectTab(i25), i25;
  }
  reset() {
    let t16 = this._allTabs(), e25 = this._allPanels();
    t16.forEach((a19) => a19.selected = "false"), e25.forEach((a19) => a19.hidden = true);
  }
  updateAccessibility() {
    this._allTabs().forEach((t16) => {
      let e25 = t16.nextElementSibling;
      if (!(e25 instanceof e23)) {
        this.logger.warn("not a sibling of a <pfe-tab-panel>");
        return;
      }
      t16.controls = e25.id, e25.labelledby = t16.id, t16.addEventListener("click", this._onClick);
    });
  }
}, "r");
r17.version = "2.0.0-next.4", r17.styles = [b14], s18([c5(), e5({ reflect: true, attribute: "color-palette" })], r17.prototype, "colorPalette", 2), s18([d3({ alias: "colorPalette", attribute: "color" })], r17.prototype, "color", 2), s18([C2(), e5({ reflect: true })], r17.prototype, "on", 2), s18([s5("pfe-tab", "pfe-tab-panel"), e5({ reflect: true })], r17.prototype, "variant", 2), s18([p3, s5("pfe-tab", "pfe-tab-panel"), e5({ type: Boolean, reflect: true })], r17.prototype, "vertical", 2), s18([p3, e5({ type: Number, reflect: true, attribute: "selected-index" })], r17.prototype, "selectedIndex", 2), s18([e5({ type: String, attribute: "aria-orientation", reflect: true })], r17.prototype, "orientation", 2), s18([e5({ reflect: true })], r17.prototype, "tabAlign", 2), s18([e5({ reflect: true, attribute: "aria-controls" })], r17.prototype, "controls", 2), s18([p3, e5({ type: Boolean, reflect: true, attribute: "tab-history" })], r17.prototype, "tabHistory", 2), s18([e5({ type: Boolean, reflect: true })], r17.prototype, "selected", 2), s18([e5({ reflect: true })], r17.prototype, "role", 2), s18([c6({ observe: { childList: true, subtree: true } })], r17.prototype, "_init", 1), s18([o8], r17.prototype, "_linkPanels", 1), s18([o8], r17.prototype, "_onKeyDown", 1), s18([o8], r17.prototype, "_onClick", 1), s18([o8], r17.prototype, "_popstateEventHandler", 1), r17 = s18([e4("pfe-tabs"), d4()], r17);

// node_modules/@patternfly/pfe-toast/node_modules/lit/index.js
init_reactive_element();
init_lit_html();
init_lit_element();

// node_modules/@patternfly/pfe-toast/node_modules/lit/decorators.js
init_custom_element();
init_property();
init_state();
init_event_options();
init_query();
init_query_all();
init_query_async();
init_query_assigned_elements();
init_query_assigned_nodes();

// node_modules/@patternfly/pfe-toast/node_modules/lit/directives/if-defined.js
init_if_defined();

// node_modules/@patternfly/pfe-toast/pfe-toast.js
init_core();
init_decorators();
var b15 = Object.defineProperty;
var g12 = Object.getOwnPropertyDescriptor;
var i24 = /* @__PURE__ */ __name((a19, r18, s20, t16) => {
  for (var o21 = t16 > 1 ? void 0 : t16 ? g12(r18, s20) : r18, l25 = a19.length - 1, c23; l25 >= 0; l25--)
    (c23 = a19[l25]) && (o21 = (t16 ? c23(r18, s20, o21) : c23(o21)) || o21);
  return t16 && o21 && b15(r18, s20, o21), o21;
}, "i");
var x10 = i`@charset "UTF-8";:host{align-items:stretch;display:flex;flex-flow:row wrap;justify-content:flex-start;position:absolute;right:var(--pfe-toast--Right,calc(-1 * (var(--pfe-toast--MaxWidth,500px) + var(--pfe-toast--Right--offset,50px))));top:var(--pfe-toast--Top,50px);transition:right var(--pfe-theme--animation-speed, .3s) var(--pfe-theme--animation-timing, cubic-bezier(.465, .183, .153, .946));will-change:right;max-width:var(--pfe-toast--MaxWidth,500px);min-width:var(--pfe-toast--MinWidth,250px)}@media only screen and (max-width:575px){:host{max-width:calc(var(--pfe-toast--MaxWidth,500px)/ 2);min-width:calc(var(--pfe-toast--MinWidth,250px)/ 2)}}:host([hidden]){display:none}:host(.open){--pfe-toast--Right:50px}:host(:not(.open)){--pfe-toast--Right:calc(-1 * var(--pfe-toast--MaxWidth, 500px) + var(--pfe-toast--Right--offset, 50px))}::slotted(:first-child){margin-top:0}::slotted(button){background:0 0;border-radius:0;display:inline-block;margin-bottom:0;margin-right:1rem;padding:(.5rem .75rem);text-align:center}.pfe-toast__container{align-self:flex-start;flex:1 1 auto;align-items:flex-start;display:flex;flex-flow:row nowrap;justify-content:flex-start;background-color:var(--pfe-toast__container--BackgroundColor,var(--pfe-theme--color--surface--lightest,#fff));box-shadow:var(--pfe-toast__container--BoxShadow,var(--pfe-theme--box-shadow--lg,0 .1875rem .4375rem .1875rem rgba(3,3,3,.13),0 .6875rem 1.5rem 1rem rgba(3,3,3,.12)));color:var(--pfe-toast__container--Color,var(--pfe-theme--color--text,#151515));padding:var(--pfe-toast__container--Padding,var(--pfe-theme--container-padding,1rem))}.pfe-toast__content{flex:1 1 auto}.pfe-toast__close{flex:0 0 auto;background-color:transparent;border:none;cursor:pointer;margin:0;padding:var(--pfe-toast__close--Padding,var(--pfe-toast__close--PaddingTop,0) var(--pfe-toast__close--PaddingRight,0) var(--pfe-toast__close--PaddingBottom,0) var(--pfe-toast__close--PaddingLeft,0))}.pfe-toast__close>svg{fill:var(--pfe-toast__close--svg--Fill,var(--pfe-theme--color--feedback--default--darkest,#3c3f42));height:var(--pfe-toast__close--svg--Height,12px);width:var(--pfe-toast__close--svg--Width,12px)}.pfe-toast__close:hover>svg{fill:var(--pfe-toast__close--svg--Fill--hover,#333)}`;
var h23 = x10;
var p20 = /* @__PURE__ */ __name(class extends n6 {
  constructor() {
    super("open");
  }
}, "p");
var d16 = /* @__PURE__ */ __name(class extends n6 {
  constructor() {
    super("close");
  }
}, "d");
var e24 = /* @__PURE__ */ __name(class extends s4 {
  constructor() {
    super(...arguments);
    this.closeLabel = "Close";
    this.doesAutoDismiss = !!this.autoDismiss;
    this.isOpen = false;
  }
  static async toast(s20) {
    let t16 = document.createElement("pfe-toast");
    return t16.append(s20), t16.addEventListener("close", () => t16.remove(), { once: true }), document.body.append(t16), t16.open(), await t16.updateComplete, t16;
  }
  connectedCallback() {
    super.connectedCallback(), this.hidden = true, this._setAccessibility(), this.addEventListener("keydown", this._keydownHandler);
  }
  render() {
    return y`<div class="pfe-toast__container" part="container"><div class="pfe-toast__content" part="content"><slot></slot></div><button part="close-button" class="pfe-toast__close" aria-label="${l10(this.closeLabel)}" @click="${this.close}"><svg version="1.1" xmlns="http://www.w3.org/2000/svg" width="32" height="32" viewBox="-11 11 22 23"><path d="M30 16.669v-1.331c0-0.363-0.131-0.675-0.394-0.938s-0.575-0.394-0.938-0.394h-10.669v-10.65c0-0.362-0.131-0.675-0.394-0.938s-0.575-0.394-0.938-0.394h-1.331c-0.363 0-0.675 0.131-0.938 0.394s-0.394 0.575-0.394 0.938v10.644h-10.675c-0.362 0-0.675 0.131-0.938 0.394s-0.394 0.575-0.394 0.938v1.331c0 0.363 0.131 0.675 0.394 0.938s0.575 0.394 0.938 0.394h10.669v10.644c0 0.363 0.131 0.675 0.394 0.938 0.262 0.262 0.575 0.394 0.938 0.394h1.331c0.363 0 0.675-0.131 0.938-0.394s0.394-0.575 0.394-0.938v-10.637h10.669c0.363 0 0.675-0.131 0.938-0.394 0.269-0.262 0.4-0.575 0.4-0.938z" transform="rotate(45)"/></svg></button></div>`;
  }
  disconnectedCallback() {
    super.disconnectedCallback(), this.removeEventListener("keydown", this._keydownHandler);
  }
  _setAccessibility() {
    this.doesAutoDismiss = !!this.autoDismiss, this.doesAutoDismiss ? (this.removeAttribute("aria-label"), this.removeAttribute("aria-describedby"), this.setAttribute("role", "alert"), this.setAttribute("aria-live", "polite"), this.setAttribute("aria-atomic", "true")) : (this.removeAttribute("aria-live"), this.removeAttribute("aria-atomic"), this.setAttribute("role", "alertdialog"), this.hasAttribute("aria-label") || this.setAttribute("aria-label", "Alert dialog"), this.setAttribute("aria-describedby", "pfe-toast__content"));
  }
  _toMilliseconds(s20 = "") {
    let t16 = s20.match(/\d+/) || [8e3];
    return (s20.match(/\D+/) || "")[0] === "s" ? Number(t16[0]) * 1e3 : Number(t16[0]);
  }
  _keydownHandler(s20) {
    let { target: t16 } = s20, { key: o21 } = s20;
    switch (o21) {
      case "Escape":
      case "Esc":
        s20.preventDefault(), this.close();
        break;
      case "Enter":
        t16 === this._toastCloseButton && s20.preventDefault(), this.close();
        break;
      default:
        break;
    }
  }
  open() {
    return this.isOpen = true, this.hidden = false, setTimeout(() => this.classList.add("open"), 500), this.dispatchEvent(new p20()), this.dispatchEvent(n14("pfe-toast:open")), this.doesAutoDismiss && setTimeout(this.close, this._toMilliseconds(this.autoDismiss)), this;
  }
  close() {
    return this.isOpen = false, setTimeout(() => {
      this.classList.remove("open"), this.hidden = true;
    }, 500), this.dispatchEvent(new d16()), this.dispatchEvent(n14("pfe-toast:close")), this;
  }
  toggle() {
    return this.isOpen ? this.close() : this.open(), this;
  }
}, "e");
e24.version = "2.0.0-next.3", e24.styles = [h23], i24([p3("_setAccessibility"), e5({ attribute: "auto-dismiss", reflect: true })], e24.prototype, "autoDismiss", 2), i24([e5({ attribute: "close-label", reflect: true })], e24.prototype, "closeLabel", 2), i24([t3()], e24.prototype, "doesAutoDismiss", 2), i24([t3()], e24.prototype, "isOpen", 2), i24([i4(".pfe-toast__close")], e24.prototype, "_toastCloseButton", 2), i24([o8], e24.prototype, "_keydownHandler", 1), i24([o8], e24.prototype, "open", 1), i24([o8], e24.prototype, "close", 1), i24([o8], e24.prototype, "toggle", 1), e24 = i24([e4("pfe-toast"), d4()], e24);

// node_modules/@patternfly/pfe-tooltip/pfe-tooltip.js
var p21 = Object.defineProperty;
var c22 = Object.getOwnPropertyDescriptor;
var s19 = /* @__PURE__ */ __name((r18, a19, m26, o21) => {
  for (var e25 = o21 > 1 ? void 0 : o21 ? c22(a19, m26) : a19, l25 = r18.length - 1, n25; l25 >= 0; l25--)
    (n25 = r18[l25]) && (e25 = (o21 ? n25(a19, m26, e25) : n25(e25)) || e25);
  return o21 && e25 && p21(a19, m26, e25), e25;
}, "s");
var t15 = /* @__PURE__ */ __name(class extends l18 {
}, "t");
t15.version = "1.1.0-next.0", t15 = s19([e4("pfe-tooltip")], t15);
export {
  AlertCloseEvent,
  m15 as AutocompleteClearEvent,
  _4 as AutocompleteSearchEvent,
  g7 as AutocompleteSelectEvent,
  x5 as AutocompleteShowEvent,
  o as CSSResult,
  ContextProvider,
  s13 as CtaSelectEvent,
  f18 as DropdownChangeEvent,
  s4 as LitElement,
  h10 as ModalCancelEvent,
  g4 as ModalCloseEvent,
  m9 as ModalOpenEvent,
  o11 as PfeAccordion,
  e13 as PfeAutocomplete,
  s11 as PfeAvatar,
  e15 as PfeBadge,
  e16 as PfeCard,
  e17 as PfeCollapse,
  e18 as PfeCta,
  r13 as PfeDatetime,
  r14 as PfeDropdown,
  e19 as PfeHealthIndex,
  e9 as PfeIcon,
  e20 as PfeIconPanel,
  r16 as PfeJumpLinks,
  r15 as PfeJumpLinksNav,
  t12 as PfeJumpLinksPanel,
  i22 as PfeMarkdown,
  t8 as PfeModal,
  t13 as PfeNumber,
  e22 as PfePageStatus,
  o19 as PfeSelect,
  r17 as PfeTabs,
  e24 as PfeToast,
  t15 as PfeTooltip,
  d as ReactiveElement,
  RhAlert,
  RhBlockquote,
  RhCta,
  RhDemo,
  RhDialog,
  RhPagination,
  RhSecondaryNav,
  RhSpinner,
  RhStat,
  RhTag,
  RhTooltip,
  d15 as SelectChangeEvent,
  d16 as ToastCloseEvent,
  p20 as ToastOpenEvent,
  r4 as UpdatingElement,
  h3 as _$LE,
  L as _$LH,
  S as adoptStyles,
  i as css,
  n2 as defaultConverter,
  c as getCompatibleStyle,
  y as html,
  o5 as isServer,
  x as noChange,
  a as notEqual,
  b as nothing,
  Z as render,
  e as supportsAdoptingStyleSheets,
  w as svg,
  r as unsafeCSS
};
/*! For license information please see rhds.min.js.LEGAL.txt */
//# sourceMappingURL=rhds.min.js.map
