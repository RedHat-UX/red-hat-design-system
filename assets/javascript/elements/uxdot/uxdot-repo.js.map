{"version":3,"file":"uxdot-repo.js","sourceRoot":"","sources":["../../../../../uxdot/uxdot-repo.ts"],"names":[],"mappings":"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","sourcesContent":["import { isServer, LitElement } from 'lit';\n\ntype Color = 'purple' | 'green' | 'orange' | 'gray' | 'cyan';\ntype Variant = 'filled' | 'outline';\ntype Icon = string;\n\ntype LibraryKey =\n| 'figma'\n| 'rhds'\n| 'shared'\n| 'docs';\n\ntype StatusKey =\n| 'planned'\n| 'inProgress'\n| 'ready'\n| 'deprecated'\n| 'na'\n| 'beta'\n| 'experimental'\n| 'new';\n\ntype OverallStatusKey =\n| 'ready'\n| 'new'\n| 'planned';\n\ninterface Status {\n  pretty: string;\n  description?: string;\n  color: Color;\n  variant: Variant;\n  icon: string;\n}\n\ninterface LibraryStatus {\n  key: LibraryKey;\n  name: string;\n  status: string;\n}\n\nexport interface TagStatus {\n  tagName: string;\n  name: string;\n  type: string;\n  description?: string;\n  overallStatus: OverallStatusKey;\n  libraries: Record<LibraryKey, StatusKey>;\n}\n\ninterface ComputedLibraryStatus extends LibraryStatus {\n  name: string;\n  color: Color;\n  variant: Variant;\n  icon: Icon;\n  status: string;\n  description: string;\n}\n\nexport interface ComputedTagStatus extends Omit<TagStatus, 'libraries'> {\n  color: Color;\n  variant: Variant;\n  icon: Icon;\n  slug: string;\n  libraries: ComputedLibraryStatus[];\n}\n\nconst repoStatus: TagStatus[] =\n    isServer ? await import('./repoStatus.js').then(x => x.default)\n  : await fetch('/assets/javascript/repoStatus.json').then(x => x.json());\n\nexport class UxdotRepoElement extends LitElement {\n  private static libraries: Record<LibraryKey, string> = {\n    figma: 'Figma library',\n    rhds: 'RH Elements',\n    shared: 'RH Shared Libs',\n    docs: 'Documentation',\n  };\n\n  private static legend: Record<StatusKey, Status> = {\n    planned: {\n      pretty: 'Planned',\n      description: 'Ready to be worked on or ready to be released',\n      color: 'purple',\n      variant: 'filled',\n      icon: 'notification-fill',\n    },\n    inProgress: {\n      pretty: 'In Progress',\n      description: 'In the design or development process',\n      color: 'green',\n      variant: 'outline',\n      icon: 'harvey-ball-50',\n    },\n    ready: {\n      pretty: 'Ready',\n      description: 'Ready to use and approved by all team members',\n      color: 'green',\n      variant: 'filled',\n      icon: 'check-circle-fill',\n    },\n    deprecated: {\n      pretty: 'deprecated',\n      description: 'No longer supported by RHDS',\n      color: 'orange',\n      variant: 'filled',\n      icon: 'close-circle-fill',\n    },\n    na: {\n      pretty: 'N/A',\n      description: 'Not planned, not available, or does not apply',\n      color: 'gray',\n      variant: 'outline',\n      icon: 'ban',\n    },\n    beta: {\n      pretty: 'Beta',\n      color: 'purple',\n      variant: 'outline',\n      icon: 'build-fill',\n    },\n    experimental: {\n      pretty: 'Experimental',\n      color: 'orange',\n      variant: 'outline',\n      icon: 'experimental',\n    },\n    new: {\n      pretty: 'New',\n      color: 'cyan',\n      variant: 'outline',\n      icon: 'new-fill',\n    },\n  };\n\n  private static checklist: Record<LibraryKey, Record<StatusKey, string>> = {\n    figma: {\n      ready: 'Component is available in the Figma library',\n      inProgress: 'Component will be added to the Figma library when finished',\n      planned: 'Component should be added to the Figma library at a later date',\n      deprecated: 'Component was removed from the Figma library',\n      na: 'Not planned, not available, or does not apply',\n      beta: '',\n      experimental: '',\n      new: '',\n    },\n    rhds: {\n      ready: 'Component is available in the RH Elements repo',\n      inProgress: 'Component will be added to the RH Elements repo when finished',\n      planned: 'Component should be added to the RH Elements repo at a later date',\n      deprecated: 'Component is no longer available in the RH Elements repo',\n      na: 'Not planned, not available, or does not apply',\n      beta: '',\n      experimental: '',\n      new: '',\n    },\n    shared: {\n      ready: 'Component is available in the RH Shared Libs repo',\n      inProgress: 'Component will be added to the RH Shared Libs repo when finished',\n      planned: 'Component should be added to the RH Shared Libs repo at a later date',\n      deprecated: 'Component is no longer available in the RH Shared Libs repo',\n      na: 'Not planned, not available, or does not apply',\n      beta: '',\n      experimental: '',\n      new: '',\n    },\n    docs: {\n      ready: '',\n      inProgress: '',\n      planned: '',\n      deprecated: '',\n      na: '',\n      beta: '',\n      experimental: '',\n      new: '',\n    },\n  };\n\n  private static allStatus: ComputedTagStatus[] = repoStatus.map(UxdotRepoElement.getStatus);\n\n  private static getStatus(status: TagStatus) {\n    const libraries = Object.entries(status.libraries) as [LibraryKey, StatusKey][];\n    const overall = UxdotRepoElement.legend[status.overallStatus];\n    return {\n      ...status!,\n      color: overall.color,\n      variant: overall.variant,\n      icon: overall.icon,\n      slug: status.name.toLowerCase().replace(/\\s+/, '-'),\n      libraries: libraries.flatMap(([key, status]) => {\n        const legend = UxdotRepoElement.legend[status];\n        return !legend ? [] : [{\n          key,\n          name: UxdotRepoElement.libraries[key],\n          color: legend.color,\n          variant: legend.variant,\n          icon: legend.icon,\n          status: legend.pretty,\n          description: UxdotRepoElement.checklist[key]?.[status] ?? '',\n        }];\n      }),\n    };\n  }\n\n  getStatus(): ComputedTagStatus[];\n  getStatus(tagName: string): ComputedTagStatus;\n  getStatus(tagName?: string) {\n    if (tagName) {\n      return UxdotRepoElement.allStatus.find(x => x.tagName === tagName);\n    } else {\n      return UxdotRepoElement.allStatus;\n    }\n  }\n}\n"]}