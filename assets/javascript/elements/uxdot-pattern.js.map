{"version":3,"file":"uxdot-pattern.js","sourceRoot":"","sources":["uxdot-pattern.ts"],"names":[],"mappings":"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","sourcesContent":["import { LitElement, html, isServer } from 'lit';\nimport { SlotController } from '@patternfly/pfe-core/controllers/slot-controller.js';\n\nimport { customElement } from 'lit/decorators/custom-element.js';\nimport { property } from 'lit/decorators/property.js';\nimport { classMap } from 'lit/directives/class-map.js';\n\nimport {\n  colorContextProvider,\n  type ColorPalette,\n} from '@rhds/elements/lib/context/color/provider.js';\nimport {\n  colorContextConsumer,\n  type ColorTheme,\n} from '@rhds/elements/lib/context/color/consumer.js';\n\nimport {\n  ColorPaletteListConverter,\n  ContextChangeEvent,\n  paletteNames,\n} from '@rhds/elements/lib/elements/rh-context-picker/rh-context-picker.js';\n\nimport '@rhds/elements/rh-surface/rh-surface.js';\nimport '@rhds/elements/rh-code-block/rh-code-block.js';\nimport '@rhds/elements/lib/elements/rh-context-picker/rh-context-picker.js';\n\nimport styles from './uxdot-pattern.css';\n\n@customElement('uxdot-pattern')\nexport class UxdotPattern extends LitElement {\n  static styles = [styles];\n\n  @colorContextProvider()\n  @property({ reflect: true, attribute: 'color-palette' })\n  colorPalette: ColorPalette = 'lightest';\n\n  @colorContextConsumer() private on?: ColorTheme;\n\n  @property({ reflect: true })\n  target = 'container';\n\n  @property({ type: Boolean })\n  noColorPicker = false;\n\n  @property({ type: Boolean })\n  stacked = false;\n\n  @property({ converter: ColorPaletteListConverter })\n  allow = paletteNames;\n\n  #slots = new SlotController(this, 'html', 'css', 'js');\n\n  render() {\n    const { noColorPicker, stacked, on = 'light' } = this;\n    const hasHtml = this.#slots.hasSlotted('html');\n    const hasCss = this.#slots.hasSlotted('css');\n    const hasJs = this.#slots.hasSlotted('js');\n\n    const target = isServer || (this.target === 'container') ? this.target\n      : (this.getRootNode() as Document).getElementById(this.target);\n    return html`\n      <rh-surface id=\"container\"\n                  part=\"container\"\n                  class=\"${classMap({ on: true, [on]: true, noColorPicker, stacked })}\">\n        <form id=\"color-picker\" @submit=\"${(e: Event) => e.preventDefault()}\">\n          <label for=\"picker\">Color palette</label>\n          <rh-context-picker id=\"picker\"\n                             .target=\"${target}\"\n                             value=\"${this.colorPalette}\"\n                             @change=\"${this.#onChange}\"\n                             .allow=\"${this.allow}\"></rh-context-picker>\n        </form>\n        <div id=\"example\" part=\"example\">\n          <slot name=\"heading\"><h3>Example</h3></slot>\n          <slot></slot>\n        </div>\n        <div id=\"code\">${!hasHtml ? '' : html`\n          <div id=\"html\">\n            <slot name=\"html-heading\"><h3>HTML</h3></slot>\n            <slot name=\"html\"></slot>\n          </div>`}${!hasCss ? '' : html`\n          <div id=\"css\">\n            <slot name=\"css-heading\"><h3>CSS</h3></slot>\n            <slot name=\"css\"></slot>\n          </div>`}${!hasJs ? '' : html`\n          <div id=\"js\">\n            <slot name=\"js-heading\"><h3>JS</h3></slot>\n            <slot name=\"js\"></slot>\n          </div>`}\n        </div>\n      </rh-surface>\n    `;\n  }\n\n  #onChange(event: Event) {\n    if (event instanceof ContextChangeEvent) {\n      this.colorPalette = event.colorPalette;\n    }\n  }\n}\n"]}