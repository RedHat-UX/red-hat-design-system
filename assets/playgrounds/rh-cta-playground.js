document.currentScript.closest('playground-project').config = {
  "files": {
    "demo/index.html": {
      "contentType": "text/html",
      "selected": true,
      "content": "<link rel=\"stylesheet\" href=\"https://static.redhat.com/libs/redhat/redhat-font/4/webfonts/red-hat-font.min.css\">\n<link rel=\"stylesheet\" href=\"https://static.redhat.com/libs/redhat/redhat-theme/6/advanced-theme.css\">\n<link rel=\"stylesheet\" href=\"demo.css\">\n<script type=\"module\" src=\"rh-cta.js\"></script>\n\n<section id=\"variants\">\n  <h2>Variants</h2>\n  <rh-cta><a href=\"#default\">Default</a></rh-cta>\n  <rh-cta icon=\"video\"><a href=\"#default-video\">Default Video</a></rh-cta>\n  <rh-cta variant=\"primary\"><a href=\"#primary\">Primary</a></rh-cta>\n  <rh-cta variant=\"primary\" icon=\"video\"><a href=\"#primary-video\">Video</a></rh-cta>\n  <rh-cta variant=\"secondary\"><a href=\"#secondary\">Secondary</a></rh-cta>\n  <rh-cta variant=\"brick\"><a href=\"#brick\">Brick</a></rh-cta>\n  <rh-cta variant=\"brick\" icon=\"video\"><a href=\"#brick-video\">Brick Video</a></rh-cta>\n</section>\n\n<rh-context-provider id=\"dark\" color-palette=\"darkest\">\n  <h2>Dark Colour Context</h2>\n  <rh-cta><a href=\"#default\">Default</a></rh-cta>\n  <rh-cta icon=\"video\"><a href=\"#default-video\">Default Video</a></rh-cta>\n  <rh-cta variant=\"primary\"><a href=\"#primary\">Primary</a></rh-cta>\n  <rh-cta variant=\"primary\" icon=\"video\"><a href=\"#primary-video\">Video</a></rh-cta>\n  <rh-cta variant=\"secondary\"><a href=\"#secondary\">Secondary</a></rh-cta>\n  <rh-cta variant=\"brick\"><a href=\"#brick\">Brick</a></rh-cta>\n  <rh-cta variant=\"brick\" icon=\"video\"><a href=\"#brick-video\">Brick Video</a></rh-cta>\n</rh-context-provider>\n\n<section dir=\"rtl\">\n  <h2>Right-to-Left Languages</h2>\n  <rh-cta><a href=\"#default\">ברירת מחדל</a></rh-cta>\n  <rh-cta icon=\"video\"><a href=\"#default-video\">ברירת מחדל - וידאו</a></rh-cta>\n  <rh-cta variant=\"primary\"><a href=\"#primary\">ראשי</a></rh-cta>\n  <rh-cta variant=\"primary\" icon=\"video\"><a href=\"#primary-video\">ראשי - וידאו</a></rh-cta>\n  <rh-cta variant=\"secondary\"><a href=\"#secondary\">משני</a></rh-cta>\n  <rh-cta variant=\"brick\"><a href=\"#brick\">לבנה</a></rh-cta>\n  <rh-cta variant=\"brick\" icon=\"video\"><a href=\"#brick-video\">לבנה - וידאו</a></rh-cta>\n</section>\n\n<section dir=\"rtl\">\n  <h2>Deep Shadow RTL</h2>\n  <p dir=\"ltr\">When the CTA is found within the shadow root of an element which is itself within a RTL context.</p>\n  <shadow-root>\n    <template shadowroot=\"open\">\n      <style>:host{display: flex; flex-flow: row wrap; gap: 16px;}</style>\n      <rh-cta id=\"deep\"><a href=\"#default\">ברירת מחדל</a></rh-cta>\n      <rh-cta icon=\"video\"><a href=\"#default-video\">ברירת מחדל - וידאו</a></rh-cta>\n      <rh-cta variant=\"primary\"><a href=\"#primary\">ראשי</a></rh-cta>\n      <rh-cta variant=\"primary\" icon=\"video\"><a href=\"#primary-video\">ראשי - וידאו</a></rh-cta>\n      <rh-cta variant=\"secondary\"><a href=\"#secondary\">משני</a></rh-cta>\n      <rh-cta variant=\"brick\"><a href=\"#brick\">לבנה</a></rh-cta>\n      <rh-cta variant=\"brick\" icon=\"video\"><a href=\"#brick-video\">לבנה - וידאו</a></rh-cta>\n    </template>\n  </shadow-root>\n</section>\n\n<section id=\"wrap\">\n  <h2>Force wrap to test arrow line-wrap</h2>\n  <p>No matter the container size, the arrow trailing the CTA message should never appear on a line by itself.</p>\n  <div class=\"resize\">\n    <rh-cta><a href=\"#default\">Default link cta with longer text</a></rh-cta>\n  </div>\n  <div class=\"resize\" dir=\"rtl\">\n    <rh-cta><a href=\"#default\">קריאה לפעולה בררית מחדל עם טקסט ארוך</a></rh-cta>\n  </div>\n</section>\n\n<section id=\"link-button\" class=\"grid\">\n  <h2>Link and button styles (displayed inline)</h2>\n  <rh-cta><a href=\"\">Link</a></rh-cta>\n  <rh-cta><button>Button</button></rh-cta>\n\n  <rh-cta variant=\"primary\"><a href=\"\">Link</a></rh-cta>\n  <rh-cta variant=\"primary\"><button>Button</button></rh-cta>\n\n  <rh-cta variant=\"secondary\"><a href=\"\">Link</a></rh-cta>\n  <rh-cta variant=\"secondary\"><button>Button</button></rh-cta>\n\n</section>\n\n",
      "label": "Call to Action"
    },
    "demo/rh-cta.js": {
      "content": "import '@patternfly/pfe-band';\nimport '@patternfly/pfe-card';\nimport '@rhds/elements/rh-cta/rh-cta.js';\nimport '@rhds/elements/rh-context-provider/rh-context-provider.js';\n\nconst root = document.querySelector('[data-demo=\"rh-cta\"]')?.shadowRoot ?? document;\n\nroot.querySelector('rh-cta');\n\n/**\n * Polyfill declarative shadow dom.\n * @see https://web.dev/declarative-shadow-dom/\n */\n(function attachShadowRoots(root) {\n  root.querySelectorAll('template[shadowroot]').forEach(template => {\n    const mode = template.getAttribute('shadowroot');\n    const shadowRoot = template.parentNode.attachShadow({ mode });\n    shadowRoot.appendChild(template.content);\n    template.remove();\n    attachShadowRoots(shadowRoot);\n  });\n})(document);\n",
      "hidden": true
    },
    "demo/demo.css": {
      "content": "[data-demo] {\n  padding: 1em 2em;\n}\n\nsection {\n  --pfe-band--Padding--horizontal: 60px;\n  --pfe-band--Width: 100%;\n}\n\nsection[color-palette=\"lightest\"] pfe-card[color-palette=\"lightest\"] {\n  --pfe-card--Border: 1px solid rgb(45, 45, 45, 0.3);\n}\n\nsection,\n#dark {\n  display: flex;\n  flex-flow: row wrap;\n  gap: 16px;\n}\n\n#dark {\n  padding: 1em 2em;\n  margin-inline: -2em;\n  margin-block: 1em;\n}\n\n#dark h2 {\n  width: 100%;\n}\n\nsection :is(p, h2,h3,h4,h5,h6) {\n  width: 100%;\n}\n\nsection.grid {\n  display: grid;\n  gap: 10px 20px;\n  grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));\n  margin-top: 0;\n  margin-left: 0;\n}\n\nsection.grid :is(h2,h3,h4,h5,h6) {\n  grid-column: 1/-1;\n}\n\n.resize {\n  resize: horizontal;\n  overflow: auto;\n  display: flex;\n  width: 180px;\n  flex-flow: row nowrap;\n  border: 1px solid #dddddd;\n  padding: 10px;\n}\n\njson-viewer {\n  --json-viewer-background: white;\n  --json-viewer-boolean-color: #f76707;\n  --json-viewer-color: black;\n  --json-viewer-key-color: #f76707;\n  --json-viewer-null-color: Light #e03131;\n  --json-viewer-number-color: #0ca678;\n  --json-viewer-string-color: #0c8599;\n}\n",
      "hidden": true
    },
    "demo/analytics/index.html": {
      "contentType": "text/html",
      "selected": false,
      "content": "<link rel=\"stylesheet\" href=\"https://static.redhat.com/libs/redhat/redhat-font/4/webfonts/red-hat-font.min.css\">\n<link rel=\"stylesheet\" href=\"https://static.redhat.com/libs/redhat/redhat-theme/6/advanced-theme.css\">\n\n<script src=\"https://unpkg.com/prismjs@1.28.0/prism.js\" data-manual=\"\" integrity=\"sha384-idKKIJw7Lcp/nKqsSCRFj7bzKaT51g2eeJBIOvHk58XoGV5I+XS6HkxiP/LMFvgN\" crossorigin=\"anonymous\"></script>\n<script src=\"https://unpkg.com/prismjs@1.28.0/plugins/autoloader/prism-autoloader.min.js\"></script>\n<script src=\"https://unpkg.com/prismjs@1.28.0/plugins/toolbar/prism-toolbar.min.js\"></script>\n<script src=\"https://unpkg.com/prismjs@1.28.0/plugins/copy-to-clipboard/prism-copy-to-clipboard.min.js\"></script>\n\n<link rel=\"stylesheet\" href=\"../demo.css\">\n<script type=\"module\" src=\"../rh-cta.js\"></script>\n<script type=\"module\" src=\"../analytics.js\"></script>\n<script type=\"module\" src=\"https://unpkg.com/@power-elements/json-viewer?module\"></script>\n<script type=\"module\" src=\"https://unpkg.com/zero-md/dist/zero-md.min.js\"></script>\n\n<p>In this demo, analytics events involving <code>&lt;rh-cta&gt;</code> elements are parsed by a \n  document-level analytics event listener. Unlike <code>&lt;pfe-cta&gt;</code>, which implemented\n  support for analytics internally, <code>&lt;rh-cta&gt;</code> users must implement their own\n  analytics code, taking this demo as an example.</p>\n\n<zero-md>\n  <script type=\"text/markdown\" data-dedent=\"\">\n    ```javascript\n    function deepClosest(event, selector) {\n      for (const node of event.composedPath().reverse()) {\n        if (node.matches?.(selector)) {\n          return node;\n        }\n      }\n      return event.target.closest(selector);\n    }\n\n    document.addEventListener('click', function(event) {\n      const cta = deepClosest(event, 'rh-cta');\n      if (cta) {\n        const { href, text, title } = cta.cta;\n        const color = cta.colorPalette;\n        const type = cta.variant;\n        console.log('CTA ANALYTICS EVENT', { href, text, title, color, type });\n      }\n    });\n    ```\n  </script>\n</zero-md>\n\n<section>\n  <h2>Simple Case: Light DOM Analytics</h2>\n  <rh-cta><a href=\"#default\">Default</a></rh-cta>\n  <rh-cta variant=\"primary\"><a href=\"#primary\">Primary</a></rh-cta>\n  <rh-cta variant=\"secondary\"><a href=\"#secondary\">Secondary</a></rh-cta>\n  <rh-cta variant=\"brick\"><a href=\"#brick\">Brick</a></rh-cta>\n</section>\n\n<section>\n  <h2>Advanced Case: Deep Shadow Analytics</h2>\n  <shadow-root>\n    <template shadowroot=\"open\">\n      <rh-cta><a href=\"#default\">Default</a></rh-cta>\n      <rh-cta variant=\"primary\"><a href=\"#primary\">Primary</a></rh-cta>\n      <rh-cta variant=\"secondary\"><a href=\"#secondary\">Secondary</a></rh-cta>\n      <rh-cta variant=\"brick\"><a href=\"#brick\">Brick</a></rh-cta>\n    </template>\n  </shadow-root>\n</section>\n\n<section>\n  <h2>Complex Case: Slotted Link, Deep CTA Analytics</h2>\n  <slotted-link>\n    <a slot=\"default\" href=\"#default\">Default</a>\n    <a slot=\"primary\" href=\"#primary\">Primary</a>\n    <a slot=\"secondary\" href=\"#secondary\">Secondary</a>\n    <a slot=\"brick\" href=\"#brick\">Brick</a>\n  </slotted-link>\n</section>\n\n<h2>Last CTA Analytics Event</h2>\n<json-viewer>{}</json-viewer>\n",
      "label": "Analytics"
    },
    "demo/analytics.js": {
      "content": "customElements.define('slotted-link', class SlottedLinkElement extends HTMLElement {\n  constructor() {\n    super();\n    this.attachShadow({ mode: 'open' }).innerHTML = `\n      <rh-cta><slot name=\"default\"></slot></rh-cta>\n      <rh-cta variant=\"primary\"><slot name=\"primary\"></slot></rh-cta>\n      <rh-cta variant=\"secondary\"><slot name=\"secondary\"></slot></rh-cta>\n      <rh-cta variant=\"brick\"><slot name=\"brick\"></slot></rh-cta>\n    `;\n  }\n});\n\nfunction deepClosest(event, selector) {\n  for (const node of event.composedPath().reverse()) {\n    if (node.matches?.(selector)) {\n      return node;\n    }\n  }\n  return event.target.closest(selector);\n}\n\ndocument.addEventListener('click', function(event) {\n  const cta = deepClosest(event, 'rh-cta');\n  if (cta) {\n    const { href, text, title } = cta.cta;\n    const color = cta.colorPalette;\n    const type = cta.variant ?? 'default';\n    const data = { href, text, title, color, type };\n    // eslint-disable-next-line no-console\n    console.log('CTA ANALYTICS EVENT', data);\n    document.querySelector('json-viewer').object = data;\n  }\n});\n\n// Make use of global config object to change default options\nwindow.ZeroMdConfig = {\n  cssUrls: [\n    '/assets/prism.css',\n    'https://unpkg.com/prismjs/plugins/toolbar/prism-toolbar.min.css'\n  ]\n};\n",
      "hidden": true
    },
    "demo.css": {
      "content": "[data-demo] {\n  padding: 1em 2em;\n}\n\nsection {\n  --pfe-band--Padding--horizontal: 60px;\n  --pfe-band--Width: 100%;\n}\n\nsection[color-palette=\"lightest\"] pfe-card[color-palette=\"lightest\"] {\n  --pfe-card--Border: 1px solid rgb(45, 45, 45, 0.3);\n}\n\nsection,\n#dark {\n  display: flex;\n  flex-flow: row wrap;\n  gap: 16px;\n}\n\n#dark {\n  padding: 1em 2em;\n  margin-inline: -2em;\n  margin-block: 1em;\n}\n\n#dark h2 {\n  width: 100%;\n}\n\nsection :is(p, h2,h3,h4,h5,h6) {\n  width: 100%;\n}\n\nsection.grid {\n  display: grid;\n  gap: 10px 20px;\n  grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));\n  margin-top: 0;\n  margin-left: 0;\n}\n\nsection.grid :is(h2,h3,h4,h5,h6) {\n  grid-column: 1/-1;\n}\n\n.resize {\n  resize: horizontal;\n  overflow: auto;\n  display: flex;\n  width: 180px;\n  flex-flow: row nowrap;\n  border: 1px solid #dddddd;\n  padding: 10px;\n}\n\njson-viewer {\n  --json-viewer-background: white;\n  --json-viewer-boolean-color: #f76707;\n  --json-viewer-color: black;\n  --json-viewer-key-color: #f76707;\n  --json-viewer-null-color: Light #e03131;\n  --json-viewer-number-color: #0ca678;\n  --json-viewer-string-color: #0c8599;\n}\n",
      "hidden": true
    }
  }
};